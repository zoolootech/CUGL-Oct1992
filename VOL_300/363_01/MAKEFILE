# Makefile to make the 68020 assembler.

OBJECT =\
assemble.obj bitfield.obj build.obj codegen.obj directiv.obj error.obj \
eval.obj globals.obj instlook.obj insttabl.obj listing.obj main.obj miscel.obj \
movem.obj object.obj opparse.obj symbol.obj trapcc.obj


MAPOBJECT=\
assemble+bitfield+build+codegen+directiv+error+eval+globals+instlook+insttabl+\
listing+main+miscel+movem+object+opparse+symbol+trapcc

# Flags for normal use.

CFLAGS = -c -r -m -i

# Flags for the debugger.

# CFLAGS = -g -c -r -m -i

# g - insert line number information in the .obj file (for the debugger)
# c - do not link
# r - enforce strict autoprototyping
# s - check stack overflow at the beginning of each function.
# g - generate .map file for the debugger
# m - small model
# i - integers only

# compile rule for the debugger

asm.exe: $(OBJECT) asm.lnk
    blink @asm.lnk /co/noi/li/m

# rules for .obj files

directiv.obj: directiv.c asm.h proto.h
    ztc $(CFLAGS) directiv

error.obj: error.c asm.h proto.h
    ztc $(CFLAGS) error

eval.obj: eval.c asm.h proto.h
    ztc $(CFLAGS) eval

globals.obj: globals.c asm.h proto.h
    ztc $(CFLAGS) globals

instlook.obj: instlook.c asm.h proto.h
    ztc $(CFLAGS) instlook

listing.obj: listing.c asm.h proto.h
    ztc $(CFLAGS) listing

main.obj: main.c asm.h proto.h
    ztc $(CFLAGS) main

movem.obj: movem.c asm.h proto.h
    ztc $(CFLAGS) movem

object.obj: object.c asm.h proto.h
    ztc $(CFLAGS) object

opparse.obj: opparse.c asm.h proto.h
    ztc $(CFLAGS) opparse

symbol.obj: symbol.c asm.h proto.h
    ztc $(CFLAGS) symbol

assemble.obj: assemble.c asm.h proto.h
    ztc $(CFLAGS) assemble

build.obj: build.c asm.h proto.h
    ztc $(CFLAGS) build

codegen.obj: codegen.c asm.h proto.h
    ztc $(CFLAGS) codegen

insttabl.obj: insttabl.c asm.h proto.h
    ztc $(CFLAGS) insttabl

bitfield.obj: bitfield.c asm.h proto.h
    ztc $(CFLAGS) bitfield

trapcc.obj: trapcc.c asm.h proto.h
    ztc $(CFLAGS) trapcc

miscel.obj: miscel.c asm.h proto.h
    ztc $(CFLAGS) miscel

# create linker response file whenever makefile is changed

asm.lnk: makefile
    echo assemble.obj+bitfield.obj+build.obj+codegen.obj+ > asm.lnk
    echo directiv.obj+error.obj+eval.obj+globals.obj+instlook.obj+ >> asm.lnk
    echo insttabl.obj+listing.obj+main.obj+miscel.obj+movem.obj+ >> asm.lnk
    echo object.obj+opparse.obj+symbol.obj+trapcc.obj >> asm.lnk
    echo asm.exe >> asm.lnk


clean:
    del *.obj
    del *.exe
    del *.map
    del *.h68
    del *.lis
    del *.bak
    del *.tmp
    del asm.lnk
