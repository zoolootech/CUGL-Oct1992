#################################################################
#			   PCCURSES				#
#								#
# Makefile for the 68K version of the PCCURSES runtime		#
# library (CURSES.LIB) for the Paragon 'C' compiler and		#
# assembler.							#
#################################################################
# 1.4:	Release:					900114	#
#################################################################

INCDIR=\mcc68k
LIBDIR=\m68k\lib
WRKDIR=wrk
CC=mcc68k
CFLAGS= /opt=all /DEFINE=BUG68K=1
ASM=asm68k
AFLAGS= /E
LINK=lod68k
LFLAGS= /T /X
LIB=lib68k


HEADERS=	$(INCDIR)		$(INCDIR)\curses.h	\
		$(INCDIR)\curspriv.h	$(INCDIR)\stdio.h	\
		$(INCDIR)\conio.h

OBJS=		$(WRKDIR)					\
		$(WRKDIR)\attrib.obj	$(WRKDIR)\beep.obj	\
		$(WRKDIR)\border.obj	$(WRKDIR)\boxes.obj	\
		$(WRKDIR)\charadd.obj	$(WRKDIR)\chardel.obj	\
		$(WRKDIR)\charget.obj	$(WRKDIR)\charins.obj	\
		$(WRKDIR)\charpick.obj	$(WRKDIR)\clrtobot.obj	\
		$(WRKDIR)\clrtoeol.obj	$(WRKDIR)\endwin.obj	\
		$(WRKDIR)\initscr.obj	$(WRKDIR)\linedel.obj	\
		$(WRKDIR)\lineins.obj	$(WRKDIR)\longname.obj	\
		$(WRKDIR)\move.obj	$(WRKDIR)\mvcursor.obj	\
		$(WRKDIR)\newwin.obj	$(WRKDIR)\options.obj	\
		$(WRKDIR)\overlay.obj	$(WRKDIR)\prntscan.obj	\
		$(WRKDIR)\refresh.obj	$(WRKDIR)\scrreg.obj	\
		$(WRKDIR)\setmode.obj	$(WRKDIR)\setterm.obj	\
		$(WRKDIR)\stradd.obj	$(WRKDIR)\strget.obj	\
		$(WRKDIR)\tabsize.obj	$(WRKDIR)\termmisc.obj	\
		$(WRKDIR)\unctrl.obj	$(WRKDIR)\update.obj	\
		$(WRKDIR)\winclear.obj	$(WRKDIR)\windel.obj	\
		$(WRKDIR)\winerase.obj	$(WRKDIR)\winmove.obj	\
		$(WRKDIR)\winscrol.obj	$(WRKDIR)\wintouch.obj	\
		$(WRKDIR)\curses68.obj

#################################################################
# Default targets.						#
#################################################################

default:	$(HEADERS)	$(LIBDIR)\curses.lib

#################################################################
# Directory creation and include file installation		#
#################################################################

$(LIBDIR):
	mkdir $(LIBDIR)

$(WRKDIR):
	mkdir $(WRKDIR)

$(INCDIR):
	mkdir $(INCDIR)

$(INCDIR)\curses.h: curses.h
	attrib -r $(INCDIR)\curses.h
	copy curses.h $(INCDIR)\curses.h
	attrib +r $(INCDIR)\curses.h

$(INCDIR)\curspriv.h: curspriv.h
	attrib -r $(INCDIR)\curspriv.h
	copy curspriv.h $(INCDIR)
	attrib +r $(INCDIR)\curspriv.h

$(INCDIR)\stdio.h: ..\rts68\stdio.h
	attrib -r $(INCDIR)\stdio.h
	copy ..\rts68\stdio.h $(INCDIR)
	attrib +r $(INCDIR)\stdio.h

$(INCDIR)\conio.h: ..\rts68\conio.h
	attrib -r $(INCDIR)\conio.h
	copy ..\rts68\conio.h $(INCDIR)
	attrib +r $(INCDIR)\conio.h

#################################################################
# Resultant linkable files generation:				#
#################################################################

$(LIBDIR)\curses.lib:	$(LIBDIR) $(OBJS)
	cd $(WRKDIR)
	command -c $(LIB) <..\curses68.cmd
	copy curses.lib $(LIBDIR)
	cd ..

#################################################################
# Object file generation:					#
#################################################################

$(WRKDIR)\attrib.obj:	attrib.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=attrib.asm ..\attrib.c
	command -c break on
	$(ASM) attrib.asm,attrib.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\beep.obj:	beep.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=beep.asm ..\beep.c
	command -c break on
	$(ASM) beep.asm,beep.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\border.obj:	border.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=border.asm ..\border.c
	command -c break on
	$(ASM) border.asm,border.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\boxes.obj:	boxes.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=boxes.asm ..\boxes.c
	command -c break on
	$(ASM) boxes.asm,boxes.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\charadd.obj:	charadd.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=charadd.asm ..\charadd.c
	command -c break on
	$(ASM) charadd.asm,charadd.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\chardel.obj:	chardel.c $(HEADERS)
	cd $(WRKDIR)
	$(CC) $(CFLAGS) /output=chardel.asm ..\chardel.c
	command -c break on
	$(ASM) chardel.asm,chardel.obj,nul $(AFLAGS)
	command -c break on
	cd ..

$(WRKDIR)\charget.obj:	charget.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=charget.asm ..\charget.c
	command -c break on
	$(ASM) charget.asm,charget.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\charins.obj:	charins.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=charins.asm ..\charins.c
	command -c break on
	$(ASM) charins.asm,charins.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\charpick.obj:	charpick.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=charpick.asm ..\charpick.c
	command -c break on
	$(ASM) charpick.asm,charpick.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\clrtobot.obj:	clrtobot.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=clrtobot.asm ..\clrtobot.c
	command -c break on
	$(ASM) clrtobot.asm,clrtobot.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\clrtoeol.obj:	clrtoeol.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=clrtoeol.asm ..\clrtoeol.c
	command -c break on
	$(ASM) clrtoeol.asm,clrtoeol.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\endwin.obj:	endwin.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=endwin.asm ..\endwin.c
	command -c break on
	$(ASM) endwin.asm,endwin.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\initscr.obj:	initscr.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=initscr.asm ..\initscr.c
	command -c break on
	$(ASM) initscr.asm,initscr.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\linedel.obj:	linedel.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=linedel.asm ..\linedel.c
	command -c break on
	$(ASM) linedel.asm,linedel.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\lineins.obj:	lineins.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=lineins.asm ..\lineins.c
	command -c break on
	$(ASM) lineins.asm,lineins.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\longname.obj:	longname.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=longname.asm ..\longname.c
	command -c break on
	$(ASM) longname.asm,longname.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\move.obj:	move.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=move.asm ..\move.c
	command -c break on
	$(ASM) move.asm,move.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\mvcursor.obj:	mvcursor.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=mvcursor.asm ..\mvcursor.c
	command -c break on
	$(ASM) mvcursor.asm,mvcursor.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\newwin.obj:	newwin.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=newwin.asm ..\newwin.c
	command -c break on
	$(ASM) newwin.asm,newwin.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\options.obj:	options.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=options.asm ..\options.c
	command -c break on
	$(ASM) options.asm,options.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\overlay.obj:	overlay.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=overlay.asm ..\overlay.c
	command -c break on
	$(ASM) overlay.asm,overlay.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\prntscan.obj:	prntscan.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=prntscan.asm ..\prntscan.c
	command -c break on
	$(ASM) prntscan.asm,prntscan.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\refresh.obj:	refresh.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=refresh.asm ..\refresh.c
	command -c break on
	$(ASM) refresh.asm,refresh.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\scrreg.obj:	scrreg.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=scrreg.asm ..\scrreg.c
	command -c break on
	$(ASM) scrreg.asm,scrreg.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\setmode.obj:	setmode.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=setmode.asm ..\setmode.c
	command -c break on
	$(ASM) setmode.asm,setmode.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\setterm.obj:	setterm.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=setterm.asm ..\setterm.c
	command -c break on
	$(ASM) setterm.asm,setterm.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\stradd.obj:	stradd.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=stradd.asm ..\stradd.c
	command -c break on
	$(ASM) stradd.asm,stradd.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\strget.obj:	strget.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=strget.asm ..\strget.c
	command -c break on
	$(ASM) strget.asm,strget.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\tabsize.obj:	tabsize.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=tabsize.asm ..\tabsize.c
	command -c break on
	$(ASM) tabsize.asm,tabsize.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\termmisc.obj:	termmisc.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=termmisc.asm ..\termmisc.c
	command -c break on
	$(ASM) termmisc.asm,termmisc.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\unctrl.obj:	unctrl.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=unctrl.asm ..\unctrl.c
	command -c break on
	$(ASM) unctrl.asm,unctrl.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\update.obj:	update.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=update.asm ..\update.c
	command -c break on
	$(ASM) update.asm,update.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\winclear.obj:	winclear.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=winclear.asm ..\winclear.c
	command -c break on
	$(ASM) winclear.asm,winclear.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\windel.obj:	windel.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=windel.asm ..\windel.c
	command -c break on
	$(ASM) windel.asm,windel.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\winerase.obj:	winerase.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=winerase.asm ..\winerase.c
	command -c break on
	$(ASM) winerase.asm,winerase.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\winmove.obj:	winmove.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=winmove.asm ..\winmove.c
	command -c break on
	$(ASM) winmove.asm,winmove.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\winscrol.obj:	winscrol.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=winscrol.asm ..\winscrol.c
	command -c break on
	$(ASM) winscrol.asm,winscrol.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\wintouch.obj:	wintouch.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=wintouch.asm ..\wintouch.c
	command -c break on
	$(ASM) wintouch.asm,wintouch.obj,nul $(AFLAGS)
	cd ..

$(WRKDIR)\curses68.obj:	curses68.c $(HEADERS)
	cd $(WRKDIR)
	command -c break on
	$(CC) $(CFLAGS) /output=curses68.asm ..\curses68.c
	command -c break on
	$(ASM) curses68.asm,curses68.obj,nul $(AFLAGS)
	cd ..

#################################################################
# Maintenance chores						#
#################################################################

clean:
	rm -il $(WRKDIR)\*.*
	rmdir  $(WRKDIR)

shar:
	command -c makekit -x *.* >manifest
	makekit -m *.*
	del manifest.*
