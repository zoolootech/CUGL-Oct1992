				November 16, 1989


The C Users Journal
Suite B
2120 West 25th Street
Lawrence, KS  66047

Dear Sirs,

In response to Jose Alfonso Corominas's request (Questions & Answers,
November 1989) for information about writing MS-DOS drivers in Microsoft
C, I pass along the enclosed library submission.  It is an MS-DOS
communications port device driver.

The program differs from listings printed with Philip J.
Erdelsky's article (September/October 1988) in a number of ways:
  - It is written for the Microsoft C compiler and assembler.
  - It compiles using small memory model and link edits as a
    tiny model program.
  - It provides buffered, interrupt driven, I/O to the device,
    rather than using the BIOS interface.
  - In addition to providing standard MS-DOS read and write
    access to the attached device, it replaces the BIOS
    interrupt 0x14 interface.  This provides the buffered access
    to the com ports to programs written for BIOS access.

Like the driver described by Robert Allen's article (February
1989), this driver configures itself based on command line
contained in CONFIG.SYS.  Unlike Mr. Allen's driver it
  - includes the code to configure itself,
  - makes not attempt to reuse initialization code space
    for data buffers, and
  - uses a home grown mechanism to provide an interrupt service
    routine, rather than using the compiler vendor's language
    extensions.

If you would like a further description of the techniques
involved, I would be willing to try writing an article.  However,
I have been hesitant to propose Yet Another MS-DOS Device Driver
article.

I also have a Unix System V Release 2, disk driver that I wrote
for the Western Digital WD1007 disk controller (AT bus ESDI
controller).  I don't know how many of your readers would be
interested in something quite so special purpose.  But if you
would like an article about such a beast, I would be willing to
give that a try as well.

By the way, after years of programming and reading computer
magazines, yours is one of the two periodicals (Micro Cornucopia
is the other) that I continue to read almost cover to cover.
Having seen Byte and Dr. Dobb's Journal dilute their coverage of
"here and now" design and implementation issues, I look forward
to receiving each new issue of The C User's Journal.  Thank you.
I hope the pressures of a monthly publication schedule do not
force you onto the same path other journals seem to have slipped
down.

A copy of this letter is included in the disk file COVER.LTR.


				Sincerely,




				Hugh Daschbach
				(714) 997-3663
