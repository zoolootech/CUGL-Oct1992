The GNUPLOT source code and executables may be copied and/or modified
freely as long as the copyright messages are left intact.

Compilation instructions are near the end of this file.

GNUPLOT has been tested on Sun3's and Sun4's (SunOS 4.0.3), a Pyramid
90x (OSx 4.0 - ucb 4.3 and att V), a VAX 6410 (VMS 5.2), IBM PC XT's
and AT's (MS-DOS 3.3, Microsoft C 5.10 and Turbo C 2.0)), IRIS 4D/70G
and 4D/25G with MIPS C, and NeXT with gnu C 1.34.  The code is written
with portability in mind.

If you have problems, send mail to pixar!info-gnuplot@sun.com.  And
please send any modifications you make so they can be considered for
later releases.


                     GNUPLOT 2.0 RELEASE NOTES

New terminal drivers: ATT6300, Roland DXY800A, EEPIC, emTeX, EPSON LX-800, 
EPSON 60dpi, Fig, HP2648, HPGL, HP LaserJet, Imagen, Kermit-MS Tektronix 
emulator, LaTeX, MCGA, NEC CP6 pinwriter, POSTSCRIPT, Proprinter, Star color 
printer, Tandy DMP-130, Tektronix 410x, SUN, VGA, X11.

Additions:

Command-line arguments are accepted. They are treated as names of
files containing gnuplot commands. Gnuplot loads them, one by one, and
then exits.

Command 'plot' now has a 'title' option to change the information in
the key.  The 'with' option can now specify line type and point type.

Command 'pause'.

Command 'replot' allows the addition of extra plots. 

Command 'save' now saves all the 'set' options, including the last
plot command.

Command 'set autoscale' now accepts autoscaling on the x axis for data
files. The default is autoscaling on both axes. 

Command 'set noclip' disables clipping of points near the border. 'set
clip' reenables clipping. The default used to be 'clip', and is now
'noclip'. Clipping has also been extended to clip lines that extend
outside the borders: line plots are now clipped at the plot boundary.
Formerly, the line stopped at the last in-range data point.

Numerical labelling at tic marks on x and y axes.  Command 'set
format' allows the format of the tic mark labels to be altered.
Commands 'set xtics' and 'set ytics' allow for alphanumeric labels and
arbitrary tic positions. 

Command 'set grid' adds a grid between the tic marks.

Improved key gives sample point or line types.  Key can be disabled
with the 'set nokey'. Key can be positioned anywhere. 

Command 'set label' allows the placement of arbitrary text labels and
arrows. 

Command 'set polar' for polar plots.

Command 'set offsets' for reducing the plotted area.  Useful for polar
plots.

Command 'set size' scales the displayed size of the plot.

Command 'set tics out' causes the tics to be drawn outwards from the
border.  Useful for impulse plots.

Command 'set title' places a text label above the plot.

Commands 'set xlabel' and 'set ylabel' place text labels on the x and
y axes respectively.  Some terminals will place the y label vertically
upwards on the left of the plot, others place the label horizontally
at the left of the plot.

Improved tics on log scales.

Extended comments: comments are allowed anywhere reasonable in the
input line, and continue to the end of the input line.

Line continuation (with \) is added.

Non-interactive use, through redirection or "load" command, is
improved. Error messages expanded to include file name and line
number, and to reprint command line if not interactive.

New plotting styles 'linespoints' and 'dots'.

Blank lines in data files denote "breaks". In lines and linespoints
plot styles, this breaks the curve being drawn and begins at the next
point, without changing the line or point types.

Completely new interactive help system that is similar to VMS help
system. A printed manual can be obtained in LaTeX, troff, or nroff and
is based on the same information as the interactive help.

PC version now compiles with the large model so that gnuplot will
compile with the above additions!

Bug fixes include:
------------------
Bug involving functions plotted on a logarithmic x axis is fixed. 

Errors inside of loaded files now clean up and close files properly.

Numbers of the form xxxxe+nn are now acceptable (+ sign caused error).

Tics are now place inside the borders (some were outside).

Reverse axes now work properly.

Command 'set output ""' used to crash.  

VMS was closing stdout, so 'set output' code changed to avoid closing
it.  VMS version of gnuplot now performs a SET TERM/NOWRAP itself.

Terminal is now reset before closing output file, changing terminal
type or exiting gnuplot.

Several old bugs have been superseded by new ones.


                            ACKNOWLEDGEMENTS

The Unix PC, polar, pause, and offset additions were by John Campbell.
(CAMPBELL@NAUVAX.bitnet)
The Turbo C additions were by Bill Wilson.
(WILSON@NAUVAX.bitnet)
Some of the labelling improvements and combining of these additions 
were by Russell Lang.
(rjl@monu1.cc.monash.oz.au)
The LaTeX driver, the help system, and some of the labelling
improvements were by David Kotz. 
(dfk@cs.duke.edu)
And of course, the vast majority of the program is by Colin Kelley
and Thomas Williams.
(pixar!info-gnuplot@sun.com)


                      GNUPLOT 1.1 RELEASE NOTES

New terminal drivers: AED 512, BBN BitGraph, HP2623, POSTSCRIPT,
Selanar, Vectrix 384.  The PC version now supports Hercules and ATT
6300 monochrome graphics.  Thanks to those who sent these drivers in.

New commands: 'set dummy' and 'show dummy' to select the dummy
variable name; 'replot' to repeat the last 'plot' command.

The exclamation point (!) is now accepted as postfix factorial
operator.  The gamma() function is also included, if your C library
has gamma().  See GAMMA below.

Logical AND (&&) and OR (||) now short-circuit the way they do in C.
That is, the second && operand is not evaluated if the first is false;
the second || operand is not evaluated if the first is true.  The
ternary operator (?:) also does not evaluate the unused operand.  This
change allows for the definition of recursive functions, e.g. a
synonym for the ! factorial operator:

	fact(x) = (x<=1) ? 1 : x*fact(x-1)

GNUPLOT now has a much better memory allocation scheme, replacing most
fixed-size arrays with malloc()'d linked lists.  There is no longer
any artificial maximum on the number of simultaneous plots, number of
points in those plots, or the number of user-defined functions or
variables.  All these are limited only by the memory available to
malloc().  This is a big improvement for memory-starved machines like
PDP-11s or PCs.

Lines beginning with # (also ! in VMS) are treated as comments.  Only
the $ may now be used for a shell escape in VMS, since ! is a comment.

Several old bugs have been superseded by new ones.


                       PREPROCESSOR #DEFINES

These #defines should be checked before compilation:
define      file            note
------      ----            --------
VFORK       Makefile        define if you've got vfork() system call
GAMMA       Makefile        define if you've got gamma(3)
BCOPY       Makefile        define if your memcpy() is called bcopy()
BZERO       Makefile        define if you have bzero() but not memset()
NOCOPY      Makefile        define if you've don't have a memcpy() by any name
bcopy()     plot.h          define if you've got a memcpy() by some OTHER name
                              (see example in plot.h)
PC          Makefile        define if compiling on a PClone
MSDOS       Makefile        define if compiling under MSDOS;
                              automatically defined by Microsoft C 5.10
HELPFILE    Makefile        name including path of gnuplot.gih file.
VERYLARGE   plot.h          define to be largest coordinate number.
SHELL       plot.h          default shell to spawn if SHELL environment
                              variable not found at run-time

Valid TERMFLAGS defines.  These defines are used to include the
various plotting terminals, printers, and protocols that a given version
of gnuplot can access:

define 	    file            note
------      ----            --------
TERMFLAGS   Makefile        the set of terminals you want, from below
            or term.h

   AED         AED 512 and AED 767
   ATT6300     PC with AT&T 6300 graphics
   BITGRAPH    BBN BitGraph
   CGI         SCO CGI
   CORONA      PC with Corona graphics 325
   DXY800A     Roland DXY800A plotter
   EEPIC       EEPIC-extended LaTeX driver, for EEPIC users
   EMTEX       LATEX picture environment with emTeX specials
   EPS60       Epson-style 60-dot per inch printers
   EPSON       Epson LX-800, Star NL-10, NX-1000 and lots of others
   FIG         Fig graphics language (requires object.h from TransFig)
   HERCULES    IBM PC/Clone with Hercules graphics board
   HP2648      HP2648, HP2647
   HP26        HP2623A and maybe others
   HP75        HP7580, and probably other HPs
   HPGL        HP7475 and (hopefully) lots of others
   HPLJII      HP Laserjet II
   IMAGEN      Imagen laser printers (300dpi) (requires -Iterm also)
   IRIS4D      IRIS4D series computer
   KERMIT      MS-Kermit Tektronix 4010 emulator
   LATEX       LATEX picture environment
   NEC         NEC CP6 pinwriter printer
   POSTSCRIPT  Postscript
   PRESCRIBE   Kyocera Laser printer
   QMS         QMS/QUIC laserprinter (Talaris 1200 and others)
   REGIS       ReGis graphics (vt125, vt220, vt240, Gigis...)
   SELANAR     Selanar
   STARC       Star Color Printer
   SUN         Sun Microsystems Workstation
   T410X       Tektronix 4106, 4107, 4109 and 420x terminals
   TANDY60     Tandy DMP-130 series 60-dot per inch graphics
   TEK         Tektronix 4010, and probably others
   UNIXPC      unixpc (ATT 3b1 or ATT 7300)
   UNIXPLOT    unixplot
   V384        Vectrix 384 and tandy color printer
   VTTEK       VT like Tektronix 4010 emulator
   X11         X11R4 window system


These #defines are defined automatically by various compilers, some
gnuplot routines check these defines to implement features found in the
various environments:

define 	    note
------      --------
vms         (and VMS) defined by VAX-11 C under VMS.

__TURBOC__  defined automatically by Turbo C 2.0
__ZTC__	    defined automatically by Zortech C


                             TO COMPILE

under UNIX:  
To compile do:
  Copy one of makefile.unx, makefile.x11 or makefile.3b1,  
  to Makefile, for example
      cp makefile.unx Makefile
  Edit Makefile to change LIBS, #defines, especially HELPDEST and TERMFLAGS
  Edit term.h, to include/exclude terminals
      make
  If that works, try
      make install

under VMS:  
 To compile:
     copy makefile.vms makefile.
     make
 Or if you don't have a suitable make:
     @buildvms
 To tell gnuplot where to find the help library:
      $ define gnuplot$help disk:[directory]gnuplot.hlb
  Alternatively (and preferably) put the help in the main system help library.

under MSDOS:
Using Microsoft C 5.10.
      copy makefile.msc
      make makefile

Using Turbo C 2.0.
      copy makefile.tc
  Edit makefile to change TC, BIN, BGI.
      make

The file gnuplot.gih is needed for help on the PC.
If the file gnuplot.gih is not in the default directory, then use:
    set GNUHELP={full path name of gnuplot.gih}

The Zortech C++ compiler has been used to compile gnuplot, but
it has not been tested.  The Microsoft MASM and linker are needed.


                         ENVIRONMENT VARIABLES

If the environment variable GNUTERM is found, it is used as the terminal
type. Otherwise, in some cases the variable TERM will be used, or the
hardware may be automatically detected. 

The PC version looks for the environment variable GNUPLOT to contain
the name of the directory from which to load the initialization file
GNUPLOT.INI.  See the help on 'start_up' for more information.

HOME is examined as a directory where a .gnuplot startup file might be
found. See help on "start-up".

If defined, the environment variable GNUHELP is used for the name
of the .gih help file, otherwise HELPFILE (defined in makefile or 
plot.c) is used.

The VMS version looks for the logical name GNUPLOT$HELP to locate 
the help library.
