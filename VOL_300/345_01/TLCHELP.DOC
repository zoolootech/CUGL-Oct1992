/* -- remove this header before using file! --
HEADER:		The Last Cross-Referencer;
TITLE:		TLC/TLP - The Last Cross-Referencer;
VERSION:	1.01;

DESCRIPTION: "TLC/TLP.
			TLC Help documentation (put into shell's help file(s))";

KEYWORDS:	Utility, Cross-reference, C, Pascal, Apple, Macintosh, APW, Aztec;
SYSTEM:		Macintosh MPW, v3.0;
FILENAME:	TLCHELP.DOC;
WARNINGS:	"Has not yet been ported to MS-DOS.
			Shareware, $20 Check/Money Order suggested.";

SEE-ALSO:	README.TLC,TLPHELP.DOC;
AUTHORS:	Eduard Schwan;
COMPILERS:	AZTEC C65 v3.2b, APPLEIIGS APW C v1.0, APPLE MACINTOSH MPW C v3.0;
*/


TLC v1.01 Release	* HELP *	Eduard Schwan Programs [ESP]

The Last C Cross-referencer (TLC) is a C language cross-referencer that
reads one or more source files, and generates a source file listing (with
line numbers) and a cross-reference list for the non-reserved symbols in
the file(s).
------------------------------------------------------------------------------
The reserved symbols are read from a text file (tlcresw.dat) during
TLC initialization.  This file should contain only identifiers separated
by spaces or newlines.	C-style comments are also allowed.  Any symbols
put in this file will be treated as reserved words, and will not be cross-
referenced;  And, if any symbols are removed (or commented out) from this
file, they will be cross-referenced.  This allows tracking down the usage
of certain reserved words (like enum or void, etc.)
------------------------------------------------------------------------------
TLC usually gets the list of source files from the command line.  Sometimes,
however, the list is quite long.  So TLC may be instructed to read a text
file containing filenames (using the "-f filename" option).  This file must
have one filename per line, with no leading or trailing blanks.  Blank lines
and lines that begin with an asterisk ('*') in column 1 are ignored.
------------------------------------------------------------------------------
TLC can be given additional instructions to tailor its operation and output
by putting instructions into a 'parameter file'.  This is a text file, with
parameter assignment statements in it.	The format is:
	PARMNAME = numeric_value
		or
	PARMNAME = "String_Value"
There may be multiple statements per line, but any statement must be fully
contained on one line.	String values may have C-style embedded escape
sequences in them.	An example of a valid string follows:
	Printer_init = "\033N\x1b?" /* "<ESC>N<ESC>?" */
Parameter names are case-insensitive, and any underscores may be omitted
(e.g. "PRINTER_INIT" and "PrinterInit" are treated as the same.)
The list of parameter names and their range of values is:

Parameter Name		Valid Range		Description
--------------		------------	---------------------------------------
DO_INCLUDES 		0..1 num		1=Read includes in-line, 1=ignore includes
DO_LISTING			0..1 num		1=Output the source listing, 0=Don't
DO_XREF 			0..1 num		1=Output the crossref listing, 0=Don't
DO_STATS			0..1 num		1=Output the statistics listing, 0=Don't
OUT_FNAME			1..40 string	Send output to this filename (default:tlc.out)

PAGE_LINES			10..255 num		total # of lines per page
PAGE_COLUMNS		10..255 num		# of characters per line between <CR>s
TOP_LINE			1..10 num		first line # of page to begin printing on
BOT_LINE			10..255 num		last valid line # of page to print on
LEFT_COLUMN 		1..40 num		leftmost column to begin printing in (indent)
RIGHT_COLUMN		10..255 num		rightmost valid column to print in
USER_HEADING		1..80 string	user-defined heading used as 2nd heading line
DO_SINGLE_SHTS*		0..1 num		1=Pause between pages, 0=continuous paper
PRINTER_INIT		1..80 string	string to send to printer once to init. it
HAS_FORM_FEED		0..1 num		1=send <FF> at end of page, 0=send n <CR><LF>s
FIRST_PAGE			1..9999 num		1st page of listing/xref (starting page #)
LAST_PAGE			1..9999 num		last page of listing/xref (ending page #)

EMPH1_LEADIN		1..9 string		string to send printer to start emph1
EMPH2_LEADIN		1..9 string		string to send printer to start emph2
EMPH3_LEADIN		1..9 string		string to send printer to start emph3
EMPH1_LEADOUT		1..9 string		string to send printer to stop emph1
EMPH2_LEADOUT		1..9 string		string to send printer to stop emph2
EMPH3_LEADOUT		1..9 string		string to send printer to stop emph3

TAB_WIDTH			0..16 num		width of tabstops
EMPH_COMMENTS*		0..3 num		Emphasize comments in source listing
EMPH_HEADING*		0..3 num		Emphasize the page headings
EMPH_RESERVED*		0..3 num		Emphasize reserved words in source listing
EMPH_FUNCHEADS*		0..3 num		Emphasize func. headings in source listing
PAGING_STRING		1..15 string	do new list page when this string encountered

SYMBOL_SIZE 		1..32 num		# of significant characters in identifiers
XREF_NUMS			0..1 num		Cross-reference and list all numbers
XREF_STRINGS		0..1 num		Cross-reference and list all strings/chars
DO_CONDITIONALS* 	0..1 num		1=Evaluate & skip cond. code (#ifdef), 0=All
DO_CASE_SENS		0..1 num		1=Make symbols case significant, 0=unsig.
DO_XCASE_SENS*		0..1 num		1=Sort xref list case significant, 0=unsig.
DO_UNDERSCORES		0..1 num		1=Make underscores significant, 0=Delete
EMPH_SYMBOLS		0..3 num		Emphasize symbols in cross-reference list

	* = Not Implemented Yet
------------------------------------------------------------------------------
To run The Last Cross-referencer, use the following command (parameters in
square brackets [] are optional:

TLC [-f FnameListFile] [-p ParmFile] [-r ResWordFile] [-v] [-d] FileNames..

Where:
	-d					........Turns on debug messages sent to stderr.
	-f FnameListFile	........Optional file containing list of source
								file names to cross-reference.
	-p ParmFile			........Optional file containing parameters for
								tailoring TLC output.
	-r ResWordFile		........Optional file containing reserved words
								not to be cross-referenced.
	-v					........Turns on progress messages sent to stderr.
								Repeating this option (-v -v) gives even
								more info.
	FileName(s)			........Source files to be cross-referenced.

Example:
	TLC  -v  -r  myresw.dat  file1.h  file2.h  file1.c  file2.c
