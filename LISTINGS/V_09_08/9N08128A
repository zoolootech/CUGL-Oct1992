
main( )

  char *fptr;
  unsigned err_code
  int ***array;
  int init=O;
  static unsigned d[3]={3,3,3};
  static int st[3]={0,0,0};
  int t,n,j;
  array = (int ***)daa(sizeof(int),3,d,st,&err_code, &fptr, &init);

  for(t=O;t<3;t++){
      for(n=O;n<3;n++){
         for(j=O;j<3;j++){
            printf("%O8x ",&array[t][n][j]);
         }
       }                                                         
     
  }
  printf("\n");
}

Under OS9/68000 with the Microware C compiler I get a most interesting
list of addresses--most of which point to memory not even extant in my
computer, let alone in the array bounds.

