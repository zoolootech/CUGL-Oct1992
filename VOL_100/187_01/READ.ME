
The following files were submitted by Richard Threlkeld:

CSUBRS   S      21727  DeSmet Library of these routines
CSUBRS   MAP     1182  Map from DeSmet's LIB88 on Last Create of CSUBRS.S
BLKDEF   MON      190  Include File Used by SPARSE.C
CANT     C        600  Standard "Can't Open ....."
CENTER   C        951  Center a String within a Specified Length
CHGATTR  C       1584  Change or Get DOS File Attributes (Read-only, etc)
CONOUT   C        715  Use DeSmet Interrupt 10 routines to do console I/O
COPYFILE C       1510  Copy from One File to Another from a Running Program
CRC      C       4217  Compute CRC in C
C-JUST   C       1778  Center a String within a Specified Length (see R_JUST & L_JUST)
DATAIN   C       1439  Sample data input routine (rather bad actually)
DATE-FMT C       3024  Format a Date to One of Many Output Formats
DETABS   C       1124  Expand Input Tabs to Spaces
DIRFST   C       2911  Do a DOS "Get First Matching Directory Entry"
DIRNXT   C       1583  Do a DOS "Get Next  Matching Directory Entry"
DTPARSE  MON       78  Include for DT-PARSE
DT-PARSE C       8514  Parse Date and Time to a Standard Format
ERROR    C        735  Output a Message and Exit to DOS with ERRORLEVEL = 1
FDATE    C       1962  Return Date/Time as "YY-MM-DD HH:MM:SS"
FEXPND   C       1405  Expand Wildcards in Filenames (allows all DOS paths)
FIND-ENV C       2227  Return the Value of a Given DOS Environmental Variable
FIXPATH  C       4804  --From Dr. Dobbs.  See FEXPND for a more Complete Routine --
GETCTL   C       1131  Converts Name of Cntl Char (E.G. "ACK") to Binary
GETDIR   C       1362  Returns Current Path on Given Drive
GETDRV   C        671  Returns Current Drive (Add 1 for GETDIR's Drive)
GETINT   C        884  Get Reversed Integer (PC Format)
GET-CUR  A       1989  Use Interrupt 10 to Return Current Cursor Position
GET-UNIQ C       1317  Create a Unique Filename from the Date and Time
HELP     C        944  Output Help Table (see C Programs Disk)
HSECONDS C       1070  Return Current Time in Hundredths of a Second
ITOA     C       1287  Standard Conversion of Integer to ASCII
KBECHO   C       1326  Collects Output, Converts It, and Outputs It
LTOA     C       1296  Convert Long to ASCII
L-JUST   C       1472  Left Justify within a Given Length (see C_JUST and R_JUST)
MAKSTR   C       1303  Makes a String of a Group of Characters
MAK-DEC  C       2041  Inserts a Decimal Point in a String
MKSTR    C       1119  Convert an Input Stream to a String
READABS  C       3240  Read Absolute Disk Sectors (Interrupt 25)
RESTDTA  C        947  Restore a Saved DOS DTA (see SAVEDTA)
REVERSE  C        838  Standard Reverse a String
R-JUST   C       1163  Right Justify a String in a Given Length (see L-JUST and C-JUST)
SAVEDTA  C        949  Save the Current DOS DTA for Later Restore (see RESTDTA)
SECONDS  C       1006  Return the Current Time in Seconds
SETDTA   C       1079  Set a New DOS DTA (see SAVEDTA and RESTDTA)
SHOWCH   C       2150  Display characters.  Cntl Chars as Names (E.G. "ACK")
SHOW-ERR C        861  Output Two Strings and Ring the Bell
SKPBLK   C        885  Skip "White Space" and Return Pointer to Next Character
SKPTOK   C        889  Skip non-"White Space" and Return Pointer to Next "Blank"
SPARSE   C       5428  Manage Sparse Matrix in Free Memory.  Not Elegant.
STRINGS  C      10864  String Package from RBBS
STRLOWER C        905  Force Whole String to Lower Case
STRUPPER C        905  Force Whole String to Upper Case
SUB-STR  C       1221  Return a Substring as a New String
TRIM     C        815  Trim Trailing Blanks from a String
TSECONDS C       1075  Return the Time in Tenths of a Second
USAGE    C        710  Prototype Usage Prompt for User
UTOA     C       1174  Convert Unsigned to ASCII
VBAR     C       4663  Primative Vertical Bar Graph Generator
XTOA     C       1523  Convert Hexidecimal to ASCII (Two Bytes at a Time)
YYMMDD   C       2195  Convert mm/dd/yy to yy-mm-dd (Separator Given by Caller)
Z-FILL   C       1338  Zero-Fill a Numeric String for a Given Length
BLDDOC   BAT      202  Build the DOC file from the ARC file
BLDLIB   BAT     2361  BAT file to Build <lib>.S from <lib>.ARC
LNKSORT  BAT       54  Build a DeSmet Map Sorted by Address (not Name)
LCSUBRS  BAT      154  Link a New Subroutine into the Subroutine Library

Submittal letter from Richard Threlkeld:

Most of these were written by me.  Credit is given where I stole a routine.
These routines are in day-to-day use in many programs I have written, but
there are probably bugs which I have not yet encountered.  If you find any,
please send me a note and I will try to clean them up.  I am updating these
routines several times a week, but most of the routines have been stable for
some time.  Otherwise, I make no warranties or claims for any of these
routines.  You may use them as you feel necessary.  If you build a program
in which one of them plays a major role and you make millions of dollars
from the program, you are free to send me some of it, but I do not require
payments for private or commercial use of these subroutines.


BLDLIB is a batch file which takes an archive file compiles the C subroutines,
assembles the assembly subroutines, and links them together via the DeSmet
librarian to make a searchable (CSUBRS.S) file.  To do this, it makes a list
of C subroutines and assembly subroutines, changes this list to be calls of
batch files to compile or assembly each routine, causes a new version of
COMMAND.COM to be invoked to execute the batch files, and runs LIB88 to
put them all together.  I now have a problem with LIB88 choking on this many
.O files from a file input, so I actually split it into two runs after the
LIB88 fails.  I have not yet contacted CWARE about the problem.

Note the use of environmental variables to allow default values for the
DOS positional parameters in BLDLIB.  I also get the current location of
COMMAND.COM from the environmental area.  Calling a batch file from a batch
file and returning is also a neat trick demonstrated here.  If you can
understand this batch file, you deserve your DOS wings.

These are all for the DeSmet compiler, but should be easily modified for
most other compilers.  I recommend the DeSmet compiler as a "Best Buy" for
nearly anyone.  I also have the Microsoft 3.0 compiler.  Unless I need
the middle or large model, I still use the DeSmet product.  It comes with
a profiler, good source level debugger, an excellent editor, an assembler
(alas without macros), a librarian, and a raft of games and utilities for
a grand total of $159.00.  Unfortunately, it only supports the small model
(64K code and 64K data/stack).  However, a 7000 line program of mine
(actually about 150 modules) compiles in a minute or two and takes only
29K of code space.

For examples of use of the subroutines, please see my C Programs disk.  The
programs there make extensive use of the subroutines to prevent re-inventing
the wheel.  Most of the C programs given are general utilities which you
will find useful in your day-to-day programming environment.

		Richard Threlkeld
		2101 Stonehill Ct
		Arlington, Tx   76012
		(817) 261-3527	(home)
		(817) 265-6943  (office and occasional BBS)
outines, and links them together via the DeSmet
librarian to make a searchab