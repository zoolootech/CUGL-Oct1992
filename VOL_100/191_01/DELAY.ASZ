;
;	DELAY.ASM               (Aztec version)                 20 Feb 86
;
;   /* ------------------------------------------------------------ */
;   /*      This is a portion of the SOUND EFFECTS LIBRARY.         */
;   /*                                                              */
;   /*      Copyright (C) 1986 by Paul Canniff.                     */
;   /*      All rights reserved.                                    */
;   /*                                                              */
;   /*      This library has been placed into the public domain     */
;   /*      by the author.  Use is granted for non-commercial       */
;   /*      pusposes, or as an IMBEDDED PORTION of a commercial     */
;   /*      product.                                                */
;   /*                                                              */
;   /*      Paul Canniff                                            */
;   /*      PO Box 1056                                             */
;   /*      Marlton, NJ 08053                                       */
;   /*                                                              */
;   /*      CompuServe ID: 73047,3715                               */
;   /*                                                              */
;   /* ------------------------------------------------------------ */
;
; -------------------------------------------------------------------------
;	Set up macros for segment values, etc.
;
;
codeseg segment para public 'code'
dataseg segment para public 'data'
dummy   DW      0
dataseg ends
	assume cs:codeseg,ds:dataseg,es:dataseg,ss:dataseg
;
;
LPROG   EQU     0
;
	IF	LPROG
ARGS	EQU	6                       ;Bytes on stack before args 
	ELSE
ARGS	EQU	4                       ;Bytes on stack before args
	ENDIF
;
; -------------------------------------------------------------------------
;
;
CODESEG SEGMENT BYTE PUBLIC 'code'
;
	PUBLIC	delay_
;
	IF	LPROG
delay_  PROC   FAR
	ELSE
delay_  PROC   NEAR
	ENDIF
        PUSH    BP
        MOV     BP,SP
        MOV     CX,[BP+ARGS]
OUTLP:  PUSH    CX
        MOV     CX,279
INLP:   LOOP    INLP
        POP     CX
        LOOP    OUTLP
        POP     BP
	RET
delay_  ENDP
;
;
codeseg	ends
	END







