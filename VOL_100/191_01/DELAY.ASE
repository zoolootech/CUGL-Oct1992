;
;	DELAY.ASM               (Eco-C88 version)              25 Feb 86
;
;   /* ------------------------------------------------------------ */
;   /*      This is a portion of the SOUND EFFECTS LIBRARY.         */
;   /*                                                              */
;   /*      Copyright (C) 1986 by Paul Canniff.                     */
;   /*      All rights reserved.                                    */
;   /*                                                              */
;   /*      This library has been placed into the public domain     */
;   /*      by the author.  Use is granted for non-commercial       */
;   /*      pusposes, or as an IMBEDDED PORTION of a commercial     */
;   /*      product.                                                */
;   /*                                                              */
;   /*      Paul Canniff                                            */
;   /*      PO Box 1056                                             */
;   /*      Marlton, NJ 08053                                       */
;   /*                                                              */
;   /*      CompuServe ID: 73047,3715                               */
;   /*                                                              */
;   /* ------------------------------------------------------------ */
;
; -------------------------------------------------------------------------
;	Set up macros for segment values, etc.
;
	INCLUDE PRO.H			;Eco-C88 header file
;
LPROG   EQU     0                       ;No Long code in Ecosoft C88
;
	IF	LPROG
ARGS	EQU	6                       ;Bytes on stack before args 
	ELSE
ARGS	EQU	4                       ;Bytes on stack before args
	ENDIF
;
; -------------------------------------------------------------------------
;
$b$prog	segment	word public 'code'
;
	PUBLIC	_delay
;
        IF      LPROG
_delay	PROC    FAR
        ELSE
_delay  PROC    NEAR
        ENDIF
        PUSH    BP
        MOV     BP,SP
        MOV     CX,[BP+ARGS]
OUTLP:  PUSH    CX
        MOV     CX,279
INLP:   LOOP    INLP
        POP     CX
        LOOP    OUTLP
        POP     BP
	RET                       
_delay  ENDP
;
;
$b$prog	ends
	END







