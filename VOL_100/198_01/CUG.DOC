< Distribution Disk >

The distribution disk is set to be compiled with Turbo C compiler
under MSDOS. You may have to change the settings defined in "estruct.h".
The following instructs you how to compile the programs under UNIX/XENIX
systems.

< Installtion of MicroEmacs under UNIX >

To install MicroEmacs ver. 3.9. under UNIX operating system, you must: 

1.	Convert all filenames to lowercase letters. 
	
	Files on the disk you have received may have all uppercase names. This
	has happened when the files were transfered from MSDOS to XENIX. This 
	can be easily fixed by simply using "mv" command or creating a shell
	script that makes use of "tr" command. This step is necessary when 
	makefile is processed.

2. 	Remove control characters in files.

	Some files on the disk contain control characters such as ^M or ^Z.
	This will cause the compiler to terminate its process. You need to 
	remove them using "vi" or some text filter.

3. 	Change the preprocessor control lines in file "estruct.h".

	Estruct.h defines preprocessor directives for various kinds of machines,
	operating systems and compilers. You need to customize them for your 
	machine before the compilation. First, in the Machine/OS definitions,
	set #define USG 1, note that all the rest in the section shoud be 0.
	Similarly, in the Compiler definitions, set #define UNIX 1, and 
	finally, in the Terminal Output definitions, set #define TERMCAP 1.
	 
4.	Edit "makefile"

	Makefile supplied with the souce codes contain filenames which are
	not necessary to compiling the program under UNIX. Those file mostly
	define display functions specific to a certain type of terminal. You
	need to delete them from the list because you are going to use "termcap"
	library.
	
	A makefile for compiling MicroEmacs under UNIX is a file named
	"unix.mk".

5. 	Compile MicroEmacs.

	Everything is ready. Just type "make -f unix.mk". The machine will 
	automatically create the excecutable image of Emacs for you.

* About Keyboard setting

	If you are not satisfied with the original keyboard setting or
	you want to use special keys like arrow keys. Here is the way to solve
	the problem.

1. 	You can assign the command to any key you want inside the editor.
	Type M-K, you will get a message "bind-to-key" under the status line.
	Type a command name you want to assign.(The command name can be 
	obtained in "efunc.h".)
	And then, hit a return key. If the command name doesn't exist, 
	the editor gives you an error message. After hitting the return
	key, now hit a key to which you want to assign the command. 
	Note that this key-setting will last until you exit the editor.

2. 	To make the key-setting permanent, you need to create a start-up
	file that contains macros and call it everytime you run emacs.
	For example, a start-up file "start.up" contains the following
	macros. (This is the key-settings for arrow keys on IBM.)

	bind-to-key previous-line M-A
	bind-to-key next-line M-B
	bind-to-key forward-character M-C
	bind-to-key backward-character M-D

	When you run emacs, type "emacs @start.up". (Creating a shell
	script for that is a good idea.) 
	This solution is the most suitable when the end-users have various 
	kinds of terminals. You will be able to create a shell script such that
	UNIX detects the terminal type and selects the appropriate start-up 
	file.
	
3. 	The third solution is to edit "ebind.h" and customize it for your
	favorite keyboard-setting. You need to recompile the program after
	your customization. This solution is not as flexible as the second
	one. You will get the first screen, however, a little quicker.  




	


	
	

	
	

