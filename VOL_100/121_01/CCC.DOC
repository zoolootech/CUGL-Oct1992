
     CCC (1)                   BDS C Users' Group                   CCC (1)



     NAME        NAME 
          ccc - a command driver for BDS C 

     SYNOPSIS        SYNOPSIS 
          ccc                                                               ccc [global flags] <file> [flags] <file> [flags] ...  

     DESCRIPTION        DESCRIPTION 
          ___                                                                    Ccc is a command driver for BDS C.  It takes global flags, 
          and one or more sets of local flags plus filenames.  It 
          builds a submit file which will compile all the files with 
          an extension of .c, and link the output with the remaining 
          files, using the l2 linker.  
          If the global flag -n is NOT present, CP/M SUBMIT is then 
          invoked to process the file.  
          Identifiable global compiler flags are propagated to all 
          compile steps; other global flags are propagated to all link 
          steps.  Similarly, identifiable local compiler flags are 
          passed to the compile step; other local flags are passed to 
          the link step.  

     CAVEATS        CAVEATS 
          This program was tested with v1.50 of the BDS C compiler 
          under CP/M 2.2.  It should work with other versions of BDS C 
          and CP/M, but has not been tested.  

     EXAMPLES        EXAMPLES 
          ccc -e6100 pencil.c printer.c driver -l crayon queue
               compiles pencil & printer, externals at 6100, linking in others

     FILES        FILES 
          cc.com,l2.com,cc.sub 

     BUGS        BUGS 
          The l2 flags -m, -org, -ovl cannot be used, since they would 
          be passed to the compiler.  
          Flags to the C compiler must not have a space between 
          themselves and their argument, otherwise they would be taken 
          as filenames.  

     NOTES        NOTES 
          Requires local.c for link.  

          The link step uses the L2 linker; by changing a #define, it 
          is possible to use CLINK.  However, this is not advisable, 
          due to conflicts with the -o, -d, and -r flags.  














                                      -1-

e BDS C compiler 