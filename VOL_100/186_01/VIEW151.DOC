DOCUMENTATION FOR VIEW, VERSION 1.51
12/09/85


This file supplements the information given in VIEW.DOC and TXTPLOT.DOC.
Those files were designed for inclusion with the version of VIEW for the 
NEC PC-8801A that was distributed by the NEC-AIDS group.  VIEW, version
1.51 has been slightly altered to make it more portable, and is
distributed via the C Users' Group.

For information on the usage of VIEW, see VIEW.DOC

Compilation and customization notes:

VIEW was designed to use memory-mapped video via the BDS C function
txtplot().  This function was enhanced to add the following:

	-- All control characters are skipped (except TABS)
	-- Strings can be terminated by a CR or a NUL
	-- Plotting stops at the end of the screen row, whether the
	   string is complete or not
	-- Parity is stripped from all characters
	-- Tab size is variable 

These enhancements make the use of txtplot() for text-file-oriented
applications easier.  The source code for txtplot() is in TXTPLOT.CSM.
Documentation for this is given in TXTPLOT.DOC.  Although the audience
for TXPLOT.CSM and TXTPLOT.DOC was NEC users, the code can be easily
adapted for any system that supports memory-mapped video.

If you use the memory-mapped version of TXTPLOT, you'll want to set
the symbol MAXCOL to your screen width. Note that the documentation
for TXTPLOT.CSM is aimed at the NEC audience, so the exact numbers
mentioned there are not necessarily accurate for anyone else. 

A version of the txtplot function that does NOT use memory-mapped video
is given in the file TXTPLOT.C.  This function will work with VIEW,
version 1.51, although not as swiftly as the other.  

If you use the non-memory-mapped version of TXTPLOT, you'll have to
customize the gotoxy() function and the MAXCOL symbol.


To compile VIEW:

	CC VIEW
		SUBMIT CASM TXTPLOT	(memory-mapped version)
		      or
		CC TXTPLOT		(Non-memory-mapped version)
	L2 VIEW TXTPLOT -L WILDEXP -N

There are four macros at the beginning of VIEW151.C that will need
customization. They handle various video escape sequences:

	-- clear() clears the screen
	-- home() homes the cursor (upper left corner)
	-- cursbot() moves the cursor to the bottom right corner
	-- lnins() inserts a blank line ahead of the cursor position.
	   It is used to get a scroll down.

The symbols MAXROW and LASTROW will need to be set for your system.
Also, the symbols BASE, XSIZE, and YSIZE will need to be set to 
initialize the memory-mapped video parameters in C.CCC properly.
If you've changed CCC.ASM to permanently set the proper values
for these, then you can delete the setplot() call in VIEW.

The only other customizations that might be necessary involve the
buffer size.  Currently, the buffer is divided into two 16K segments.
If your system does not have enough free memory to handle a 32K buffer,
or if it has enough to handle a larger buffer, then you will want to
redefine the symbol SEGBLKS.


Enjoy, and please report any bugs or possible enhancements to me.

James Pritchett
275 Bleecker St., Apt. 1
New York, NY  10014


will produce 4-space tabs.

As many filenames as will fit on th