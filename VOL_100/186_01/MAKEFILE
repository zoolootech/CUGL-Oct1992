#
# Sample makefile
#
# This file contains information for making MAKE.COM
#


#
# Default disk macro:  Default = B:
#

$:b

#
# Default user macro:  Default = 0
#

$/0


#
# "make.com" is the main target for this file, so it
# is put first (allowing the simple command "MAKE" to
# make this target by default).
#

make.com:   make.crl makeio.crl
            l2 b:make b:makeio

#
# Here are the two entries for the two CRL objects:
#

make.crl:   headers make.c
            cc b:make -e3000 -x

makeio.crl: headers makeio.c
            cc b:makeio -e3000 -x

#
# Here is the "no-action" object "headers", which stands for
# the two header files used in MAKE.COM.  Note that since
# "bdscio.h" is on the A: drive, a drive spec is put on
# the dependancy.
#

headers:    make.h a:bdscio.h


#
# The target "dmake.com" is for compiling MAKE.COM with the
# debug code.  To do this, the command is "MAKE DMAKE.COM"
#

dmake.com:  dmake.crl dmakeio.crl mdebug.crl
            l2 b:make b:makeio b:mdebug

#
# The dependancies "make.crl" and "makeio.crl" have already been
# defined as objects.  However, the commands there include the
# -e options, which are not appropriate for compiling with
# debug code.  Hence, we have to create new objects for these
# files with the appropriate actions, along with an object
# for the "mdebug.crl" file.
#

dmake.crl:  headers make.c
            cc b:make -x

dmakeio.crl: headers makeio.c
             cc b:makeio -x

mdebug.crl: headers mdebug.c
            cc b:mdebug.c -x

#
# end of sample makefile
#


-80 system.

      MAKE is a utility