###alltyp.bat
lc -ms -i\lc\ -i \lc\s\ groups >>cc.out
link \lc\s\c+groups+cputim+returnp+ntim_int+fround+error,groups,,\lc\s\lcm+\lc\s\lc >>cc.out

lc -ms -i\lc\ -i \lc\s\ DADD >>cc.out
link \lc\s\c+DADD+cputim+returnp+begint+ntim_int+fround+error,DADD,,\lc\s\lcm+\lc\s\lc >>cc.out
DADD.exe >DADD.out
groups <DADD.out >DADD.grp
del DADD.obj
del DADD.map
del DADD.exe

lc -ms -i\lc\ -i \lc\s\ DAND >>cc.out
link \lc\s\c+DAND+cputim+returnp+begint+ntim_int+fround+error,DAND,,\lc\s\lcm+\lc\s\lc >>cc.out
DAND.exe >DAND.out
groups <DAND.out >DAND.grp
del DAND.obj
del DAND.map
del DAND.exe

lc -ms -i\lc\ -i \lc\s\ DBAN >>cc.out
link \lc\s\c+DBAN+cputim+returnp+begint+ntim_int+fround+error,DBAN,,\lc\s\lcm+\lc\s\lc >>cc.out
DBAN.exe >DBAN.out
groups <DBAN.out >DBAN.grp
del DBAN.obj
del DBAN.map
del DBAN.exe

lc -ms -i\lc\ -i \lc\s\ DBOR >>cc.out
link \lc\s\c+DBOR+cputim+returnp+begint+ntim_int+fround+error,DBOR,,\lc\s\lcm+\lc\s\lc >>cc.out
DBOR.exe >DBOR.out
groups <DBOR.out >DBOR.grp
del DBOR.obj
del DBOR.map
del DBOR.exe

lc -ms -i\lc\ -i \lc\s\ DDIV >>cc.out
link \lc\s\c+DDIV+cputim+returnp+begint+ntim_int+fround+error,DDIV,,\lc\s\lcm+\lc\s\lc >>cc.out
DDIV.exe >DDIV.out
groups <DDIV.out >DDIV.grp
del DDIV.obj
del DDIV.map
del DDIV.exe

lc -ms -i\lc\ -i \lc\s\ DEOR >>cc.out
link \lc\s\c+DEOR+cputim+returnp+begint+ntim_int+fround+error,DEOR,,\lc\s\lcm+\lc\s\lc >>cc.out
DEOR.exe >DEOR.out
groups <DEOR.out >DEOR.grp
del DEOR.obj
del DEOR.map
del DEOR.exe

lc -ms -i\lc\ -i \lc\s\ DEQ >>cc.out
link \lc\s\c+DEQ+cputim+returnp+begint+ntim_int+fround+error,DEQ,,\lc\s\lcm+\lc\s\lc >>cc.out
DEQ.exe >DEQ.out
groups <DEQ.out >DEQ.grp
del DEQ.obj
del DEQ.map
del DEQ.exe

lc -ms -i\lc\ -i \lc\s\ DLSH >>cc.out
link \lc\s\c+DLSH+cputim+returnp+begint+ntim_int+fround+error,DLSH,,\lc\s\lcm+\lc\s\lc >>cc.out
DLSH.exe >DLSH.out
groups <DLSH.out >DLSH.grp
del DLSH.obj
del DLSH.map
del DLSH.exe

lc -ms -i\lc\ -i \lc\s\ DLT >>cc.out
link \lc\s\c+DLT+cputim+returnp+begint+ntim_int+fround+error,DLT,,\lc\s\lcm+\lc\s\lc >>cc.out
DLT.exe >DLT.out
groups <DLT.out >DLT.grp
del DLT.obj
del DLT.map
del DLT.exe

lc -ms -i\lc\ -i \lc\s\ DMUL >>cc.out
link \lc\s\c+DMUL+cputim+returnp+begint+ntim_int+fround+error,DMUL,,\lc\s\lcm+\lc\s\lc >>cc.out
DMUL.exe >DMUL.out
groups <DMUL.out >DMUL.grp
del DMUL.obj
del DMUL.map
del DMUL.exe

lc -ms -i\lc\ -i \lc\s\ DREM >>cc.out
link \lc\s\c+DREM+cputim+returnp+begint+ntim_int+fround+error,DREM,,\lc\s\lcm+\lc\s\lc >>cc.out
DREM.exe >DREM.out
groups <DREM.out >DREM.grp
del DREM.obj
del DREM.map
del DREM.exe

lc -ms -i\lc\ -i \lc\s\ DRSH >>cc.out
link \lc\s\c+DRSH+cputim+returnp+begint+ntim_int+fround+error,DRSH,,\lc\s\lcm+\lc\s\lc >>cc.out
DRSH.exe >DRSH.out
groups <DRSH.out >DRSH.grp
del DRSH.obj
del DRSH.map
del DRSH.exe

lc -ms -i\lc\ -i \lc\s\ DSUB >>cc.out
link \lc\s\c+DSUB+cputim+returnp+begint+ntim_int+fround+error,DSUB,,\lc\s\lcm+\lc\s\lc >>cc.out
DSUB.exe >DSUB.out
groups <DSUB.out >DSUB.grp
del DSUB.obj
del DSUB.map
del DSUB.exe

lc -ms -i\lc\ -i \lc\s\ UINC >>cc.out
link \lc\s\c+UINC+cputim+returnp+begint+ntim_int+fround+error,UINC,,\lc\s\lcm+\lc\s\lc >>cc.out
UINC.exe >UINC.out
groups <UINC.out >UINC.grp
del UINC.obj
del UINC.map
del UINC.exe

lc -ms -i\lc\ -i \lc\s\ UNEG >>cc.out
link \lc\s\c+UNEG+cputim+returnp+begint+ntim_int+fround+error,UNEG,,\lc\s\lcm+\lc\s\lc >>cc.out
UNEG.exe >UNEG.out
groups <UNEG.out >UNEG.grp
del UNEG.obj
del UNEG.map
del UNEG.exe

lc -ms -i\lc\ -i \lc\s\ UPIN >>cc.out
link \lc\s\c+UPIN+cputim+returnp+begint+ntim_int+fround+error,UPIN,,\lc\s\lcm+\lc\s\lc >>cc.out
UPIN.exe >UPIN.out
groups <UPIN.out >UPIN.grp
del UPIN.obj
del UPIN.map
del UPIN.exe

###install.bat
lc -ms -i\lc\ -i\lc\s\ calib    >>icc.out
lc -ms -i\lc\ -i\lc\s\ begint   >>icc.out
lc -ms -i\lc\ -i\lc\s\ cputim   >>icc.out
lc -ms -i\lc\ -i\lc\s\ returnp  >>icc.out
lc -ms -i\lc\ -i\lc\s\ error    >>icc.out
lc -ms -i\lc\ -i\lc\s\ fround   >>icc.out
lc -ms -i\lc\ -i\lc\s\ intreg   >>icc.out
lc -ms -i\lc\ -i\lc\s\ sstat    >>icc.out
lc -ms -i\lc\ -i\lc\s\ sauto    >>icc.out
lc -ms -i\lc\ -i\lc\s\ lauto    >>icc.out
lc -ms -i\lc\ -i\lc\s\ dauto    >>icc.out
lc -ms -i\lc\ -i\lc\s\ cauto    >>icc.out
lc -ms -i\lc\ -i\lc\s\ fauto    >>icc.out
lc -ms -i\lc\ -i\lc\s\ fmttbl   >>icc.out

link \lc\s\c+calib+cputim+returnp+begint+error+fround+ntim_int,calib,,\lc\s\lcm+\lc\s\lc >>icc.out
del calib.map
del calib.obj
calib.exe > parms.dat
type parms.dat

link \lc\s\c+cauto+cputim+returnp+begint+error+fround+ntim_int,cauto,,\lc\s\lcm+\lc\s\lc >>icc.out
cauto.exe >cauto.out
del cauto.obj
del cauto.map

link \lc\s\c+fauto+cputim+returnp+begint+error+fround+ntim_int,fauto,,\lc\s\lcm+\lc\s\lc >>icc.out
fauto.exe >fauto.out
del fauto.obj
del fauto.map

link \lc\s\c+intreg+cputim+returnp+begint+error+fround+ntim_int,intreg,,\lc\s\lcm+\lc\s\lc >>icc.out
intreg.exe >intreg.out
del intreg.obj
del intreg.map

link \lc\s\c+sstat+cputim+returnp+begint+error+fround+ntim_int,sstat,,\lc\s\lcm+\lc\s\lc >>icc.out
sstat.exe >sstat.out
del sstat.obj
del sstat.map

link \lc\s\c+sauto+cputim+returnp+begint+error+fround+ntim_int,sauto,,\lc\s\lcm+\lc\s\lc >>icc.out
sauto.exe >sauto.out
del sauto.obj
del sauto.map

link \lc\s\c+lauto+cputim+returnp+begint+error+fround+ntim_int,lauto,,\lc\s\lcm+\lc\s\lc >>icc.out
lauto.exe >lauto.out
del lauto.obj
del lauto.map

link \lc\s\c+dauto+cputim+returnp+begint+error+fround+ntim_int,dauto,,\lc\s\lcm+\lc\s\lc >>icc.out
dauto.exe >dauto.out
del dauto.obj
del dauto.map

link \lc\s\c+fmttbl+cputim+returnp+begint+error+fround+ntim_int,fmttbl,,\lc\s\lcm+\lc\s\lc >>icc.out

del fmttbl.obj
del fmttbl.map
fmttbl sauto.out cauto.out lauto.out dauto.out fauto.out 






###read.me
Dr. Plum:

    Thanks for the help in getting the files from Efficient C to 
run!  As it turns out, there is no real problem with any of the 
source on the disk - however several of the files have imbedded 
page formatting commands with only open comments.  I am using 
Lattice 2.15 and it complains bitterly.

NOTE FROM PLUM: When compiling with Lattice, I would simply suggest
turning off the "nested comment" behavior via compile-time flag.


    I did find several problems in the batch files included on 
the disk, most importantly that the 2.15 version wants to have 
both the standard and math libraries linked.  (This was the cause 
of my problem with the "Insufficient Memory" error at run time.)  
I have provided copies of the batch files I used to generate the 
object and exe files and output in \bat.  As far as I can tell, 
all of the outputs were correct.  I have included them in \out.  

    The problem I discussed with you regarding cauto.exe seeming 
to hang was in truth not a problem but rather a consequence of my 
impatient expectation of a one to two minute execution time.  
Cauto takes upwards of 12 minutes (at least on my machine) and 
was much longer than my expectation.  I have included a file 
called cautotst.c which is simply cauto with printf's to keep 
track of what is really progressing.  If you slave the printer 
with Ctrl-PrtSc it is reassuring to check that all is will the 
first time - it also makes obvious that short instructions are 
repeated many more times than long ones.  Perhaps it will be of 
interest to other with limited patience or high expectations.  

    For reference, the batch files ran for the following times.  

              Install.bat            ~3 hrs
              mkavg.bat               5 mins
              runmost.bat             45 mins
              runmost2.bat            50 mins
              alltyp.bat              1 hr 45 mins

If I were doing it all over, I would certainly use a RAM disk and 
would probably save all of the obj and exe files.  

My system is an IBM PC with 640K memory, two floppys, a 20Mb hard 
disk and a monochrome monitor.  I used DOS 2.0 and Lattice 2.15 
which was loaded into the Lattice standard subdirectories.  

Thanks again for the help and the replacement disks.  Call if you 
have questions or comments.  

              Bruce Beller
              432 Ramsey Road
              Yardley, Pa. 19067

###mkavg.bat
rem after running install.bat you can run mkavg.bat to compute averages
lc -ms -i\lc\ -i\lc\s\ avg  >>icc.out
link \lc\s\c+avg+cputim+returnp+begint+error+fround+ntim_int,avg,,\lc\s\lcm+\lc\s\lc >>icc.out

avg intreg.out  10 >intreg.avg
avg sstat.out   10 >sstat.avg
avg sauto.out   10 >sauto.avg
avg lauto.out   50 >lauto.avg
avg dauto.out  400 >dauto.avg
avg cauto.out   10 >cauto.avg
avg fauto.out  400 >fauto.avg
###runmost.bat
lc -ms -i\lc\ -i \lc\s\ FNCALL >>rcc.out
link \lc\s\c+FNCALL+cputim+returnp+begint+ntim_int+fround+error,FNCALL,,\lc\s\lcm+\lc\s\lc >>rcc.out
FNCALL.exe >FNCALL.out 
del FNCALL.obj
del FNCALL.map
del FNCALL.exe

lc -ms -i\lc\ -i \lc\s\ LOOPS1 >>rcc.out
link \lc\s\c+LOOPS1+cputim+returnp+begint+ntim_int+fround+error,LOOPS1,,\lc\s\lcm+\lc\s\lc >>rcc.out
LOOPS1.exe >LOOPS1.out 
del LOOPS1.obj
del LOOPS1.map
del LOOPS1.exe

lc -ms -i\lc\ -i \lc\s\ LOOPS2 >>rcc.out
link \lc\s\c+LOOPS2+cputim+returnp+begint+ntim_int+fround+error,LOOPS2,,\lc\s\lcm+\lc\s\lc >>rcc.out
LOOPS2.exe >LOOPS2.out 
del LOOPS2.obj
del LOOPS2.map
del LOOPS2.exe

lc -ms -i\lc\ -i \lc\s\ 102 >>rcc.out
link \lc\s\c+102+cputim+returnp+begint+ntim_int+fround+error,102,,\lc\s\lcm+\lc\s\lc >>rcc.out
102.exe >102.out 
del 102.obj
del 102.map
del 102.exe

lc -ms -i\lc\ -i \lc\s\ 104 >>rcc.out
link \lc\s\c+104+cputim+returnp+begint+ntim_int+fround+error,104,,\lc\s\lcm+\lc\s\lc >>rcc.out
104.exe >104.out 
del 104.obj
del 104.map
del 104.exe

lc -ms -i\lc\ -i \lc\s\ 105 >>rcc.out
link \lc\s\c+105+cputim+returnp+begint+ntim_int+fround+error,105,,\lc\s\lcm+\lc\s\lc >>rcc.out
105.exe >105.out 
del 105.obj
del 105.map
del 105.exe

lc -ms -i\lc\ -i \lc\s\ 106 >>rcc.out
link \lc\s\c+106+cputim+returnp+begint+ntim_int+fround+error,106,,\lc\s\lcm+\lc\s\lc >>rcc.out
106.exe >106.out 
del 106.obj
del 106.map
del 106.exe

lc -ms -i\lc\ -i \lc\s\ 401 >>rcc.out
link \lc\s\c+401+cputim+returnp+begint+ntim_int+fround+error,401,,\lc\s\lcm+\lc\s\lc >>rcc.out
401.exe >401.out 
del 401.obj
del 401.map
del 401.exe

lc -ms -i\lc\ -i \lc\s\ 402 >>rcc.out
link \lc\s\c+402+cputim+returnp+begint+ntim_int+fround+error,402,,\lc\s\lcm+\lc\s\lc >>rcc.out
402.exe >402.out 
del 402.obj
del 402.map
del 402.exe

lc -ms -i\lc\ -i \lc\s\ 403 >>rcc.out
link \lc\s\c+403+cputim+returnp+begint+ntim_int+fround+error,403,,\lc\s\lcm+\lc\s\lc >>rcc.out
403.exe >403.out 
del 403.obj
del 403.map
del 403.exe

lc -ms -i\lc\ -i \lc\s\ 405 >>rcc.out
link \lc\s\c+405+cputim+returnp+begint+ntim_int+fround+error,405,,\lc\s\lcm+\lc\s\lc >>rcc.out
405.exe >405.out 
del 405.obj
del 405.map
del 405.exe

lc -ms -i\lc\ -i \lc\s\ 411 >>rcc.out
link \lc\s\c+411+cputim+returnp+begint+ntim_int+fround+error,411,,\lc\s\lcm+\lc\s\lc >>rcc.out
411.exe >411.out 
del 411.obj
del 411.map
del 411.exe

lc -ms -i\lc\ -i \lc\s\ 413 >>rcc.out
link \lc\s\c+413+cputim+returnp+begint+ntim_int+fround+error,413,,\lc\s\lcm+\lc\s\lc >>rcc.out
413.exe >413.out 
del 413.obj
del 413.map
del 413.exe

lc -ms -i\lc\ -i \lc\s\ 501 >>rcc.out
link \lc\s\c+501+cputim+returnp+begint+ntim_int+fround+error,501,,\lc\s\lcm+\lc\s\lc >>rcc.out
501.exe >501.out 
del 501.obj
del 501.map
del 501.exe

lc -ms -i\lc\ -i \lc\s\ 503 >>rcc.out
link \lc\s\c+503+cputim+returnp+begint+ntim_int+fround+error,503,,\lc\s\lcm+\lc\s\lc >>rcc.out
503.exe >503.out 
del 503.obj
del 503.map
del 503.exe

lc -ms -i\lc\ -i \lc\s\ 504 >>rcc.out
link \lc\s\c+504+cputim+returnp+begint+ntim_int+fround+error,504,,\lc\s\lcm+\lc\s\lc >>rcc.out
504.exe >504.out 
del 504.obj
del 504.map
del 504.exe

lc -ms -i\lc\ -i \lc\s\ 505 >>rcc.out
link \lc\s\c+505+cputim+returnp+begint+ntim_int+fround+error,505,,\lc\s\lcm+\lc\s\lc >>rcc.out
505.exe >505.out 
del 505.obj
del 505.map
del 505.exe

lc -ms -i\lc\ -i \lc\s\ 506 >>rcc.out
link \lc\s\c+506+cputim+returnp+begint+ntim_int+fround+error,506,,\lc\s\lcm+\lc\s\lc >>rcc.out
506.exe >506.out 
del 506.obj
del 506.map
del 506.exe

lc -ms -i\lc\ -i \lc\s\ 507 >>rcc.out
link \lc\s\c+507+cputim+returnp+begint+ntim_int+fround+error,507,,\lc\s\lcm+\lc\s\lc >>rcc.out
507.exe >507.out 
del 507.obj
del 507.map
del 507.exe

lc -ms -i\lc\ -i \lc\s\ 508 >>rcc.out
link \lc\s\c+508+cputim+returnp+begint+ntim_int+fround+error,508,,\lc\s\lcm+\lc\s\lc >>rcc.out
508.exe >508.out 
del 508.obj
del 508.map
del 508.exe

lc -ms -i\lc\ -i \lc\s\ 601 >>rcc.out
link \lc\s\c+601+cputim+returnp+begint+ntim_int+fround+error,601,,\lc\s\lcm+\lc\s\lc >>rcc.out
601.exe >601.out 
del 601.obj
del 601.map
del 601.exe

###runmost2.bat
lc -ms -i\lc\ -i \lc\s\ switch >>rcc2.out
link \lc\s\c+switch+cputim+returnp+begint+ntim_int+fround+error,switch,,\lc\s\lcm+\lc\s\lc >>rcc2.out
switch.exe >switch.out 
del switch.obj
del switch.map
del switch.exe

lc -ms -i\lc\ -i \lc\s\ ctypelib >>rcc2.out
link \lc\s\c+ctypelib+cputim+returnp+begint+ntim_int+fround+error,ctypelib,,\lc\s\lcm+\lc\s\lc >>rcc2.out
ctypelib.exe >ctypelib.out 
del ctypelib.obj
del ctypelib.map
del ctypelib.exe

lc -ms -i\lc\ -i \lc\s\ fdlib >>rcc2.out
link \lc\s\c+fdlib+cputim+returnp+begint+ntim_int+fround+error,fdlib,,\lc\s\lcm+\lc\s\lc >>rcc2.out
fdlib.exe >fdlib.out 
del fdlib.obj
del fdlib.map
del fdlib.exe

lc -ms -i\lc\ -i \lc\s\ mathlib >>rcc2.out
link \lc\s\c+mathlib+cputim+returnp+begint+ntim_int+fround+error,mathlib,,\lc\s\lcm+\lc\s\lc >>rcc2.out
mathlib.exe >mathlib.out 
del mathlib.obj
del mathlib.map
del mathlib.exe

lc -ms -i\lc\ -i \lc\s\ strlib >>rcc2.out
link \lc\s\c+strlib+cputim+returnp+begint+ntim_int+fround+error,strlib,,\lc\s\lcm+\lc\s\lc >>rcc2.out
strlib.exe >strlib.out 
del strlib.obj
del strlib.map
del strlib.exe

lc -ms -i\lc\ -i \lc\s\ stdlib >>rcc2.out
link \lc\s\c+stdlib+cputim+returnp+begint+ntim_int+fround+error,stdlib,,\lc\s\lcm+\lc\s\lc >>rcc2.out
stdlib.exe >stdlib.out 
del stdlib.obj
del stdlib.map
del stdlib.exe

lc -ms -i\lc\ -i \lc\s\ stdiolib >>rcc2.out
link \lc\s\c+stdiolib+cputim+returnp+begint+ntim_int+fround+error,stdiolib,,\lc\s\lcm+\lc\s\lc >>rcc2.out
stdiolib.exe >stdiolib.out 
del stdiolib.obj
del stdiolib.map
del stdiolib.exe

lc -ms -i\lc\ -i \lc\s\ harness1 >>rcc2.out
link \lc\s\c+harness1+cputim+returnp+begint+ntim_int+fround+error,harness1,,\lc\s\lcm+\lc\s\lc >>rcc2.out
rem harness1
time
harness1.exe >harness1.out 
time
del harness1.obj
del harness1.map
del harness1.exe

lc -ms -i\lc\ -i \lc\s\ harness2 >>rcc2.out
link \lc\s\c+harness2+cputim+returnp+begint+ntim_int+fround+error,harness2,,\lc\s\lcm+\lc\s\lc >>rcc2.out
rem harness2
time
harness2.exe >harness2.out 
time
del harness2.obj
del harness2.map
del harness2.exe

lc -ms -i\lc\ -i \lc\s\ harness3 >>rcc2.out
link \lc\s\c+harness3+cputim+returnp+begint+ntim_int+fround+error,harness3,,\lc\s\lcm+\lc\s\lc >>rcc2.out
rem harness3
time
harness3.exe >harness3.out 
time
del harness3.obj
del harness3.map
del harness3.exe

lc -ms -i\lc\ -i \lc\s\ harness4 >>rcc2.out
link \lc\s\c+harness4+cputim+returnp+begint+ntim_int+fround+error,harness4,,\lc\s\lcm+\lc\s\lc >>rcc2.out
rem harness4
time
harness4.exe >harness4.out 
time
del harness4.obj
del harness4.map
del harness4.exe


lc -ms -i\lc\ -i \lc\s\ optimtst >>rcc2.out
link \lc\s\c+optimtst+cputim+returnp+begint+ntim_int+fround+error,optimtst,,\lc\s\lcm+\lc\s\lc >>rcc2.out
optimtst.exe >optimtst.out 
del optimtst.obj
del optimtst.map
del optimtst.exe

###102.out
Code sample             Size   Time (usec)
Bit Count V1               8       411.   
++k                        4         4.30 
j >> k                     5        12.7  
j <= k                    12        12.0  
j & k                      3         3.76 
###104.out
Code sample             Size   Time (usec)
Bit Count V2               8       291.   
###105.out
Code sample             Size   Time (usec)
Bit Count V3               8       291.   
###106.out
Code sample             Size   Time (usec)
Bit Count V4               8       200.   
###401.out
Code sample             Size   Time (usec)
Bit Count V5               8        57.8  
###402.out
Code sample             Size   Time (usec)
Integer indexed loop      28      3400.   
###403.out
Code sample             Size   Time (usec)
Register indexed loo      28      3400.   
###405.out
Code sample             Size   Time (usec)
Bit count V6              13        12.5  
###411.out
Code sample             Size   Time (usec)
i = k; j = k              12        10.3  
i = j = k                  9        15.0  
###413.out
Code sample             Size   Time (usec)
expr = 5 * expr           40       110.   
expr *= 5                 33       102.   
###501.out
Code sample             Size   Time (usec)
Array indexing loop       28      3400.   
###503.out
Code sample             Size   Time (usec)
Pointer loop              28      3280.   
###504.out
Code sample             Size   Time (usec)
Pointer loop               3      3320.   
###505.out
Code sample             Size   Time (usec)
Two-Dimensional loop      62      8000.   
###506.out
Code sample             Size   Time (usec)
Ptr looping 2 dimens       0      3320.   
###507.out
Code sample             Size   Time (usec)
Convert Long to ASCI      12       121.   
###508.out
Code sample             Size   Time (usec)
Long to ASCII using       15       153.   
###601.out
Code sample             Size   Time (usec)
if-else                   20        13.9  
###cauto.avg
(double)k                 10       163.   
(int)k                     2         0.00 
(char)k                    2         0.00 
&k                         0         0.00 
~k                         4         1.25 
-k                         4         1.25 
j * k                     17        46.3  
j / k                     18        53.9  
j % k                     18        53.8  
    Average of other samples       10.7  
###cauto.out
Code sample             Size   Time (usec)
s.m                        -             -
p->m                       -             -
a[k]                       9         8.61 
(double)k                 10       163.   
(long)k                    9         7.53 
(int)k                     2         0.00 
(char)k                    2         0.00 
&k                         0         0.00 
~k                         4         1.25 
++k                        8         6.02 
k++                       14        14.9  
!k                        10         6.02 
-k                         4         1.25 
j * k                     17        46.3  
j / k                     18        53.9  
j % k                     18        53.8  
j + k                      9         7.53 
j - k                      9         7.53 
j << k                    11        22.2  
j >> k                    11        22.2  
j <= k                    18        14.8  
j != k                    18        16.1  
j && k                    16         8.49 
j || k                    16         8.49 
j & k                      9         7.54 
j | k                      9         7.53 
j ^ k                      9         7.53 
i ? j : k                 13        12.4  
j = k                      6         7.17 
###ctypelib.out
Code sample             Size   Time (usec)
isalnum(c)                14        13.1  
isalpha(c)                14        13.1  
isascii(c)                14        10.1  
iscntrl(c)                14        13.1  
isdigit(c)                14        13.1  
islower(c)                14        13.1  
isprint(c)                14        13.1  
ispunct(c)                14        13.1  
isspace(c)                14        13.1  
isupper(c)                14        13.3  
tolower(c)                32        31.2  
toupper(c)                32        31.2  
###dadd.grp

Group 1:  avg=4.269  tmin=3.78  tmax=4.65 
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=8.003  tmin=7.55  tmax=8.24 
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=15.70   tmin=14.7   tmax=16.2  
	e   l                 
	s   l                 
	a   l                 

Group 4:  avg=727.7    tmin=727.    tmax=728.   
	a   d                 
	s   d                 
	e   d                 

Group 5:  avg=1567.     tmin=1560.    tmax=1580.   
	a   f                 
	s   f                 
	e   f                 
###dadd.out
Code sample             Size   Time (usec)
a   f                     39      1560.   
a   d                     21       727.   
s   f                     41      1580.   
s   d                     23       728.   
e   f                     41      1560.   
e   d                     23       728.   
e   c                     10         8.24 
e   s                      4         4.65 
e   l                     12        16.2  
e u s                      4         4.63 
s   c                     10         8.22 
s   s                      4         4.63 
s   l                     12        16.2  
s u s                      4         4.63 
a   c                      9         7.55 
a   s                      3         3.78 
a   l                      9        14.7  
a u s                      3         3.78 
r   i                      3         3.78 
###dand.grp

Group 1:  avg=17.14   tmin=14.7   tmax=19.0  
	e   c                 
	e   s                 
	e u s                 
	s   c                 
	s   s                 
	s u s                 
	a   c                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=25.63   tmin=24.4   tmax=26.3  
	e   l                 
	s   l                 
	a   l                 

Group 3:  avg=237.3    tmin=204.    tmax=270.   
	a   f                 
	a   d                 
	s   f                 
	s   d                 
	e   f                 
	e   d                 
###dand.out
Code sample             Size   Time (usec)
a   f                     38       204.   
a   d                     46       266.   
s   f                     40       207.   
s   d                     50       270.   
e   f                     40       207.   
e   d                     50       270.   
e   c                     18        16.2  
e   s                     18        18.9  
e   l                     22        26.3  
e u s                     18        18.9  
s   c                     18        16.2  
s   s                     18        19.0  
s   l                     22        26.2  
s u s                     18        18.9  
a   c                     16        14.7  
a   s                     16        16.2  
a   l                     20        24.4  
a u s                     16        16.2  
r   i                     16        16.2  
###dauto.avg
(double)k                  0         0.00 
&k                         0         0.00 
-k                        17        27.6  
j * k                     21      2670.   
j / k                     21      4190.   
i ? j : k                 31        37.6  
j = k                     12        33.9  
    Average of other samples      364.   
###dauto.out
Code sample             Size   Time (usec)
s.m                        -             -
p->m                       -             -
a[k]                       -             -
(double)k                  0         0.00 
(long)k                   12       351.   
(int)k                    12       179.   
(char)k                   14       178.   
&k                         0         0.00 
~k                         -             -
++k                       33       805.   
k++                        -             -
!k                        29       141.   
-k                        17        27.6  
j * k                     21      2670.   
j / k                     21      4190.   
j % k                      -             -
j + k                     21       717.   
j - k                     21       637.   
j << k                     -             -
j >> k                     -             -
j <= k                    33       295.   
j != k                    33       219.   
j && k                    46       242.   
j || k                    46       242.   
j & k                      -             -
j | k                      -             -
j ^ k                      -             -
i ? j : k                 31        37.6  
j = k                     12        33.9  
###dban.grp

Group 1:  avg=4.271  tmin=3.78  tmax=4.65 
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=7.993  tmin=7.53  tmax=8.23 
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=15.60   tmin=14.4   tmax=16.2  
	e   l                 
	s   l                 
	a   l                 
###dban.out
Code sample             Size   Time (usec)
e   c                     10         8.23 
e   s                      4         4.65 
e   l                     12        16.2  
e u s                      4         4.65 
s   c                     10         8.22 
s   s                      4         4.63 
s   l                     12        16.2  
s u s                      4         4.63 
a   c                      9         7.53 
a   s                      3         3.78 
a   l                      9        14.4  
a u s                      3         3.78 
r   i                      3         3.78 
###dbor.grp

Group 1:  avg=4.271  tmin=3.78  tmax=4.65 
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=7.997  tmin=7.53  tmax=8.24 
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=15.60   tmin=14.4   tmax=16.2  
	e   l                 
	s   l                 
	a   l                 
###dbor.out
Code sample             Size   Time (usec)
e   c                     10         8.24 
e   s                      4         4.65 
e   l                     12        16.2  
e u s                      4         4.65 
s   c                     10         8.22 
s   s                      4         4.63 
s   l                     12        16.2  
s u s                      4         4.63 
a   c                      9         7.53 
a   s                      3         3.78 
a   l                      9        14.4  
a u s                      3         3.78 
r   i                      3         3.78 
###ddiv.grp

Group 1:  avg=38.86   tmin=36.2   tmax=40.3  
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=53.93   tmin=53.8   tmax=54.1  
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=627.7    tmin=623.    tmax=630.   
	e   l                 
	s   l                 
	a   l                 

Group 4:  avg=3992.     tmin=3620.    tmax=4360.   
	a   f                 
	a   d                 
	s   f                 
	s   d                 
	e   f                 
	e   d                 
###ddiv.out
Code sample             Size   Time (usec)
a   f                     39      4350.   
a   d                     21      3620.   
s   f                     41      4360.   
s   d                     23      3630.   
e   f                     41      4350.   
e   d                     23      3640.   
e   c                     19        54.1  
e   s                      5        40.3  
e   l                     15       630.   
e u s                      6        37.2  
s   c                     19        53.9  
s   s                      5        40.3  
s   l                     15       630.   
s u s                      6        37.4  
a   c                     18        53.8  
a   s                      4        40.3  
a   l                     12       623.   
a u s                      5        36.2  
r   i                      4        40.3  
###deor.grp

Group 1:  avg=4.271  tmin=3.78  tmax=4.65 
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=7.997  tmin=7.53  tmax=8.24 
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=15.60   tmin=14.4   tmax=16.2  
	e   l                 
	s   l                 
	a   l                 
###deor.out
Code sample             Size   Time (usec)
e   c                     10         8.24 
e   s                      4         4.65 
e   l                     12        16.2  
e u s                      4         4.65 
s   c                     10         8.22 
s   s                      4         4.63 
s   l                     12        16.2  
s u s                      4         4.63 
a   c                      9         7.53 
a   s                      3         3.78 
a   l                      9        14.4  
a u s                      3         3.78 
r   i                      3         3.78 
###deq.grp

Group 1:  avg=13.85   tmin=12.4   tmax=16.3  
	e   c                 
	e   s                 
	e u s                 
	s   c                 
	s   s                 
	s u s                 
	a   c                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=25.37   tmin=23.7   tmax=26.2  
	e   l                 
	s   l                 
	a   l                 

Group 3:  avg=214.0    tmin=214.    tmax=214.   
	a   d                 
	s   d                 
	e   d                 

Group 4:  avg=1047.     tmin=1040.    tmax=1050.   
	a   f                 
	s   f                 
	e   f                 
###deq.out
Code sample             Size   Time (usec)
a   f                     51      1040.   
a   d                     33       214.   
s   f                     53      1050.   
s   d                     35       214.   
e   f                     53      1050.   
e   d                     35       214.   
e   c                     19        16.2  
e   s                     13        13.2  
e   l                     23        26.2  
e u s                     13        13.1  
s   c                     19        16.3  
s   s                     13        13.1  
s   l                     23        26.2  
s u s                     13        13.3  
a   c                     18        16.1  
a   s                     12        12.4  
a   l                     20        23.7  
a u s                     12        12.4  
r   i                     12        12.4  
###dlsh.grp

Group 1:  avg=21.46   tmin=19.9   tmax=23.7  
	e   c                 
	e   s                 
	e u s                 
	s   c                 
	s   s                 
	s u s                 
	a   c                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=138.0    tmin=136.    tmax=140.   
	e   l                 
	s   l                 
	a   l                 
###dlsh.out
Code sample             Size   Time (usec)
e   c                     12        23.7  
e   s                      6        19.9  
e   l                     18       138.   
e u s                      8        22.2  
s   c                     12        23.7  
s   s                      6        19.9  
s   l                     18       140.   
s u s                      8        22.1  
a   c                     11        22.2  
a   s                      5        19.9  
a   l                     16       136.   
a u s                      7        21.1  
r   i                      5        19.9  
###dlt.grp

Group 1:  avg=13.81   tmin=12.4   tmax=16.2  
	e   c                 
	e   s                 
	e u s                 
	s   c                 
	s   s                 
	s u s                 
	a   c                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=68.13   tmin=66.4   tmax=69.0  
	e   l                 
	s   l                 
	a   l                 

Group 3:  avg=214.0    tmin=214.    tmax=214.   
	a   d                 
	s   d                 
	e   d                 

Group 4:  avg=1047.     tmin=1040.    tmax=1050.   
	a   f                 
	s   f                 
	e   f                 
###dlt.out
Code sample             Size   Time (usec)
a   f                     51      1040.   
a   d                     33       214.   
s   f                     53      1050.   
s   d                     35       214.   
e   f                     53      1050.   
e   d                     35       214.   
e   c                     19        16.2  
e   s                     13        13.1  
e   l                     24        69.0  
e u s                     13        13.1  
s   c                     19        16.2  
s   s                     13        13.1  
s   l                     24        69.0  
s u s                     13        13.1  
a   c                     18        16.1  
a   s                     12        12.4  
a   l                     21        66.4  
a u s                     12        12.4  
r   i                     12        12.4  
###dmul.grp

Group 1:  avg=32.06   tmin=31.2   tmax=32.8  
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=46.30   tmin=46.3   tmax=46.3  
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=154.3    tmin=153.    tmax=155.   
	e   l                 
	s   l                 
	a   l                 

Group 4:  avg=3012.     tmin=2650.    tmax=3380.   
	a   f                 
	a   d                 
	s   f                 
	s   d                 
	e   f                 
	e   d                 
###dmul.out
Code sample             Size   Time (usec)
a   f                     39      3370.   
a   d                     21      2650.   
s   f                     41      3370.   
s   d                     23      2650.   
e   f                     41      3380.   
e   d                     23      2650.   
e   c                     18        46.3  
e   s                      4        32.8  
e   l                     15       155.   
e u s                      4        31.2  
s   c                     18        46.3  
s   s                      4        32.6  
s   l                     15       155.   
s u s                      4        31.2  
a   c                     17        46.3  
a   s                      3        32.6  
a   l                     12       153.   
a u s                      3        31.2  
r   i                      3        32.8  
###drem.grp

Group 1:  avg=38.89   tmin=36.3   tmax=40.3  
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=53.87   tmin=53.8   tmax=53.9  
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=627.0    tmin=622.    tmax=630.   
	e   l                 
	s   l                 
	a   l                 
###drem.out
Code sample             Size   Time (usec)
e   c                     19        53.9  
e   s                      5        40.3  
e   l                     15       629.   
e u s                      6        37.4  
s   c                     19        53.9  
s   s                      5        40.3  
s   l                     15       630.   
s u s                      6        37.3  
a   c                     18        53.8  
a   s                      4        40.3  
a   l                     12       622.   
a u s                      5        36.3  
r   i                      4        40.3  
###drsh.grp

Group 1:  avg=21.46   tmin=19.9   tmax=23.7  
	e   c                 
	e   s                 
	e u s                 
	s   c                 
	s   s                 
	s u s                 
	a   c                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=138.0    tmin=136.    tmax=140.   
	e   l                 
	s   l                 
	a   l                 
###drsh.out
Code sample             Size   Time (usec)
e   c                     12        23.7  
e   s                      6        19.9  
e   l                     18       138.   
e u s                      8        22.2  
s   c                     12        23.7  
s   s                      6        19.9  
s   l                     18       140.   
s u s                      8        22.1  
a   c                     11        22.2  
a   s                      5        19.9  
a   l                     16       136.   
a u s                      7        21.1  
r   i                      5        19.9  
###dsub.grp

Group 1:  avg=4.269  tmin=3.78  tmax=4.65 
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=8.003  tmin=7.55  tmax=8.24 
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=15.63   tmin=14.5   tmax=16.2  
	e   l                 
	s   l                 
	a   l                 

Group 4:  avg=712.7    tmin=712.    tmax=713.   
	a   d                 
	s   d                 
	e   d                 

Group 5:  avg=1557.     tmin=1550.    tmax=1570.   
	a   f                 
	s   f                 
	e   f                 
###dsub.out
Code sample             Size   Time (usec)
a   f                     39      1550.   
a   d                     21       713.   
s   f                     41      1570.   
s   d                     23       712.   
e   f                     41      1550.   
e   d                     23       713.   
e   c                     10         8.24 
e   s                      4         4.65 
e   l                     12        16.2  
e u s                      4         4.63 
s   c                     10         8.22 
s   s                      4         4.63 
s   l                     12        16.2  
s u s                      4         4.63 
a   c                      9         7.55 
a   s                      3         3.78 
a   l                      9        14.5  
a u s                      3         3.78 
r   i                      3         3.78 
###fauto.avg
&k                         0         0.00 
!k                        27       112.   
j * k                     39      3400.   
j / k                     39      4920.   
j && k                    38       196.   
j || k                    38       196.   
j = k                     12        19.9  
    Average of other samples      905.   
###fauto.out
Code sample             Size   Time (usec)
s.m                        -             -
p->m                       -             -
a[k]                       -             -
(double)k                 11       360.   
(long)k                    6       716.   
(int)k                     6       540.   
(char)k                    8       543.   
&k                         0         0.00 
~k                         -             -
++k                       30      1920.   
k++                        -             -
!k                        27       112.   
-k                        14       380.   
j * k                     39      3400.   
j / k                     39      4920.   
j % k                      -             -
j + k                     39      1530.   
j - k                     39      1420.   
j << k                     -             -
j >> k                     -             -
j <= k                    51      1120.   
j != k                    51      1050.   
j && k                    38       196.   
j || k                    38       196.   
j & k                      -             -
j | k                      -             -
j ^ k                      -             -
i ? j : k                 29       375.   
j = k                     12        19.9  
###fdlib.out
Code sample             Size   Time (usec)
open, close               22    483000.   
read-BUFSIZ chars         38    182000.   
lseek, read-BUFSIZ        48    215000.   
write-BUFSIZ chars        16       148.   
###fncall.out
Code sample             Size   Time (usec)
fn call                    3        18.8  
fn call w save             3        36.4  
fn w 1 arg                 8        28.7  
fn w 2 arg                10        31.4  
fn w 3 arg                11        34.7  
fn call *                  3        22.6  
###harness1.out
###harness2.out
###harness3.out
long divides require 605.4 microseconds 
long additions require 10.0 microseconds 
###harness4.out
long divides require 605.4 microseconds 
long additions require 10.0 microseconds 
###intreg.avg
p->m                       3         3.78 
(double)k                  8       162.   
(int)k                     0         0.00 
(char)k                    2         0.00 
~k                         2         0.00 
-k                         2         0.00 
j / k                      4        40.2  
j % k                      4        40.2  
j + k                      3         3.78 
j - k                      3         3.78 
j & k                      3         3.78 
j | k                      3         3.78 
j ^ k                      3         3.78 
    Average of other samples       12.2  
###intreg.out
Code sample             Size   Time (usec)
s.m                        -             -
p->m                       3         3.78 
a[k]                       7         7.55 
(double)k                  8       162.   
(long)k                    7         6.04 
(int)k                     0         0.00 
(char)k                    2         0.00 
&k                         -             -
~k                         2         0.00 
++k                        4         4.30 
k++                        3         6.47 
!k                        10         7.55 
-k                         2         0.00 
j * k                      3        32.9  
j / k                      4        40.2  
j % k                      4        40.2  
j + k                      3         3.78 
j - k                      3         3.78 
j << k                     5        19.9  
j >> k                     5        19.9  
j <= k                    12        12.2  
j != k                    12        12.4  
j && k                    16         9.96 
j || k                    16         9.96 
j & k                      3         3.78 
j | k                      3         3.78 
j ^ k                      3         3.78 
i ? j : k                 11        11.1  
j = k                      6        10.2  
###lauto.avg
s.m                        0         0.00 
p->m                       3         3.76 
a[k]                       7         7.53 
(double)k                 11       179.   
(long)k                    0         0.00 
(int)k                     0         0.00 
(char)k                    2         0.00 
&k                         0         0.00 
~k                         7         7.53 
!k                        12        12.4  
-k                        10        11.1  
j * k                     12       153.   
j / k                     12       623.   
j % k                     12       623.   
j + k                      9        14.4  
j - k                      9        14.4  
j & k                      9        14.4  
j | k                      9        14.5  
j ^ k                      9        14.5  
    Average of other samples       47.3  
###lauto.out
Code sample             Size   Time (usec)
s.m                        0         0.00 
p->m                       3         3.76 
a[k]                       7         7.53 
(double)k                 11       179.   
(long)k                    0         0.00 
(int)k                     0         0.00 
(char)k                    2         0.00 
&k                         0         0.00 
~k                         7         7.53 
++k                       15        19.2  
k++                       11        19.9  
!k                        12        12.4  
-k                        10        11.1  
j * k                     12       153.   
j / k                     12       623.   
j % k                     12       623.   
j + k                      9        14.4  
j - k                      9        14.4  
j << k                    16       136.   
j >> k                    16       136.   
j <= k                    21        61.4  
j != k                    20        23.7  
j && k                    20        18.2  
j || k                    20        18.2  
j & k                      9        14.4  
j | k                      9        14.5  
j ^ k                      9        14.5  
i ? j : k                 19        20.6  
j = k                     12        19.9  
###loops1.out
Code sample             Size   Time (usec)
up to 10                  14       214.   
down toward zero          14       214.   
LOOPDOWN                  16       206.   
###loops2.out
Code sample             Size   Time (usec)
register up to 10         14       214.   
register toward zero      14       214.   
register LOOPDOWN         16       206.   
###mathlib.out
Code sample             Size   Time (usec)
atan(x)                   23     47300.   
cos(x)                    23     49300.   
exp(x)                    23     36700.   
log(x)                    23      9090.   
log10(x)                  23     12200.   
pow(x, y)                 39     44000.   
sin(x)                    23     40200.   
sqrt(x)                   23     21800.   
###optimtst.out
Code sample             Size   Time (usec)
Const folding #1           5         5.68 
Const folding #2           5         5.66 
Const fold + prop #1      14         5.67 
Const fold + prop #2      10         5.69 
Adding 0 #1                6        10.2  
Adding 0 #2                6        10.2  
Adding 1 #1                3         6.44 
Adding 1 #2                4         7.17 
Mult by 0 #1              10        40.3  
Mult by 0 #2               5         5.66 
Mult by 1 #1               6        10.2  
Mult by 1 #2               6        10.2  
Mult by power 2 #1        10        16.3  
Mult by power 2 #2        10        16.4  
Div by power 2 #1          3         6.42 
Div by power 2 #2          3         6.44 
Commute & rearr #1        19        23.8  
Commute & rearr #2        14        18.8  
Assigning 0 #1             5         5.68 
Assigning 0 #2             5         5.66 
Test against 0 #1         13         5.17 
Test against 0 #2         12         5.18 
Post-inc by 1 #1           3         6.44 
Post-inc by 1 #2           4         7.17 
Pre-inc by 1 #1            3         6.44 
Pre-inc by 1 #2            4         7.19 
Post-inc by >1 #1          5         7.45 
Post-inc by >1 #2          4         7.17 
Pre-inc by >1 #1           5         7.46 
Pre-inc by >1 #2           4         7.19 
Const subscript #1         6        10.2  
Const subscript #2        13        19.0  
Jmp to jmp elim #1        53        26.5  
Jmp to jmp elim #2        59         5.72 
Const test elim #1         9        41.5  
Const test elim #2         9        41.5  
Dead code elim #1         30        80.6  
Dead code elim #2         15        80.8  
CSE elim #1               29        43.4  
CSE elim #1               18        43.1  
Common tail elim #1       49        86.7  
Common tail elim #2       41        47.8  
Code Hoisting #1          49        86.9  
Code Hoisting #2          41        41.9  
Combine mult-plus #1      11        14.3  
Combine mult-plus #2       8        11.3  
Combine indr-plus #1      35       624.   
Combine indr-plus #2      35       622.   
if (i)                    25        15.2  
if (!i)                   25        15.2  
if (i != 0)               25        15.2  
if (i == 0)               25        15.2  
###parms.dat
Code sample             Size   Time (usec)
no asst                   48        20.1  
reg asst                  54        30.3  
dbl asst                  60        54.0  
###sauto.avg
s.m                        0         0.00 
p->m                       3         3.78 
(double)k                  8       162.   
(int)k                     0         0.00 
(char)k                    2         0.00 
&k                         0         0.00 
~k                         2         0.00 
-k                         2         0.00 
j / k                      4        40.2  
j % k                      4        40.2  
j + k                      3         3.76 
j - k                      3         3.76 
j & k                      3         3.78 
j | k                      3         3.76 
j ^ k                      3         3.76 
    Average of other samples       12.2  
###sauto.out
Code sample             Size   Time (usec)
s.m                        0         0.00 
p->m                       3         3.78 
a[k]                       7         7.55 
(double)k                  8       162.   
(long)k                    7         6.04 
(int)k                     0         0.00 
(char)k                    2         0.00 
&k                         0         0.00 
~k                         2         0.00 
++k                        4         4.32 
k++                        3         6.47 
!k                        10         7.55 
-k                         2         0.00 
j * k                      3        33.1  
j / k                      4        40.2  
j % k                      4        40.2  
j + k                      3         3.76 
j - k                      3         3.76 
j << k                     5        19.9  
j >> k                     5        19.9  
j <= k                    12        12.0  
j != k                    12        12.4  
j && k                    16         9.96 
j || k                    16         9.96 
j & k                      3         3.78 
j | k                      3         3.76 
j ^ k                      3         3.76 
i ? j : k                 11        11.1  
j = k                      6        10.2  
###space.tbl
s.m                            0          -          0          -          - 
p->m                           3          -          3          -          - 
a[k]                           7          9          7          -          - 
(double)k                      8         10         11          0         11 
(long)k                        7          9          0         12          6 
(int)k                         0          2          0         12          6 
(char)k                        2          2          2         14          8 
&k                             0          0          0          0          0 
~k                             2          4          7          -          - 
++k                            4          8         15         33         30 
k++                            3         14         11          -          - 
!k                            10         10         12         29         27 
-k                             2          4         10         17         14 
j * k                          3         17         12         21         39 
j / k                          4         18         12         21         39 
j % k                          4         18         12          -          - 
j + k                          3          9          9         21         39 
j - k                          3          9          9         21         39 
j << k                         5         11         16          -          - 
j >> k                         5         11         16          -          - 
j <= k                        12         18         21         33         51 
j != k                        12         18         20         33         51 
j && k                        16         16         20         46         38 
j || k                        16         16         20         46         38 
j & k                          3          9          9          -          - 
j | k                          3          9          9          -          - 
j ^ k                          3          9          9          -          - 
i ? j : k                     11         13         19         31         29 
j = k                          6          6         12         12         12 
###sstat.avg
s.m                        0         0.00 
(double)k                  8       162.   
(int)k                     0         0.00 
(char)k                    2         0.00 
&k                         0         0.00 
~k                         2         0.00 
-k                         2         0.00 
j * k                      4        33.3  
j / k                      5        40.3  
j % k                      5        40.3  
    Average of other samples        8.87 
###sstat.out
Code sample             Size   Time (usec)
s.m                        0         0.00 
p->m                       4         5.03 
a[k]                       8         8.24 
(double)k                  8       162.   
(long)k                    7         6.05 
(int)k                     0         0.00 
(char)k                    2         0.00 
&k                         0         0.00 
~k                         2         0.00 
++k                        4         3.78 
k++                        4         6.71 
!k                        11         8.39 
-k                         2         0.00 
j * k                      4        33.3  
j / k                      5        40.3  
j % k                      5        40.3  
j + k                      4         4.63 
j - k                      4         4.63 
j << k                     6        19.9  
j >> k                     6        19.9  
j <= k                    13        12.4  
j != k                    13        13.1  
j && k                    18        10.6  
j || k                    18        10.6  
j & k                      4         4.65 
j | k                      4         4.63 
j ^ k                      4         4.63 
i ? j : k                 12        12.4  
j = k                      6         8.30 
###stdiolib.out
Code sample             Size   Time (usec)
fopen, fclose             22   2020000.   
fgetc                     35       239.   
fgets-100chars            44     11200.   
fprintf-%d                16      9760.   
fprintf-%d %d             17     25200.   
fputc                     12       560.   
fputs-100 chars           12     34700.   
fread-100chars            49     31500.   
fread-BUFSIZ chars        49    142000.   
fscanf-1 int              45      2010.   
fscanf-2 ints             46      3820.   
fseek, fgetc              43    116000.   
fwrite-100 chars          20     38700.   
fwrite-BUFSIZ chars       20    226000.   
sprintf-1 int             17      7590.   
sprintf-2 ints            18     15100.   
sscanf-1 int              17      1820.   
sscanf-2 ints             18      3740.   
###stdlib.out
Code sample             Size   Time (usec)
atof("12345")              9      6780.   
atoi("500")                9       557.   
atol("32123")              9      1400.   
p = calloc(2, 2), fr      19      2350.   
p = malloc(2), free(      18      2200.   
rand()                     3       239.   
###strlib.out
Code sample             Size   Time (usec)
strcat-0 chars            13       165.   
strcat-100 chars          17      3860.   
strchr-0 chars            13       110.   
strchr-100 chars          13      4480.   
strcmp-0 chars            10        67.5  
strcmp-100 chars          10      5360.   
strcpy-0 chars            13        86.6  
strcpy-100 chars          13      3790.   
strlen-0 chars             9        62.6  
strlen-100 chars           9      3190.   
strncat-0 chars           17       187.   
strncat-100 chars         21      5580.   
strncmp-0 chars           14       109.   
strncmp-100 chars         14      8020.   
strncpy-0 chars           17       112.   
strncpy-100 chars         17      5920.   
###switch.out
Code sample             Size   Time (usec)
switch1 (1)               29        24.2  
switch1 (10)              29        18.8  
switch1 (100)             29        15.2  
switch2 (1)              484        33.9  
switch2 (2)              484        33.9  
switch2 (101)            484        35.0  
###time.tbl
s.m                        0.00           -      0.00           -          - 
p->m                       3.78           -      3.76           -          - 
a[k]                       7.55       8.61       7.53           -          - 
(double)k                162.       163.       179.         0.00     360.    
(long)k                    6.04       7.53       0.00     351.       716.    
(int)k                     0.00       0.00       0.00     179.       540.    
(char)k                    0.00       0.00       0.00     178.       543.    
&k                         0.00       0.00       0.00       0.00       0.00  
~k                         0.00       1.25       7.53           -          - 
++k                        4.32       6.02      19.2      805.      1920.    
k++                        6.47      14.9       19.9            -          - 
!k                         7.55       6.02      12.4      141.       112.    
-k                         0.00       1.25      11.1       27.6      380.    
j * k                     33.1       46.3      153.      2670.      3400.    
j / k                     40.2       53.9      623.      4190.      4920.    
j % k                     40.2       53.8      623.             -          - 
j + k                      3.76       7.53      14.4      717.      1530.    
j - k                      3.76       7.53      14.4      637.      1420.    
j << k                    19.9       22.2      136.             -          - 
j >> k                    19.9       22.2      136.             -          - 
j <= k                    12.0       14.8       61.4      295.      1120.    
j != k                    12.4       16.1       23.7      219.      1050.    
j && k                     9.96       8.49      18.2      242.       196.    
j || k                     9.96       8.49      18.2      242.       196.    
j & k                      3.78       7.54      14.4            -          - 
j | k                      3.76       7.53      14.5            -          - 
j ^ k                      3.76       7.53      14.5            -          - 
i ? j : k                 11.1       12.4       20.6       37.6      375.    
j = k                     10.2        7.17      19.9       33.9       19.9   
###uinc.grp

Group 1:  avg=4.003  tmin=3.76  tmax=4.32 
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=6.323  tmin=6.04  tmax=6.47 
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=20.53   tmin=19.2   tmax=21.2  
	e   l                 
	s   l                 
	a   l                 

Group 4:  avg=757.0    tmin=757.    tmax=757.   
	a   d                 
	s   d                 
	e   d                 

Group 5:  avg=1873.     tmin=1860.    tmax=1890.   
	a   f                 
	s   f                 
	e   f                 
###uinc.out
Code sample             Size   Time (usec)
a   f                     30      1860.   
a   d                     33       757.   
s   f                     32      1890.   
s   d                     37       757.   
e   f                     32      1870.   
e   d                     37       757.   
e   c                      8         6.47 
e   s                      4         3.78 
e   l                     17        21.2  
e u s                      4         3.76 
s   c                      8         6.46 
s   s                      4         3.76 
s   l                     17        21.2  
s u s                      4         3.76 
a   c                      8         6.04 
a   s                      4         4.32 
a   l                     15        19.2  
a u s                      4         4.32 
r   i                      4         4.32 
###uneg.grp

Group 1:  avg=0.000  tmin=0.00  tmax=0.00 
	e   s                 

Group 2:  avg=0.000  tmin=0.00  tmax=0.00 
	e u s                 

Group 3:  avg=0.000  tmin=0.00  tmax=0.00 
	s   s                 

Group 4:  avg=0.000  tmin=0.00  tmax=0.00 
	s u s                 

Group 5:  avg=0.000  tmin=0.00  tmax=0.00 
	a   s                 

Group 6:  avg=0.000  tmin=0.00  tmax=0.00 
	a u s                 

Group 7:  avg=0.000  tmin=0.00  tmax=0.00 
	r   i                 

Group 8:  avg=1.257  tmin=1.25  tmax=1.27 
	e   c                 
	s   c                 
	a   c                 

Group 9:  avg=12.03   tmin=11.3   tmax=12.4  
	e   l                 
	s   l                 
	a   l                 

Group 10:  avg=29.30   tmin=27.6   tmax=30.2  
	a   d                 
	s   d                 
	e   d                 

Group 11:  avg=380.7    tmin=380.    tmax=381.   
	a   f                 
	s   f                 
	e   f                 
###uneg.out
Code sample             Size   Time (usec)
a   f                     14       381.   
a   d                     17        27.6  
s   f                     15       380.   
s   d                     19        30.2  
e   f                     15       381.   
e   d                     19        30.1  
e   c                      4         1.25 
e   s                      2         0.00 
e   l                     11        12.4  
e u s                      2         0.00 
s   c                      4         1.27 
s   s                      2         0.00 
s   l                     11        12.4  
s u s                      2         0.00 
a   c                      4         1.25 
a   s                      2         0.00 
a   l                     10        11.3  
a u s                      2         0.00 
r   i                      2         0.00 
###upin.grp

Group 1:  avg=6.607  tmin=6.47  tmax=6.71 
	e   s                 
	e u s                 
	s   s                 
	s u s                 
	a   s                 
	a u s                 
	r   i                 

Group 2:  avg=14.83   tmin=14.8   tmax=14.9  
	e   c                 
	s   c                 
	a   c                 

Group 3:  avg=21.70   tmin=19.9   tmax=22.6  
	e   l                 
	s   l                 
	a   l                 
###upin.out
Code sample             Size   Time (usec)
e   c                     14        14.8  
e   s                      4         6.71 
e   l                     14        22.6  
e u s                      4         6.71 
s   c                     14        14.8  
s   s                      4         6.71 
s   l                     14        22.6  
s u s                      4         6.71 
a   c                     14        14.9  
a   s                      3         6.47 
a   l                     11        19.9  
a u s                      3         6.47 
r   i                      3         6.47 
###EOF
