/************************************************************************/
/*				Util.doc				*/
/************************************************************************/

/************************************************************************/
/*				History 				*/
/*									*/
/*  84Dec09  HAW Expand changed.					*/
/*  84Jun29  HAW Ctdlchng detailed.					*/
/*  84Jun28  HAW Expand detailed.					*/
/*  84Jun27  HAW Recover1 detailed.					*/
/*  84Jun26  HAW Clray detailed.					*/
/*  84Jun26  HAW Created. Clog detailed.				*/
/************************************************************************/

/************************************************************************/
/*				Audience				*/
/*									*/
/*  Sysop and other troll-like folk.					*/
/************************************************************************/

/************************************************************************/
/*				Purpose 				*/
/*									*/
/*  Let the poor unfortunates be even more confused over what's 	*/
/*  available.								*/
/************************************************************************/

/************************************************************************/
/*				Contents				*/
/*									*/
/*	Introduction		Intro to this doc.			*/
/*	Clog.com		Description of Clog.			*/
/*	Clray.com		Description of Clray.			*/
/*	Recover1.com		Description of Recover1.		*/
/*	Expand.com		Description of Expand.			*/
/*	Ctdlchng.com		Description of Ctdlchng.		*/
/************************************************************************/

/************************************************************************/
/*				Introduction				*/
/************************************************************************/

   Since the days of yore when we received Citadel from CUG (C User's Group),
several utilities of interest have been added to the package to supplement
the original two .com files that came with the package, to wit CITADEL.COM
and CONFIGUR.COM.  These come in two types: one, to provide information about
what's going on inside this monster which, due to runtime space considerations,
could not be gotten at; two, the ability to change certain parameters which were
either impossible to change once a BBS was set up, or were, at the least,
difficult to change.
   The descriptions (such as they are) follow herein!

/************************************************************************/
/*				Clog.com				*/
/************************************************************************/

   Clog provides access to the userlog for the Sysop.  To use it, the file
CTDLTABL.SYS (the one generated by CONFIGUR and maintained by CITADEL.COM)
must be on the default disk, and so must be CTDLLOG.SYS.

   There are two ways of using Clog.  First, there is the simple call:

	D>CLOG

This will print out on the console the list of users in the file as they
appear in the file.  The user of this program should be warned that Citadel
does not put new users into the userlog in sequential order.  Instead, they
are hashed into the log.  Usually, first user to log into the system ends
up occupying the last position in the file!  In general, users are sprinkled
everywhere, so don't be alarmed if nothing shows up right away.  Be patient.

   In any case, the list is printed out as follows.  First, the log position
will be printed out, which will always be in sequential order.	If nobody
occupies that position, then Clog proceeds to the next log position.  If
somebody does occupy that position, then the name of that person (or alias)
will be printed out, followed by his/her status as aide, expert/non-expert, and
screen width.

   The second way to use Clog is to give it arguments.	There are two arguments
currently available.  The first is "-D", as in

      D>CLOG -D

   The -D argument will cause a file to be made concurrently with the printout
on the screen; the printout will be a identical image of what you see on the
screen.  The file's name will be CTDLLOG.LST, and will automatically wipe out
any other files of the same name on disk.  Incidentally, the file is written
to the default disk, not the HOMEDISK.

   The second argument is "-P".  This will cause the passwords to be listed
along with the user's name.  This is useful if somebody forgets their password.

   The two arguments may both be present, in either order.  Illegal arguments
will be ignored.

/************************************************************************/
/*				Clray.com				*/
/************************************************************************/

   Clray.com is another program used to view the userlog.  As before,
CTDLTABL.SYS must be on the default disk in the default user area, as must
CTDLLOG.SYS.  There are currently no arguments for Clray.

   Clray's purpose is to allow the sysop to see what order the users have been
calling in, starting with the last caller.  Along with the users name, his/her
aide status, column width, and expert status will be printed, as in Clog.

   Simply call Clray to run it.

/************************************************************************/
/*				Recover1.com				*/
/************************************************************************/

   Occassionally, a room may be killed by accident by an aide.	Or worse, a
Village Idiot will break an aide's password, and then kill rooms which the
Sysop thinks has socially redeeming value.  It is at this point that Recover1
may be of use.

   Recover1 may only be used if the following applies -- rooms have been killed,
but no rooms have been created.  If a room(s) has been created, it may have
overwritten the old data. Rooms which weren't overwritten can still be saved of
course.  If new rooms have been created, Recover2.com should be used. If
Recover2.com is not detailed in this doc, then it doesn't exist and don't go
looking frantically for it.

   To use Recover1, CTDLTABL.SYS must be on the default disk and user area.
CTDLROOM.SYS must be on HOMEDISK and HOMEUSER.	Simply call Recover1.  It
will read in CTDLTABL.SYS.  Then it will start looking at the rooms as found
in CTDLTABL.SYS.  When it finds evidence that a room has been killed, it
will printout on the screen the name of the room, and ask the Sysop if s/he
wants Recover1 to try to save the room.  If it receives an upper or lower
case Y, then it will do so.  Currently, there is no reason known why it
shouldn't succeed.

   When finished it will announce so and replace CTDLTABL.SYS with the
updated version, and then leave.  However, hopefully you'll never need this
program.

/************************************************************************/
/*				Expand.com				*/
/************************************************************************/

   Expand's purpose in life is to allow the sysop to expand the size of his/her
message file (CTDLMSG.SYS).  This makes it easy to move upwards as one gets rich
running Citadel for cold, hard cash and acquires better and better equipment.

   Expand expects to find the file CTDLTABL.SYS on the default disk in the
default user area and the CTDLMSG.SYS file on MSGDISK.	Simply call Expand
without arguments.  Once it has loaded CTDLTABL.SYS, it will display the
current size of the message file, and then ask
for the new size.  Answer in Kbytes, in decimal (unlike CTDLCNFG.SYS --
remember when changing CTDLCNFG.SYS to accomodate the new message size to
change the number back to hex).  Now Expand will do it's job.  THIS IS A
SLOW PROCESS.  Be patient.  The program will be printing some stuff out
that might allow the sysop to figure out where the program is.

   Once the program is done, it will say so, and will also tell you that
there is no reason to reconfigure.  This is true.

   IF you are changing the value of MSGDISK, which would usually merit a
reconfigure (groan), please see the section of this doc covering the
program called Ctdlchng.com.  This should be of help to you.

/************************************************************************/
/*				Ctdlchng.com				*/
/************************************************************************/

   The purpose of Ctdlchng.com is to allow the sysop to change certain of
the parameters present in CTDLCNFG.SYS to a different value without going
thru the entire reconfiguration process one more time.	Ctdlchng expects to
find CTDLTABL.SYS on the default disk and user area.

   To use this program, ctdlchng may be called with 0 or more arguments.  If
it is called with 0 arguments, the program prints on the sysop's console an
explanation of Ctdlchng's purpose and it's argument usage and returns the
sysop to CP/M.	If 1 or more arguments are present, then each argument is
processed.  Each argument on the command line should be separated by a space.

   The user of this program will note that in the following list of supported
arguments, all derive straight from CTDLCNFG.SYS parameters.

   There are two types of arguments possible, one to change a "boolean" value,
and one to change a "numerical" value.

   To change a boolean value, merely type its name as an argument to Ctdlchng.
The value of that boolean will then be "flipped" to its opposite value.  The
list of boolean arguments supported is as follows:

ROOMOK	      -- Is it ok for ordinary folk to create rooms?
ENTEROK       -- Is it ok for unlogged folk to enter messages?
READOK	      -- Is it ok for unlogged folk to read messages?
LOGINOK       -- Can unlogged people make their own logins? (Is system private?)
RCPM	      -- Is system RCP/M? (Huh?)
CLOCK	      -- Does system have a clock?
ALLMAIL       -- Can everybody send mail, or only aides?

   So, if the sysop had originally configured with ALLMAIL set to 0, i.e., s/he
didn't want ordinary users to have access to the mail, and now has decided to
allow all access to the mail, the sysop would type

   A>d:ctdlchng allmail

and the value would be flipped.  More than one of the above could be entered on
the command line.

   To change a numerical value, the sysop types the name of the numerical
variable, followed immediately by an '=x', where x is an integer.  NOTE THAT
X MUST BE A DECIMAL NUMBER, UNLIKE THE CTDLCNFG.SYS FILE!!!!  Also note that
when changing CTDLCNFG.SYS, remember to convert back to hex.  Yah, it's a pain
in the neck.  The reason CTDLCNFG.SYS must be changed is that the next time
Citadel crashes (whether it be a software or hardware crash), you don't want
to reconfigure with the old values still present.  ALSO, THERE CAN BE NO SPACES
BETWEEN THE VARIABLE NAME, THE EQUAL SIGN, AND THE INTEGER, OR CTDLCHNG.SYS
WILL BE HORRIBLY, HORRIBLY CONFUSED.  The list of supported numerical values
is as follows:

MSGDISK       -- Disk the message disk is on (A:=0, B:=1, ...).
HOMEUSER      -- User area where all other support and data files are kept.
HOMEDISK      -- Disk where all other support and data files are kept.
MEGAHZ	      -- CPU speed.  For timing loops.
MDATA	      -- Modem data port.

   So, to change the megahertz your computer is running at, type

   A>d:ctdlchng MEGAHZ=4

   or whatever the new speed of the machine is.

   Numerical and boolean variable changes may be mixed as the sysop pleases.
o note that
when changing CTDLCNFG.SYS, remember to convert back to hex.  Yah, i