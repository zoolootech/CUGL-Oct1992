        This  is  a  historical note on the QED-like editor written by
Scott  Fluhrer.  This  editor  is based upon the editor commonly found
with  UNIX systems and is also similar to the editor in SOFTWARE TOOLs
by  Kernighan  and  Plauger.  It was written from scratch (literally -
scratch  paper)  by  Scott as a personal favor. Scott being a nice guy
and  an  admirer of 'C' subsequently agreed to the distribution of his
editor  along  with the BDS C compiler (they go well together) for the
benefit  of  all  hobbyists. Scott wrote his editor over the course of
eight  (count  'em 8) evenings (Thursdays, he doesnt have classes till
noon  the next day) (evening=~9pm till 3 or 4 am) on a Televideo or an
Intertube  hooked  up  to  Micromation Z-64 and Doubler and Shugart or
Siemens  disc  drives (8" 484k/side) (using whichever of the 2 systems
which was healthier at the time). 
        Enough  reminiscing.  Now  about that editor. Lines are stored
in  structures  called  memories  containing 512 bytes apiece. Parcels
are  little  packets  of  a  pointer  to  a memory and a starting line
number  and  a  character  count.  Parcels refer either to a memory in
memory  or  to  a  memory  in a temp file. Logically adjacent memories
that  are  each only partially full are combined where possible and if
a  memory  gets  too  big it is split into two. In this version of the
editor  there  are  37 memories (64k version) so the biggest in-memory
file  is  roughly  18k  or  so.  Since there are 200 parcels, files as
large  as  100k  can be edited. If you really want to go overboard use
2000  parcels  so  you  can  edit  1  meg  files.  (parcels are small;
memories  are  big)  (cpm  1.4 wont let you). To fit the editor onto a
smaller  machine  you  could decrease the memory size (from 512 to 256
or  so)  or  you could decrease the number of in-memory memories or do
both. 
        To  use  just  say  "edit  name"  or  "edit". Once you get the
sign-on  message  you  could use the r command to read a file "r file"
or  the  w  to  write  a  file  "w  file"  or "w" to write to the file
previously  named.  Use  "a" to append ( a dot '. ' all by itself on a
line  is  the  signal  to  stop (no funny ctl-Z's here)). A "1,$" will
show you everything; to get help type "h". 
        Speed-------------------------------------  This editor is not
blinding  but  it  is extremely versatile!!! Speed note: when compiled
with  -e  6300  the  search g/... .... .../p on edit.inc took 1 minute
and  20  seconds  on  95  lines  when compiled with -o -e6300 the same
search  g/... .... .../P  took  only 55 seconds. Moral: use -o in this
case. 
        If  someone  really  needs it I will write a tutorial on using
this  editor  but  not right now as I am recovering from MONO. Besides
theres  too  much  to explain all at once (I havent explained anything
yet!) 

                                                happy editing n.s. 

P.S. 
        Kathy  has  kindly written a help file (tutorial) for use with
scotts editor so either type "help" or read software tools or both. 

pps 
        the  function  "ubgetc"  is just like getc except that it only
buffers up one sectors worth (simple modification of library routine) 
tion  "ubgetc"  is just like getc except