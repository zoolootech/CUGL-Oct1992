
==============================================================================
CUG101 -
-----------

CUG101.01-HSTONE.C By Terry Hayes, Clark Baker, Leor Zolman, Steve
Ward. "Stone"- H19 Version. Heath/Zenith version of stone a wari for
tty type terminals. ->STONE.C. [CP/M:BDS] Developed under BDS v. 1.41.

CUG101.02-FLYBY.C By Leor Zolman. Freak out for H19 terminals. Another
graphic demo for Heath/Zenith. [CP/M:BDS] Developed under BDS v. 1.41.

CUG101.03-XWORD.C By David M. Fogg. Crossword: Z-19 version. Crossword
puzzle game for H19/Z19. [CP/M:BDS] Written under BDS v. 1.41.

CUG101.04-STD.H By David M. Fogg. "Modified header for Fogg". The BDS
C standard l/O header file. [CP/M:]

CUG101.05-NLIFE.C By Steve Ward. Nlife. New H89/Z89 version of LIFE.
Uses H19 Graphics, 25th line to give a 50 by 80 field. ->LIFE, ALIFE.
[CP/M:BDS] Requires ALlFE.ASM, ALlFE.CRL, and LIFE.DAT. Written under
BDS v. 1.41.

CUG101.06-IQUIZ.C By Dave Fogg. LQUIZ: BDS conversion. Question and
answer game for heath/Zenith. [CP/M:BDS] Developed under BDS v. 1.41.

CUG101.07-RALLY.MAP By Steve Ward. Rally Game. Data for Rally. [CP/M:]

CUG101.08-R2.MAP By Steve Ward. Road Map Data. [CP/M:]

CUG101.09-LIFE.C By Leor Zolman. Life. Life for non-Heath/Zenith
terminals. ->NLIFE, ALIFE. [CP/M :BDS] Developed under BDS v. 1.41.

CUG101.10-TTT.C By Leor Zolman. Tic Tic Toe game. [CP/M:BDS] Written
under BDS v. 1.41.

CUG101.11-RALLY.C By Steve Ward. H19 Rally Game. Road game for H19/Z19
[CP/M:BDS] Works only on HeathKit/Zenith/H19/Z19 terminal or H89
Computer Written under BDS v. 1.41.

CUG101.12-HISTORY.CG3 By Robert Ward. HISTORY. Gives credit for the
files on the volume.

CUG101.13-MM.C By Stephen A. Ward, Leor Zolman. Mastermind Game. A
game of Mastermind. [CP/M:BDS] Written under BDS v. 1.41.

CUG101.14-CATALOG.CG3 VOLUME CG3. Contents of CP/M volume Games I.
[CP/M:]

CUG101.15-NLIFE.HLP By Steve Ward. Documentation for NLIFE. [CP/M:]

CUG101.16-JOTTO.C By David M. Fogg. JOTTO converted from PASCAL. word
game for Heath/Zenith. [CP/M:BDS] Developed under BDS v. 1.41.

CUG101.17- YAHTZEE.HLP By Steve Ward. H89 Yahtzee:game of dice.
documentation of help for YAHTZEE.C. [CP/M:]

CUG101.18-LIFE.DAT By Leor Zolman. NLIFE-date. Library of screen
images for NLIFE. [CP/M:]

CUG101.19-LINES.C By Leor Zolman. "Lines". A visual demo for
Heath/Zenith. [CP/M:BDS] Requires a 64 by 16 memory mapped video
board. Written under BDS v.1.41.

CUG101.20-STONE.C By rerry Hayes, Clark Baker, Leor Zolman. Stone.
Wari for tty type terminal. [CP/M:BDS] written under BCS v. 1.41.

CUG101.21-IQUIZ.DAT By Dave Fogg. Data for program question file.
->IQUIZ.C. [CP/M:]

CUG101.22-PRESSUP.C By Steve Ward. Press-up Game. A peg game [CP/M:]
Requires terminals with lower case characters.

CUG101.23-JOTTO.WDS By Dave Fogg. A word 1 list for Jotto ->JOTTO.C.
[CP/M:]

CUG101.24-TV.ANS Data for XWORD. [CP/M:]

CUG101.25-HARD1.ANS More for IQUIZ-a question and answer game.
->IQUIZ.C. [CP/M:]

CUG101.26-EZ1.ANS EZI. More for IQUIZ- 2 question and answer game,
cossword/ clues. ->IQUIZ.C. [CP/M:]

CUG101.27-XPERT1.ANS Data For XWORD. [CP/M ]

CUG101.28-MED1.ANS Part of IQUIZ.->IQUIZ.C. [CP/M:]

CUG101.29-YAHTZEE.C By Steve Ward. Yahtzee Dice Game. Classic
die/poker game. [CP/M:BDS] written under BDS v.1.41.

CUG101.30-BUGS.C By Steve Ward. "Bugs". More for Heath/Zenith. Leor
says - This one is weird. Video demonstration program for
Heath/Zenith. [CP/M:BDS] Developed under BDS v. 1.41.

CUG101.31-EUCLID.C By H. Moran. Euclid. Knuth algorithm for finding
greatest common denominator of two integers. [CP/M:] Developed under
BDS v. 141.

CUG101.32-DMF.C By David M. Fogg. DMF.C:BDS library functions. Library
for David Fogg Games. [CP/M:] Developed under BDS v. 1.41.

CUG101.33-ALIFE.CRL

CUG101.34-POLISH.C By H. Moran. "Polish". Reverse Palish notation
demonstration. Excellent example of stack implementation. [CP/M:]
Written under BDS v. 1.41.

CUG101.35-SUBMIT.DSK

CUG101.36-FALLOUT.C By Leor Zolman. Fallout for H19. According to
Leor- a logical extension of FLYBY. ->FLYBY.C. [CP/M:] Developed under
BDS v. 1.41.

CUG101.37-ALIFE.ASM By Steve Ward. Assembly For Z80 LIFE Game. New
version of LIFE. ->NLIFE LIFE [CP/M:BDS] Z80 only assembly code,
Developed under BDS v. 1.41.

CUG101.38-HEADERS

==============================================================================
CUG102 -
-----------

CUG102.01-PPONG.C By Robert H. Halstead. Polish Pong Game. A variation
of ping pong, for H19/H89. [CP/M:BDS] Written under BDS v. 1.41.

CUG102.02-PACMAN.REC By Dave Nixon. Part of Pacman package. [CP/M:]

CUG102.03- PACSCORE.C By Dave Nixon. Gets the score file for PACMAN
package- scoring for the CP/M PACMAN. ->PACMAN [CP/M:BDS] Written
under BDS v 1.41.

CUG102.04-PACUTILS.C By Dave Nixon. Pacutils.c. Another utility for
the pacman packaqe. ->Pacman. [CP/M:BDS] written under BDS v. 1.41.

CUG102.05-PACUTIL.C By Dave Nixon. Pacutil.c. A pacman utility, part
of pacman package. [CP/M BDS] Written under BDS v. 1.41.

CUG102.06-STONE.C By Terry Hayes, Clark Baker. "Stone"--H19 Version.
This is also known as Awari game- update from Games 1. [CP/M:BDS]
Written under BDS v. 1.41.

CUG102.07-BUGS.C By Steve Ward. "Bugs". Update from Games I, for
H19/H89 display terminal. [CP/M:BDS] written under 1.41 version BDS.

CUG102.08-CASIO.C By Steve Ward. A Casio watch game. [CP/M:BDS]
written under 1.41 BDS version.

CUG102.09-YAHTZEE.C By Steve Ward. Yahtzee Dice Game. a poker/dice
game. ->YAHTZEE.HLP. [CP/M:BDS] Written under BDS v. 1.41.

CUG102.10-NLIFE.C By Steve Ward. Nlife. Another LIFE simulator which
uses His graphics. [CP/M:BDS] Written under BDS v. 1.41.

CUG102.11-FISH.C By Leor Zolman. Go Fish. An exciting game of Go Fish.
[CP/M:BDS] Written under BDS v. 1.41.

CUG102.12-FALLOUT.C v 1.2 By Leor Zolman. Fallout for the H19. Logical
extent ion of FLYBY.C also an update from Games I. ->FLYBY.C.
[CP/M:BDS] Written under BDS v. 1.41.

CUG102.13-HANGMAN.C By Leor Zolman. The Same of Hangman. A game of
hangman -- the dictionary is a sample text file of words and/or
phrases -- one word or phrase per line. [CP/M:BDS] Written under BDS
v. 1.41.

CUG102.14-CASIO.REC

CUG102.15-YAHTZEE.HLP By Steve Ward. H89 Yahtzee: game of dice.
Helpful documentation of the rules for Yahtzee. ->YAHTZEE.C. [CP/M:]

CUG102.16-RALLY.C By Stev Ward. H19 Rally Game. Update o Rally from
Games I for the H19 [CP/M:BDS] works only for Heath/Zenith/H19/Z19
terminal or H89 computer. Written under BDS v. 1.41.

CUG102.17-WAVY.C By Leor Zolman. Wavy lines for the H19... Configured
for H19 terminal--wavy lines. [CP/M:BDS] Written under BDS v. 1.41.

CUG102.18-PACMAN.C By Dave Nixon. Pacman Fever. Pacman a game which
should be popular (it is). [CP/M:BDS] Written under BDS v. 1.41.

CUG102.19-WUMPUS.C By Leor Zolman. Wumpus. Program was borrowed from
PCC vol 2 no 1.A game of Wumpus. [CP/M:BDS] Written under BDS v. 1.41.

CUG102.20-OTHELLO.C By Bert Halsted. Game of Dramatic Reversals. A
game where two players place their pieces on a 8 by 8 board. If the
piece gets surrounded by the others pieces it becomes the other
players. [CP/M:BDS] Written under BDS v. 1.41.

CUG102.21-PACMONST.C By Dave Nixon. A unique game. [CP/M:]

CUG102.22-BG.C By Leor Zolman. Backgammon. A good and fun game of
backgammon. [CP/M :BDS] Written under BDS v. 1.41.

CUG102.23-NLIFEA.CRL

CUG102.24-NLIFE.DAT v 1.2 Update from Games I, for H19/H89 Data for
NLIFE.C. ->NLIFE.C. [CP/M:]

CUG102.25-PACDEFS.H By Dave Nixon. Part of Packman program
definitions. [CP/M:]

CUG102.26-RALLY.MAP By Steve Ward. Rally Game. An update from Games I,
more information for Rally. [CP/M:]

CUG102.27-SUBMIT.DSK

CUG102.28-CATALOG.021

==============================================================================
CUG103 -
-----------

CUG103.01-EDIT.COM

CUG103.02-NDIO.C New Package for BDS C. Directed I/O package for use
with BDS C v. 1.4x. New -allegedly more flexible, version of the
directed l/O package normally included with BDS C. [CP/M:BDS] Written
under BDS v. 1.4-1.43a. This file required if edit files are to be
recompiled.

CUG103.03-EDIT.DOC By Kathy Bacon. Documentation of Editor. A help
tile for Scott's Q.E.D. editor in BDS. ->EDIT.HLP. [CP/M:]

CUG103.04-UNPACK.C C source for UNPACK.COM. [CP/M:BDS] Written under
BDS v. 1.4-1.43a.

CUG103.05-ROFF2.C Source files written in C. Handles case of leading
blanks or tabs, empty lines. ->ROFFl.C. [CP/M:] Written under BDS v.
1.4-1.43a.

CUG103.06-EDIT.C Code for mom. First segment of source for Q.E.D.
Written in C and will compile with BDS C. [CP/M:BDS] Written in C.
Written under BDS v. 1.4-1.43a.

CUG103.07-EDIT.INC Included Source File. Source file containing global
declarations included in all edit source files during computation. A
standard include file for edit function. ->EDIT.C. [CP/M:BDS] Written
under BDS v. 1.4-1.43a.

CUG103.08-EDIT2.C Edit 2second half. Segment of the Q.E.D. source,
second half of the editor, 1ine storage system. ->EDIT.C. [CP/M:]
Written under BDSv.1.4-1.43a.

CUG103.09-HELP.EDI Help for EDIT. ->HELP.C. [CP/M:]

CUG103.10-HELP.COM

CUG103.11-EDIT.HLP Help with Wonderful EDIT. This file contains the
help messages available from within Q.E.D. ->EDIT.DOC. [CP/M:]

CUG103.12-ROFF.DOC ROFF Tutorials on the use of ROFF.COM. ->NDIQ.C.
[CP/M:]

CUG103.13-HELP.C Tutorial Program source. Source for tutorial programs
describing the use of Q.E.D.. Written in C for BDS C. [CP/M:BDS]
Written under BDSv 1.4-1.43a.

CUG103.14-ROFF.GOM

CUG103.15-EDIT3.C By Neal Somos. Edit 3. An editor everyone loves.
This is the searching section. -> EDIT.C. [CP/M:] Written under BDS v.
1.4-1.43a.

CUG103.16-CRYPT.COM

CUG103.17-PACK.C C source for the program used to pack this disk.
[CP/M. ] Written under BDS v. 1.4-1.43a.

CUG103.18-ROFFGLOB C source file containing qlobal declarations used
in ROFFl and ROFF2.C. ->ROFF.DOC. [CP/M:BDS] Written under BDS v.
1.4-1.43a.

CUG103.19-ROFF1.C Source files written in C Based on the formatter
presented in Kernighan and Plauger's Software Tools. [CP/M:] Written
under BDS v. 1.4-1.43a.

CUG103.20-PACK.COM

CUG103.21-READ.ME Unpacking Process. File describing the process of
unpacking. [CP/M:]

CUG103.22-HISTORIC.NOT By Neal Somos. History of QEO. A note an the
origins of Q.E.D. [CP/M:]

CUG103.23-PKUNPK.DOC

CUG103.24-CRCKLIST.CRC

CUG103.25-CRCK.COM

CUG103.26-CATALOG.DOC

CUG103.27-ENVIRON.DOC Warning of disk. Describes the requirements of
programs on this disk and the environment they were developed in.
[CP/M:BDS]

CUG103.28-UBGETC A modified version of the standard C library funtion
GETC. Compiled so that It only buffers up one sector, used one place
in editor. [CP/M:BDS] Written under BDS v. 1.4-1.43a.

CUG103.29-SUBMIT.DSK cug103.30-CRYPT.C v 1.1 By Kathy Bacon, Neal
Somos. Crypt. File encryption program that uses a pseudo-random number
generator with the keyword as a seed. [CP/M:] C Source written under
BDS v. 1.4-1.43a.

==============================================================================
CUG104 -
-----------

CUG104.01-STDLIB.TXT

CUG104.02-C6.C By Mike Bernson, Ron Cain. Small C-Part 6. Expression
handler. ->Cl.C, C5.C, C7.C. [CP/M:BDS v. 1.41]

CUG104.03-READ.ME By Mike Bernson, Ron Cain. Table of Contents.
[CP/M:BDSv.1.41]

CUG104.04-C7.C By Mike Bernson, Ron Cain. Small C-Part7. Expression
Handler. ->Cl.C, C5.C, C6.C. [CP/M:BDSv.1.41]

CUG104.05-RUNTIME.TXT

CUG104.06-C3.C By Mike Bernson Ron Cain. Small C-Part3. Utilities and
other little functions. ->Cl.C, C2.C. [CP/M:BDS v. 1.41]

CUG104.07-SUBMIT.C By Mike Bernson, Ron Cain. A submit utility written
in C that allows nesting of submits. [CP/M:BDS]

CUG104.08-C.SUB

CUG104.09-C1.COM

CUG104.10-C9.C By Mike Bernson, Ron Cain. Small C-Part 9. Code
generation. ->Cl.C, C8.C. [CP/M:BDS v. 1.41]

CUG104.11-C.DEF v 1.1 By Mike Bernson, Ron Cain. Header for Small C.
Static and macro definitions. ->Cl.C. [CP/M:BDS v. 1.41]

CUG104.12-C4.C By Mike Bernson, Ron Cain. Small C-Part 4. Utilities
and other little functions. ->Cl.C, C3.C. [CP/M:BDS v. 1.41]

CUG104.13-C2.C By Mike Bernson, Ron Cain. Small C-Part 2. New Function
handling, statement parser, some ending character check routines,
compound statement, if statement, while statement, switch statement,
for statement, return statement, break statement, continue statement.
->Cl.c. [CP/M:BDS v. 1.41]

CUG104.14-RUNTIME.ASM

CUG104.15-LINK.COM

CUG104.16-C8.c by Mike Bernson, Ron Cain. Small C-Part 8. Code
generation for the computer. ->C1.C, C9.C. [CP/M:BDS v. 1.41]

CUG104.17-STDLIB.ASM

CUG104.18-CUG104.HDR

CUG104.19-ASSEMBLE.COM

CUG104.20-CC.SUB

CUG104.21-CL.SUB

CUG104.22-FUNCTION.ASM

CUG104.23-FUNCTION.CRL

CUG104.24-C5.C By Mike Bernson, Ron Cain. Small C-Part 5. Expression
handler. ->Cl.C, C6.C, C7.C. [CP/M:BDS v. 1.41]

CUG104.25-SUBMIT.DSK

CUG104.26-TIME.C By Mike Bernson Ron Cain. Set and display time on
QTS-100 clock calendar board. [CP/M:BDS v. 1.41]

CUG104.27-C1.C By Mike Bernson, Ron Cain. Small C-Part 1. Main line
and opening text plus #include, #if, #nif, error summary! dumping t
extern, and static area for a Small C compiler. Executable image on
disk. ->ASSEMBLE.COM, LINK.COM. [CP/M:BDS v. 1.41] This Small C is NOT
self-compiling and requires special asssembler and linker which are
available ONLY in executable form.

==============================================================================
CUG105 -
-----------

CUG105.01-LONGCODE.PRN

CUG105.02-SCOPE.C A data entry facility that makes full-screen editing
functions available to the calling program. Has mode to support
creation of menus. [CP/M:BDS] Developed under BDS v. 1.4.

CUG105.03-LONGCODE.REL

CUG105.04-LONGCODE.CRL

CUG105.05-LONG.CRL

CUG105.06-LONG.DOC by Paul J. Gans. Long Integer Documentation.
->LONG.C. [CP/M:BDS] Developed under BDS v. 1.4.

CUG105.07-DIO.H External data for DIO.H. ->DIO.C. [CP/M:BDS] Developed
under BDS v. 1.4.

CUG105.08-FLEVAL.C Interaction Float Driver. Evaluates and tests the
FLOAT.C floating point package. ->FLOAT.C, FLOATXT.C. [CP/M:BDS]
Developed under BDS v. 1.4.

CUG105.09-COEFSET.C By L.C. Calhoun. Test Driver for FPC. Generates a
dump of floating point constants so they can be initialized with
INITB. ->INITB, FLOAT.C. [CP/M:BDS] Developed under BDS v. 1.4.

CUG105.10-CALHOUN.RMK

CUG105.11-FLOAT.DOC By Leor Zolman. FLOAT.C Documentation. ->FLOAT.C.
[CP/M:BDS] Developed under BDS v. 1.4.

CUG105.12-LONG.C By Dr. Paul Gans. Long Integer Package. Addition,
subtraction, multiplication, division, modulus, negation, and type
conversion operators for 32 bit signed Integers. ->LONCODE.MAC.
[CP/M:BDS] Developed under BDS v. 1.4. Uses z80 assembly module Li()
in LONGCODE.MAC.

CUG105.13-FLOATXT.C By L.C. Calhoun. Calhoun's Extension. Functions to
manipulate Mathias's fp numbers. Includes functions to change
magnitude, change sign, convert to and from int, normalize, round, and
assign. ->FLOAT.DOC, FLOAT.C. [CP/M:BDS] Developed under BDS v. 1.4.

CUG105.14-FLOATXT.DOC By Leor Zolman, Bob Mathias, L. C. Calhoun.
FLOATXT Documentation. ->FLOATXT.C. [CP/M:BDS] Developed under BDS v.
1.4.

CUG105.15-LONGCODE.MAC Assembly Modules -- Long Package. Assembly.
->LONG.C. [CP/M:BDS] Developed under BDS v. 1.4. Assembly requires
MACRO-80.

CUG105.16-FLOAT.C By Bob Mathias. FPP Support Routines. A floating
point package for BDS C. 32 bits precision, 7 bit exponents, binary
representation. Includes 3 address functions to add, subtract,
multiply, divide, compare, and format fp numbers. ->FLOAT.DOC.
[CP/M:BDS] Developed under BDS v. 1.4.

CUG105.17-DIO.C Directed I/O Package. Functions to simulate UNIX's
directed I/O capabilities. ->DIO.H. [CP/M:BDS] Developed under BDS v.
1.4.

CUG105.18-CTRIG.DOC By L.C. Calhoun. documentation for CTRIG.C.
->CTRIG.C. [CP/M:BDS] Developed under BDS v. 1.4.

CUG105.19-FLOATSUM.C By Bob Mathias. Floating Point Example. Builds d
running total of numbers entered from keyboard. ->FLOAT.C. [CP/m:BDS]
Developed under BDS v. 1.4.

CUG105.20-RANDOMX.C By Steve Passe. Random Buffered I/O. Buffered I/O
functions that use CP/M 2.2's read and write random sector facility.
[CP/M:BDS] Developed under BDS v. 1.4.

CUG105.21-SUBMIT.DSK

CUG105.22-CIO.C By Steve Ward. TTymode Support. Almost universal
console I/O package. Provides a reasonable flexible,
device-independent interface with ttymode control. [CP/M:BDS]
Developed under BDS v. 1.4.

CUG105.23-TESTTRIG.C By L.C. Calhoun. Interactive Trig Driver.
Illustrates use of CTRIG Functions. ->CTRIG.C. [CP/M:BDS] Developed
under BDS v. 1.4.

CUG105.24-CTRIG.C By L.C. Calhoun. Calhoun's Trig Functions. Uses
FLOATXT package to generate sine, cosine, tangent, arctangent, and
degree-radian conversions. ->FLOATXT, CTRIG.DOC. [CP/M:BDS] Developed
under BDS v. 1.4.

CUG105.25-CATALOG.CG7

CUG105.26-LIB.C Fixed Point Arithmetic. Functions to facilitate the
handling of dollars and cents. Uses a 4 byte fixed point
representation. Also includes functions to input validation and other
misc. ->LONG.C. [CP/M:BDS] Developed under BDS v. 1.4.

==============================================================================
CUG106 -
-----------

CUG106.01-BIOSLB.CRL

CUG106.02-BIOSLB.MAC

CUG106.03-BIOSLB.PRN

CUG106.04-BSPAT1-4.DOC Harvey R. Moran. Skeleton BIOS with Back Patch.
Explains how to patch CP/M to better handle backspace. Includes
skeletal assembly listing. [CP/M:BDS] Requires MACRO-80.

CUG106.05-CRL.DOC By M. J. Maney. Documentation for CRL.LIB.
->CRL.LIB, CSYM.LIB. [CP/M:BDS]

CUG106.06-CRL.LIB By M. J. Maney. CRL Macro. Macro definitions to
support the creation of functions in BDS Crl format. ->CRL.DOC,
CSYM.LIB. [CP/M:BDS] Requires MACRO-80.

CUG106.07-CHARFUN.ASM By M.J. Maney. Optimized Character Functions.
8080 assembly language definitions of some character functions.
Includes isalpha isupper, islower, isdigit isspace, toupper, and
tolower. ->CRL.LIB. [CP/M:BDS] Written under BDS v. 1.31 or v. 1.32.
Requiries MACRO-80 for assembly.

CUG106.08-CSYM.LIB By M. J. Maney. Symbol file for CRL MACROS.
Definitions useful to programmers using BDS. ->CRL.MAC. [CP/M:BDS]
Written under BDS v. 1.31 or v. 1.32.

CUG106.09-DEFFMODS.HRM By Harvey Moran. Make instructions for STDLIB.
->STDLIBl.C, ST0LIB2.C. [CP/M:BDS] Written under BDS v. 1.31 or
v.1.32.

CUG106.10-SUBMIT.DSK

CUG106.11-CATALOG.CG6

CUG106.12-STRINGS.C v 2.1 By Donald Stevens. String Manipulation.
Includes functions to delete, insert and replace characters, extrance
and mask substrings, and reverse strings. [CP/M:BDS] Writter under BDS
v. 1.31 or v. 1.32.

CUG106.13-GRAVT100.CRL

CUG106.14-IOFUN.ASM By M.J.Maney. Optimized Character I/O. Assembly
version of getc ->CHARFUN.ASM. [CP/M:BDS] Requires MACRO-80.

CUG106.15-MACHINE.ASM By M.J. Maney. Optimized Memory Operations.
Assembler functions for doing low-level operations such as filling,
moving, and exchanging blocks of memory. ->CHARFUN.ASM, IOFUN.ASM.
[CP/M:BDS] Requires MACRO-80.

CUG106.16-OTOI.C By Donald Stevens. Offset Octals to Integer. Converts
an offset octal number in ASCII to an integer. The number is in the
format xxx.xxx(a) and may be preceded by a white space. ->NTOI.C.
[CP/M:BDS] Written under BDS v. 1.31 or v. 1.32.

CUG106.17-PRVLIB.C By M. Goldberg. Goldbergs Functions. Library of
routines for use with BDS programs. [CP/M:BDS] Written under BDS v.
1.31 or v. 1.32.

CUG106.18-QUEUE.C By Scott W. Layson. FIFO Queue Package. Routines
which implement First In, First Out Queues, with two complete sets of
routines, one to handle integer sized objects and another for byte
sized objects. [CP/M:BDS] Written under BDS v. 1.31 or v. 1.32.

CUG106.19-STDEF.C v 1.3 By Donald Stevens. Definitions. Defintion file
for Steven's submissions. ->NTOI, OTOI, GRAVT100, STRlnGS, UTILI.
[CP/M:BDS] Written under BDS v. 1.31 or v. 1.32.

CUG106.20-UTIL1.C By Donald Stevens. Function Library. Includes
charcnt, linecut, ntoi, otoi, and wordcnt. ->OTOI.C, NTOI.C.
[CP/M:BDS] Written under BDS v. 1.31 or v. 1.32.

CUG106.21-SYSTEM.C v 1.2 By Donald Stevens. Steven's Definitions.
->STDEF. [CP/M:BDS] Written under BDS v. 1. 31 or v. 1.32.

CUG106.22-STDLIB2.C By Harvey Moran. Modified Standard Library -- two.
->STDLIBl.C. [CP/M:BDS] Written under BDS v. 1.31 or v. 1.32.

CUG106.23-STRINGS.CRL

CUG106.24-STDIO.SRC By M.D. Maney. I/O with Redirection. Simulates
some of UNlX's I/O capabilities and provides functions to parse
command line. [CP/M:BDS] Written under BDS v. 1.31 or v. 1.32. Very
obsolete.

CUG106.25-MOUSE.C By Havey Moran. Mouse Interpreter. C version of
mouse, a language which originally appeared in Pascal in Byte, July
1979. [CP/M:BDS] Written under BDS v. 1.31. or v. 1.32. Macro
expansions do not work properly.

CUG106.26-STRFUN.ASM By M.J. Maney. Optimized String Functions. String
functions implemented in assembly for efficiency. Includes strlen,
strcmp, strcpy, and strcat. ->CHARFUN.ASM, IOFUN.ASM, MACHINE.ASM.
[CP/M:BDS] Requires MACRO-80.

CUG106.27-STDLIB1.C By Harvey Moran. Modified Standard Library -- one.
Modified library needed by MOUSE, WP.C, XTRINS. ->STDLIb2.C.
[CP/M:BDS] Written under BDS v. 1.32.

CUG106.28-STDIO.LIB By M.J. Maney. STDIO Definitions. ->STDIO.SRC,
CSYMB.L1B. [CP/M:BDS]

CUG106.29-STDIO.DOC By M.J. Maney. STDIO Documentation. ->STDIO.SRC,
STDIO.LIB. [CP/M:BDS]

CUG106.30-XTRINSLB.MAC

CUG106.31-XTRINSLB.PRN

CUG106.32-XTRINSLB.CRL

CUG106.33-NTOI.C By Donald Stevens. Numeric to integer. Converts ascii
character to an integer. Most common number bases may be used. Seal 1
number crunching functions. ->OTOI.C. [CP/M:BDS-] OFFset octal will
not work. Written under BDS v. 1.31 or v. 1.32.

CUG106.34-FACT.MOU By Harvey Moran. Mouse Example. Factorial program
written in mouse. ->MOUSE.C. [CP/M:BDS] Written under BDS v. 1.31 or
v. 1.32.

CUG106.35-TEST.MOU By Harvey Moran. Mouse Test. Causes a bug in this
implementation to show itself. - >MOUSE.C. [CP/M: BDS] Wr i teen under
BDS v. 1.31 or v. 1.32.

CUG106.36-HISTORY.CG6

CUG106.37-GRAVT100.C v 3.0 By Donald Stevens. VT100 Graphics
Interface. Thirty-one functions to manipulate the VT100. Includes
functions to plot lines and boxes, set and clear tabs, clear lines and
windows, scroll, and change modes. [CP/M:BDS] Written under BDS v.
1.31 or v. 1.32.

==============================================================================
CUG107 -
-----------

CUG107.01-PIP.COM

CUG107.02-NEWFLVAL.C Source of Programs used to test FLOAT+44 -- the
second modification of the floating point package for BDS. [CP/M:]

CUG107.03-FLOAT+44.DOC By Leor Zolman. The Incredible fpp.
Documentation of FLOAT+44.c. ->FLOAT.DOC. [CP/M:]

CUG107.04-DEFF.CRL

CUG107.05-CTRIG.C By L.C. Calhoun. CTRIG. Uses the BDS C floating
point package, as modified by Calhoun called FLOATXT which computes
transcendental functions -- sine, cosine, tangent, arctangent.
->CTRIG.DOC. [CP/M:BDS]

CUG107.06-CTRIG.DOC By L. C. Calhoun. Notes on TRIG functions.
Documentation on the transcendental trig functions used in CTRIG.C.
>CTRIG.C. [CP/M:BDS]

CUG107.07-TESTCLOG.c A program which deals with testing the functions
in CLOGS.C. ->CLOGSC. [CP/M:]

CUG107.08-FI.C By Eric Martz. File directory and Backup utility for
CP/M. [CP/M:]

CUG107.09-FLOAT+44.CRL.

CUG107.10-NEWFLVAL.CRL

CUG107.11-CTRIG.CRL

CUG107.12-COEFSTAT.CRL

CUG107.13-TESTTRIG.CRL

CUG107.14-NEWFLVAL.COM

CUG107.15-TESTTRIG.COM

CUG107.16-CLOGS.CRL

CUG107.17-TESTCLOG.CRL

CUG107.18-TESTCLOG.COM

CUG107.19-FLOAT+44.C By L. C. Calhoun. Floating point package support
routines which were modified two times. ->FLOAT.DOC, FLOAT+44.DOC
[CP/M:]

CUG107.20-TESTTRIG.C resting Program for CTRIG. A simple program to
test sine, cosine, and tangent functions. ->CTRIG.C. [CP/M:]

CUG107.21-CLOGS.DOC By L. C. Calhoun. Notes on LOG Functions.
Documentation on CLOG.C. ->CLOGS.C [CP/M:BDS]

CUG107.22-FORM.CPM By L. C. Calhoun. Table of Contents. [CP/M:]

CUG107.23-FI.COM

CUG107.24-FIO.1 By Eric Martz. Part 1 of 3 Inclusions. Part of a set
of three inclusions (fio.1, fio.2, fio.3) designed to permit the
writing of source code as close as possible to K&R. ->FIO.2, FIO.3.
[CP/M:]

CUG107.25-FIO.2 By Eric Martz. Part 2 of 3 Inclusions. Designed to
permit the writing of source code as possible to K&R. ->FIO.1, FIO.3.
[CP/M:]

CUG107.26-FIO.3 By Eric Martz. Part 3 of 3 Inclusions. designed to
permit the writing of source code as close as possible to K&R.
->FIO.1, FIO.2. [CP/M:]

CUG107.27-CATALOG.BDS

CUG107.28-SUBMIT.DSK

CUG107.29-CLOGS.C By L.C Calhoun. CLOGS. four LOG functions in, C
using the BDS C floating point package as modified by LCC and
depending on the ability to insert nut 1 characters in a string.
->CLOGS.DOC. [CP/M:BDS]

CUG107.30-COEFSTAT.C By L.C. Calhoun. COEFSTAT. To obtain printout of
and test of f floating point constants so that they can be initialized
as static variables. [CP/M:BDS]

==============================================================================
CUG108 -
-----------

CUG108.01-COMPRESS.C v 2.2 By Donald Stevens. Compress.c. Compacts
files by replacing repeated strings with 1 character tokens.
->COMPRESS.DOC. [CP/M:]

CUG108.02-DATEDEMO.C By Bill Bolton. Example program for Mountain
Hardware S-100 board. Calls the date function and time function
displaying the returned strings. [CP/M:]

CUG108.03-COMP.C By David Fogg. Compares two files and list difference
- comparison is 1 line based. [CP/M:]

CUG108.04-CONOUT.C By David Fogg. Con out. Processes the output of
CONCORD to create a finished concordance. ->CONCORD.C. [CP/M:]

CUG108.05-CCRL.DOC By Leor Zolman. Documentation of instructions for
using CCRL.DOC. ->CCRL.C. [CP/M:]

CUG108.06-STRIP.C By Robert Ward. Strips the high order bit from each
byte in a text file. ->SCRUB.C. [CP/BDS C] Scrub is faster.

CUG108.07-WC.C By Les Hancock. A program to count words in a file.
[CP/M:]

CUG108.08-LIST.C By David Fogg. Text File Listing. ->CONCORD.c.
[CP/M:]

CUG108.09-MERGE.C By David Fogg. Merge Utility. Use with MSORT.
Generates a single sorted file from smaller sorted files. ->MSORT.C,
CONCORD.C. [CP/M:]

CUG108.10-MSORT.C By David Fogg. Sort utility using Quicksort
Algorithm to create sorted sub-files. EMERGE.C, CONCORD.C. [CP/M:]

CUG108.11-RT11.C v 1.1 By William C. Colley III.. RT-11 Adapter
Package. Converts RT11 format to CP/M format. [CP/M:]

CUG108.12-STD.H v 1.4 By David Fogg. The BDS C standard input/output
header file for KWIC related programs. ->KWIC.C. [CP/M:]

CUG108.13-WFREQ.C By David Fogg. Word Frequency Program. Tallies the
frequency of occurrence for word in a file. ->KWIC.C. [CP/M:]

CUG108.14-RT11.DOC. By William C. Colley III.. User Documentation.
Excellent documentation for RTll. ->RT11.c. [CP/M:]

CUG108.15-RTFILES.C By William C. Colley I}I.. A group of functions
which implement enough of RT11 to allow the rest of the package to
work. ->RTll.C. [CP/M:]

CUG108.16-KWIC.C By David Fogg. KWIC--KeyWordInContext. Generates an
unsort KWIC index. Generates rotated lines from IFILE to IFILE.UNK.
->CONCORD.C. [CP/M:]

CUG108.17-CB.C By William C. Colley III.. Pretty printer for C
programs. [CP/M:]

CUG108.18-SHOW.C By David Fogg. Permits the display (using escape
representations) of all characters in a file (Even parity bits).
[CP/M:]

CUG108.19-RT11.H By William C. Colley III.. Part of the RT11 Adaptor
Package. ->RT11.DOC, RT11.C. [CP/M:]

CUG108.20-CONCORD.C By David Fogg. Concord. Creates an intermediate
file which can be sorted to form a concordance for the input file.
Convert from KWIC. ->CONOUT, WFREQ, MERGE, MSORT, KWIC, LIST, STD.H.
[CP/M:]

CUG108.21-DMF.C By David Fogg. Funcotions for KWIC related programs.
->KWIC.c, CONCORD.c. [CP/M:]

CUG108.22-RT11.COM

CUG108.23-RTMISC.C By William C. Colley III.. More functions for the
RTll package. ->RT11.C. [CP/M:]

CUG108.24-DISK.C v 1.0 By Richard Damon. Disk Surgery. Allows direct
manipulation, of the media. The operator is allowed to examine and
modify the CP/M disk. [CP/M:] Works only with single density disks.

CUG108.25-B.C v 1.1 By Donald Stevens. Big Directory. Directory for
H89/H19, generates alphabetic directories. [CP/M:]

CUG108.26-COMPRESS.DOC v 2.3 By Donald Stevens. Compress
Documentation. ->COMPRESS.C. [CP/M:]

CUG108.27-CLOCK.H Header for Datedemo. [CP/M:]

CUG108.28-BIGDIR.C v 1.0 By Richard Damon. Big directory program for
standard 24 by 80 screens. [CP/M:]

CUG108.29-CATALOG.CG4

CUG108.30-COMPRESS.COM

CUG108.31-DATEDEMO.COM

CUG108.32-CHCNT.C By Leor Zolman. Demo program that counts the
occurrences of ASCII characters in a file. [CP/M:]

CUG108.33-CCRL.C By Jack Wierda. Creates a CRL file from an existing
COM file. ->CCRL.DOC. [CP/M: BDS]

CUG108.34-DATEDEMO.DOC By Bill Bolton). Useful C Time Functions.
Article advocating use of C also explains DATEDEMO. ->DATEDEMO.C.
[CP/M:]

CUG108.35-SUBMIT.DSK

CUG108.36-HISTORY.CG4

CUG108.37-CCOT.C By Leor Zolman. TRS-80 Preprocessor. Translates
special pound sign escapes into C special characters. [CP/M:BDS]

==============================================================================
CUG109 -
-----------

CUG109.01-COPYALL.C Simplified disk/file copying on one drive systems.
[CP/M:BDS] Files being transferred cannot any longer than BUFSIZ bytes
in length.C copyall will 1 check length.

CUG109.02-COUNT.C Count. Counts the number of characters, words, and
lines in a file. [CP/M:BDS]

CUG109.03-DEL.C v 1.1 Delete. Like ERA only requests verification,
before deleting file. DEL i s a directory maintenance utility that
provide a means for selectively erasing files from a CP/M disk. ->ERA.
[CP/M:BDS]

CUG109.04-FILECOMP.C By H. Moran. Files Compared. Compares byte for
byte, two files and lists differences. [CP/M:BDS]

CUG109.05-TYP.C By Scott W. Layson. Quiet Paging Utility. Uses largets
buffer possible while paging through an ASCII file. ->BIGFIO.C.
[CP/M:BDS] Uses BIGFIO.C.

CUG109.06-LPR.C By Leor Zolman. Line Printer Formatter. Sends file to
list device expanding tabs and interpreting other printer control
characters. [CP/M:BDS]

CUG109.07-PG.C By Jack S. Bakeman, Jr. Page. Outputs information to
standard output one page at a time. [CP/M:BDS] Screen Controls
tailored to TRS-80 Mod II.

CUG109.08-PNUM.C By Leor Zolman. Numbered Print. Prints a file with
line numbers. [CP/M:BDS]

CUG109.09-PRMDMP.C By Larry Langrehn. EPROM Dump. Reads proms and
display the obJect dump in HEX. Displays checksum at end. Also checks
for full erasure for 2716-58 type eproms. [CP/M:BDS] Assumes specific
eprom adapter schematic available from author.

CUG109.10-PG.COM

CUG109.11-SCREEN.C By Jack S. Bakeman, Jr. Flashwriting. Paging
utility with direct video drive intended for quickly viewing source
files. Distribution configured for TRS-8C Mod II. [CP/MBDS]

CUG109.12-TABIFY.C By Leor ZolMan. Tabify. Processes text file,
converting sequences of spaces into tabs wherever possible, in order
to reduce the size of the file. ->UNTAB.C. [CP/M:BDS]

CUG109.13-SCREEN.COM

CUG109.14-CATALOG.CG5

CUG109.15-ZLPR.C By Leor Zolman. Line Printer Formattor. Modified
version of LPR. Begins each function at top of new page. Allows
printing of selected pages. ->LPR. [CP/M:BDS]

CUG109.16-SEARCH.COM

CUG109.17-SEARCH.ASM

CUG109.18-UCSD2CPM.C Transfers text files from a USCD Pascal
structured disk to CP/M format disk. [CP/M:BDS]

CUG109.19-UCSDIR.C Lists the directory of a UCSD Pascal diskette
>UCSD2CPM.C. [CP/M:BDS]

CUG109.20-SCRUB.C Scrub control Chars. Copies a file deleting all
control characters except tab, 1f, cr, ff. ->SCRUB.C on CUG142.
[CP/M:BDS]

CUG109.21-VARTABS.C Variable Tab Filter. Entabs and detabs, allows tab
stops to be placed arbitrarily. ->TABIFY.C, UNTAB.C. [CP/M:BDS]

CUG109.22-WC2.C By David M. Fogg. Word Count. Counts characters,
words, and lines. [CP/M:BDS]

CUG109.23-WP.C Word Processor. Word Processor patterned after ROFF.
translated from Software Tools. ->WP.OUT, NRO, ROFF4, RAPP, LETTER,
UTIL-WP. [CP/M:BDS]

CUG109.24-UNTAB.C Takes a text file full of tabs and turns them into
the right number of spaces. ->TABIFY. [CP/M:BDS]

CUG109.25-XSDlR.ASM

CUG109.26-XSDIR.COM

CUG109.27-XSDMAC.LIB

CUG109.28-CONVERT.C By Leor Zolman. Converts regular C source files to
pound sign escape representation for editting on TRS80 or other
upper-case only machines. [CP/M:BDS]

CUG109.29-WP.OUT WP Documentation (formatted). ->WP.C. [CP/M:]

CUG109.30-WP.DOC WP Documentation (Raw). ->WP.C. [CP/M:]

CUG109.31-GLOBALS.WP WP Header. ->WP.C. [CP/M:BDS]

CUG109.32-MACDEFS.WP Text Formatter. Dot Command text formatter from
Software Tools. ->WP.C. [CP/M:BDS]

CUG109.33-NEWCHCNT.C By Scott W. Layson Frequency. Reads an input
ASCII file and compiles statistics on all possible character values.
Demonstrates use of bigfio.c. ->BICFIO.C. [CP/M:BDS]

CUG109.34-SUBMIT.DSK

CUG109.35-CONCAT.C By Scott W. Layson. Concantenate. Will concatenate
two files, putting the result in a third. Illustrates use of functions
in bigfio.c. ->BIGFIO.C. [CP/M:BDS]

CUG109.36-UTIL-WP.C WP-part 2. Utility functions for Word Processor.
->WP.C. [CP/M:BDS]

CUG109.37-HISTORY.CGS

CUG109.38-BlGFIO.C By Scott W. Layson. File I/O Functions. These
routines are almost exact replacements for fopen, fcreat, putc, getc,
ungetc, and fflush, except that they allow use of an arbitrarily large
buffer. ->TYP.C. [CP/M:BDS]

CUG109.39-LISTF.C HEX-ASCII Dump Utility. Dumps both ASCII and HEX
representations of a file, one record at a time. This utility copies a
record from a names file to the printer. Records may be selected by
random within the file. [CP/M:BDS]

CUG109.40-TELNET.C v 2.3 By Leor Zolman, Leo Kenen. Telnet
Communication Package. File transfer/terminal emulation package with
simple ASCII X-modem protocols (checksum). ->BDSCIO.H. [CP/M:BDS]

==============================================================================
CUG110 -
-----------

CUG110.01-FIXCCC.ASM Modification of Wild Cards. Motified runtime
package for yam and Umodem 2.7 which allows wild cards to work right.
->ccc.asm. [CP/M:] Be sure to change addresses in BDS.LIB if you
change ccc.asm.

CUG110.02-YAMTUART.H Global equates for specific installation and
modem ports. ->YAMSYS.H, YAM5.C. [CP/M:]

CUG110.03-YAM1.C Yam one. First time initializations, main command
decoding. ->YAM2.c, YAM3.c, YAM5.c, YAM7.c. [CP/M:]

CUG110.04-UMODEM27.DOC By Rick Conn. A note about Umodem v. 2.7.
->UMODEM27.C. [CP/M:]

CUG110.05-XYAMHELP.T By Chuck Forsberg. YAM (another modem). A short
help file for YAM. [CP/M:]

CUG110.06-YAM2.C By Ward Christenson. Yam two. Christensen protocol
handler for sending and receiving ascii and binary files. ->YAM1.c,
YAM3.c YAM5.c, YAM7.c. [CP/M:]

CUG110.07-YAMTRSII.H For the TRS-80 user global equates for specific
installation and modem ports. [CP/M:]

CUG110.08-YAMXHELP.T

CUG110.09-BTYEBNCH.C A quicker version of prime number program, A
benchmark program ala BYTE. [CP/M:]

CUG110.10-YAMZ89XM.H Global equates for specific installations and
modem ports. ->YAM5.C, YAMSYS.H. [CP/M:]

CUG110.11-YAMPHONE.T Telephone numbers used by YAM. [CP/M:]

CUG110.12-YAML.SUB

CUG110.13-YAM3.C Yam three. Conversation with data capture. File XMSN
without error checking. Two-way conversation with remote. ->YAMI.c,
YAM2.c, YAM5.c, YAM7.c. [CP/M- ]

CUG110.14-BIN2HEX.C By Robert Pasky. Binary to Hex. Makes a binary
file into a HEX file, 32 bytes/block with proper sum check byte at
end. [CP/M:] If you have NSECTS set larger than 1 you may want to
include GETC.

CUG110.15-GETC.C Modified to return ERROR to following the last real
sector of the filet even when the file is not a multiple of NSECTS in
length. ->NSECTS.C. [CP/M:]

CUG110.16-YAM.SUB

CUG110.17-YAMTRSII.SUB

CUG110.18-YAMTU.SUB

CUG110.19-PRINTF.C This version of spr adds the 0 padding option to
the functions. [CP/M:BDS] For BDS v. 1.41.

CUG110.20-CATALOG.BDS

CUG110.21-PROLOG.C By Robert Pasky. Prolog. Programs and verfies
EPROMS using PRO-LOG programmer. ->PRINTF.C. [CP/M:BDS] Compiled with
BDS v. 1.41.

CUG110.22-CHARSET Character descriptions for Chargen program.
->CHARGEN.C. [CP/M:BDS]

CUG110.23-ENVIRON.DOC Environment Division. Environment notes for
SYMBUG, PROLOG, CHARGEN, CHARSET, BIN2HEX, PRINTF, GETS. [CP/M:]

CUG110.24-SYMBUG.c By Robert Pasky. Converts clink.sym output file to
Vbug format which is debugger for Z-80.[CP/M:BDS]

CUG110.25-YAMSYS.H Global equates for specific installations and modem
ports. ->YAM5.C. [CP/M:]

CUG110.26-YAM.H By Chuck Forsberg. Master header for YAM system which
includes globals. [CP/M:]

CUG110.27-READ-ME.DOC

CUG110.28-CHARGEN.C By Robert Pasky. Character Generator/Editor. Uses
the vio graphic mode to display an enlarged version of a character's
dot matrix. -Imsai. [CP/M:BDS] Compiled using BDS C 1.41.

CUG110.29-CBC.C By Ward Christenson. BDS-C Curly Brace Checker. Also
counts = = = comments, since they may now be nested.

CUG110.30-YAMZ89.H Global equates for specific installation and modem
ports. ->YAMSYS.H, YAM5.C. [CP/M:]

CUG110.31-YAMSQ

CUG110.32-YAM7.C Yam seven. File open and close stuff. ->YAM1.c,
YAM2.c, YAM3.c, YAM5.c. [CP/M:] This file assumes operation on a CP/M
disk.

CUG110.33-FIB.C fibbonachi Series. Another Benchmark, ala USEN IX
conference. [CP/M:] Maximum argument without overflow is 25.

CUG110.34-TABIFY.C By Leor Zolman. Tabify. Enhanced version of Tabify.
This filter takes sequences of spaces in a file and turns them,
whenever possible, into tabs. [CP/M:]

CUG110.35-YAMX.SUB

CUG110.36-YAMDOC.FIN by Chuck Forsberg. Yam (another modem). User
documentation for Yam. ->YAM. [CP/M:]

CUG110.37-UNDEL.C

CUG110.38-UNDELETE.C

CUG110.39-YAM5.C Yam file. Modem related functions. ->YAH1.c, YAM2.c,
YAP13.c, YAM7.c. [CP/M:]

CUG110.40-BLOOK.C A program to display the disk block by block.
[CP/M:]

CUG110.41-TEK.C Lines. Displays a file a certain number of lines at a
time. [CP/M:]

CUG110.42-CMP.C Comparison. Compares files to one another. [CP/M:]

CUG110.43-VTEST.C By Chuck Forsberg. Extraordinary. A software
analogue to David and Goliath where BDS beats the biggies in assembly.
[CP/M:BDS]

CUG110.44-YAM5II.C Modem related function. [CP/M:]

CUG110.45-DDNDISK.C By Robert Ward. Creates code that would work with
double density and other controllers. The disk is modified to run with
CP/M 2.x and others. [CP/M:]

CUG110.46-SEE.C By Chuck Forsberg. Prints files, showing non-ascii
characters as octal values. [CP/M:]

CUG110.47- YMTRSII2.SUB

CUG110.48-UMODEM27.C v 2.7 Umodem. Implements the XMODEM protocol and
the TERMII file transfer Protocol (FTP) number 1 for packetized file
up/downloading Modem program for UNIX system. [CP/M:]

==============================================================================
CUG111 -
-----------

CUG111.01-#CATALOG.VOL

CUG111.02-BCANLYZ.C v l.O By Jan Larsson. Expression evaluator.
Auxiliary file for BC.C.May be useful in other C programs. Evaluates
arithmetic and logic expressions. Takes a string expression as
argument, and returns the value of the expression, an integer, O
through 65535. ->BC.C, BC.DOC, BCDEF.11, BCREVIEW.DOC. [CP/M-80 :BDS]
Limited to integers, 0 to 65535.

CUG111.03-#HISTORY.VOL

CUG111.04-CHOP.C v 1.1 By Unknown. Chop. Removes sectors from the
beginning of a file, and creates a new file containing the remaining
data. [CP/M-80:BDS]

CUG111.05-BC.DOC By Jan Larsson. Documentation for Binary Calculator.
Contains comments about BC.C and BCANLYZ.C, and contains compiling
instructions. Usage instructions may be found in BC.C, or obtained by
running BC. ->BC.C. [CP/M-80:]

CUG111.06-COUNT.C v1.1 By Unknown. Count. Counts the lines, words, or
characters in a file. [CP/M-80:BDS]

CUG111.07-BCDEF.H By Jan Larsson. Binary Calculator. C header file
required for compiling BC.C. Contains definitions of constants and
declarations of external variables. ->BC.C. [CP/M-80:BDS]

CUG111.08-BCREVIEW.DOC By Jan Larsson. Binary Calculator. A review of
BC by the librarian of the CUG Utilities IV diskette. ->BC.C.
[CP/M-80:]

CUG111.09-FILECOMP.C v 1.3 By H. Moran, R.Hollinbeck, J. Smith. file
comparison. Compares two files, and prints differences. May be used
with All file types. ->CUG Utilities II diskette. [CP/M-80:BDS] If the
two files are not the same length, FILECOMP will consider them
different in every byte beyond the point where the extra bytes appear
in one of the files.

CUG111.10-FLS.C v 1.1 By Dick Greenlaw. File list specifier. Converts
ambiguous file names in a command line to lists of specific file
names, for input to another program in the same command line. See
SQUEE7ER.DOC for details. ->SQ.C, USQ.C, SQUEEZER.DOC. [CP/M-80:BDS]
Programs called by fls.c must be able to accept directed input.

CUG111.11-CRCK4.ASM v 4.2B By Keith Peterson. Cyclic redundancy check.
Computes a check number for a file or a group of files. Will send the
results to the console, or place them in a file. This is an 8080
assembly language source file. ->CRCK4.COM CRCK4.DOC. [CP/M-80 :MAC
assembler] While the check numbers computed by this (and related)
programs are widely used in the personal computer community, the CRC
polynomial division algorithm is NOT correctly implemented. The
results are not true cyclic redundancy checks. However, there is
consistency between this and many other programs, which may be
sufficient. John M. Smith.

CUG111.12-CRCK4.COM v 4.2B By Keith Peterson. Cyclic redundancy check.
->CRCK4.ASM CRCK4.DOC. [CP/M-80:]

CUG111.13-CRCK4.DOC By Keith Peterson. Cyclic redundancy check. 8rief
but adequate instructions for using CRCK4. Could be used as an on-line
help file. ->CRCK4.ASM, CRCK4.COM. [CP/M-80:]

CUG111.14-IDIR.C v 1.0 By Jan Larsson. ISIS directory lister. Displays
the directories of single density ISIS2 diskettes. ->IDIR.DOC.
[CP/M-80:BDS] Contains a syntax error which prevents compiling.

CUG111.15-LABELS.C v 1.2 By Steve Passe. Labels. Prints labels from an
address file. File CUG.ADR is a sample address file. ->CUG.ADR.
[CP/M-80 :BDS] Documentation is cryptic.

CUG111.16-FLS.SUB By John M. Smith. FLS. Submit file for compiling
FLS.C. ->SQUEEZER.DOC. [CP/M-80 :BDS]

CUG111.17-IO.C By Dick Green law. Squeezer. Auxiliary file for the
SQ.C and USQ.C package. [CP/M-80:BDS]

CUG111.18-IDIR.DOC v l.O By Jan Larsson. ISIS directory lister.
Briefly describes the purpose and usage of the IDIR program. ->IDIR.C.
[CP/M-80:] IDIR.C contains a syntax error which prevents compiling.

CUG111.19-MCROANG.C v 1.0 By Joe Shannon. Micro Angelo. Creates new
character sets for the Micro Angelo graphics board. Compilation
requires MCROANG.H. ->MCROANG.H. [CP/M-80: BDS]

CUG111.20-LABELS.ADR v 1.2 By Unknown. Labels. Sample address file for
use with the address label maker LABELS.C. ->LABELS.C. [CP/M-80:BDS]
Documentation is cryptic.

CUG111.21-MXPRINT.C Y 1.0 By Joe Shannon. MXprint. Prints files on
Epson MX-80 or MX-100 printers, with optional headers and page numbers
at the top of each page. Will print in normal, emphasized, or
condensed modes. Compilation requires MXPRINT.H. ->MXPRINT.H
MXPRINT.DOC. [CP/M-80:BDS]

CUG111.22-SE.C v 1.4 By Jan Larsson. diskette sector editor. lets you
view, edit and write back a diskette sector. It needs a 24*80
cursor-addressable terminal, and requires your custom CLRSCREEN() and
GOTOXY() functions. The definitions of these functions appear early in
SE.C. Compiling requires SENTER.C, included on the diskette. Also
included are SE.DOC and SE.SUB. ->SE.DOC, SENTER.C. [CP/M-80 v.2.2,
BDS v.1.43 and 1.5a] Requires CP/M v. 2.x. SE is not designed to work
with systems using the DEBLOCK routine in the BIOS to handle physical
sectors larger than 128 bytes, so if you have such a system, and want
to use SE, you must modify the routines in SE which write back the
edited sector. The Bitmap command is not implemented.

CUG111.23-MCROANG.H v 1.0 By Joe Shannon. Micro Angelo. C header file
required for compilinq MCROANG.C. Contains definitions of characters
which control the Micro Angelo graphics board. ->MCROANG.C.
[CP/M-80:BDS]

CUG111.24-SENTER.C v 1.0 By Jan Larsson. Screen entry. General screen
oriented input/output module. This is a component of the diskette
sector editor, SE.C, but nay be useful in other C programs. ->SE.C,
SE.DOC. [CP/M-80, v.2.2.BDS, v.1.43 and 1.5a]

CUG111.25-MXPRINT.DOC By Joe Shannon. MXprint. Instructions for using
the MXprint program. ->MXPRINT.C. [CP/M-80:]

CUG111.26-MXPRINT.H v 1.0 By Joe Shannon. MXprint. C header file
required for compiling MXPRINT.C.Contains printer control codes, port
addresses, and C functions for printer control. ->MXPRINT.C.
[CP/M-80:BDS]

CUG111.27-XPR.C v 1.0 By Ward Christensen. Transfer via punch and
reader. Transfers files between CP/M systems, through BDOS, using
punch and reader. [CP/M-80 :8DS]

CUG111.28-SE.DOC v 1.4 ByJan Larsson. Diskette sector editor.
Compiling instructions and usage instructions for the SE program.
->SE.C. [CP/M-80, v.2.2:]

CUG111.29-SQDEBUG.C By Dick Green law. Squeezer. Auxiliary file for
the SQ.C and USQ.C package. See SQUEEZER.DOC.->SQUEEZER.DOC. [CP/M-80
:BDS]

CUG111.30-SQ.C Y 1.5 By Dick Green law. Squeezer. SQ.C is a data
compression utility, which will reduce file sizes up to about 45
percent withaut losing data. for compiling and operating instructions
See SQEEZER.DOC. ->USQ.C, FLS.C, SQUEEZER.DOC. [CP/M: BDS]

CUG111.31-SQ.H By Dick Green law. Header for Squeezer. ->SQ.C.
[CP/M-80:BDS]

CUG111.32-SQ.SUB By John M. Smith. Squeeze. Submit file for compiling
SQ.C. >SQUEEZER.DOC. [CP/M-80 :BDS]

CUG111.33-SQ-CHGS.DOC By Dick Greenlaw. Squeezer. A list of
significant changes to the SQ programs, which occurred between June 16
and August 20, 1981. ->SQ.C. [CP/M-80:]

CUG111.34-SQ-HSTRY.DOC By Dick Greenlaw. Squeezer. An interesting
description of the operation of the SQUEEZE and UNSQUEEZE programs,
and of the successive performance improvements achieved during the
development. ->SQ.C. [CP/M-80:]

CUG111.35-SQCOM.H By Dick Greenlaw. Header for Squeezer. ->SQ.C.
[CP/M-80: BDS]

CUG111.36-TRl.C By Dick Greenlaw. Squeezer. Auxiliary file for the
SQ.C and USQ.C package. See SQUEEZER.DOC. ->SQUEEZER.DOC. [CP/M-80
:BDS]

CUG111.37-SQUEEZER.DOC By Dick Greenlaw. Squeezer. A comprehensive
instruction manual for the use of the programs in the
squeeze/unsqueeze utility package. Provides many examples, including
many which illustrate the power of directed I/O, pipes, and wild card
expansion of command line arguments. This document is educational,
even if you never use the SQ/USQ utilities. ->SQ.C, USQ.C, FLS.C.
[CP/M-80:]

CUG111.38-TR2.C By Dick Greenlaw. Squeezer. Auxiliary file for the
SQ.C and USQ.C package. See SQUEEZER.DOC. ->SQUEEZER.DOC. [CP/M-80
:BDS]

CUG111.39-USQ.C v 1.5 By Dick Greenlaw. Squeezer. USQ restores files
which have been squeezed by the SQ file compression utility program.
for compiling and Operating instructions, see the file SQUEE2ER.DOC.
->SQ.C, FLS.C, SQUEEZE2.DOC. [CP/M-80: BDS]

CUG111.40-UTR.C By Dick Greenlaw. Squeezer. Auxiliary file for the
SQ.C and USQ.C package. See SQUEEZER.DOC. ->SQUEEZER.DOC. [CP/M-80
:BDS]

CUG111.41-USQ.COM v 1.5 By Dick Greenlaw. Squeezer. ->USQ.C, SQ.C,
FLS.C, SQUEEZER.DOC. [CP/M-80 :BDS]

CUG111.42-USQ.H By Dick Greenlaw. Header for Squeezer. ->USQ.C.
[CP/M-80:BDS]

CUG111.43-USQ.SUB By John M. Smith. Unsqueeze. Submit file for
compiling USQ.C. ->SQUEEZER.DOC. [CP/M-80: BDS]

CUG111.44-BC.C v l.O By Jan Larsson. Binary Calculator. Evaluates
arithmetic and logic expressions entered at the console and prints the
result in decimal, hexadecimal, octal, binary, and ASCII notations.
Compilation requires files BC.C, BCANLYZ.C, and BCDEF.H. BC.DOC
contains instructions for compiling and using. ->BCANLYZ.C, BCDEF.H,
BC.DOC, BCREVIEW.DOC. [CP/M-80:BDS] BC is limited to integers, 0 to
65535.

CUG111.45-SUBMIT.DSK

==============================================================================
CUG112 -
-----------

CUG112.01-NROTXT.C By Stephen L. Browning. The text processing portion
of NRO word processing. ->NRO.C. [CP/M:] -

CUG112.02-NROCMD.C By Stephen L. Browning. Command. Command Processor
for NRO text processor. ->NRO.C. [CP/M:]

CUG112.03-DISKDOC.C By Egil Kvalegerg. Disk Doctor. A utility for
diskette Maintendnce. [CP/M:]

CUG112.04-FGREP.C v 1.03 By Ian Ashdown - by Heart Software. Search
File(s) for Fixed Pattern(s). A full implementation of the UNIX
'fgrep' utility. The algorithm used in this program constructs a
deterministic finite state automation (FSA) for pattern matching from
the sub strings, then uses the FSA to process the text string in one
pass. The time taken to construct the FSA is proportional to the sum
of the lengths of the the sub strings. The number of state transitions
made by the FSA in processing the text string is independent of the
number of sbustrings. [Any:Any C compiler] The '-a' option may not be
consistently supported by various non-Unix operating systems and
compilers. Also, the Unix-specific '-b' option of 'fgrep' is not
supported. Finally, non-Unix operating systems may not accept
lowercase character strings on the command line, although these can be
entered through files.

CUG112.05-SKELETON.NRO By Stephen L. Browning. New Manual Name. Part
of the NRO package. ->N20.C. [CP/M:]

CUG112.06-MAN.NRO By Stephen L. Browning. A part of NRO Package which
supports user defined macro-commands. [CP/M:]

CUG112.07-AN.NRO By Stephen L. Browning. A part of the NRO Package
which supports user-defined macro-commands. [CP/M:]

CUG112.08-NRO.NRO v 2.2 By Stephen L. Browning. Part of the NRO
Package. ->NRO.C. [CP/M:]

CUG112.09-NROMAKE.SUB

CUG112.10-NRO.COM

CUG112.11-NRO.DOC v 2.2 By Stephen L. Browning. NRO --text processor.
A documentation dbout NRO the Text Processor. ->NRO.C. [CP/M- ]

CUG112.12-ANYDISK.C v 2.0 By Edward K. Ream. Disk Utility Program.
This version is more machine independent and written in a more
maintainable fashion. It allows the operator to examine and modify a
CP/M disk. [CP/M:]

CUG112.13-ANYDISK.DOC By Edward K. Ream. Documentation on ANYDISK.C.
->ANYOISK.C. [CP/M:]

CUG112.14-ANYDISK.OUT By Edward K. Ream. List of commands for ANYDISK.
->ANYDISK.C. [CP/M:]

CUG112.15-ANYDISK.COM

CUG112.16-DISKDOC.DOC By Egil Kvalegerg. A repair and maintenance
utility. Documentation on DISKDOC.C. ->DISKDOC.C. [CP/M:]

CUG112.17-DDOCSYS.C By Egil Kvalegerg. System dependent functions for
DISKDOC. ->DISKDOC.C. [CP/M:] This version is for Small c and CP/M
8080 v. 2.x.

CUG112.18-NRO.H By Stephen L. Browning. A parameter file for the NRO
word processor. ->NRO.C. [CP/M:]

CUG112.19-NRO.C By Stephen L. Browning. A word processor similiar to
UNIX, NROFF or RSX-11m RNO- adaption of text processor. [CP/M ]

CUG112.20-DDOCLIB By Egil Kvalegerg. Library specially tailored for
DISKDOC. ->DISKDOC.C. [CP/M:]

CUG112.21-DISKDOC.SYM By Egil Kalegerg. Part of disk doctor package.
->DISKDOC.C. [CP/M:]

CUG112.22-DISKDOC.COM

CUG112.23-CATALOG Table of Contents.

CUG112.24-NROCOM.C By Stephen L. Browning. External-common for NRO
word processor. ->NRO.C. [CP/M:]

CUG112.25-FGREP.COM

CUG112.26-SUBMIT.DSK

==============================================================================
CUG113 -
-----------

CUG113.01-A68ASMLN.C v 2.6 By William C. Colley III. Line Assembly
Routines. This function is the workhorse of the assembler. The
routines set any labels off the line and process them, get the opcode
and build the binary output as they evaluate the operand field.
->A68.C. [CP/M-80:BDS]

CUG113.02-A68.H v 2.6 By William C. Colley III. 6800/6801
Cross-Assembler. Global macro substitution and external variable
declaration. -> A68.C. [CP/M-80: BDS]

CUG113.03-A68.DOC v 2.6 By William C. Colley III. Documentation of
6800 Cross Assembler which lists assemblers commands, source files,
and gives instructions. ->A68.C. [CP/M-80:]

CUG113.04-A15TBL1.CRL

CUG113.05-A15TBL2.CRL

CUG113.06-A15.COM

CUG113.07-A15.H v 1.2 By William C. Colley III. 1805A Cross-Assembler.
Global macro substitutions and external variable declarations.
->A15.C. [CP/M: 8DS]

CUG113.08-A68GET.C v 2.6 By William C. Colley III. Source for 6800
Cross-Asssmbler. Routines to get source text from the disk and return
it or manageable chunks such as operators, labels, opcodes, etc.
->A68.C. [CP/M-80: BDS]

CUG113.09-A68PUT.C v 2.6 By William C. Colley III. List and Hex output
routines. Function to form the list output line and put it to the list
device. Routine also puts the line to the console in the event of an
error. -> A68.C. [CP/M-80:BDS]

CUG113.10-A68SYMB.C v 2.6 By William C. Colley III. Symbol Table
Manipulation. This function adds a new entry to the symbol table. The
function returns values of either 0 or -1. lf the value is O, the
symbol is already in the table and the global variable sympoint points
to the existing entry. If the value is -1, the symbol has just been
entered into the table and the sympoint points to the new entry. If
the symbol table is full, the function triggers an abort of the
assembly. ->A68.C. [CP/M-80:BDS]

CUG113.11-A68TBLS.CRL

CUG113.12-A68.COM

CUG113.13-A15.DOC v 1.2 By William C. Colley III. Documentation on
1805 Cross-Assembler. A user's manual which explains the commands, the
source files, the Expression evaluation, and Instructions. ->A15.C.
[CP/M-80:BDS]

CUG113.14-A15GET.C v 1.2 By William C.Colley III. Lexical Analyzer for
1805A. Routines to get source text from the disk and return it into
manageable chunks such as operators, labels, upcodes, etc. ->A15.C.
[CP/M-80:BDS]

CUG113.15-A68.C v 2.6 By William C. Colley III. 6800 Cross-Assembler
(BDS C Version). This program lets you use your CP/M-80-based computer
to assemble code for the Motorola 6800, 6801, 6802, 6803, 6808, and
68701 microprocessors. The program is written in BDS C for the best
possible performance on 8-bit machines. All assembler features are
supported except relocation, linkage, listing control, and macros.
->CUG149, 6801 cross-Assembler (Portable). [CP/M-80:BDS] this package
is specifically tailored to CP/M-80 machines and the rather
non-standard, but high performance BDS C compiler. For other
environments, use the portable version of this package on CUG149.

CUG113.16-A15ASMLN.C v 1.2 By William C. Colly III. Line Assembly
Routine. This function is the workhorse of the assembler. The routine
gets any labels off the line and processes them, gets the opcode and
builds the binary output as it evaluates the operand field. ->A15.C.
[CP/M-80:BDS]

CUG113.17-A15EVAL.C v 1.2 By William C. Colley III. Source for 1805A.
An Expression Evaluator which crunches on source text chunks and gives
back evaluated expressions, opcode parameters, etc. ->A15.C.
[CP/M-80:BDS]

CUG113.18-A15PUT.C v 1.2 By William C. Colley III. Output Routines for
1805A. List and hex output routines. A function to form the list
output line and put it to the list device. Routine also puts the line
to the console in the event of an error. ->A15.C. [CP/M-80:BDS]

CUG113.19-READ.ME By William C. Colley III. A file which describes the
files which are submitted on the disk.

CUG113.20-A68TBLS.CSM v 2.6 By William C. Colley III.Tables for BDS C
1.5x-6801. Machine Language Functions. ->A68.C. [CP/M-80:BDS]

CUG113.21-A68TBLS.ASM v 2.6 By William C. Colley III. Tables for BDS C
1.4x-6801. Machine Language functions. ->A68.C. [CP/M-80:BDS]

CUG113.22-A15SYMB.C v 1.2 By William C. Colley III. Symbol Table
Manipulation. This function adds a new entry to the symbol table. the
function returns the values of either 0 or -1 depending on whether the
entry already exists in the table or not, O - it does, -1 - it does
not. ->A15.C. [CP/M-80:BDS]

CUG113.23-A15.C v 1.2 By William C. Colley III. 1802 Cross-Assembler
(BDS C Version). This program lets you use your CP/M-80-based computer
to assemble code for the RCA 1802, 1804, 1805, 1805A, 1806, and 1806A
microprocessors. The program is written in BDS C for the best possible
performance on 8-bit machines. All assembler features are supported
except relocation, linkage, listing control, and macros. ->CUG149,
1805A Cross-Assembler (Portable). [CP/M-80:BDS] This package is
specifically tailored to CP/M-80 machines and the rather non-standard,
but highperformance BDS C compiler. For other environments, use the
portable version of this package on CUG149.

CUG113.24-A68EVAL.C v 2.6 By William C. Colley III. 6800
Cross-Assembler. Routines to crunch on source text chunks and give
back evaluated expressions opcode, parameters, etc. ->A68.C.
[CP/M-80:BDS]

CUG113.25-A15TBL1.ASM v 1.2 By William C. Colley III. Table BDS C
V1.4x-1805. Machine Language Functions. ->A15.C. [CP/M-80:BDS]

CUG113.26-A15TBL2.ASM V 1.2 By William C. Colley III. Tables BDS C
v1.4x-1805. Machine Language Function. ->A15.G. [CP/M-80:BDS]

CUG113.27-A15TBL1.CSM v 1.2 By William C. Colley III.Tables BDS C
1.5x-1805. Machine Language Functions. ->A15.C. [CP/M-80:BDS]

CUG113.28-A15TBL2.CSM v 1.2 By William C. Colley III. Table BDS C 1.5x
for 1805. Machine Language Function. ->A15.C. [CP/M-80:BDS]

CUG113.29-SUBMIT.DSK

==============================================================================
CUG114 -
-----------

CUG114.01-CONFIG.H By Ed Ream. Editor Configuration header.
->CONFIG1.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.02-CONFIG.COM

CUG114.03-CONFIG1.BDS By Ed Ream. Editor Configuration Utility.
Automatically generates a custom version of ed1.ccc and ed6.ccc.
->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.04-CONFIG2.BDS By Ed Ream. Editor Configuration Utility.
->CONFIG1.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.05-CONFIG3.BDS By Ed Ream. Editor Configuration Utility.
->CONFIG1.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.06-ED1.CCC v 2.0 By Ed Ream. Screen Editor-Part 1. Special Key
Definitions. ->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.07-ED10.BDS By Ed Ream. Screen Editor-Part 10. Buffer Modules.
->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.08-ED2.BDS By Ed Ream. Screen Editor-Part 2. A multi-mode
programmer's full screen editor. this program is carefully coded,
making extensive use of information binding. ->CUG #115. [CP/M:BDS v.
1.13 or 1.44]

CUG114.09-ED10.CRL

CUG114.10-ED3.BDS By Ed Ream. Screen Editor-Part 3. ->ED2.BDS.
[CP/M:BDS v. 1.43 or 1.44]

CUG114.11-ED2.COM

CUG114.12-ED2.CRL

CUG114.13-ED4.BDS By Ed Ream. Screen Editor-Part 4. Window Modules for
screen editor. ->ED2.8DS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.14-ED3.CRL

CUG114.15-ED5.BDS By Ed Ream. Screen Editor-Part 5. Output Format
Module. ->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.16-ED4.CRL

CUG114.17-ED6.CCC v 2.0 By Ed Ream. Screen Editor-Part 5. terminal
output module. ->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.18-ED5.CRL

CUG114.19-ED7.BDS By Ed Ream. Screen Editor-Part 7. Prompt line
Module. ->ED2.BDS [CP/M:BDS v. 1.43 or 1.44]

CUG114.20-ED6.CRL

CUG114.21-ED7.CRL

CUG114.22-ED9.BDS By Ed Ream. Screen Editor- Part 9. General
Utilities. ->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.23-ED8.CRL

CUG114.24-EDEXT.CC By Ed Ream. Screen Editor - external definitions.
->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.25-ED9.CRL

CUG114.26-EDCOMP.SUB

CUG114.27-ED8.BDS By Ed Ream. Screen Editor-Part 8. operating system
Module. ->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.28-EDLINK.SUB

CUG114.29-EDSUM.DOC By Ed Ream. Screen Editor-Commands. Concise
command summary for Screen Editor and documentation on the special
characters. ->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.30-GUIDE.DOC By Ed Ream. Screen Editor:User's Guide. ->ED2.BDS.
[CP/M:BDS v. 1.43 or 1.44]

CUG114.31-INSTALL.DOC By Ed Ream. Installation Guide. Installation
guide for Screen Editor. ->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.32-MODULE.DOC By Ed Ream. Module Documentation. Internal
description of the screen editor. ->EC2.BDS. [CP/M:BDS v. 1.43 or
1.44]

CUG114.33-README.DOC By Ed Ream. Guide to Screen Editor. How to use
the files on this disk. ->ED2.BDS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.34-REVIEW.DOC By Ed Ream. The Ream Screen Editor. A review of
Ed Ream's Screen Editor. ->ED2.8DS. [CP/M:BDS v. 1.43 or 1.44]

CUG114.35-SUBMIT.DSK

CUG114.36-BDSCIO.H v 1.41 By Ed Ream. Stat. This file contains global
definitions, for use in all programs in place of CONSTANTS. [CP/M:BDS
v. 1.43 or 1.44]

CUG114.37-ED.H By Ed Ream. Editor - header. ->ED2.BDS. [CP/M:BDS v.
1.43 or 1.44]

==============================================================================
CUG115 -
-----------

CUG115.01-CONFIG.COM

CUG115.02-C80STR.COM

CUG115.03-C80.COM

CUG115.04-ED.C By Ed Ream. Screen Editor-Main. The main source file
for the Screen Editor which is an include file. ->CUG114, ED2.C.
[CP/M:Small C]

CUG115.05-ED7.C By Ed Ream. Screen Editor-Part 7. Prompt Line Module.
-> CUG114, ED2.C. [CP/M:Small C]

CUG115.06-EDO.C By Ed Ream. Screen Editor. Non-user defined globals.
->CU114, ED2.C. [CP/M:Small C]

CUG115.07-ED4.C By Ed Ream. Screen Editor-Part 4. Window Module for
screen editor. ->CUG114, ED2.C. [CP/M:Small C]

CUG115.08-ED2.C By Ed Ream. Screen Editor-Part 2. A multi-mode
programmer's full screen editor. This program is carefully coded
making extensive use of information binding. ->CUG114. [CP/M:Small C]

CUG115.09-ED1.CCC v 2.0 By Ed Ream. Screen Editor Part 1. Special Key
Definitions. ->CUG114 ED2.C. [CP/M:Small C]

CUG115.10-ED5.C By Ed Ream. Screen Editor-Part 5. Output format Module
->CUG114, ED2.C. [CP/M:Small C]

CUG115.11-ED6.CCC v 2.0 By Ed Ream. Screen Editor-Part 6. Terminal
Output Module. ->CUG114, ED2.C. [CP/M:Small C]

CUG115.12-ED8.C By Ed Ream. Screen Editor-Part 8. Operating System
Module. ->CUG114, ED2.C. [CP/M:Small C]

CUG115.13-ED9.C By Ed Ream. Screen Editor-Part 9. General Utilities.
->CUG114, ED2.C. [CP/M:Small C]

CUG115.14-ED10.C By Ed Ream. Screen Editor-Part 10. Buffer Modules.
->CUG114, ED2.C. [CP/M:Small C]

CUG115.15-CONFIG1.C By Ed Ream. Editor Configuration Utility.
Automatically generates a custom version of EDl.CCC and ED6.CCC.
->CUG114, ED2.C. [CP/M:Small C]

CUG115.16-CONFIG.C By Ed Ream. Editor Configuration. ->CUG114,
CONFIG1.C. [CP/M:Small C]

CUG115.17-CONFIG2.C By Ed Ream. Editor Configuration-Part 2. ->CUG114,
CONFIG1.C. [CP/M:Small C]

CUG115.18-CONFIG3.C By Ed Ream. Editor Configuration-Part 3. ->CUG114,
CONFIG1.C. [CP/M:Small C]

CUG115.19-INSTALL.DOC By Ed Ream. Installation Guide. Installation
Guide for Screen Editor. ->CUG114, ED2.C. [CP/M:Small C]

CUG115.20-README.DOC By Ed Ream. Guide. How to use files on this disk.
[CP/M:]

CUG115.21-GUIDE.DOC By Ed Ream. Screen Editor-User's Guide. ->CUG114,
ED2.C. [CP/M:Small C]

CUG115.22-EDSUM.DOC By Ed Ream. Screen Editor-Commands. Concise
command summary for Screen Editor and documentation on the special
characters. ->CUG114, ED2.C. [CP/M:Small C]

CUG115.23-MODULE.DOC By Ed Ream. Module Documentation. Internal
description of the screen editor. ->CUG114, ED2.C. [CP/M:Small C]

CUG115.24-SUBMIT.DSK

CUG115.25-ED3.C By Ed Ream. Screen Editor-Part 3. Command Mode
Commands. ->CUG114, ED2.C. [CP/M:Small C]

CUG115.26-C80LIB v 4.0 By Glen Fisher. Small C Runtime Library.
[CP/M:Small C]

==============================================================================
CUG116 -
-----------

CUG116.01-SAVEADV.C Source of link used to save the game. ->ADVENT.C.
[CP/M:] written under 1.43.

CUG116.02- ADVENT3.DAT Furnished Adventure data file. ->ADVENT.C.
[CP/M:] Written under BDS v. 1.43.

CUG116.03-MKEADVEN.SUB original link subs. ->ADVLINK.SUB. [CP/M:]
Written under BDS v. 1.43.

CUG116.04-HISTORY.DOC

CUG116.05-VERB.C Source used to process a transitive verb. ->ADVENT.C.
[CP/M:] Written under BDS v. 1.43.

CUG116.06-ADVENT2.DAT Furnished Adventure data file. ->ADVENT.C.
[CP/M:] Written under BDS v. 1.43.

CUG116.07-SUBMIT.DSK

CUG116.08-ADVENT5.DAT Furnished Adventure data file. ->ADVENT.C.
[CP/M:] Written under BDS v. 1.43.

CUG116.09-ENGLISH.C Another source which analyzes a two word sentence.
->ADVENT.c. [CP/M:] Written under BDS v. 1.43.

CUG116.10-ADVENT4.DAT Furnished Adventure data file ->ADVENT.C.
[CP/M:] Written under BDS v. 1.43.

CUG116.11- ADVENT.H Revised header for BDS v. 1.43 only significant
change to disk buffering. ADVENT.C. [CP/M:] Written under BDS v. 1.43.

CUG116.12-TURN.C Another source of sub-programs which has a routine to
take one turn. ->ADVENT.C. [CP/M:] Written under BDS v. 1.43.

CUG116.13-EADVENT.C Source for main operating link of Adventure.
->ADVENT.C. [CP/M:] Written under BDS v. 1.43.

CUG116.14-MKADVENT.SUB Original link subs. ->ADVLINK.SUB. [CP/M:]
Written under BDS v. 1.43.

CUG116.15-MKSAVEAD.SUB Original link sub. ->ADVLINK.SUB. [CP/M:]
Written under BDS v. 1.43.

CUG116.16-DATABASE.C Routine to fill travel array for a given
location. Source for data manipulation sub-programs. ->ADVENT.C.
[CP/M:] Written under BDS v. 1.43.

CUG116.17-ADVENT.C Main Adventure program in C. [CP/M:] Written under
BDS v. 1.43.Need the data files in order for it to run.

CUG116.18-ENVIRON.DOC By Leor Zolman. Adventure Environment. Notes
about changes and the environment the disk was written under.
[CP/M:BDS] Written under BDS v. 1.43.

CUG116.19-CATALOG.DOC

CUG116.20-READ.ME

CUG116.21-SAVEADV.COM

CUG116.22-ADVENT.COM

CUG116.23-EADVENT.COM

CUG116.24-ADVENT.CRL

CUG116.25-DATABASE.CRL

CUG116.26-EADVENT.CRI.

CUG116.27-ENGLISH.CRL

CUG116.28-ITVERB.CRL

CUG116.29-SAVEADV.CRL

CUG116.30-TURN.CRI

CUG116.31-VERB.CRL

CUG116.32-ADVCOMP.SUB Submit file for compilation of Adventure
programs. [CP/M:] Written under BDS v. 1.43.

CUG116.33-ADVLINK.SUB Submit file for linking up three Adventure
chains to get ->ADVENT.C. [CP/M:] Written under BDS v. 1.43.

CUG116.34- ADVENT1.DAT Furnished Adventure data file. ->ADVENT.C.
[CP/M:] Written under BDS v. 1.43.

CUG116.35-ADVENT6.DAT Furnished Adventure data file. ->ADVENT.C.
[CP/M:] Written under BDS v. 1.43.

CUG116.36-ITVERB.C another source with routines to process
intransitive verbs. ->ADVENT.C. [CP/M:] Written under BDS v. 1.43.

==============================================================================
CUG117 -
-----------

CUG117.01-SINGLE.SUB Submit file to copy this disk. ->CONTENTS.DOC.
This fits uses XSUB as well as PIP for the copy.

CUG117.02-COOKBOOK Doc of Software Tools etc. Documentation for the 16
Software Tool files distributed on the Software Tools Users Group
'Basic Tape'. ->BDS.DOC, CONTENTS.DOC. This file is 107KB. Some
editors may have problems.

CUG117.03-READ.ME Intro to the Software Tools. ->BDS.DOC,
CONTENTS.DOC, COOKBOOK. [CP/M 2.x:]

CUG117.04-CONTENTS.DOC Description of Software Tools. This file
describes the contents of the Software Tools disks. ->BDS.DOC,
COOKBOOK.

CUG117.05-COPY.FTN Software Tools copy test. A FORTRAN program which
uses the Software Tools routines to copy STDIN to STDOUT. Useful as a
test program and as a portable file copy program. ->BDS. DOC COOKBOOK
CONTENTS.DOC. [FORTRAN IV] Requires Software Tools subroutines.

CUG117.06-RATFOR.FOR.FTN Rational(RATFOR) Bootstrap. A FORTRAN
preprocessor which implements the portable RATFOR language given any
standard FORTRAN compiler and some additional subroutines. The
Software Tools were originally written in RATFOR for portability.
->COOKBOOK CONTENTS.DOC. FORTRAN IV]

CUG117.07-SUBMIT.DSK

==============================================================================
CUG118 -
-----------

CUG118.01-SINGLE.SUB Submit file to copy disk. [CP/M 2.x:] Uses the
XSUB program as well as PIP.

CUG118.02-TOOLS.H Software Tools Header. BDS C header file for the
Software Tools implementation. ->BDS.DOC CHANGES.DOC. [CP/M 2.x:BDS]
Contains a version of B0SC10.H and parts of RATDEF.

CUG118.03-ROFF.H ROFF- Header File. BDS C header file for the ROFF
Text Formatter. ->BDS.DOC ROFF1.BDS, CONVR2C.DOC. [CP/M 2.x:BDS]

CUG118.04-ARGS.BDS Software Tools Command Line. Software Tools command
line argument subroutines, and main() to test the STINIT subroutine.
->BDS.DOC. [CP/M 2.x:BDS]

CUG118.05-CONVERT.BDS Software Tools Type Conversion. Type Conversion
Subroutines for BDS C Software Tools. ->BDS.DOC. [CP/M 2.x:BDS] All
routines not yet converted from RATFOR. Unconverted routines are
commented out.

CUG118.06-COPY.BDS Software Tools Copy Test. Tests the Software Tools
by copying STDIN to STDOUT. ->BDS.DOC. [CP/M 2.x:BDS]

CUG118.07-DATE.BDS Software Tools Time & Date. Routines to format time
and date, and determine day of the week. -BDS.DOC. [CP/M 2.x: BDS]

CUG118.08-ECHO.BDS software Tools Test: Echo. Tests command line
argument routines of Software Tools. ->BDS.DOC. [CP/M 2.x:BDS]

CUG118.09-FILE.BDS Software -Tools I/O. BDS C file I/O routines
adapted for use with the Tools and I/O redirection. ->BDS.DOC [CP/M
2.x:BDS]

CUG118.10-MISC.BDS software Tools Miscellaneous. Miscellaneous Library
Routines for Tools & BDS C. ->BDS.DOC. [CP/M 2.x:BDS]

CUG118.11- PATTERN.BDS Software Tools Pattern & Set. Pattern Matching
and Set Manipulation Routines. BDS.DOC. [CP/M 2.x:8DS] Only ADDSTR and
ADDSET are translated and debugged.

CUG118.12-RAT2C.BDS Convert RATFOR comment lines. This tool converts
RATFOR comment lines into C comments. ->BDS.DOC. [CP/M 2.x:BDS]

CUG118.13-RAWFILE.BDS Software Tools Low Level I/O. Software Tools
lowest level I/O primitives. ->BDS.DOC. [CP/M 2.x:BDS]

CUG118.14-ROFFl.BDS ROFF Text Formatter - Part 1. A program which
reads text from a file and formats the text for printing with bold,
justification, underlining, etc. Uses the BDS C Software Tools.
->BDS.DOC. [CP/M 2.x:BDS]

CUG118.15-ROFF2.BDS ROFF Text Formatter - Part 2. A program which
reads text from a file and formats the text for printing with bold,
justification, underlining, etc. ->BDS.DOC ROFF1.BDS SYMTAB.BDS. [CP/M
2.x:BDS]

CUG118.16-STORAGE.BDS Software Tools Storage Mgmt. Interfaces to BDS C
Storage Management Routines. ->BDS.DOC, CHANGE.DOC. [CP/M 2.x:BDS]
Interface to the DSINIT routine changed from RATFOR.

CUG118.17-STRING.BDS Software Tools String Handling. Library of string
handling functions. ->BDS.DOC. [CP/M 2.x:BDS] Not all of the routines
have been debugged.

CUG118.18-SYMTAB.BDS Software Tools Symbol Table. Creation, Deletion,
Lookup Routines. ->BDS.DOC, ROFF1.BDS. [CP/M 2.x:BDS] These routines
are used by ROFF1.BDS on this disk.

CUG118.19-TOOLIB1.BDS Modified BDS C Library Functions. All the
standard BDS C library functions in C used by the Software Tools. Same
as BDS stdlib1 and stdlib2 except for routines with names changed to
avoid conflicts. ->BDS.DOC, CHANGES.DOC. [CP/M 2.x:BDS]

CUG118.20-TOOLIB1.CRL Modified Library Object Code. All the standard
BDS C library functions in C used by the Software Tools. Same as BDS
stdlib1 and stdlib2 except for routines renamed to avoid conflicts.
->BDS.DOC, TOOLIB1.BDS. [CP/M 2.x:BDS]

CUG118.21-TOOLIB2.CRL Modified BDS C Assembler. Object Code for the
BDS C assembly language routines. Some routine names have been changed
to avoid conflicts with Software Tool routine names. ->BDS.DOC,
CHANGES.DOC [CP/M 2.x:BDS]

CUG118.22-BDS.DOC Directory to Software Tools. Brief (2 sentence)
descriptions of the significance of each Software Tool primitives
file. [CP/M 2.x:]

CUG118.23-CHANGES.DOC Changes to Software Tool files. Discusses
changes made to the Software Tools User Group primitives to adapt them
to the BDS C environment. Also discusses changes made to BDS C
routines for use with Software Tools Primitives. [CP/M 2.x:]

CUG118.24-CONVR2C.DOC Details of ROFF Conversion. Doscribos the steps
which were needed in converting the Software Tools ROFF text formatter
from RATFOR to BDS C. ->BDS.DOC, CHANGES.DOC. [CP/M 2.x:]

CUG118.25-FILE.DOC Documentation of I/O Prmitives. Discussion of file
I/O primitives for the Software Tools in a BDS C environment, and how
I/O redirection was implemented. ->BDS.DOC, CHANGES.DOC. [CP/M 2.x:]

CUG118.26-LINKARGS.SUB Submit file to build ARGS.CRL. Single line
submit file which builds ARGS.CRL from the ARGS, FILE, RAWFILE, MISC,
STRING TOOLIB1, and TOOLIB2 object files. ->BDS.DOC. [CP/M 2.x:BDS]

CUG118.27-LINKCOPY.SUB Submit file to link. One line submit file to
link the Software Tools testing program called COPY. ->BDS.DOC,
COPY.BDS. [CP/M 2.x:]

CUG118.28-SYMLINK.SUB Submit file to link. Four line submit file to
link the object code from SYMTAB.BDS. ->BDS.DOC. SYMTAB.BDS. [CP/M
2.x:] Uses the XSUB program.

CUG118.29-TOOLS. SUB Submit file to compile. Submit file which
compiles all of the Software Tool primitives (except TOOLIB2) in BDS
C. ->BDS.DOC. [CP/M 2.x:] Erases all.CRL files on the default drive
except for TOOLIB2.CRL.

CUG118.30-SUBMIT.DSK

==============================================================================
CUG119 -
-----------

CUG119.01-AUGMOTU.MSS By Mark of the Unicorn. Mince-Scribble buy list.
Mark of the Unicorn Statement of known bugs/fixes as of August 1981.
[CP/M:BDS]

CUG119.02-SUBMIT.DSK

CUG119.03-BDOSUSER.ASM

CUG119.04-BIOSMEMR.ASM

CUG119.05-CATALOG.AG1

CUG119.06-TARS.C By Mark of the Unicorn. Mince Command Extensions.
Products randomly spaced tabs. Extra mince commands to set and clear
tab stops at irregular intervals. ->BINDINGS.C. [CP/M:BDS] Requires
Mince/Scribble license.

CUG119.07-CBIND. SUB Commands to make Cbind. A submit file to compile
a new bindings source and link it into a mince from .CRL files on the
B: device. ->CBIND.C. Requires Mince/Scribble license.

CUG119.08-CCPPAT.ASM

CUG119.09-COMMDWS.C By David W. Smith. Mince extensions. Mince
Extensions and Comentary. ->COMM4.C, COMM5.C. [CP/M:BDS] Requires
Mince/Scribble license.

CUG119.10-DEMO.C v 3.0 By Mark of the Unicorn. How a demo disk is
created. This file also contains the function table initialization and
mode set up functions. [CP/M:BDS] Requires Mince/Scribble License.

CUG119.11-MPTAB.C By Mark of the Unicorn. MPtab(). This is a page mode
tab, works in conjunction with the tab set/clear in TABS.C.
->BINDINGS.C, TABS.C. [CP/M:BDS] Put this at the end of BINDINGS.C.
Requires Mince/Scribble license.

CUG119.12-COPYRIGH.MSS

CUG119.13-CURLER.SUB Commands to remember Mince. A submit file to
compile all the Mince sources and pip them to the B: device.
->CBIND.SUB. [CP/M:] Requires Mince/Scribble license.

CUG119.14-MACBIND.C v 2.6 By Barry A. Dobyns. Customized Binding. This
file builds and executes macros. Broken macros, incremental search and
scroll redisplay in a bindings file. ->COMM4.C, COMM5.C. [CP/M:BDS]
Requires a Mince/Scribble license.

CUG119.15-DWSMITH.MSS By Dave W. Smith. Mince Extensions. A listing of
some additional commands derived from EMACS. Additional notes on other
Mince extensions by Dave Smith. ->COMM4.C, COMM5.C, COMMDWS.C.
[CP/M:BDS]

CUG119.16-FORMAT91.ASM

CUG119.17-LCBIND.SUB Links mince to new bindings file. A submit file
to compile a new (large) bindings source and link it to a mince.
->COMM4.C, C0MM5.C, COMMDWS.C. [CP/M:BDS]

CUG119.18-LCURLER. SUB Commands to Compile Mince. This creates the
large .CRL files for Mince and pips them to the B: device.
->LCBIND.SU8, CBIND.C. [CP/M:BDS]

CUG119.19-VIEW.C v 2.3 By Mark of the Unicorn. View Mode. Code for a
non-destructive 'view only'. Mince extension. [CP/M:BDS] Requires
Mince/Scribble license.

CUG119.20-QUARTZ.C v 2.3 By Mark of the Unicorn. Alternate Command
Set. Quarts mode code. Intended to make life easier for those who have
never had EMACS experience. ->EMACS. [CP/M:BDS] Requires Mince
Scribble license.

CUG119.21-NOTES.MSS

CUG119.22-SD.COM

CUG119.23-SD-22.ASM

CUG119.24-SEPTMOTU.MSS

CUG119.25-COMM4.C Mince Command Extensions. An optional part of the
mince command set. An example of what's been moved out of Comm(1-3)
and put after the -1 on the L2 Command line. [CP/M:BDS] Requires
Mince/Scribble license.

CUG119.26-UGFORM.MSS

CUG119.27-COMM5.C By Mark of the Unicorn. Mince Command Extensions.
Lots of Mince commands and extensions. ->COMM4.C. [CP/M:BDS] Requires
Mince/Scribble license.

CUG119.28-CBIND.C v 3.0 By Mark of the Unicorn. Mince Bindings for
Emacs. Customized bindings which includes a new command MINSRGN()
which inserts a file at the point (along with some other things). Can
be made to look like EMACS ^R Insert files with little problems.
[CP/M:BDS] Requires Mince/Scribble license.

CUG119.29-MLIST.C A poor excuse for mailing list manager. [CP/M:BDS]
Requires Mince/Scribble license.

==============================================================================
CUG120 -
-----------

CUG120.01-#CATALOG.017 Catalog of files on this disk.

CUG120.02-DIO45.C v 1.45 By Leor Zolman. DIO45. Directed input/output
simulation for BDS C. [CP/M:BDS]

CUG120.03-SUBMIT.DSK

CUG120.04-NOBOOT.C By Leor Zolman. NOBOOT. Modifies a BDS C program
.COM file so that the CCP is preserved and a warm boot is not done on
termination. [CP/M:BDS] The library function topofmem returns a value
which is 2100H bytes too larqe (i.e. the value for the original,
unmodified program.)

CUG120.05-CP.C By Leor Zolman. CP. File copy utility. ->FPUT.
[CP/M:BDS]

CUG120.06-L2.DOC v 2.1 By Scott W. Layson. L2 (C Linker).
Documentation for L2.C. It eliminates the jump table at the beginning
of each function in the object code, thus saving up to 10% in code
space.->L2.C.

CUG120.07-XC.DOC v 1.0 By Phillip N. Hisley. XC. Documentation for XC.
[CP/M:BDS]

CUG120.08-CRCK4.COM CRCK4. Computes a cyclical redundancy check value
(CRC) for one or more files. [CP/M:]

CUG120.09-CRCKLlST.CRC CRCK4. List of CRC values for the files on this
disk.

CUG120.10-META40.H v 1.0 By W.A.Gale, Jan Larsson. META4 Header.
Header file for Dr. W. A. Gale's META4 compiler-compiler from DDJ
August 1981. ->META40.C. [CP/M:BDS]

CUG120.11-META43.C v 1.0 By W.A.Gale, Jan Larsson. META4-PART 3.
[CP/M.BDS]

CUG120.12-META40.C v 1.0 By W.A.Gale, Jan Larsson. META4- Part 1. Dr.
W.A. Gale's META4 compiler-compiler from DDJ August 1981. [CP/M:BDS]

CUG120.13-USERCODE.C By Leor Zolman. USERCODE. Extend the filename
syntax for ALL file I/O to allow a user area prefix of the form n/ on
all filenames. [CP/M 2.x:BDS] Doesn't work for writing a file into a
different user area than the currently active one because of a CP/M
bug.

CUG120.14-META41.C v 1.0 By W.A. Gale, Jan Larsson. META4-Part 2.
->META40.C. [CP/M:BDS]

CUG120.15-#HISTORY.017 Modification history for programs on this disk.

CUG120.16-META43.C Define file I/O and the pack/unpack functions CR'S
are filtered and the ER variable is set/reset in the file I/O
functions. ->META40.C. include META40.h.

CUG120.17-M4.COM v 1.0 By W.A.Gale, Jan Larsson. META4. executable
file for Dr. W.A. Gale's META4 compiler-compiler from DDJ August 1981.
[CP/M:80S]

CUG120.18-DIO45.H v 1.45 By Leor Zolman. DIO45. Directed input/output
simulation for BDS C. [CP/M:BDS]

CUG120.19-XC.C v 1.0 By Phillip N. Hisley. XC. A cross-reference
utility for C programs. It has the ability to handle nested include
files to a depth of 8. [CP/M:BDS]

CUG120.20-SCOTT.C By Scott Layson. SCOTT. Scott Layson's personal
miscellaneous function library. [CP/M:BDS]

CUG120.21-META4.MET v 1.0 By W.A.Gale, Jan Larsson. META4. META4
source code for META4 to M4 translator. ->MEETA40.C META4.M4.
[CP/M:BDS]

CUG120.22-META4.M4 v 1.0 By W.A.Gale, Jan Larsson. META4. M4 code for
META4 to M4 translator. ->META4.MET, META40.C. [CP/M:BDS]

CUG120.23-META4.DOC v 1.0 By W.A. Gale, Jan Larsson. META4
Documentation. [CP/M:BDS]

CUG120.24-META4LNK.SUB v 1.0 By W.A. Gale, Jan Larsson. META4. Submit
file to link Dr. W. A. Gale's META4 compiler-compiler from DDJ August
1981. [CP/M:BDS]

CUG120.25-META4COM.SUB v 1.0 By W.A. Gale, Jan Larsson. META4. Submit
file to compile Dr. W. A. Gale's META4 compiler-compiler from DDJ
August 1981. [CP/M:BDS]

CUG120.26-CB.C By William C. Colley, Rick Hollinbeck. C beautifier. A
pretty-printer for C source code. [CP/M:BDS v 1.44]

CUG120.27-CHARIO.C By Scott W. Layson. CHARIO. Character oriented file
I/O.

CUG120.28-L2.C By Scott W. Layson. L2. An improved linker for .CRL
format object files. The Jump table at the beginning of each function
is eliminated. ->CLINK. [CP/M:BDS]

CUG120.29-MAKOVL.C By Scott W. Layson. L2. Variation of L2 that
creates relocatable overlays according to an overlay descriptor file.
->CLINK. [CP/M:BDS]

==============================================================================
CUG121 -
-----------

CUG121.01-DSW.C v 1.0 By Cal Thixton. Dsw - delete files selectively.
Lists a partial or entire directory, one entry at a time, on the
console and prompts for each file to be deleted. Optionally, the
directory entry may be sorted before prompting. [CP/M:BDS v. 1.50]
Requires files.c for link. Handles a maximum of 12 files (easily
changed).

CUG121.02-CALL.DAT v 1.0 By Mike W. Meyer. Sample data file for call.
Contains the name/phone number cross reference used by call. ->CALL.C.
[CP/M:]

CUG121.03-CALL.DOC Documentation for the CALL program CALL.DAT,
CALL.C. [CP/M:]

CUG121.04-DATEUP.C v 1.0 By Mike W. Meyer. Date up. Updates registers
of the Compute clock/calendar board. ->DATE.H (header file), DATE.C
(display clock/calendar). [CP/M:BDS v. 1.50] Requires Computime
clock/calendar board. Not very user friendly.

CUG121.05-CCC. WC

CUG121.06-CRCK4.COM v 4.2B By Keith Peterson. Crck4 - a crc generation
program. This is the .com file only for the standard crc generation
program. It is supplied so that users of the volume may verify the
files they have received. [CP/M:] To use, enter: crck4 x:*.* where x
denotes drive distribution diskette. Crck4 will list crcs for all
files on the volume, which can be compared with crcklist.crc (the crcs
on the master distribution diskette).

CUG121.07-FILES.C v 1.0 By Mike W. Meyer, Cal Thixton. Functions for
ambiguous filenames. Contains the following functions used by other
program on this disk: (1) filelist converts ambiguous file descriptors
to unambiguous file descriptors, (2) nameok takes an input file
descriptor (ambiguous or unambiguous) and creates a list of
unambiguous file descriptors in the supplied table, (3) pickout
extracts the name from a CP/M fcb. [CP/M:BDS v. 1.50]

CUG121.08-DATE.DOC

CUG121.09-DATE.H v 1.0 By Mike W. Meyer. Header file for date/dateup.
->DATE.C, DATEUP.C. [CP/M:BDS v. 1.50]

CUG121.10-FSEEK.C v 1.0 By Mike W. Meyer. Fseek - routines for more.c.
This module provides two functions: (1) fseek - seek to a character
position in file, and (2) ftell says where in file you are. These
provide UNIX-like facilities for character seek and positional query
to BDS C programs. [CP/M:BCS v. 1.50]

CUG121.11-DATEUP.DOC

CUG121.12-DOGLOB.H v 1.0 By Steve Blasingame. Header file for sh. This
header file is used by sh, the 'little shell'. ->SH.C. [CP/M:BDS v.
1.50]

CUG121.13-IF.C v 1.0 By Steve Blasingame. If - conditionally execute
commands. Executes any other program (passing command line arguments
if specified) when a conditional test is met. The following conditions
may be tested: file exists/does not exist file is read-only/read-write
string arguments are equal/unequal. ->SH.C. [CP/M:BDS v. 1.50]
Copyright (c) 1982, Steve Blasingame. Requires local.c for link. Will
not run any built-in (CCP) commands from IF.

CUG121.14-DSW.DOC

CUG121.15-FCB.H v 1.0 Header file for files(). This header file is
used by files and sdir. ->FILES.C, SDIR.C. [CP/M:BDS v. 1.50]

CUG121.16-LOCAL.C v 1.0 By Mike W. Meyer, Steve Kenton. Misc functions
used on this disk. Contains functions used by call.c if.c, tel.c and
t1370.c. The following functions are included: abort(), barf(),
sign(), stacktop(), strncat (), strncmp(), strncpy(), strlower(),
strupper(), strindex(), index(), findline(), getdph(), extract(),
mputs(), mputc(), moready(), mgetc(), miready(), hayesput (),
hayesget(), globarg(), posarg(). [CP/M:BDS v. 1.50] Contains some
functions that are not used by anything on this disk, but may be of
general interest or use.

CUG121.17-FILES.DOC

CUG121.18-MORE.C v 1.0 By Mike W. Meyer. More - list file(s) to
terminal. Lists one or more files, a page (or a user-selectable
amount) at a time, on the console. The names of the files to be listed
are supplied as arguments on the command line; if no arguments are
given the user is prompted for filename(s). [CP/M:BDS v. 1.50]
Requires fseek.c for link. The LERASE #define must be customized for
the user's terminal.

CUG121.19-FSEEK.DOC

CUG121.20-DATE.C v 1.0 By Mike W. Meyer. Display date from Computime
board. Extracts the date and time from the Computime clock/calendar
board and displays it on the console. ->DATE.H (header file), DATEUP.C
(update clock/calendar). [CP/M:BDS v. 1.50] Requires Computime
clock/calendar board.

CUG121.21-IF.DOC

CUG121.22-SDIR.C v 1.0 By Steve Blasingame. Sdir - sorted directory
list. Produces a sorted directory list on the console, with four
directory entries per line. ->ZDIR.C (another directory 1 later).
[CP/M:BDS v. 1.50] Copyright (c) 1982, Steve Blasingame. Requires
fcb.h for compile and files.c for link. Handles a maximum of 128 files
(easily changed).

CUG121.23-LOCAL.DOC

CUG121.24-LOCAL.H v 1.0 By Mike W. Meyer, Steve Kenton. Header file
for local(). ->LOCAL.C. [CP/M:BDS v. 1.50]

CUG121.25-SETUP.C v 1.0 By Mike W. Meyer. Inits teleray 10 function
keys. Assigns strings to function keys 1-4 of a teleray 10 terminal.
[CP/M:BDS v. 1.50] Requires a Teleray 10 terminal. Sets the function
keys to values hard-coded in the program.

CUG121.26-PLOT.C v 1.0 By Mike W. Meyer. An Epson plotting package.
Reads an input file of plot points and sends commands to an Epson-like
printer to plot these points via the graphics modes. Contains useful
general purpose plot routines which could be extracted to form a
library. ->PLOT.H (header file), PLOT.DAT (sample data file).
[CP/M:BDS v. 1.50] Copyright (c) 1982, JTL Computer Services. Requires
local.h and plot.h for compile. Requires local.c for link. Requires
Epson MX-80 with Graftrax.

CUG121.27-ML2.DOC

CUG121.28-SH.C v 2.2 By Steve Blasingame. A 'little shell' command
interpreter. The little shell is designed to provide a 'UNIX-like'
shell for CP/M, replacing the CP/M CCP as the primary user interface.
It provides two convenient mechanisms for chaining commands together:
they may be typed on a single line, separated by commas; or files of
commands called Shell scripts may be executed. The CP/M operating
environment does not lend itself to the use of frequently invoked
commands in the form of executable files. Consequently, the shell has
an extensive array of built-in commands, including: cat, ccp, cd, clr,
echo, exit. [CP/M:BDS v. 1.50] Copyright (c) 1982 Steve Blasinqame.
Requires doglob.h and fcb.h for compile.

CUG121.29-MORE.DOC

CUG121.30-TEL.C v 1.0 By Leor Zolman, Leo Kenen, Cal Thixton, Mike W.
Meyer. Tel - dumb terminal + file xfer. Tel is a considerably modified
version of Telnet v. 2.3, as distributed with v1.46 of the BDS C
compiler. The following features have bean added: multiple files may
be transmitted or received by one command, directories may be listed,
and the quit command hangs up a Hayes Smart modem. To accommodate
these changes, some of the command names have been changed. This
program uses a modem to emulate a dumb terminal. Incoming data may be
buffered in memory and written to disk, data may be transmitted from
disk to the modem, or files may be formally transferred in a checksum
mods with automatic handshaking and buffering. ->CALL.C, TELNET.C,
TL370.C. [CP/M:BDS v. 1.50] Requires local.c and files.c for link. The
checksum file transfer does not follow the XMODEM protocol. Variable
baud rate support is present, but commented out (hardware-specific
coding would be required to implement it). Tel assumes that the CP/M
console is much faster than the modem (e.g. a 1200+ baud console with
a 300 baud modem).

CUG121.31-PLOT.DAT v 1.0 By James Jones. Sample data file suitable for
use with plot. ->PLOT.C, PLOT.H. [CP/M:BDS v. 1.50]

CUG121.32-PLOT.DOC

CUG121.33-PLOT.H v 1.0 By Mike W. Meyer. Header file for plot.
->PLOT.C, PLOT.DAT. [CP/M:BDS v. 1.50]

CUG121.34-XD.C v 1.0 By Mike W. Meyer. Xd - hexadecimal dump. Dumps a
file to the console in one or more of three formats: ascii, hex (2
digits/byte) or word (standard 8080 format, assuming low byte first).
[CP/M:BDS v. 1.50] Copyright (c) 1981, Mike W. Meyer.

CUG121.35-SDIR.DOC

CUG121.36-TL370.C v 1.0 By Leor Zolman, Leo Kenen, Ken Lonquest. TL370
- dumb terminal with file xfer. TL370 emulates a dumb terminal.
Incoming data may be buffered in memory and written to disk, data may
be transmitted from disk to the modem, or files may be formally
transferred in a 'checksum' mode with automatic handshaking and
buffering. TL370 is a modified version of Telnet v. 2.3, as
distributed with v1.46 of the BDS C compiler. The modification
consists of the addition of optional XON/XOFF handshaking for file
transmission. ->CALL.C, TEL.C, TELNET.C. [CP/M:BDS v. 1.50] Requires
local.c for link. The checksum file transfer does not follow the
XMODEM protocol. TL370 assumes that the CP/M console is much faster
than the modem (e.g. a 1200+ baud console with a 300 baud modem).

CUG121.37-SETUP.DOC

CUG121.38-SH.DOC

CUG121.39-ZDIR.C v 1.0 By Steve Blasingame. Produce a directory
listing. Produces a directory list on the console, with six directory
entries per line. Optionally, the output may be sorted and/or written
to a disk file as well. ->SDIR.C (another directory lister). [CP/M:BDS
v. 1.50] Requires files.c for link. Handles a maximum of 128 files
(easily changed).

CUG121.40-ML2.C v 1.0 By Scott W. Layson, Stephen M. Kenton. ML2 -
modified L2 linker. A version of Scott Layson's L2 linker which has
been modified to produce MP/M modules. The only usage change is the
addition of the -r flag which will start the specified runtime file at
the specified address, then build the rest of the module after it.
[CP/M:BDS v. 1.50] Requires chario.c for link (this is supplied with
the distributed version of L2).

CUG121.41-TEL.DOC

CUG121.42-CATALOG

CUG121.43-TL370.DOC

CUG121.44-CALL.C v 1.0 By Mike W. Meyer. Call - dial phone numbers.
Uses the auto-dial features of the Hayes Smartmodem to dial phone
numbers by name. ->CALL.DAT (phone number file), CALL.NRO (unformatted
doc, CALL.DOC (formatted doc file). [CP/M:BDS v. 1.50] Copyright (c)
1981, Mike W. Meyer. Requires local.c for link. Uses Hayes Smartmodem
or compatible.

CUG121.45-XD.DOC

CUG121.46-CCC.C v 1.0 Ccc - a command driver for BDS C. Takes global
flags, and one or more sets of local flags plus filenames. It builds a
submit file to compile all the .C files and link the output with the
remaining files, using the L2 linker. [CP/M:BDS v. 1.50] Copyright (c)
1981, Mike W. Meyer. The link step uses the L2 linker; prohibiting
access to current L2 overlay stuff (the -m, -org, -ovl flags are
passed to the compiler).

CUG121.47-ZDIR.DOC

CUG121.48-CRCKLIST.CRC

==============================================================================
CUG122 -
-----------

CUG122.01-ARITH v. 2.0 By Earnest E. Bergmann. Pistol's Arithmetic
Operators. Documentation on Arithmetic operators for on-line use.
Pistol-Portably Implements Stack Oriented Language. ->PISTOL.
[CP/M:BDS v. 1.45a]

CUG122.02-IO v. 2.0 By Earnest E. Bergmann. I/O Operations.
Documentation on input/output related operations for on line use.
->PISTOL. [CP/M:BDS]

CUG122.03-STACK v. 2.0 By Earnest E. Bergmann. Menu for Stack words.
Documentation on Stack related words for on-line use. ->PISTOL.
[CP/M:BDS]

CUG122.04-DEFS v. 2.0 By Earnest E. Bergmann. Definitional Operators.
Documentation on definitional operators. ->PISTOL. [CP/M:BDS v. 1.45a]

CUG122.05-PIST2B.C v. 2.0 By Earnest E. Bergmann. Third Source Module.
->PISTOL. [CP/M:BDS]

CUG122.06-PIST2C.C v. 2.0 By Earnest E. Bergmann. Fourth Source
Module. ->PISTOL. [CP/M:BDS]

CUG122.07-PIST2E.C v. 2.0 By Earnest E. Bergmann. Sixth Source Module.
->PISTOL. [CP/M:BDS]

CUG122.08-PISTOL.C v. 2.0 By Earnest E. Bergmann. Main Source Module
for Pistol. [CP/M:BDS]

CUG122.09-PISTOL.H v. 2.0 By Earnest E. Bergmann. Help for Pistol
source. Constants and externals for Pistol. ->PISTOL. [CP/M:BDS]

CUG122.10-PIST2A.C v. 2.0 By Earnest E. Bergmann. Second Source
Module. ->PlSTOL. [CP/M:BDS]

CUG122.11-MEMOPS v. 2.0 By Earnest E. Bergmann. Memory Related
Operators. Documentation for memory related functions for on-line use.
->PISTOL. [CP/M:BDS]

CUG122.12-ITCOND v. 2.a By Earnest E. Bergmann. Iteration and
conditional menu. Documentation on iteration Al and conditionals for
on-line USQ. ->PISTOL. [CP/H:BDS]

CUG122.13-EDITOR v. 2.0 By Earnest E. Bergmann. Documentation on
Pistol supplied editor for on-line use. ->PISTOL. [CP/M:BDS v. 1.45a]

CUG122.14-PISTSUB.SUB

CUG122.15-MISC v. 2.0 By Earnest E. Bergmann. Documentation on
miscellaneous utility for on-line use. ->PISTOL. [CP/M:BDS]

CUG122.16-SYSVARS v. 2.0 By Earnest E. Bergmann. Documentation on the
systems variables for on-line use. ->PISTOL. [CP/M:BDS]

CUG122.17-SYSCONS v. 2.0 By Earnest E. Bergmann. Documentation on the
systems constants for on-line use. ->PISTOL. [CP/M:BDS]

CUG122.18-TUTORIAL v. 2.0 By Earnest E. Bergmann. Documentation for
starting users for on-line use and may be typed out as well. ->PISTOL.
[CP/M:BDS]

CUG122.19-VOCAB v. 2.0 By Earnest E. Bergmann. Vocabulary Words.
Documentation on vocabulary maintenance for on-line use. ->PISTOL.
[CP/M:BDS]

CUG122.20-PISTOL.HLP

CUG122.21-PBASE2 v. 2.0 By Earnest E. Bergmann. Basic Defs for Pistol.
Pistol source code used to educate PISTOL.COM to be as smart as
described in PISTOL.DOC. ->PISTOL. [CP/M:BDS]

CUG122.22-CORE2 By Earnest E. Bergmann. Core. A Core Image that
results from compiling PBASE2. ->PISTOL. [CP/M:BDS v. 1.45a]

CUG122.23-READ.ME

CUG122.24-PISTOL.PAS v. 2.0 By Earnest E. Bergmann. 42 K Pascal
version of Pistol that runs on a Dec-20 Mainframe computer. It also
helps to define the way Pistol is created. ->PISTOL. [CP/M:BDS]

CUG122.25-COPY.RIT

CUG122.26-FUTURS.DEV v. 2.0 By Earnest E. Bergmann. Documentation on
future directions for PISTOL and suggests some standards. ->PISTOL.
[CP/M:BDS v. 1.45a]

CUG122.27-LOGIC v. 2.0 By Earnest E. Bergnann. Menu for Loqic.
Documentation for logic related operations for on-line use.->PISTOL.
[CP/M:BDS]

CUG122.28-PISTOL.COM

CUG122.29-ENVIRON.DOC v. 2.0 By Earnest E. Bergmann. Documentation
about the Environment PISTOL was developed under and sugqests at least
44K RAM total. [CP/M:BDS v. 1.45a]

CUG122.30-CATALOG.DOC

CUG122.31-SUBMIT.DSK

CUG122.32-PIST2D.C v. 2.0 By Earnest E. Bergmann. Fifth Source Module.
->PISTOL. [CP/M:BDS]

==============================================================================
CUG123 -
-----------

CUG123.01-CATALOG

CUG123.02-PP.C By Robert T. Pasky. A preprocessor using the C syntax
described by K&R and based on the macro processor in RATFOR. Has
#include file capability and symbolic parameter substitution.
[CP/M:BDS]

CUG123.03-DATE.H By Edward K. Ream. Header for time and date.
[CP/M:BDS] Hardware specific to SSI clock board.

CUG123.04-DIO.DOC By Edward K. Ream. Documentation on the DIO Package.
->D10.C. [CP/M:BDS]

CUG123.05-TR.COM

CUG123.06-TR.DOC By Edward K. Ream. Documentation on the TR Package.
->TR.C. [CP/M:BDS]

CUG123.07-TOD.BDS By Oscar Goldman. Hardware specific (for SSI board).
Displays date and time. [CP/M:BDS]

CUG123.08-PP.COM

CUG123.09-PP.DOC By Edward K. Ream. PP Package Documented. -> PP.C.
[CP/M:BDS]

CUG123.10-AR1.BDS By Oscar Goldmam. Archive-BDS C. v. ARCHIVE software
tool. Collects sets of arbitrary files into one big file and maintains
that file as 'archive'. [CP/M:BDS] Works for text files only!.

CUG123.11-AR1UTIL.BDS By Edward K. Ream, Oscar Goldman. Supplementary
routines for archive program. ->AR1.BDS. [CP/M:BDS]

CUG123.12-AR1.COM

CUG123.13-AR1.DOC By Edward K. Ream. AR1 Documented. ->AR1.BDS.
[CP/M:BDS]

CUG123.14-DIO.C By Edward K. Ream. Directed I/O package for BDS C. DIO
is a package which, when linked together with a BDS C program,
provides that program with UNIX-like features. ->DIR.DOC. [CP/M:BDS]

CUG123.15-DIO.H By Edward K. Ream. Changes from the old DIO.H to the
new which is included here. ->DIO.C. [CP/M:BDS]

CUG123.16-DATESSI.BDS By Oscar Goldman. Date and Time routines for
ARCHIVE and for Software tools. [CP/M:BDS]

CUG123.17-SUBMIT.DSK

CUG123.18-TR.C By Robert T. Pasky. Transliteration Filter. The
transmit software tool which copies the standard input to the standard
output with substitution or deletion of selected characters. ->TR.DOC.
[CP/M:BDS]

==============================================================================
CUG124 -
-----------

CUG124.00-MSCRIBE.TEX By Mike Meyers. Users manual for scribble macro
package. ->TEX.C. [CP/M:BDS]

CUG124.01-CEDIT.C v. 1.1 By Parlo Prandini. CEDIT Utility. Source code
for the Epson MX-80 Character editor. ->TEX.C. [CP/M:BDS]

CUG124.02-TEXUMAN.TEX By Mike Meyers. Users manual for TEX. ->TEX.C.
[CP/M:BDS]

CUG124.03-INSTALL.GDE By Mike Meyers. Installation Guide for TEX.
->TEX.C. [CP/M:BDS]

CUG124.04-TEX.COM

CUG124.05-MBASIC.TEX By Mike Meyers. TEX macro guide. Users guide for
basic macro package. ->TEX.C. [CP/M:BDS]

CUG124.06-HACKERS.TEX By Mike Meyers. TEX hackers guide. A manual for
those dissatisfied with the way TEX works. ->TEX.C. [CP/M:BDS]

CUG124.07-MACRO.TEX By Mike Meyers. Macro Package for TEX. Generic
macro package manual. This file is used to get a copy of a single
macro package document, change the macro command to have the
appropriate argument, and run it. ->TEX.C. [CP/M:BDS]

CUG124.08-BASIC.TEX By Mike Meyers. Basic Macro Package. ->TEX.C.
[CP/M:BDS]

CUG124.09-OPT12.FON By Mike Meyers. Optima-like font. ->TEX.C.
[CP/M:BDS]

CUG124.10-BASIC.TEX

CUG124.11-SCRIBE.TEX By Mike Meyers. Scribe Macro Package. ->TEX.C,
MSCRIBE.TEX. [CP/M:BDS]

CUG124.12-SBASIC.TEX By Mike Meyers. The basic macro commands without
the math commands. ->TEX.C, BASIC.TEX. [CP/M:BDS]

CUG124.13-MATH1.FON By Mike Meyers. First Math Font. ->TEX.C,
MATH2.FON. [CP/M:BDS]

CUG124.14-MATH2.FON By Mike Meyers. Second Math Font. ->TEX.C
MATH1.FON. [CP/M:BDS]

CUG124.15-SCRIBE+.TEX By Mike Meyers. Scribe macro package with math
commands. ->TEX.C. [CP/M:BDS]

CUG124.16-#CATLOG.DSK

CUG124.17-CEDIT.CRL

CUG124.18-CEDIT.COM

CUG124.19-MASTER.CHR By Paolo Prandini. Epson MX-80 master character
set. ->CEDIT.C. [CP/M:BDS]

CUG124.20-SUBMIT.DSK

CUG124.21-TEX.C By Mike Meyers. Small Tex. A stripped down version of
Knuth's TEX for micros. This uses the Fancy font/Epson system for
output device. [CP/M:BDS]

==============================================================================
CUG125 -
-----------

CUG125.01-CATALOG.DOC v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Table of contents. ->README. DOC. [ :BDS] Osborne 1, DEC
vt52.

CUG125.02-LIBVT52.C v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Library of video terminal routines that use control codes
for the DEC vt52. ->LIBVT52.NRO. [PDP-11, VAX:BDS] Drives only DEC
vt52; does not drive IBM PC video.

CUG125.03-LIB01.C v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Library of video terminal routines that use control codes
for the Osborne 1. ->LIB01.NRO. [CP/M:BDS] Runs only on Osborne 1.

CUG125.04-LIBVT52.NRO v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Input file to NRO.COM to document the LIBVT52.C terminal
library functions. ->LIBVT52.C. [PDP 11, VAX:BDS] DEC vt52 only; NRO
does not run on an IBM PC with DOS 2.1.

CUG125.05-NRO.COM v. 1.0 VIDEO TERMINAL LIBRARIES. Text formatter
similar to roff and wordstar; based on the design found in 'Software
Tools' by Kernighan and Plauger. ->NRO.MAN. [CP/M:] Does not run on an
IBM PC with DOS 2.1; probably written with 8080 assembler and a
different disk format; binary file. No source code provided on this
disk.

CUG125.06-DEFLECT.NRO v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Input file to NRO.COM to document the game DEFLECT.
->DEFLECT.C. [CP/M:] Only Osborne 1 and DEC vt52 routines coded. NRO
does not run on an IBM PC with DOS 2.1. DEFLECT requires BDSCIC.H
hedder file not found on this disk.

CUG125.07-DEFLECT.C v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Rewrite of R.H. Halstad's Polish Pong (PPONG.C) with
conversion for vt52 terminal. ->DEfLECT.NRO. [CP/M:BDC C] Requires
video routines linked.

CUG125.08-CLRSCRN.NRO v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Input fits to NRO.COM to document the clrscn() routine in
the libraries. ->NRO.MAN, LIBO1.C, LIBVT52.C. [CP/M:] Only Osborne 1
and DEC vt52 routines coded, NRO does not run on an IBM PC with DOS
2.1.

CUG125.09-HOMCUR.NRO v. 1.0 By Stephen L. Browning. VIDEO TERMINAl
LIBRARIES. Input file to NRO.COM to document the homcur() function to
place the cursor in the home position (the upper left corner of the
screen). ->LI801.C, LIBVT52.C. [CP/M:] Only Osborne 1 and DEC vt52
routines coded; NRO does not run on an IBM PC with DOS 2.1.

CUG125.10-MOVCUR.NRO v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Input file to NRO.COM to document the movcur() routine to
move the cursor to one of eight adjacent screen coordinates. ->LIB01.C
L18VT52.C NRO.MAN. [CP/M:BDS] Only Osborne 1 and DEC vt52 routines
coded; NRO does not run on an IBM PC with DOS 2.1.

CUG125.11-SETCUR.NRO v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Input file to NRO.COM to document the set cur(x,y) function
to move the cursor to a specific position on the screen based on x and
y coordinates both being equal to zero when the cursor is in the lower
left corner of the screen. ->LIB01.C, DECVT52.C. [CP/M:] Only Osborne
1 and DEC vt52 routines coded; NRO.COM does not run on an IBM PC with
DOS 2.1. Probably written with 8080 assembler and a different disk
format; binary file. No source code provided on this disk.

CUG125.12-ERALIN.NRO v. 1.0 By Stephen L. Browning. VIDEO TERMINAB
LIBRARIES. Input file to NRO.COM to document the eralin() routine to
erase a line. ->NRO.MAN, LIB01.C, LIBVT52.C. [CP/M:] Only Osborne 1
and DEC vt52 routines coded; NRO does not run on an IBM PC with DOS
2.1.

CUG125.13-VTTT.NRO v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Input file to NRO.COM to document the VTTT game. ->VTTT.C,
LIBO1.C, LIBVT52.C. [CP/M:] Only Osborne 1 and DEC vt52 routines
coded; NRO.COM does not run on an IBM PC with DOS 2.1. Probably
written with 8080 assembler and a different disk format; binary file.
No source code provided on this disk.

CUG125.14-CRT.H v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Header file of parameter definitions for use with video
terminal library; parameters define adjacent coordinates on the
screen. ->LIB01.C, LIBVT52.C. [CP/M:BDS] Only Osborne 1 and DEC vt52
routines coded.

CUG125.15-LIB01.NRO v. 1.0 By Stephen B. Browning. VIDEO TERMINAL
LIBRARIES. Input file to NRO.COM to document the LIB01.C terminal
library functions. ->LIB01.C. [CP/M:BDS] Osborne 1 only- NRO does not
run on an IBM PC with DOS 2.1.

CUG125.16-README.DOC v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Brief description of programs on this disk. ->NRO.MAN.

CUG125.17-NRO.NRO v. 1.0 VIDEO TERMINAL LIBRARIES. Input file to
NRO.COM to document the NRO.COM text formatter. ->NRO.MAN. [CP/M:]
NRO.COM does not run on an IBM PC with DOS 2.1; probably written with
8080 assembler and a different disk format; binary file. No source
code provided on this disk.

CUG125.18-NRO.MAN v. 1.0 VIDEO TERMINAL LIBRARIES. Manual to NRO.COM.
->NRO.NRO. NRO.COM does not run on an IBM PC with DOS 2.1; probably
written with 8080 assembler and a differont disk format; binary file.
No source code provided on this disk.

CUG125.19-ASCII.H v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. List of ASCII control characters and their decimal
equivalents 1-37. [CP/M, MS-DOS:all] Not all defined.

CUG125.20-VTTT.C v. 1.0 By Stephen L. Browning. VIDEO TERMINAL
LIBRARIES. Video Tic Tac Toe game. ->VTTT.NRO. [CP/M:BDS] Requires
Video terminal routines linked. Runs only on Osborne 1 and DEC vt52.

CUG125.21-SUBMIT.DSK

==============================================================================
CUG126 -
-----------

CUG126.01-MARTZ-JR.C By Eric Martz. Source code for functions
beginning with J-R in Martzlib.c. ->MARTZLIB.C. [CP/M:BDS]

CUG126.02-MARTZ-EI.C By Eric Martz. Source code for functions
beginning with E-I in Martzlib.c. ->MARTZLIB.C. [CP/M:BDS]

CUG126.03-MARTZ-SZ.C By Eric Martz. Source code for functions
beginning with S-Z in Martzlib.c. ->MARTZLIB.C. [CP/M:BDS]

CUG126.04-MARTZ-AD.C By Eric Martz. Source code for functions
beginning with A-D in Martzlib.c. ->MARTZL18.C. [CP/M:BDS]

CUG126.05-DMAP.C By Eric Martz. Source for DMAP which displays disk
block allocations for a file. ->ANYDISK, DISKDOC. [CP/M:BDS]

CUG126.06-HIPLOT.C By Eric Martz. Library of low level functions for
Houston Instruments Pen Plotter. ->HIPLOT.H. [CP/M:BDS]

CUG126.07-GETC.C By Eric Martz. BDS geta() explained and modified for
K&R compatibility. ->FIO1, FIO2, FIO3. [CP/M:BDS]

CUG126.08-FIO2.H By Eric Martz. Provide K&R standard fopen() and
fclose() for BDS. ->FI03.H, FIO1.H. [CP/M:BDS]

CUG126.09-FIO3.H By Eric Martz. Provide K&R standard fopen() and
fclose() for BDS. Useful for portability to other C Compilers. ->FIO1,
FIO2. [CP/M:BDS]

CUG126.10-HIPLOT.H By Eric Martz. Header for HIPLOT. ->HIPLOT.C.
[CP/M:BDS]

CUG126.11-D.COM

CUG126.12-FIO1.H By Eric Martz. Provide K&R standard fopen() and
fclose() for BDS. Useful for portability to other C compilers. ->FIO3,
FIO2. [CP/M:BDS]

CUG126.13-MARTZLIB.C By Eric Martz. Library Functions. Includes 43
general purpose functions. ->MARTZ-AD, MARTZ-EI, MARTZ-JR, MARTZ-SZ.
[CP/M:BDS]

CUG126.14-PUTC.C By Eric Martz. BDS putc with an stat dump. [CP/M:BDS]

CUG126.15-DMAP.COM

CUG126.16-RANIOLIB.C By Eric Martz. Library for randy file I/O,
appending to file. [CP/M:BDS]

CUG126.17-MARTZLIB.CRL

CUG126.18-CATALOG.000

CUG126.19-A-OPEN.C By Eric Martz. Open for appending. [CP/M:BDS]

CUG126.20-FACSPLOT.C By Eric Martz. Power Tools. Example of program
using HIPLOT.C. ->HIPLOT.C. [CP/M:BDS]

CUG126.21-RAWGETC.C By Eric Martz. BDS getc qets explained. ->GETC.C.
[CP/M:BDS]

CUG126.22-HIPLOT.CRL

CUG126.23-SUBMIT.DSK

CUG126.24-BDSCIO+.H By Eric Martz. Additions to the standard BOSCIO.H.
[CP/M:BDS]

==============================================================================
CUG127 -
-----------

CUG127.01-CATALOG.000

CUG127.02-READ.ME

CUG127.03-DIABLO.SS By Eric Martz. Rap SS file for Diablo printer.
->RAP.C. [CP/M:BDS]

CUG127.04-DEFF.CRL

CUG127.05-DEFP2.CRL

CUG127.06-DEFF3.CRL

CUG127.07-RAP1.C By Eric Martz. Rap Source Code. ->RAP.C. [CP/M:BDS]

CUG127.08-FIO1.H

CUG127.09-FIO2.H

CUG127.10-FIO3.H

CUG127.11-L2.COM

CUG127.12-RAP2.C By Eric Martz. Rap Source Code. ->RAP.C. [CP/M:BDS]

CUG127.13-RAP.COM

CUG127.14-RAP3.C By Eric Martz. Rap Source Code. ->RAP.C. [CP/M:BDS]

CUG127.15-RAP4.C By Eric Martz. Rap Source Code. ->RAP.C. [CP/M:BDS]

CUG127.16-RAPIO.C By Eric Martz. Rap Source Code. ->RAP.C. [CP/M:BDS]

CUG127.17-BDSCIO+.H By Eric Martz. Nonstandard extensions for
BOSCIO.H. ->RAP.C. [CP/M:BDS]

CUG127.18-RAP.C v. 2.2 By Eric Martz. Rap Source Code. ->RAPREAD.C.
[CP/M:BDS]

CUG127.19-RAPREAD.C By Eric Martz. Rap Source Code. ->RAP.C.
[CP/M:BDS]

CUG127.20-KAP.H By Eric Martz. Heater file for all RAP source code
modules. ->RAP.C. [CP/M:BDS]

CUG127.21-RAPLINK.SUB By Eric Martz. Submit file to link Rap. ->RAP.C.
[CP/M:BDS]

CUG127.22-SANDERS.SS By Eric Martz. SS file for Sanders 12/7 dot
Matrix multi-font printer. ->RAP.C. [CP/M:BDS]

CUG127.23-SIMPLEPR.SS By Eric Martz. SS file for a rudimentary
printer. ->RAP.C. [CP/M:BDS]

CUG127.24-SIMPLEV.SS By Eric Martz. SS file for a rudimentary CRT.
->RAP.C. [CP/M:BDS]

CUG127.25-TTY43.SS By Eric Martz. SS file for teletype Model 43.
->RAP.C. [CP/M:BDS]

CUG127.26-VIEWAAA.SS By Eric Martz. SS file for Ann Arbor Ambassador
CRT. ->RAP.C. [CP/M:BDS]

CUG127.27-VIEWADDS.SS By Eric Mdrtz. SS file for Adds Viewpoint CRT.
->RAP.C. [CP/M:BDS]

CUG127.28-VIEWTRS2.SS By Eric Martz. SS file for Radio Shack TRS 80
Model II CRT. ->RAP.C. [CP/M:BDS]

CUG127.29-SUBMIT.DSK

==============================================================================
CUG128 -
-----------

CUG128.01-CATALOG

CUG128.02-COPY.RIT

CUG128.03-ENVIRON.DOC v 1.6 By Earnest E. Bergmann. System
Requirements. ->ROFF4.DOC. [CP/M:BDS]

CUG128.04-EQN By Earnest E. Berg Mann. Demonstrates macro use for
equation numbering. ->ROFF4.C. [CP/M:BDS]

CUG128.05-EXY1 By Earnest E. Berg Mann. Exidy video output for
scientific symbols. ->ROFF4.C. [CP/M:BDS]

CUG128.06-FOOT By Earnest E. Berg Mann. A demo with footnoting
experience. ->ROFF.C. [CP/M:BDS]

CUG128.07-FORM By Earnest E. Bergmann. Demonstration creating form
letters. ->ROFF.C. [CP/M:BDS]

CUG128.08-KAYPRO By Earnest E. Bergmann. Modified to use Kaypro IV
Video characters. ->ROFF4.C. [CP/M:BDS]

CUG128.09-L2.COM

CUG128.10-LIST By Earnest E. Bergmann. Initialize to list programs
with page breaks. ->ROFf4.C. [CP/M:BDS] No backward slashes should be
used and 1 tries should not start with double quotes.

CUG128.11-MARGINS By Earnest E. Berg Mann. Test program for top and
bottom page and pagination. ->ROFF4.C. [CP/M:BDS]

CUG128.12-MATRIX By Earnest E. Bergmann. Demonstrates positional
control for equations. ->ROFF4.C. [CP/M:BDS]

CUG128.13-ML92 By Earnest E. Bergmann. Initialize for Okidata
microline 92 printer. ->ROFF4.C. [CP/M:BDS]

CUG128.14-MX80 By Earnest E. Bergmann. Initialize for Epson MX-80 with
Graftrax. ->ROFF4.C. [CP/M:BDS]

CUG128.15-NEC3525 By Earnest E. Bergmann. Tech Math/ Times Roman.
Initialization for NEC printer with tech math/Times Roman. ->ROFF4.C.
[CP/M:BDS]

CUG128.16-NEST By Earnest E. Bergmann. Demonstration for nesting
macro's and string substitutions. ->ROFF4.C. [CP/M:BDS]

CUG128.17-NETEST By Earnest E. Bergmann. Demo or test of the .ne
command to see that it works properly even with first line on a page.
->ROFF4.C. [CP/M:BDS]

CUG128.18-ONE By Earnest E. Bergmann. Test used with SOREST.
->ROFF4.C. [CP/M:BDS]

CUG128.19-PAGES By Earnest E. Bergmann. Test for pagination and other
related functions such as titles. ->ROFF4.C. [CP/M:BDS]

CUG128.20-PROWRITE By Earnest E. Bergmann. Initialization for
Prowriter Printer Series. ->ROFF4.C. [CP/M:BDS] A seven bit mode is
assumed.

CUG128.21-READ.ME By Earnest E. Bergmann. Comments on the Roff4
formatter in public domain. ->ROFF4.C. [CP/M:BDS]

CUG128.22-ROFF41.C v. 1.6 By Earnest E. Bergmann. Source Module for
Roff. ->ROFF4.C. [CP/M:BDS]

CUG128.23-ROFF4161.COM

CUG128.24-ROFF4.DOC v. 1.6 By Earnest E. Bergmann. documentation of
Roff4 formatter. ->ROFF4.C. [CP/M:BDS]

CUG128.25-ROFF4.SUB By Earnest E. Bergmann. Submit file to create
Roff4.com from sources. ->ROFF4.C. [CP/M:BDS]

CUG128.26-ROFF42.C v. 1.6 By Earnest E. Bergmann. Source Module for
Roff. ->ROFF4.C. [CP/M:BDS]

CUG128.27-ROFF4.C v. 1.6 By Earnest E. Bergmann. A formatter for users
with different hardware. [CP/M:BDS]

CUG128.28-ROFF44.C v. 1.6 By Earnest E. Bergmann. Source Module for
Roff. ->ROFF4.C. [CP/M:BDS]

CUG128.29-ROFF45.C v. 1.6 By Earnest E. Bergmann. Source Module for
Roff. ->ROFF4.C. [CP/M:BDS]

CUG128.30-ROFF46.C v. 1.6 By Earnest E. Bergmann. Source Module for
Roff. ->ROFF4.C. [CP/M:BDS]

CUG128.31-ROFF47.C v. 1.6 By Earnest E. Bergmann. Source Module for
Roff. ->ROFF4.C. [CP/M:BDS]

CUG128.32-ROFF43.C v. 1.6 By Earnest E. Bergmann. Source Module for
Roff. ->ROFF4.C. [CP/M:BDS]

CUG128.33-SCI.ASM

CUG128.34-SCI.COM

CUG128.35-SOTEST By Earnest E. Bergmann. Test and demo for nested .so
commands. ->ROFF4.C. [CP/M:BDS]

CUG128.36-THREE By Earnest E. Bergmann. Sotest help. ->ROFF4.C,
SOTEST. [CP/M:BDS]

CUG128.37-TWO By Earnest E. Bergmann. So test help. ->ROFF4.C, SOTEST.
[CP/M:BDS]

CUG128.38-UPGRADES.LST By Earnest E.Bergmann. Changes from v. 1.50 to
v. 1.60. ->ROFF4.C. [CP/M:BDS]

CUG128.39-ROFF4.CAT

CUG128.40-ROFF4161.C

CUG128.41-ROF41161.C

CUG128.42-ROFF4161.SUB

CUG128.43-SUBMIT.DSK

CUG128.44-ROFF4161.DOC

CUG128.45-ROFF4.H v. 1.6 By Earnest E. Bergmann. Common Declarations
-- Roff. ->ROFF4.C. [CP/M:BDS]

==============================================================================
CUG129 -
-----------

CUG129.01-210ROOMB.C Citadel Room Cue. ->210CTDL.C, 210ROOMA.C.
[CP/M:BDS]

CUG129.02-210ROOMA.C v. 2.0 ->210CTDL.C, 210ROOMB.C. [CP/M:BDS]

CUG129.03-210LOG.C v. 2.0 User Log Code. ->210CTDL.C. [CP/M:BDS]

CUG129.04-210CONFG.C Citadel configuration and initialization
routines. ->210CTDL.C. [CP/M:BDS]

CUG129.05-210CTDL.C v. 2.0 Citadel BBS. A room oriented electronic
bulletin board system. This file contains the command-interpreter.
->AABUYM.DOC, INSTALL.DOC, HACK.DOC. [CP/M:BDS]

CUG129.06-210MODEM.C v. 2.0 Lowlevel modem/console code. ->210CTDL.C.
[CP/M:BDS] This code is machine dependent.

CUG129.07-210CTDL.H Header file included by all source files.
->210CTDL.C. [CP/M:BDS]

CUG129.08-CLRAY.C Sysop utility which displays order of received
calls. ->210CTDL.C. [CP/M:BDS]

CUG129.09-CTDLCHNG.C By H. A. White. A sysop utility. Allows fast
changes of CTDLCNFG.sys parameters. ->210CTDL.C. [CP/M:BDS]

CUG129.10-CLOG.C v. 2.1 By H. A. White. Display CITADEL Log. This
sysop utility displays users in the order they are shown in the
Citadel log. ->210CTDL.C. [CP/M:BDS]

CUG129.11-RECOVER1.C By H. A. White. Allows sysop to recover killed
rooms. ->210CTDL.C. [CP/M:BDS] This only works for room slots which
have been killed.

CUG129.12-EXPAND.C v. 1.2 By H. A. White. Expands a msg file.
->210CT0L.C. [CP/M:BDS]

CUG129.13-210MSG.C v. 2.0 Message file code. ->210CTDL.C. [CP/M:BDS]

CUG129.14-210MISC.C v. 2.0 ->210CTDL.C. [CP/M:BDS]

CUG129.15-INSTALL.DOC Documentation on installing CITADEL on a new
system. ->210CTDL.C. [CP/M:]

CUG129.16-CTDL.SUB

CUG129.17-CFG.SUB

CUG129.18-WARRANTY.DOC By C & S SOFTWARE. ->210CTDL.C. [CP/M:]

CUG129.19-AAABUYME.DOC Overview of the system. ->210CTDL.C. [CP/M:]

CUG129.20-COUNTRY.DOC List of country codes, for configuration.
->210CTDL.C. [CP/M:]

CUG129.21-HACK.DOC Explains the basic data structures and algorithm
210CTDL.C. [CP/M:]

CUG129.22-HISTORY.DOC By David Mitchell. Brief history of the package.
->210CTDL.C. [CP/M:]

CUG129.23-OPERATR.DOC General documentation, hints and comments on
running the system. ->210CTDL.C. [CP/M:]

CUG129.24-UTIL.DOC Documentation on the use of utility programs.
->210CTDL.C. [CP/M:]

CUG129.25-CATALOG.CAT

CUG129.26-1STREAD.ME

CUG129.27-CTSTUFF.DOC v. 2.4 Documentation on bug fixes and
enhancements. ->210CTDL.C. [CP/M:]

CUG129.28-2NDREAD.ME

CUG129.29-ENTRY.BLB On-line help file. ->210CTDL.C. [CP/M:]

CUG129.30-NEWROOM.BLB On-line help file. ->210CTDL.C. [CP/M:]

CUG129.31-NOCHAT.BLB On-line help file. ->210CTDL.C. [CP/M:]

CUG129.32-PASSWORD.BLB On-line help file. ->210CTDL.C. [CP/M:]

CUG129.33-WCDOWN.BLB On-line help file. ->210CTDL.C. [CP/M:]

CUG129.34-WCUPLOAD.BLB On-line help file. ->210CTDL.C. [CP/M:]

CUG129.35-CTDLOPT.MNU Sysop Functions. ->210CTDL.C. [CP/M:]

CUG129.36-EDIT.MNU On-line help file. ->210CTDL.C. [CP/M:]

CUG129.37-ENTOPT.MNU Enter options. ->210CTDL.C. [CP/M:]

CUG129.38-MAINOPT.MNU On-line help file. ->210CTDL.C. [CP/M:]

CUG129.39-READOPT.MNU Read options.->210CTDL.C. [CP/M:]

CUG129.40-AIDE.MNU Priviledge aide functions. ->210CTDL.C. [CP/M:]

CUG129.41-AIDE.HLP On-line help file. ->210CTDL.D. [CP/M:]

CUG129.42-ENTER.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.43-EXTENDED.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.44-GOTO.HLP

CUG129.45-HIDDEN.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.46-LOGIN.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.47-LOGOUT.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.48-MAIL.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.49-READ.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.50-SUMMARY.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.51-LOCALBBS.HLP On-line help file. Phone numbers for help.
->210CTDL.C. [CP/M:]

CUG129.52-FILES.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.53-HOURS.HLP

CUG129.54-HELPOPT.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.55-DOHELP.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.56-SKIP.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.57-FORGET.HLP On-line help file. ->210CTDL.C. [CP/M:]

CUG129.58-L2.COM

CUG129.59-CLRAY.COM

CUG129.60-CLOG.COM

CUG129.61-RECOVER1.COM

CUG129.62-EXPAND.COM

CUG129.63-CTDLCHNG.COM

CUG129.64-CITADEL.COM

CUG129.65-CONFIGUR.COM

CUG129.66-CTDLCNFG.SYS

CUG129.67-SUBMIT.DSK

==============================================================================
CUG130 -
-----------

CUG130.01-BIOS.LIB v. 1.44 By Rick Hollinbeck. Standard Machine
Language. Modified bios() function that preserves the hl register for
the seldsk functions. [CP/M:BDS]

CUG130.02-SCN.LIB General formatted input conversion routine. Called
by Scanf. [CP/M:BDS]

CUG130.03-DISKIO.DCL v. 1.44 Bios call numbers, for standard bios
library function. ->DISKIO.C. [CP/M:BDS]

CUG130.04-VMAIN.C By Greg Lister. An exercise for VOILE. ->VFILE.C.
[CP/M:BDS]

CUG130.05-MAKEDEF.H By Jan Larsson. ->MAKESYS.C. [CP/M:BDS]

CUG130.06-DISKIO.C Disk i/o functions. These provide read/write level
interface to CP/M disk facilities. ->DISKIO.DCL. [CP/M:BDS]

CUG130.07-MAKEHEX.C By Jan Larsson. Part of MAKESYS which contains
routines for reading Intel standard HEX files. ->MAKESYS.C. [CP/M:BDS]

CUG130.08-SUBMIT.DSK

CUG130.09-CATALOG.020

CUG130.10-MAKESYS.DOC By Jan Larsson. Makesys documentation.
->MAKESYS.C. [CP/M:BDS]

CUG130.11-MAKESYS.C By Larsson. MAKESYS is a program useful for those
constantly modifying their CP/M 2.2 BIOS modules. ->MAKESYS.DOC
[CP/M:BDS]

CUG130.12-RY.H By Steve Passe. ->RY.C. [CP/M:BDS]

CUG130.13-RY.C By Steve Passe. Library of File Handlers. Update to
randomx.c on Functions I(CUG#102). Consists of a set of functions that
allow direct random access to a disk file. ->RANDOMX. [CP/M:BDS]
Requires z80.

CUG130.14-DPATCH.C v. 1.44 By Rick Hollinbeck. Disk Patcher.
[CP/M:BDS] For 1.44 BDS.

CUG130.15-MAKELIB.C By Jan Larsson. ->MAKESYS.C. [CP/M:BDS]

CUG130.16-BDOSCOM.C By Nick Hammond. Stat. Tutorial and functions for
manipulating CP/M disks, accessing disk parameters headers, etc.
[CP/M:BDS]

CUG130.17-MAKESYS.SUB By Jan Larsson. ->MAKESYS.C. [CP/M:BDS]

CUG130.18-GCO.C v. 1.0 By Steve Platter. This routine creates a
standard inverse video character set for the EXIDY sorcerer. The
inverse character generator resides in both the standard and user
graphics areas. [CP/M:BDS]

CUG130.19-LONG.C By Paul J. Gans. Long Integer Package. These
functions together with the z80 assembly language coded routine Li
constitute a packaqe to provide long integer capability to BDS C via
function calls similar to floating point package. ->LONG.DOC.
[CP/M:BDS]

CUG130.20-YACCRL.DOC By Earl T. Cohen. Documentation of YACCRL
generator. ->YACCRL.C. [CP/M:]

CUG130.21-VFILE.C v. 1.0 By Greg Lister. Consists of five functions
which simulate a 'BASIC RANDOM FILE' structure using fixed length
records of varying pre-specified size. [CP/M:BDS]

CUG130.22-G82.ASM

CUG130.23-G81.ASM

CUG130.24-GZO.ASM

CUG130.25-G80.ASM

CUG130.26-BS.USE By Steve Passe. Explains how to search and maintain a
sorted file using RY functions. ->RY.C, RY.DOC. [CP/M:BDS]

CUG130.27-RYTEST.C By Steve Passe. The random file code tester.
->RY.C. [CP/M:BDS]

CUG130.28-RY.DOC By Steve Passe. RY Documentation. ->RY.C. [CP/M:]

CUG130.29-VIEW.C v. 1.0 By Rick Hollinbeck. View. A disk block viewer
for CP/M. [CP/M:BDS] For BDS v. 1.44, needs addressable cursor, uses
diskio and bios.lib.

CUG130.30-B.C v. 1.1 Directory Header. This program prints out a
sorted directory listing similar to that which would be produced by
combination of STAT and LIST. [CP/M:BDS]

CUG130.31-DISKU.C v. 2.4 By Robert Pasky. Disk Utility. This program
allows the operator to examine and modify a CP/M disk, either single
density or Micromation's double density. [CP/M:BDS]

CUG130.32-LONG.DOC By Paul Gans. Long Integer Documentation. ->LONG.C.
[CP/M:]

CUG130.33-LONGCODE.MAC Long. Long is a facility to allow long integers
to be handled in BDS C. ASM code for long package. ->LONG.C. [CP/M:]

CUG130.34-RY.USE By Steve Passe. Tutorials on the use of RY codes.
->RY.C. [CP/M:BDS]

CUG130.35-LX.CRL

CUG130.36-YACCRL.C By Earl T. Cohen. CRL file generator which does
most of the bookkeeping for you. ->CASM. [CP/M:BDS] this requires an
assembler that produces a listing to a disk file, superceded by CASM.

CUG130.37-MAKEPARM.C By Jan Larsson. ->MAKESYS.C. [CP/M:BDS]

==============================================================================
CUG131 -
-----------

CUG131.01-SUBMIT.DSK

CUG131.02-ACRL.CAT By W. Lemiszki. ACRE. Catalog of source files for
ACRL. ->L2, CLINK, ACRL.C.

CUG131.03-ACRL.H v. 2.0 By W. Lemiszki. ACRL. Header file for ACRL.
->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.04-ACRL.C v. 2.0 By W. Lemiszki. ACRL. A relocatable 8080
assembler which produces .CRL files for use with CLINK. ->L2, CLINK.
[CP/M 2.x:BDS v. 1.50]

CUG131.05-APAR.C v. 2.0 By W. Lemiszki. ACRL. Parsing routines for
ACRL. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.06-AI.EX.C v. 2.0 By W. Lemiszki. ACRL. Lexical analyzer (token
recognizer) for ACRL. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.07-AEXP.C v. 2.0 By W. Lemiszki. ACRL. Expression evaluator for
ACRL. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.08-A8080.C v. 2.0 By W. Lemiszki. ACRL. Code generator for
ACRL. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.09-ACRL.DOC v. 2.0 By W. Lemiszki. ACRL. Documentation for
ACRE. ->L2, CLINK, ACRL C. [CP/M 2.x:BDS v. 1.50]

CUG131.10-TESTl.CSM v. 2.0 By W. Lemiszki. ACRL. Tests pseudo-ops and
expression evaluation for ACRL. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v.
1.50]

CUG131.11-TEST2.CSM v. 2.0 By W. Lemiszki. ACRL. Test all 8080
instructions for ACRL. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.12-TEST3.CSM v. 2.0 By W. Lemiszki. ACRL. Test error checking
and reporting for ACRL. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.13-CCACRL.SUB v. 2.0 By W. Lemiszki. ACRL. Compile all modules
for ACRl. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.14-LINKACRL.SUB v. 2.0 By W. Lemiszki. ACRL. Link all modules
for ACRL. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.15-BDS.EQU v. 2.0 By W. Lemiszki. ACRL. Compressed BDS.LIB for
ACRL. ->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.16-ACRL.COM By W. Lemiszki. ACRL. An assembler for .CRL files.
->L2, CLINK, ACRL.C. [CP/M 2.x:BDS v. 1.50]

CUG131.17-FPUT.CAT By W. Lemiszki. FPUT. Catalog of files for FPUT.
->FPUT.C. [CP/M 2.x:BDS v. 1.50]

CUG131.18-FPUT.C By W. Lemiszki. FPUT. A file copy utility which
allows files to be moved between CP/M user area and which accepts a
script file to control the transfer. [C/PM 2.x:BDS v. 1.50]

CUG131.19-FPUT.DOC By W. Lemiszki. FPUT. Manual page for FPUT.
->FPUT.C. [C/PM 2.x:BDS v. 1.50]

CUG131.20-CATALOGS.DOC By W. Lemiszki. FPUT. Manual page describing
FPUT. [C/PM 2.x:BDS v. 1.50]

CUG131.21-FPUT.COM By W. Lemiszki. FPUT. [CP/M 2.x:BDS v. 1.50]

CUG131.22-READ.ME By W. Lemiszki. Author's address and brief
descriptions of ACRL and FPUT.

==============================================================================
CUG132 -
-----------

CUG132.01-README.DOC By A.J. Griggs. Griggs Documentation. A
user's/programmer's manual for the 6809 implementations or Ron Cain's
Small C Compiler, and the graphics driver/support package for the
Radio Shack Color Computer. ->COLORLIB.A68. [CP/M:]

CUG132.02-SERIO.C Serial Transfer Utility. Program to provide serial
I/O from the CP/M system on a SSM IO4 board. ->SER6809, SER69.
[CP/M:BDS]

CUG132.03-SHOOT1.C Target Shooting Game -- Part 2. ->SHOOT.C.
[CP/M:Small C]

CUG132.04-PRELUDE Graphics Package -- Prelude. Increase stack space
available to a Small C program. [CP/M:Small C]

CUG132.05-FPASSO.C Graphics Package -- Assembly. Tests if an object
needs updating. Erases objects which do. ->COLORLIB.A68. [CP/M:]

CUG132.06-SHOOT. GPH Object Definitions. 6809 Assembly Language file
which defines the required objects for a simple target-shoot game.
->SHOOT.C. [CP/M:]

CUG132.07-FPASS2.C Graphics Package -- Assembly. Calling functions.
Writes new objects. ->COLORLIB.A68. [CP/M:]

CUG132.08-GRAPH.H Graphics Package -- Header. ->COLORLIB.A68. [CP/M:]

CUG132.09-COLORLIB.A69 By A.J. Griggs. Graphics package -Modules.
Lower level graphics primitives to erase or write an object.
[CP/M:BDS]

CUG132.10-LIB Graphics Package. ->COLORLIB.A68. [CP/M:]

CUG132.11-RUN 6809 Macro Definitions. Macro's to define extensions to
the 6800 instructions set. [CP/M:]

CUG132.12-RUN6809.A69 Small C -- Runtime Package. ->CANEW.C. [CP/M:]

CUG132.13-CB.C By Ron Cain, A.J. Griggs. Small C -- Part 2. ->CANEW.C.
[CP/M:BDS]

CUG132.14-CD.C By Ron Cain A.J. Griggs. Small C -- Expression parser.
->CANEW.C. [CP/M:BDS]

CUG132.15-CDEF.H v. 1.1 By Ron Cain, A.J. Griggs. Definitions.
->CANEW.C. [CP/M:BDS]

CUG132.16-CWRTINI.C By A.J. Griggs. Graphics Package -- Part 2. Part
of the 6809 Color Computer Graphics Package. ->COLORLIB.A68.
[CP/M:Small C]

CUG132.17-CE6809.C By Ron Cain, A.J. Griggs. Small C -- Code
generator. ->CANEW.C. [CP/M:BDS]

CUG132.18-CWRITER.C By A.J. Griggs. Graphics Package -- Part 1.
Routine to process object description lists. ->COLORLIB.A68.
[CP/M:Small C]

CUG132.19-PASS1.C Graphics Package. Checks for interaction between
objects. ->COLORLIB.A68, FPASS1.A68. [CP/M:Small C]

CUG132.20-PASS2.C Graphics Package. Writes updated objects to display.
->COLORLIB.A68, FPASS2.A68. [CP/M:Small C]

CUG132.21-SHOOT.H Shoot Header. ->SHOOT.C. [CP/M:Small C]

CUG132.22-SHOOTINI.C Target Shooting game -- Initilization list.
->SHOOT.C. [CP/M:Small C]

CUG132.23-SUBMIT.DSK

CUG132.24-PASSO.C Graphics Package. Checks for objects requiring
update. ->FPASS0.A68 COLORLIB.A68. [CP/M:Small C]

CUG132.25-SHOOT1.H69 ->SHOOT.C. [CP/M:]

CUG132.26-SHOOT.C Target Shooting Game -- Part 1. A simple
target-shooting game that demonstrates the use of the qraphics
package. ->SHOOT.GPH, CWRITER.DOC. [CP/M:Small C]

CUG132.27-FPASS1.C Graphics Package -- Assembly. Checks for overlaps.
->COLORLIB.A68. [CP/M:]

CUG132.28-DLOAD Downline Loader. Utility to download files from 6809
Assembly Source. ->README.DOC. [CP/M:]

CUG132.29-CWRITER.DOC By A.J. Griggs. Documentation for CWRITER.
->CWRITER.C, COLORLIB.A68. [CP/M:Small C]

CUG132.30-SERIO.COM

CUG132.31-SER69.A69 Serial Input Functions. Similar to SER6809.
->SER6809. [CP/M:]

CUG132.32-CANEW.C By Ron Cain, A.J. Griggs. Small C -- Part 1.
Starting Module of Small C Cross-compiler which generates 6809
assembly code. [CP/M:BDS] This Small C is not self-compiling. Requires
BDS v. 1.41 or better.

CUG132.33-CANEW.COM

CUG132.34-SER6809 Serial Input Functions. Assembly language modules to
support serial I/0 on the Radio Shack Color Computer. ->SER69.A69.
[CP/M:]

CUG132.35-BLDC.SUB

CUG132.36-BDSCIO.H v. 1.41 BDSC Header File. [CP/M:BDS]

==============================================================================
CUG133 -
-----------

CUG133.01-E.DOC v. 4.6 By G. Nigel Gilbert. Tutorial Guide. A tutorial
guide and Implementation Manual. ->E. [CP/M:BDS]

CUG133.02-E.H By G. Nigel Gilbert. Header file for E. Standard header
file, #included in all function files. ->E. [CP/M:BDS]

CUG133.03-E2 By G. Nigel Gilbert. E Screen Editor -- Part 2. Functions
to perform text changing commands. ->E. [CP/M:BDS]

CUG133.04-E4 By G. Nigel Gilbert. E Screen Editor -- Part 4. Functions
to perform find, alter, and repeat commands. ->E. [CP/M:BDS]

CUG133.05-E3 By G. Nigel Gilbert. E Screen Editor -- Part 3. Functions
to write text to screen. ->E. [CP/M:BDS]

CUG133.06-E5 By G. Nigel Gilbert. E Screen Editor-- Part 5. Functions
to read and write files. ->E. [CP/M:BDS]

CUG133.07-E6 By G. Nigel Gilbert. E Screen Editor -- Part 6. This
performs block commands. ->E. [CP/M:BDS]

CUG133.08-E7 By G. Nigel Gilbert. E Screen Editor -- Part 7. Low level
terminal I/0 functions. ->E. [CP/M:BDS]

CUG133.09-E8 By G. Nigel Gilbert. E Screen Editor -- Part 8. Functions
to get and put text lines into ad out of storage. ->E. [CP/M:BDS]

CUG133.10-E9 By G. Nigel Gilbert. E Screen Editor -- Part 9. Manages
virtual memory. ->E. [CP/M:BDS]

CUG133.11-E10 By G. Nigel Gilbert. E Screen Editor -- Part 10. A file
buffer operation extracted and stripped from stdlio1 with protection
from bdos error crashes added. ->E. [CP/M:BDS]

CUG133.12-ETERM By G. Nigel Gilbert. E Screen Editor -Terminal I/0.
Televideo version of terminal dependent screen control functions. ->E.
[CP/M:BDS]

CUG133.13-EHAZE By G. Nigel Gilbert. E Screen Editor -Terminal I/0.
Hazeltine 1500 version of terminal dependent screen control functions.
->E. [CP/M:BDS]

CUG133.14-EKAY By G. Nigel Gilbert. E Screen Editor -Terminal I/0.
Kaypro II version of terminal dependent screen control functions. ->E.
[CP/M:BDS]

CUG133.15-EADDS By G. Nigel Gilbert. E Screen Edttor -Terminal I/O.
Adds revision of terminal dependent screen control functions. ->E.
[CP/M:BDS] This file is specific to the ADDS range of terminals.

CUG133.16-EDEC52 By G. Nigel Gilbert. E Screen Editor -Terminal I/O.
DECVT52 version of terminal dependent screen control functions. ->E.
[CP/M:BDS] This file is specific to the DECVT52 Visual 50 and Visual
55 terminals.

CUG133.17-E.SUB

CUG133.18-E.COM

CUG133.19-L2.COM

CUG133.20-NEWFOR48

CUG133.21-TEXTCOM.DOC By G. Nigel Gilbert. Textcom documentation.
->TEXTCOM. [CP/M:BDS]

CUG133.22-TEXTCOM v. 1.7 By G.N. GILBERT. 'Text comparison utility.'
Compares two text files printing differences, attempts to
re-synchronise after finding differences. [CP/M:BDS]

CUG133.23-TEXTCOM.SUB

CUG133.24-INFO.DOC By G. Nigel Gilbert. Table of Contents. A listing
and description of the files on CUG133. [CP/M:]

CUG133.25-E1 By G. Nigel Gilbert. E. Screen Editor -- Part 1. Prints
directory, files, getnum are all functions in this flle. ->E.
[CP/M:BDS]

CUG133.26-E v. 4.8 By G. Nlgel Gilbert. E Screen Editor -- Part 0. A
full screen text editor with pop-down submenus. Features a simple
command set virtual memory and comprehensive protection from disk
errors. Easily adapted to various terminals. ->CUG114, CUG115 CUG151,
CUG158, CUG157. [CP/M:BDS]

==============================================================================
CUG134 -
-----------

CUG134.01-CORO.H By Kevin Kenny. Definitions. ->CORO1.C. [CP/M:BDS]

CUG134.02-CPROFILE.C By Kevin Kenny. Profiler for C. A profiler for
BDS C programs which runs a user program (the 'target command' in the
synopsis) and counts the number of times that each source statement
was executed. [CP/M:BDS]

CUG134.03-CMDUTIL.NRO By Kevin Kenny. Subroutine library -manual.
[CP/M:]

CUG134.04-CTOA.H By Kevin Kenny. Externals for CTOA. ->CTOA.C. [CP/M:]

CUG134.05-DIFF.NRO By Kevin Kenny. DIFF -- manual page. ->DIFF.C.
[CP/M:BDS]

CUG134.06-CORO.NRO By Kevin Kenny. C Functions -- manual page. [CP/M:]

CUG134.07-CORO1.C By Kevin Kenny. Coroutine Package for BDS. The
portions of BDS C coroutine package that are implemented in C.
[CP/M:BDS]

CUG134.08-C0R02.CSM By Kevin Kenny. Assembly Language. Assembly
language definitions of auxiliary functions needed by the BDS C
coroutine manager. ->CORO1.C. [CP/M:BDS]

CUG134.09-CMDUTIL.C By Kevin Kenny. Command utilities. This package
contains a variety of functions useful for writing command processors,
including a standard command line argument. [CP/M:BDS]

CUG134.10-CATALOG.DOC Documentation Source Codes. A complete catalog
of the files on CUG134 including the documentation files and the
source codes. [CP/M:]

CUG134.11-INSTALL.DOC By Kevin Kenny. Installation Guide. [CP/M:BDS]

CUG134.12-README.DOC An overall description of the disk. [CP/M:]

CUG134.13-CORODOC.NRO By Kevin Kenny. Coroutine Package -Doc.
[CP/M:BDS]

CUG134.14-AN.NRO By Kevin Kenny. NRO macro definitions to support
generation of manual pages. [CP/M:BDS]

CUG134.15-CTOATBLS.H By Kevin Kenny. Include file for tables.
->CTOATBLS.CSM. [CP/M:BDS]

CUG134.16-CASM2.C By Kevin Kenny. File Postprocessor-2. ->CTOA.C.
[CP/M:BDS]

CUG134.17-CPROFILE2.CSM By Kevin Kenny. BDS Profiler -Assembly. The
assembly language functions needed by the BDS C profiler program.
->CPROFILE.C [CP/M:BDS]

CUG134.18-CASM2.C By Leon Zolman. A modified version of CASM with some
bug fixes. An ASM preprocessor. [CP/M:BDS] This file available only to
licensed users of BDS C.

CUG134.19-DIFF.C By Kevin Kenny. DIFF -- File Comparator. Diff
performs a comparison between two ASCII files, and lists the
differences on the console or to a redirected output. [CP/M:BDS]

CUG134.20-CPROFILE.NRO By Kevin Kenny. Profiler -- manual page.
->CPROFILE.C. [CP/M:BDS]

CUG134.21-GENREL.C By Kevin Kenny. Service Program. Program to
generate a relocation directory in a .cal file. It is intended for
applications which need to move code around at run time in a C program
->CPROFILE.C. [CP/M:BDS]

CUG134.22-RETAB.C By Kevin Kenny. Example Coroutine. Illustrates the
use of Coroutines to simulate UNIX-style pipelines. [CP/M:BDS]

CUG134.23-CMDUTIL.H By Kevin Kenny. Standard header file for programs
using the 'cmdenv' functions. ->CMDUTIL.C. [CP/M:BDS]

CUG134.24-CTOA.NRO By Kevin Kenny. Documentation for the
postprocessor. ->CTOA.C. [CP/M:BDS]

CUG134.25-CTOA.C By Kevin Kenny. Postprocessor CRL-ASM. CTOA is a
postprocessor intended to produce the assembly language equivalent of
a BDS C program. [CP/M:BDS]

CUG134.26-CTOATBLS.CSM By Kevin Kenny. Constant Table for CTOA. This
file contains two functions which return pointers to constant tables.
->CTOA.C. [CP/M:BDS]

CUG134.27-PIP.CMD

CUG134.28-SUBMIT.DSK

==============================================================================
CUG135 -
-----------

CUG135.01-PRIME.C By Hugh S. Meyers. Probabalistic Primality. This
program uses algorithm P (Probabilisitic primality test) from
'Seminumerical Algorithms'. ->MATH.CSM. P.C. [CP/M:BDS]

CUG135.02-VLI.CRL

CUG135.03-VLI.CSM By Hugh S. Meyers. Math Package Interface. A front
end for Math.crl. Contains all of the named subroutine calls for BDS
as well as all of the housekeeping necessary to use math.crl. Contains
37 Functions. ->MATH.CSM. [CP/M:BDS] 8080 Assembly.

CUG135.04-MATH.CRL

CUG135.05-MATH.CSM By Hugh S. Meyers, M.G. Dinneley, Thomas Hill. High
Precision Math Library. Very high precision math subroutine package.
This version has corrected errors as well as making the transition to
BDS CSM format. ->VLI.CSM, E.C, RATC.C, PRIME.C, GR1.C, P.C.
[CP/M:BDS] 8080 Assembly.

CUG135.06-V.C By Hugh S. Meyers. VLI Examples. A series of examples on
VLI function calls as compiled, a demonstration of how they work in
source. ->MATH.CSM. [CP/M:BDS]

CUG135.07-QPM.CRL

CUG135.08-QPM.CSM By Hugh S. Meyers. Primality Tests. Contains two
functions that test either a string or an integer for primality.
->MATH.CSM. [CP/M:BDS] 8080 Assembly.

CUG135.09-M.C By Hugh S. Meyers. Fermit's primality test. An
implementation of Fermits Little Theorem as a practical test of
primality for micro computers. ->MATH.CSM. [CP/M:BDS]

CUG135.10-RATC.C By Hugh S. Meyers. Ration version of VLI. Set of
rational number functions (add, subtract, multiply, divide) as an
extension to the system. ->MATH.CSM. [CP/M:BDS]

CUG135.11-E.C By Hugh S. Meyers. Napier's Constant. Proqram that does
nothing but compute E to some desired number of digits beyond the
decimal. ->MATH CSM. [CP/M:BDS] Requires MATH.CSM.

CUG135.12-P.C By Hugh S. Meyers. Algorithm P. a probabilist primality
test. ->PRIME.C, MATH.CSM. [CP/M:BDS]

CUG135.13-SQR1.C By Hugh S. Meyers. Exponential Approximations. A
demonstration of how an S100 computer and BDS C can compute
1.000000^134217728 with 50 digit accuracy.->MATH.CSM. [CP/M:BDS]

CUG135.14-READ.ME

CUG135.15-SUBMIT.DSK

CUG135.16-CALC.C By Hugh S. Meyers. RPN Calculator. A reverse Polish
programmable calculator based somewhat an HPIIC. ->MATH.CSM.
[CP/M:BDS] Requires Math.csm.

==============================================================================
CUG136 -
-----------

CUG136.01-DUMPSTAR.COM v. 1.00 By R. Rodman. DUMPSTAR. ->DUMPSTAR.C.
[CP/M:]

CUG136.02-TZ2.C v. 0.29 By R. Rodman. TZ -- Part 2. [CP/M, MS-DOS,
TOS:C/80, Aztec, Alcyon]

CUG136.03-TERMINAL.C v. 1.00 By R. Rodman. TERMINAL. Terminal
installation program. [CP/M:C/80]

CUG136.04-PORTIO.C By R. Rodman. PORTIO. I/O Port routines for C/80.
[CP/M:C/80]

CUG136.05-TERNINAL.COM v. 1.00 By R. Rodman. TERMINAL. Terminal
installation program. ->TERMINAL.C. [CP/M:]

CUG136.06-RDTERM.COM v. 1.00 By R. Rodman. RDTERM. ->RDTERM.C. [CP/M:]

CUG136.07-CUG.LTR By R. Rodman. CUG136. Contents of disk.

CUG136.08-DUMPSTAR.C v. 1.00 By R. Rodman. DUMPSTAR. DumpStar Video
Game. [CP/M:C/80]

CUG136.09-TERMINAL.SYS TERMINAL. Sample terminal definition file.
[CP/M:]

CUG136.10-TZ.PRG v. 0.29 By R. Rodman. TZ. Twilight Zone Adventure
Game (Atari ST version). [TOS:]

CUG136.11-DUMPSTAR.SUB By R. Rodman. DUMPSTER. DumpStar Video Game --
compile submit file. ->DUMPSTAR.C. [CP/M:]

CUG136.12-RDTERM.C v. 1.0O By R. Rodman. RDTERM. Terminal installation
checkout program. [CP/M:C/80]

CUG136.13-TZ.R v. 0.29 By R. Rodman. TZ. Twilight Zone Adventure Game
Data File. No fair reading this file!.

CUG136.14-RANDOM.C By R. Rodman. RANDOM. Random number generator for
C/80. [CP/M:C/80]

CUG136.15-TZ.COM v. 0.29 BV R. Rodman. TZ. ->TZ1.C. [CP/M-80 ]

CUG136.16-TERMINAL.DOC By R. Rodman. TERMINAL. Terminal installation
program documentation. [CP/M:]

CUG136.17-CMAZE.COM v. 1.0 CMAZE. ->CMAZE.C. [CP/M:]

CUG136.18-CMAZE.SUB CMAZE. ->CMAZE.C. [CP/M:]

CUG136.19-CMAZE.C v. 1.00 By R. Rodman. CMAZE. 3-D Maze Game.
[CP/M:C/80]

CUG136.20-TZ1.C v. 0.29 By R. Rodman. TZ. Twilight Zone Adventure Game
(part 1). [CP/M, MS-DOS, TOS:C/80, Aztec, Alcyon]

CUG136.21-TZ.DOC By R. Rodman. TZ. Twilight Zone Adventure Game
Documentation [CP/M, MS-DOS, TOS:]

CUG136.22-SUBMIT.DSK

==============================================================================
CUG137 -
-----------

CUG137.00-LSUP.H v. 1.0 By Anthony Skelljum. Low Level Header -- Lsup.
->LSUP.C.

CUG137.01-SEP83COL.DDJ By Anthony Skelljum. C/UNIX Programmer's
Notebook column from DDJ, Sept, 1983. Discusses C program formats and
C Beautifier, run time libraries and link formats.

CUG137.02-APR84COL.DDJ By Anthony Skelljum. C/UNIX Programmer's
Notebook column from DDJ, April 1984. Readers comment on Skelljum's
earlier discussion of program layout, UNIX-traits and link format.

CUG137.03-AUG84COL.DDJ By Anthony Skelljum, A. Cameron. C/UNIX
Programmers Notebook column from 1984 DDJ, Aug. 1984. Discussion of
UUCP, Ron Cain's Small C, more debate on merits of terseness in the
user interface. Also offers more portable low-level I/O for BDS C.

CUG137.04-SEP84COL.DDJ By Anthony Skelljum. C/UNIX Programmer's
Notebook column from DDJ, Sept. 1984. Discusses possible enhancements
for C.

CUG137.05-DEC83COL.DDJ By Anthony Skelljum. C/UNIX Programmer's
Notebook column from Dec. 83 of Doctor Dobb's Journal. Discusses pipes
and filters and the influence UNlX-style program development has on
the user interface.

CUG137.06-FEB84COL.DDJ By Anthony Skelljum. C/UNIX Programmers
Notebook column from DDJ, Feb., 1984. Reader feedback relating to a
proposed C program layout standard.

CUG137.07-JUN84COL.DDJ By Anthony Skelljum. C/UNIX Programmer's
notebook column from DDJ, Feb., 1984. Discusses nemory models and
compilers supporting the large model.

CUG137.08-SEP83TAB.I

CUG137.09-SUBMIT.DSK

CUG137.10-LSUP.H v. 1.0 By Anthony Skelljum. Header/definition file.
->LSUP.C.

CUG137.11-ENV.C v. 1.0 By Anthony Skelljum. This echos the environment
to the standard output. ->LSUP.C. [Aztec C]

CUG137.12-README.CUG

CUG137.13-LLSUP.ASM v. 1.0 By Anthony Skelljum. Assembly language
support routines for LSUP. ->LSUP.C.

CUG137.14-LLINT.ASM v. 1.0 By Anthony Skelljum. Compiler Interface
Code. ->LSUP.C. [Aztec C86 v. 1.05i] Compiler dependent.

CUG137.15-ENV.EXE

CUG137.16-CUG-DDJ.001

CUG137.17-LSUP.C v. 1.0 By Anthony Skelljum. Long pointer support for
small memory model 8086 C Compilers. [Aztec C86]

==============================================================================
CUG138 -
-----------

CUG138.01-GPR.C By Anthony Skelljum. General Purpose Routines. A
library of input/output functions to support numerical applications.
[MS/DOS:]

CUG138.02-ADVERT.CUG

CUG138.03-README.CUG

CUG138.04-CUG-DDJ.002

CUG138.05-RKST2.C By Anthony Skelljum. RKS Test Program. [MS/DOS:]

CUG138.06-RKST1.EXE

CUG138.07-RKST2.EXE

CUG138.08-RKST1.C By Anthony Skelljum. Test Program. Illustates the
use of RK4N program. ->RK4N. [MS/DOS:]

CUG138.09-RK4.C v. 1.0 By Mike Roberts. Runge-Kutta order 4. Code to
solve simple first order differential equations using fourth order
Runge-Kutta algorithm. ->OCT84COL.DDJ, RKS.C. [MS/DOS:]

CUG138.10-RKTEST1.C By Anthony Skelljum. RK4 Demonstration. ->RK4.
[CP/M 80, CP/M 86:]

CUG138.11-RKS.C By A. Skelljum, M. Roberts, Burdencite. Code to solve
a systen of first order ordinary differential equations using 4th
order Runge-Kutta methods. ->RKS4.C, OCT84COL.DDJ. [MS/DOS:]

CUG138.12-RKTEST1.EXE

CUG138.13-BU.C v. 1.0 By Ian Ashdown. File Backup Utility. This file
utilizes the undocumented 'ARCHIVIE' file attribute feature to
automatically detect files that have been changed since the disk was
last backed up. [CP/M 80, CP/M 86:Aztec, DeSmet]

CUG138.14-BU.DOC By Ian Ashdown. Documentation on BU. Manuscript also
published in DDJ, Jan., 1985. ->BU.C. [CP/M 80, CP/M 86:]

CUG138.15-BU-80.COM

CUG138.16-SUBMIT.DSK

CUG138.17-OCT84COL.DDJ By Anthony Skelljum. Documentation. C/UNIX
Programmer's Notebooks' columm from DDJ, Oct., 1984. Dobb's Journal.
Describes Runga-Kutta algorithm and use of RK4 system. ->RK4.C, RK4.S.

==============================================================================
CUG139 -
-----------

CUG139.01-KED.C v. 1.0 By Linda Rising. Karel The Robot. Part 1 of
source code for syntax-directed editor KEO. Used for building programs
to be executed in KAREL's world. ->KARELl.C. [CP/M2+:STAT]

CUG139.02-README2.DOC v. 1.0 By Linda Rising. Karel The Robot. More
help and general information. ->KAREL1.C. [CP/M 2+:BDS]

CUG139.03-KAREL.SUB v. 1.0 By Linda Rising. Karel The Robot. Uses CP/M
SUBMIT for automatic world-building and execution of program created
using KED. ->KAREL.C. [CP/M 2+:BDS]

CUG139.04-KAREL1.COM v. 1.0 By Linda Rising. Karel The Robot.
->KAREL1.C. [CP/M 2+:BDS]

CUG139.05-KED.COM v. 1.0 By Linda Rising. Karel The Robot. ->KED.C.
[CP/M 2+:BDS]

CUG139.06-MENU.DOC v. 1.0 By Linda Rising. Karel The Robot. Listing of
valid commands for KED editor. ->KAREL1.C. [CP/M 2+:BDS]

CUG139.07-README.DOC v. 1.0 By Linda Rising. Karel The Robot. Notes on
files and compilation instructions. ->KAREL1.C. [CP/M 2+:]

CUG139.08-KED2.C v. 1.0 By Linda Rising. Karel The Robot. Part 2 of
source code for syntax-directed editor, KED. Other functions. ->KED.C.
[CP/M 2t:BDS]

CUG139.09-KAREL1.C v. 1.0 By Linda Rising. Karel The Robot. Source
code for Karel world builder. [CP/M 2+:BDS]

CUG139.10-KED.H v. 1.0 By Linda Rising. Karel The Robot. Header for
syntax-directed editor, KED. ->KED.C. [CP/M 2+:BDS]

CUG139.11-KAREL.H v. 1.0 By Linda Rising. Karel The Robot. pleader and
source for Karel Simulator. ->KAREL1.C. [CP/M 2-:STET]

CUG139.12-UGUIDE.DOC v. 1.0 By Linda Rising. Karel The Robot. User's
Guide on KAREL the Robot and KED, the syntax-directed editor.
Information on how to run the programs. ->KAREL1.C.

CUG139.13-SESSIONS.DOC v. 1.0 By Linda Rising. Karel The Robot.
Examples of KED sessions. To be used along with the user's guide as
tutorial.

CUG139.14-SUBMIT.DSK

==============================================================================
CUG140 -
-----------

CUG140.01-KEY.C v. 1.0 By Bill Bolton. Key Programmer. Utility to
program strings under the numeric keypad on a Lear-Seiger ADM31
terminal. [CP/M:BDS]

CUG140.02-CLOCK.H v. 1.1 By Bill Bolton. System Clock. Header file for
CLOCK.C. ->CLOCK.C. [CP/M:BDS]

CUG140.03-DDTTOMAC.C v. 1.0 By Nick Hammond. Disassembly Editor.
Program to convert DDT-format disassembled file into a format useable
by ASM, MACRO-80 or MAC. [CP/M:BDS]

CUG140.04-DATEDEMO.C v. 1.1 By Bill Bolton. Real-Time Clock Program.
Demonstration program for real time-clock. ->CLOCK.C. [CP/M:BDS]

CUG140.05-CMODEM.C By Steve Passe. Christensen File Transfer. File
transfer program using Christensen protocol. [CP/M:BDS] Not a
full-featured communications program.

CUG140.06-WCT2.C By Your Computer Magazine Staff. Word Counter. Word
counting program that also calculate column centimetres on magazine
and newspaper columns. [CP/M:BDS]

CUG140.07-ZCASM13.C v. 1.3 By Brian Waldron. Assembly Language to CRL
preprocessor. Creates CRL-format code from z80 mnemonics rather than
8080 mnemonics like CASM. Uses Microsoft's M80/L80. [CP/M:BDS]

CUG140.08-YAMBOOT.C By Steve Passe. File Transfer utility. Utility for
file transfer via modem -- Christensen protocol. ->CMODEM.C, YAM.C.
[CP/M:BDS]

CUG140.09-CLOCK.C v. 1.1 By Bill Bolton. System Clock. Real-time clock
routine for Godbout -- 1 clock. [CP/M:BDS]

CUG140.10-VERIFY.C v. 1.1 By Steve de Plater. Verify copy utllity.
Verifies integrity of copied file. Works stand-alone or with BACKUP.C.
->BACKUP.C. [CP/M:BDS]

CUG140.11-FIXDIR.C By Bill Bolton. CP/M Directory Cleaner. Program
allows user to rename or erase CP/M directory entries containing
illegal characters in the name. [CP/M:BDS]

CUG140.12-BACKUP.C v. 1.3 By Steve de Plater. Copy Utillty. Copies
files from one disk to another, but does not overwrite if it finds
identical name on the destination disk. [CP/M:BDSl

CUG140.13-MARGIN.C By Bill Bolton. Margin Setter. Allows user to set
margins on Qume/Diablo Daisywheel printer from CP/M console.
[CP/M:BDS]

CUG140.14-STRIP.C By Bill Bolton. High bit stripper. Program to strip
high order bit from each byte of *INFILE* to create new *OUTfILE*.
[CP/M:BDS]

CUG140.15-FIXDIR.DOC By Bill Bolton. CP/M Directory Cleaner.
Documentation for directory cleanup program. ->FIXDlR.C. [CP/M:BDS]

CUG140.16-DDTTOMAC.DOC By Nick Hammond. DDT TO MAC -Disassembly
Editor. Documentation for DDTTOMAC.C. ->DDTTOMAC.C. [CP/M:BDS]

CUG140.17-READ-ME.1ST By Bill Bolton. Introduction. Letter introducing
Miscellany 11 prorams by Australian group. [CP/M:BDS]

CUG140.18-MGAME.C v. 1.0 By Bill Bolton. Math Game. New math game for
children. [CP/M:BDS]

CUG140.19-READ--.ME By Brian Waldron. Index to ZCASM files. An index
to the ZCASM program files. ->ZCASM13.C. [CP/M:BDS]

CUG140.20-ZCASM.DOC v. 1.3 By Brian Waldron. ZCASM. Documentation to
the ZCASM program ->ZCASM13.C. [CP/M:BDS]

CUG140.21-ZCASM.SUB v. 1.3 By Brian Waldron. ZCASM.A.SUB file for
batch processing. Can be used with ZCASM13.C. ->ZCASM13.C. [CP/M:BDS]

CUG140.22-SUBMIT.DSK

CUG140.23-BDSCAT.ALL By Bill Bolton. Catalog. A catalog of early CUG
library volumnes: CUG108, CUG109, CUG110. [CP/M:]

==============================================================================
CUG141 -
-----------

CUG141.01-CMATH.DOC By P. M. Krasno. Documentation for CMATH.
->CMATH.C. [CP/M 2.x:BDS v. 1.5x]

CUG141.02-CIRCLE.C By P. M. Krasno. Circle drawing demo. ->GRAPH.DOC.
[CP/M 2.x:BDS v. 1.5x]

CUG141.03-FCNPLOT.C By P. M. Krasno. Function Plot. Demonstrates
graphics and transcendental functions. Generates a curve for sine,
tan, arctan, exponential, cosine functions. ->GRAPH.DOC. [CP/M 2.x:BDS
v. 1.5x] Requires TMS9918A.

CUG141.04-COEF.H By P. M. Krasno. Header file for CMATH. ->CMATH.C.
[CP/M 2.x:BDS v. 1.5x]

CUG141.05-PUNCT.C v 1.11 By R. P. Sarna. Punctuation error finder.
Finds periods, commas, preceded by spaces, etc. Finds uncapitalized
letters at beginning of sentences, tests for matching parenthesis.
[CP/M 2.x:BDS v. 1.5x]

CUG141.06-LOGON.C By R. P. Sarna. System Log On. Provides
password-protected Logon. [CP/M 2.x:BDS v. 1.5x]

CUG141.07-FGETSN.C v 1.11 By R. P. Sarna. Punctuation checker.
Function used in Punctuation, error checker to get a line 'n' letters
long. ->PUNCT.C. [CP/M 2.x:BDS v. 1.5x]

CUG141.08-CLOCK.C By P. M. Krasno. Real Time Clock. Program for
NewClock-80 clock peripheral. [CP/M 2.x:BDS v. 1.5x]

CUG141.09-SPIRAL.C By P. M. Krasno. Spiral drawer. Spiral drawing
routines for graphics package. ->EXPSPI.C. [CP/M 2.x:BDS v. 1.5x]

CUG141.10-PMKLIB.DOC By P. M. Krasno. Krasno function Library.
Sparsely commented function but extracted fron PMKLIB.C. ->PMKLIB.C.
[CP/M 2.x:BDS v. 1.5x]

CUG141.11-CLOCK.DOC By P. M. Krasno. Clock routine. Documentation for
CLOCK.C. ->CLOCK.C. [CP/M 2.x:BDS v. 1.5x]

CUG141.12-README.WC By P. M. Krasno. Introduction. P. M. Krasno's
description of his submissions. [CP/M 2.x:BDS v. 1.5x]

CUG141.13-FLOAT.H By P. M. Krasno. C Math (Log and Trig functions).
Header file containing octal constants and useful declarations for
CMATH. ->CMATH.C. [CP/M 2.x:BDS v. 1.5x]

CUG141.14-GRAPH.DOC By P. M. Krasno. Graphics demonstrations.
Primitives for CHROMAtrs/TMS9918A graphics used in CIRCLE, ROSE,
SPIRAL, etc. located on this disk. ->EXPSPI, SPIRAL CIRCLE, ROSE.
[CP/M 2.x:BDS v. 1.5x]

CUG141.15-FONT.DEF

CUG141.16-SWAPCOPY.COM

CUG141.17-LOGON.COM

CUG141.18-LOGINFO.DTA By P. M. Krasno. Log Data. Data file used in
CMATH package for logarithms. ->CMATH.C. [CP/M 2.x:BDS v. 1.5x]

CUG141.19-CMATH.C By P. M. Krasno. Enhanced version of Clogs and
Ctrigs. Includes a square root function. Functions have been speeded
up by factoring polynomial expansions differently and eliminating
round off tests. [CP/M 2.x:BDS v. 1.5x]

CUG141.20-PUNCT.COM

CUG141.21-ROSE.C By P. M. Krasno. Rose petal drawing. Graphic
representation of a rose. [CP/M 2.x:BDS v. 1.5x]

CUG141.22-READ.ME By Red Sarna. Introduction. Red Sarna's brief
description of his submissions. [CP/M 2.x:BDS v. 1.5x]

CUG141.23-SUBMIT.DSK

CUG141.24-PMKLIB.C By P. M. Krasno. Miscellaneous functions. Functions
for CMATH, EXPSPI, CIRCLE, SPIRAL and other graphics on this disk.
Includes hexdump, floating-point dump, string manipulation and
plotting functions. ->CMATH.C, GRAPH.DOC. [CP/M 2.x:BDS v. 1.5x]
Requires TMS9918A.

CUG141.25-EXPSPI.C By P. M. Krasno. Spiral Drawing. Spiral drawing
routines for graphics package. ->GRAPH.DOC. [CP/M 2.x:BDS v. 1.5x]

CUG141.26-HDWLIB.C By P. M. Krasno. Clock Support. Interface routines
for Newclock-80 time of Day. [CP/M 2.x:BDS v. 1.5x]

CUG141.27-TRIGPLOT.C By P. M. Krasno. Function plotter. Plots sine and
cosine point by point. GRRAPH.DOC. [CP/M 2.x:BDS v. 1.5x]

==============================================================================
CUG142 -
-----------

CUG142.01-CUGCAT.ALL By Bill Bolton. A catalogue of volumes from CUG.
[CP/M:]

CUG142.02-FIND+.COM

CUG142.03-CRCBUILD.ASM

CUG142.04-FIND+.ASM By Bill Bolton, Harold VMcIntosh. Find + 2.0.
Reassembly of FIND.COM. ->FIND.COM. [CP/M:]

CUG142.05-CRCBUILD.A86 v 1.0 By Bill Bolton. This uses the 'old ' CRC
polynomial code and generates the same CRCKS as most other CRC
programs. A program to build CP/M file. [CP/M:]

CUG142.06-CRCBUILD.COM

CUG142.07-CLSET.C v 4.0 By Alan Coates. Clock Program. ->CLOCK.C.
[CP/M:Hi tech C]

CUG142.08-CRC.COM Cyclic Redundancy Checker. [CP/M:]

CUG142.09-CLOCK.C v 4.0 By Alan Coates. FDC-T Clock Utility. Clock
program for FDC-I which stores a real time clock. [CP/M:Hi tech C,
Azetec CII]

CUG142.10-SCRUB.CAM

CUG142.11-UNSCRUB.COM

CUG142.12-SCRUB.C By Bill Bolton, Alan Coats. WordStar Scrubber.
Program to scrub a Wordstar text file back to a standard ASCII file.
User's high order bits and performs. [CP/M:AZTEC C II]

CUG142.13-UNSCRUB.C By Bill Bolton. Program to unscrub and ASCII text
file for processing with Wordstar. ->SCRUB.C. [CP/M:AZTEC C II]

CUG142.14-Startim.c By Julian Hyde. Find difference between DataStar
dates. [CP/M:]

CUG142.15-READ.ME By Alan Coates. Contents of Cug#142. [CP/M:Aztec C
II]

CUG142.16-AUSTPAMS.WST

CUG142.17-SUBMIT.DSK

CUG142.18-CATLST.CUG

CUG142.19-DAYS.C By Alan Coates. The function accepts a six digit
ASCII argument ddmmyy and returns a (long) number of days. ->CLOCK.C.
[CP/M:]

CUG142.20-CHIS16.C By Alan Coates. Chi square and other analysis for 2
by 2 table. [CP/M:AZTEC C II]

==============================================================================
CUG143 -
-----------

CUG143.01-BATCH.C By Eugene H. Mallory. BATCH is a replacement program
for SUBMIT.COM provided with CP/M. It uses files with the tags .BAT
rather than .SUB. ->CUG144 -BATCH.HLP. [:BDS]

CUG143.02-BDSCIO.H By Eugene H. Mallory. [:BDS]

CUG143.03-2UP.C By Eugene H. Mallory. Filter which formats text into
one or more columns. It has several parameters which can be set on the
command line. ->CUG144 - 2UP.HLP. [:BDS]

CUG143.04-CAT.C By Eugene H. Mallory. Used to convert C keywords to
upper case. ->CUG144 CAS.HLP. [:BDS]

CUG143.05-CAT.C By Eugene H. Mallory. Concatenate named files together
to produce the output. Accepts a list of file names either on the
command line or from the standard input. File names in the command
line may use afn's. File names in the standard input may not be
wildcarded. The files are read in ths order mentioned, command line
first, then the input, if any. As they are read, they are sent to the
standard output. ->CUG144 - CAT.HLP. [:BDS]

CUG143.06-CB.C By Eugene H. Mallory. C Program Formatter. Used to
indent source lines and change { and } to BEGIN and END or LOOP and
ENDLOOP, etc as needed. ->CUG144 - CB.HLP. [:BDS]

CUG143.07-COMPRESS.C By Eugene H. Mallory. Compress input by encoding
repeated characters. Reads input and compresses the text to the
output. Repeated strings of four or more characters are replaced by
^nC, where N is represented by A for 1, B for 2 etc. Runs longer than
26 characters are encoded as several ^nC strings. ->CUG141
COMPRESS.HLP. [:BDS]

CUG143.08-COPY.C By Leor Zolman, Eugene H. Mallory. COPY copies files
to and from different drives and user areas on a CP/M file system.
[:BDS]

CUG143.09-DIO.C By Eugene H. Mallory. Redirect I/O for the tools
package. [:BDS]

CUG143.10-CRYPT.C By Eugene H. Mallory. Reversibile cryptographic
converter. Used to encode or decode a file given a key. The process is
reversible for the same key. The output is printable, but unreadable
text. ->CUG144 - CRYPT.HLP. [:BDS]

CUG143.11-DELETE.C By Eugene H. Mallory. DELETE is a better form of
ERA. It has better afn abilities and types the names of the files
deleted, or if they are already deleted. ->CUG14 DELETE.HLP. [:BDS]

CUG143.12-ENTAB.C By Eugene H. Mallory. ENTAB copies input to output,
replacing strings of spaces by tabs so that the result is visually the
same as the input. Tab stops are assumed to occur every 8 chardcters.
ENTAB is naive about vertical motion non-printing characters. ENTAB
will convert a single blank to a tab if it occurs at a tab stop. Thus
it is not the exact inverse of DETAB. ->CUG144 ENTAB.HLP. [:BDS]

CUG143.13-DIO.H By Eugene H. Mallory. Include file for DIO.C. ->DIO.C.
[:BDS]

CUG143.14-ECHO.C By Eugene H. Mallory. ECHO copies command line args
to the output with one arg per line. Because the CP/M translates
characters into upper case and deletes spaces, and because the I/O
redirection and pipes use <, >, and + as markers, some special
conventions are provided to get around these restrictions. ->CUG144 -
ECHO.HLP. [:BDS]

CUG143.15-ENDIF.C By Eugene H. Mallory. ENDIF is used in BATCH or
SUBMIT files along with IF. ->CUG144 - IF.HLP. [:BDS]

CUG143.16-SPLIT.C By Eugene H. Mallory. The input file and split it
into many files. The generated file names $SPILT$.nnn if no name is
given, or name.nnn if a name is given. ->CUG144 SPLIT.HLP. [:BDS]

CUG143.17-EXIT.C By Eugene H. Mallory. Terminates BATCH (SUBMIT) file
execution. Can be used with IF and ENDIF for flow control. [ :BDS]

CUG143.18-EXPAND.C By Eugene H. Mallory. EXPAND reads input and
expands the text to the output. this is the inverse of compress.
->CU6144 - EXPAND.HLP. [:BDS]

CUG143.19-HEAD.C By Eugene H. Mallory. Identify and list the first 10
lines of a list of files. Accept a list of file names either on the
command line or from the standard input. ->CUG144 HEAD.HLP. [ :BDS]

CUG143.20-HDROUT

CUG143.21-IF.C By Eugene H. Mallory. If is used in BATCH or SUBMIT
files along with ENDIF. ->CUG144- IF.HLP. [:BDS]

CUG143.22-lNDEX.C By Eugene H. Mallory. Format an index or cross
reference. Take a sorted output from words and generates a formatted
index or cross reference, depending on the use of words. ->CUG144 -
INDEX.HLP. [ :BDS]

CUG143.23-KOPY.C By Eugene H. Mallory. Copy STDIN to STDOUT, and
coordinate with DIO pipes. [:BDS]

CUG143.24-LS.C By Eugene H. Mallory. Expands file names that appear on
the command line. It automatically expands the parameter to contain
all files that fit the afn's. ->CUG144 - LS.HLP. [:BDS]

CUG143.25-LC.C By Eugene H. Mallory. [ :BDS]

CUG143.26-MERGE.C By Eugene H. Mallory. Merge two sorted files and
produces various combinations in the output stream. The default is to
do a straight forward merge of the standard input with the named file
on the command line to the standard output. ->CUG144 MERGE.HLP. [
:BDS]

CUG143.27-MERGEM.C By Eugene H. Mallory. Merge multiple files into a
single output file. Input is a list of file names. Output is a single
file which is in sorted order. The input files must all be sorted with
the same options as used with the merge. ->CUG144 MERGEM.HLP. [:BDS]

CUG143.28-MIX.C By Eugene H. Mallory. MIX pages together into book
signature order. Accept a list of file names from the standard input.
File names may not be wild carded. Each file is assumed to be a page
of text. The pages are output in book signature order. Partial pages
and missing pages are filled out with blank lines. ->CUG144 - MIX.HLP.
[:BDS]

CUG143.29-WILEXP.C By Eugene H.Mallory. BDS C Command-line Wild-card
expansion utility. [:BDS]

CUG143.30-NUM.C By Eugene H. Mallory. Concatenate named files together
to produce a line numbered output. Can act either as a filter or a
source. If the command line contains filenames, these files are read,
concatenated, and prefixed with a line number. afn's may be used for
these file names. ->CUG144 NUM.HLP. [:BDS]

CUG143.31-PAGE.C By Eugene H. Mallory. Formats text into pages with
file headers and page numbers. Can act either as a filter or a source.
If the command line contains filenames, these files are read,
formatted, and titled. Afn's may be used for these file names. Each
file will start on a separate page, and each page will be filled out.
->CUG144 - PAGE.HLP. [:BDS]

CUG143.32-RENAME.C By Eugene H. Mallory. Rename files, toolkit
compatable version of REN. [:BDS]

CUG143.33-PRINT.C By Eugene H.Mallory. Format text to printer. [ :BDS]

CUG143.34-SEARCH.C By Eugene H. Mallory. Search files for lines
containing a pattern and output the selected lines. The default is to
output file names of files which contain the pattern. ->CUG144 -
SEARCH.HLP. [:BDS]

CUG143.35-SELECT.C By Eugene H. Mallory. Select lines from a file
based on a pattern search and output the selected lines. The default
is to output lines with the pattern. ->CUG144 SUB.HLP. [ :BDS]

CUG143.36-SUB.C By Eugene H. Mallory. and substitute text strings in
I/O stream. All occurrences of the pattern will be replaced. ->CUG144
- SUB.HLP. [:BDS]

CUG143.37-SORT.C By Eugene H. Mallory. This program does an internal
sort of up to 512 entries. Input and output are the standard
redirectable input and output. ->CUG144 - SUB.HLP. [ :BDS]

CUG143.38-SORT.C By Eugene H. Mallory. This program does an internal
sort on multiple files. Input is a list of file names. Output is the
same list of files. ->CUG144 - SORT.HLP. [:BDS]

CUG143.39-HELP.C By Eugene H. Mallory. HELP is a menu driven utility
designed to simplify retrieval of misc text. If a name is given, HELP
locates on the current disk or the A: disk, a file with the name
name.HLP. If no name is given, help first gives a menu of the
available files on the current disk and the A: disk with the tag .HLP.
From this menu, a file may be selected. ->CUG143 HELP.HLP. [ :BDS]

CUG143.40-SUM.C By Euqene H. Mallory. Sums a given field in a set of
lines. ->CUG144 - SUM.HLP. [:BDS]

CUG143.41-TAIL.C By Eugene H. Mallory. Display lines at the end of a
text file. ->HEAD.C, MORE.C. [:BDS]

CUG143.42-TEE.C By Eugene H. Mallory. TEE pipe fitting. Can make a
side copy of a pipe stream. ->CUG144 - TEE.HLP. [:BDS]

CUG143.43-UNIQUE.C By Eugene H. Mallory. Finds unique lines in a
sorted file. The default usage is to remove extra duplicated lines
from a sorted list. Input and output are the standard redirectable
input and output. ->CUG144 - UNIQUE.HLP. [:BDS]

CUG143.44-WORDS.C By Eugene H. Mallory. Separate input into one word
per 1 line. ->CUG144 WORDS.HLP. [:BDS]

CUG143.45-MORE.C By Eugene H. Mallory. Display file page at a time.
[:BDS]

CUG143.46-C.C By Eugene H. Mallory. Build Utility. Opens the file
name.C. It extracts lines beginning with % and constructs a SUBMIT
file on the A: disk. Used to submit c compiles. Remembers the last
name in a file ENAME.$$$. If called without the name, uses the saved
name. ->CUG144 - C.HLP. [:BDS]

CUG143.47-SUBMIT.DSK

CUG143.48-CLEAN.C By Eugene H. Mallory. Cleans up a text file. Can
indicate bad characters. This cleans up a number of problems with text
files. It can operate in two modes. In the default mode, control
characters are stripped out, characters with high order bits on are
stripped, tabs are expanded, lines too long are split, naked CR's are
converted to CR NL pairs and files without ending CR NL get them. Both
kinds of CP/M end-of-files are handled and a true EOF character put at
the end. Also, trailing blanks are stripped from lines. ->CUG144 -
CLEAN.HLP. [:BDS]

==============================================================================
CUG144 -
-----------

CUG144.01-SUBMIT.DSK

CUG144.02-C.COM

CUG144.03-CRYPT.HLP By Eugene Mallory. Help file for CRYPT. ->CUG143,
CRYPT.C.

CUG144.04-MERGE.HLP By Eugene Mallory. Help file for MERGE. ->CUG143,
MERGE.C.

CUG144.05-CASE.HLP By Eugene Mallory. Help file for CASE. ->CUG143,
CASE.C.

CUG144.06-MERGEM.HLP By Eugene Mallory. Help file for MERGEM.
->CUG143, MERGEM.C.

CUG144.07-MIX.HLP By Eugene Mallory. Help file for MIX. ->CUG143,
MIX.C.

CUG144.08-NUM.HLP By Eugene Mallory. Help file for NUM. ->CUG143,
NUM.C.

CUG144.09-CB.HLP By Eugene Mallory. Help file for CB. ->CUG143, CB.C.

CUG144.10-CHECK.COM

CUG144.11-PAGE.HLP By Eugene Mallory. Help file for PAGE. ->CUG143,
PAGE.C.

CUG144.12-CHECK.LST

CUG144.13-CONTENTS.HLP By Eugene Mallory. Table of Contents. ->CUG143.

CUG144.14-SEARCH.HLP By Eugene Mallory. Help file for SEARCH.
->CUG143, SEARCH.C.

CUG144.15-SELECT.HLP By Eugene Mallory. Help file for SELECT.
->CUG143, SELECT.C.

CUG144.16-EXAMPLE.HLP

CUG144.17-SORT.HLP By Eugene Mallory. Help file for SORT. ->CUG143,
SORT.C.

CUG144.18-SORT.HLP By Eugene Mallory. Help fits for SORTM. ->CUG143,
SORTM.C.

CUG144.19-SPLIT.HLP By Eugene Mallory. Help file for SPILT. ->CUG143,
SPLIT.C.

CUG144.20-2UP.HLP By Eugene Mallory. Help file for 2UP. ->CUG143,
2UP.C.

CUG144.21-BATCH.HLP By Eugene Mallory. Help file for BATCH. ->CUG143,
BATCH.C.

CUG144.22-CAT.HLP By Eugene Mallory. Help file for CAT. ->CUG143,
CAT.C.

CUG144.23-CLEAN.HLP By Eugene Mallory. Help file for CLEAN. ->CUG143,
CLEAN.C.

CUG144.24-COMPRESS.HLP By Eugene Mallory. Help file for COMPRESS.
->CUG143, COMPRESS.C.

CUG144.25-SUB.HLP By Eugene Mallory. Help file for SUB. ->CUG143,
SUB.C.

CUG144.26-SUM.HLP By Euqene Mallory. Help file for SUM. ->CUG143,
SUM.C.

CUG144.27-TEE. HLP By Eugene Mallory. Help file for TEE. ->CUG143,
TEE.C.

CUG144.28-TOOLKIT.HLP By Eugene Mallory. Help file for TOOLKIT.
->CUG143.

CUG144.29-DELETE.HLP By Eugene Mallory. Help file for DELETE.
->CUG143, DELETE.C.

CUG144.30-ECH0.HLP By Eugene Mallory. Help file for ECHO. ->CUG143,
ECHO.C.

CUG144.31-ENTAB.HLP By Eugene Mallory. Help file for ENTAB. ->CUG143,
ENTAB.C.

CUG144.32-EXPAND.HLP By Eugene Mallory. Help file for EXPAND.
->CUG143, EXPAND.C.

CUG144.33-HEAD.HLP By Eugene Mallory. Help file for HEAD. ->CUG143,
HEAD.C.

CUG144.34-HELP.HLP By Eugene Mallory. Help file for HELP. ->CUG143,
HELP.C.

CUG144.35-IF.HLP By Eugene Mallory. Help file for IF. ->CUG143, IF.C.

CUG144.36-INDEX.HLP By Eugene Mallory. Help file for INDEX. ->CUG143,
INDEX.C.

CUG144.37-LS.HLP By Eugene Mallory. Help file for LS. ->CUG143, LS.C.

CUG144.38-README.HLP

CUG144.39-UNIQUE.HLP By Eugene Mallory. Help file for UNIQUE.
->CUG143, UNIQUE.C.

CUG144.40-WORDS.HLP By Eugene Mallory. Help file for WORDS. ->CUG143,
WORDS.C.

CUG144.41-2UP.COM

CUG144.42-HELP.COM

CUG144.43-C.HLP By Eugene Mallory. Help file for C. ->CUG143, C.C.

CUG144.44-CHECK.HLP By Eugene Mallory. Documentation, for CRCK --
CHECK.

==============================================================================
CUG145 -
-----------

CUG145.01-CATALOG

CUG145.02-COPY.RIT

CUG145.03-ENVIRON.DOC

CUG145.04-EQN v 1.61 Sample Command File. Demonstrates macro use for
convenient equation numbering.

CUG145.05-EXY1 v 1.81 Sample Command File. Exidy video output for
scientific symbols.

CUG145.06-FOOT v 1.61 By Earnest E. Bergmann. Sample Command File.
Footnoting demonstration.

CUG145.07-FORM v 1.61 By Earnest E. Bergmann. Sample Command File.
Demonstration creating form letters.

CUG145.08-KAYPRO v 1.61 By Earnest E. Bergmann. Sample Command File.
Initialize for Kaypro video ouput.

CUG145.09-ROFF43.C v 1.61 By Earnest E. Bergmann. Source Module.
->ROFF4.C.

CUG145.10-LIST v 1.81 By Earnest E. Bergmann. Sample Command File.
Initialize to list programs with page breaks.

CUG145.11-MARGINS v 1.61 By Earnest E. Bergmann. Sample Command File.
Test program for top and bottom page and pagination.

CUG145.12-MATRIX v 1.81 By Earnest E. Bergmann. Sample Command File.
Demonstrates positional control for equations.

CUG145.13-ML92 v 1.61 By Earnest E. Bergmann. Sample Command file.
Initialize for Okidata micro line 92 printer.

CUG145.14-MX80 v 1.61 By Earnest E. Bergmann. Sample Command file.
Initialize for Epson MX-80 with Graftrax.

CUG145.15-NEC3525 v 1.61 By Earnest E. Bergmann. Sample Command File.
Initialization for NEC 3525 Thimble printer with tech math/ times
Roman.

CUG145.16-NEST v 1.61 Sample Command File. Demonstration for nesting
ndcros and string substitutions.

CUG145.17-NETEST v 1.61 Sample Command File. Test for .ne command to
see that it works properly even with the first line on a page.

CUG145.18-ONE v 1.61 Sample Command File. Test of .so command.
->SORTEST.

CUG145.19-PAGES v 1.61 Sample Command File. Test for page related
functions such as titles.

CUG145.20-PROWRITE v 1.61 Sample Command File. Initialization for
prowriter printer series. Seven bit mode assumed.

CUG145.21-READ.ME

CUG145.22-ROFF44.C v 1.61 By Earnest E. Bergmann. Source Module.
->ROFF4.C.

CUG145.23-ROFF4.DOC v 1.61 By Earnest E. Bergmann. ROFF4
Documentation. ->ROFF4.C.

CUG145.24-ROFF4.H v 1.61 By Earnest E. Bergmann. Common Declarations.
->ROFF4.C.

CUG145.25-ROFF4.SUB

CUG145.26-ROFF42.C v 1.81 By Earnest E. Bergmann. Source Module.
->ROFF4.C.

CUG145.27-ROFF45.C v 1.61 By Earnest E. Bergmann. Source Module.
->ROFF4.C.

CUG145.28-ROFF46.C v 1.61 By Earnest E. Bergmann. Source Module.
->ROFF4.C.

CUG145.29-ROFF47.C v 1.61 By Earnest E. Bergmann. Source Module.
->ROFF4.C.

CUG145.30-SOTEST v 1.61 By Earnest E. Bergmann. Sample Command File.
Test and demo for nested .so command.

CUG145.31-SCI.ASM

CUG145.32-SCI.COM

CUG145.33-ROFF4.C v 1.61 By Earnest E. Bergmann. ROFF4 Main Source
Module. ROFF4 is an expanded version of ROFF, based on the formation
in Kernighan and Plauger's book Software Tools. This version (1.61p)
is more portable than its predecessors and runs on a PC clone.
->CUG128. [MS/DOS:Aztec, DeSmet, Eco-C88]

CUG145.34-THREE v 1.61 By Earnest E. Berqmann. Sample Command File.
Used with SOTEST. ->SOTEST.

CUG145.35-TWO v 1.61 By Earnest E. Bergmann. Sample Command File. To
be used with SOTEST. ->SOTEST.

CUG145.36-UPGRADES.LST v 1.61 By Earnest E. Bergmann. Changes from 1.5
to 1.6. A listing of all known bugs of ROFF4 v. 1.5.

CUG145.37-ROFF4.CAT

CUG145.38-ROFF.BAT

CUG145.39-STARTUP.BAT

CUG145.40-STDIO.H

CUG145.41-ERRNO.H

CUG145.42-FILEI02.H

CUG145.43-BDSJUNK.H

CUG145.44-CC.BAT

CUG145.45-LINKIT.BAT

CUG145.46-INPUT

CUG145.47-CCS.BAT

CUG145.48-ROFFDATA.O

CUG145.49-ROFF4.0

CUG145.50-ROFF41.0

CUG145.51-ROFF42.0

CUG145.52-ROFF43.0

CUG145.53-ROFF44.0

CUG145.54-ROFF45.0

CUG145.55-ROFF46.0

CUG145.56-ROFF4.EXE

CUG145.57-ROFFDATA.C

CUG145.58-FIGS

CUG145.59-FNOTES

CUG145.60-FOOT.BAT

CUG145.61-ROFF47.0

CUG145.62-MAKEROFF.BAT

CUG145.63-ROFF4.MAP

CUG145.64-MATH.H

CUG145.65-IBM.DOC v 1.61 By Glenn Nelson. Notes. Relates problems
encountered in porting CP/M version to MS/DOS. ->CUG128.
EMS/DOS:Aztec, DeSmet, Eco-C88

CUG145.66-SEE.MAC

CUG145.67-SUBMIT.DSK

CUG145.68-ROFF41.C v 1.61 By Earnest E. Bergmann. Source Module.
->ROFF4.C.

==============================================================================
CUG146 -
-----------

CUG146.01-SUBMIT.DSK

CUG146.02-WC.C Word Count. This program counts total number of lines,
words and characters in the specified file. [Flex:Small C]

CUG146.03-PRIME.C Small C compiler for 6800. Erathosthenes Sieve Prime
Number Program in C as excerpted from the Sept, 1981 issue of BYTE
magazine. Modified for compatibility with Small-C derivatives, which
do not have FOR loops. As published in '68' MICRO Journal, July 1982.
[Flex:Small C]

CUG146.04-PRTLIB.C Small C compiler for 6800. Contains the source for
library functions: printf, fprintf, sprintf, fmspr, fputs. [Flex:Small
C] Functions differ from those defined in K&R in that they need a
parameter count as the last argument in a calling routine.

CUG146.05-CUG146.HDR

CUG146.06-NOTES.DOC By Serge Stepanoff, Ron Cain. Letter from Serge
Stepanoff. [Flex:Small-C]

CUG146.07-FLEXPTRS.TXT Small C compiler for 6800. Pointers to FLEX
subroutines. [Flex:Small C]

CUG146.08-CCC.H Small C compiler for 6800. Small C header file.
[Flex:Small C]

CUG146.09-CCINT.TXT Small C compiler for 6800. ORG-O; NAM Small-C
Interpreter OPT NOP, NOG. [Flex:Small C]

CUG146.10-FSIZE.TXT Small C compiler for 6800. Reads a binary file and
prints the load addresses of the file, as well as transfer
address(es), if any. [Flex:Small C]

CUG146.11-SMALLC.C v 2.0 By Serge Stepanoff, Ron Cain. Small C
compiler for 6800. A version of Ron Cain's Small-C adapted for the
6800 micro under TSC's FLEX operating system. Initial conversion was
done on a PDP 11 running RSX-11 and the DECUS (public domain) C
compiler with Small C code from DECUS. Ongoing development of this
version is being carried out on a SWTPC 6800 with dual 8 inch floppies
and 32K RAM. [Flex v. 2.1:Small C] The TSC assembler accepts any
length labels but only the first 6 characters are used and saved in
the symbol table. Therefore, if you have either functions or labels of
the type MODULE1 and MODULE2, the assembler will generate a multiply
defined label error. Make sure that the first 6 characters are unique.

==============================================================================
CUG147 -
-----------

CUG147.01-01-18-85.TAG

CUG147.02-DAYTIM.CSM v. 1.10 By John Gilbert, Frank Wancho. Date/Time
function in assembler provide an equivalent function if you wish to
use your clock card, usinq this as a mode. ->RBBS4.C. [CP/M, MP/M,
TurboDos.BDS]

CUG147.03-RBBSFN.C v. 4.0 By John Gilbert, Frank Wancho. RBBS4
Function Library. Miscellaneous functions, mostly file I/O. ->RBBS4.C.
[CP/M:BDS] Requires BDS v. 1.50a to compile.

CUG147.04-EXIT2CPM.CCC v. 4.1 By John Gilbert, Frank Wancho. RBBS4
exit bullit. Displayed when the non-expert exits to CP/M via the C
command. ->RBBS4.C. [CP/M:BDS]

CUG147.05-HELP.CCC v. 4.1 By John Gilbert, Frank Wancho. Help File.
ASCII file that is displayed with paging when the user types a ?<CR>
to the command prompt. Sample file is provided. ->RBBS4.C. [CP/M:BDS]

CUG147.06-ENTER.C v. 4.0 By John Gilbert, Frank Wancho. Entermsg
functions. ->RBBS4.C. [CP/M:BDS] Requires BDS v. 1.50a to compile.

CUG147.07-LOGON.C v. 4.0 By John Gilbert, Frank Wancho. LOGON
Functions. ->RBBS4.C. [CP/M.BDS] Requires BDS v. 1.50a to compile.

CUG147.08-MSGHELP.CCC v. 4.1 By John Gilbert, Frank Wancho. Help
Message. Displayed when the user types ?<CR> on a new line when
entering message text. ->RBBS4.C. [CP/M:BDS]

CUG147.09-MAINOP.C v. 4.0 By John Gilbert, Frank Wancho. RBBS4
Function Library. ->RBBS4.C. [CP/M:BDS] Requires BDS-C version 1.50a
to compile.

CUG147.10-RBBS4.DOC

CUG147.11-RBBS4.HIS

CUG147.12-RBBS4.SUB

CUG147.13-UTIL.C v. 4.1 By John Gilbert, Frank Wancho. Account
Maintenance. Creates SUBJECTS.CCC and empty SUBJECT.MSG files, and
initialized USERS.CCC file with the SYSOP entry and default initial
password of 12345. ->RBBS4.C. [CP/M:BDS] Requires BDS v. 1.50a to
compile.

CUG147.14-RBBSCIO.C v. 4.1 By John Gilbert, Frank Wancho. RBBS4
Editor. A rather fancy line editor and associated console I/O
functions using BIOS calls. May be used as a separate package.
->R88S4.C. [CP/M:BDS] Requires BDS v. 1.50a to compile.

CUG147.15-RCTOHLPO.CCC v. 4.1 By John Gilbert, Frank Wancho. Help
Message. Displayed when the user types the Help Character(^V) in
normal mode. ->RBBS4.C. [CP/M:BDS]

CUG147.16-RCTOHLP2.CCC v. 4.1 By John Gilbert, Frank Wancho. Help
Message. Displayed when the user types the Help Character in masked
mode. ->RBBS4.C. [CP/M:BDSl

CUG147.17-SELHELP.CCC v. 4.1 By John Gilbert, Frank Wancho. Help
Message. Dispiayed when the user types ? to the SELECT prompt.
->RBBS4.C. [CP/M:BDS]

CUG147.18-TDOSFN.CSM By John Gilbert, Frank Wancho. Look and free
record functions in assembler. ->RBBS4.C. [CP/M, turboDOS:BDS]
Requires BDS v. 1.50a to compile.

CUG147.19-TWITMSG.CC v. 4.1 By John Gilbert, Frank Wancho. TWIT
MESSAGE. Displayed when a 'twit logs in. ->RBBS4.C. [CP/M: BDS]

CUG147.20-RBBS4.C v. 4.1 By John Gilbert, Frank Wancho. RBBS4 Main
Program. Principal beta testing and numerous suggestions by Sigi
Kluger. Originally designed to support a restricted access, multi-user
turboDOS RCP/M system. [CP/M:BDS] Requires BDS v. 1.50a to compile.

CUG147.21-UTIL.SUB

CUG147.22-UTILFN.C

CUG147.23-UTLX.C

CUG147.24-UTLX.DOC

CUG147.25-UTLX.SUB

CUG147.26-WELCOME.CCC v. 4.1 By John Gilbert, Frank Wancho. Logan
Bulletin. A sysop created ASCII file that is displayed with paging
when a new user successfully registers. The W command also displays
this file. ->RBBS4.C. [CP/M:BDS]

CUG147.27-SUBMIT.DSK

CUG147.28-RBBS4.H v. 4.1 By John Gilbert, Frank Wancho. The commented
header file. ->RBBS4.C. [CP/M:BDS] Requires BDS v. 1.50 to compile.
The DEFINES in this file need to be set for your desired system
configuration.

==============================================================================
CUG148 -
-----------

CUG148.01-A99ASMLN.C ->A99.C. [CP/M:BDS]

CUG148.02-A99.COM

CUG148.03-A99.CRL

CUG148.04-A99.GBL XASM 99 Globals. ->A99.C. [CP/M:]

CUG148.05-A99.C v. 1.0 By Alexander Cameron, William Colley.
TI9900/99105 Cross-Assembler. Cross-assenbler for TI 9900/991-5.
Adapted from William Colley's Cross-assembler for 6800. This
table-driven assembler is relatively easy to adapt to other
instruction sets. ->CUG113, CU6149, XASM99.DOC. [CP/M:BDS] Will not
work for 99150 senes.

CUG148.06-A99ASMLN.CRL

CUG148.07-A99BDS.LIB Selected symbols from BDS run-time package. Used
when assembling A99tbls.csm. ->A99.C, A99TBLS.CSM. [CP/M:]

CUG148.08-A99EVAL.CRL

CUG148.09-A99SYMB.C Xasm 99 Symbol table Routines. ->A99.C. [CP/M:BDS]

CUG148.10-A99GET.CRL

CUG148.11-A99EVAL.C Xasm 99 expression evaluator. Function to evaluate
the next expression on the present source lines. ->A99.C. [CP/M:BDS]

CUG148.12-A99PUT.CRL

CUG148.13-A99PUT.C ->A99.C. [CP/M:BDS]

CUG148.14-A99SYMB.CRL

CUG148.15-A99TBLS.ASM output from CASM pre-processor. ->A99.C,
A99TBLS.CSM. [CP/M:]

CUG148.16-A99TBLS.CRL

CUG148.17-A99TBLS.CSM Xasm 99 machine language module. Includes the
opcode table and some functions to manipulate it, the attribute table
and other smaller tables. ->A99.C. [CP/M:] Requires CASM.COM.

CUG148.18-CRC.COM

CUG148.19-TEST.H99 ->A99.C. [CP/M:]

CUG148.20-XASM99.DOC TI9900/99105 X-assembler Doc. ->A99.C. [CP/M:BDS]

CUG148.21-XASM99.PRN Print image of XASM 99.DOC. ->A99.C XASM99.DOC.
[CP/M:] Wordstar file.

CUG148.22-XASM99.TOC Xasm99 Table of Contents. ->A99.C, XASM99.DOC.
[CP/M:]

CUG148.23-CRCKLIST.CRC

CUG148.24-TEST.L99 XASM 99 TEST PROGRAM. ->A99.C. [CP/M:BDS]

CUG148.25-READ.ME

CUG148.26-SUBMIT.DSK

CUG148.27-TEST.A99 ->A99.C. [CP/M:]

CUG148.28-A99GET.C ->A99.C. [CP/M:BDS]

==============================================================================
CUG149 -
-----------

CUG149.01-A68S.C v 0.1 By William C. Colley III. 6805 Cross-Assembler
(Portable). This program lets you use your computer to assemble code
for the Motorola 6805 family microprocessors. The program is written
in portable C rather thsn BDS C. All assembler features are supported
except relocation linkage, and macros. [CP/M-80, CP/M-86, HP-UX,
MSDOS, PCDOS, QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88,
HP-UX, Lattice C, Microsoft C, QNIX C] This program has compiled
successfuily on 2 UNIX compilers, 5 MSDOS compllers, and 2 CP/M
compilers. A port to BDS C would be extremely difficult, but see
volume CUG113. A port to Toolworks C is untried.

CUG149.02-A18EVAL.C v 2.3 By William C. Colley III. 1805A
Cross-Assembler (Portable). ->A18.C. [CP/M-80, CP/M-88, HP-UX, MSDOS,
PCDOS, QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88, HP-UX,
Lattice C, Microsoft C, QNIX C]

CUG149.03-A68UTIL.C v 3.3 By William C. Colley III. 6801
Cross-Assembler (Portable). ->A6B.C. [CP/M-80, CP/M-86, HP-UX, MSDOS,
PCDOS, QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88, HP-UX,
Lattice C, Microsoft C, UNIX C]

CUG149.04-HEXTOS.C v 0.1 By William C. Colley III. Intel Hex. Converts
the Intel hex object files from the 6801 cross-assembler to Motorola
S-record object files that can be read my Motorola's monitors and
program loaders. [CP/M-80, HP-UX, MSDOS, PCDOS:AZTEC C II, Eco-C,
HP-UX, Microsoft C] Since this program has been compiled on a UNIX
look-alike (HP-UX), portability to UNIX should be trivial. Since it
has compiled on three full-featured compilers, portability to MSDOS
should be easy.

CUG149.05-A18.H v 2.3 By William C. Colley III. 1805A Cross-Assembler
(Portable). ->A18.C, CP/M-86, HP-UX, MSDOS, PCDOS, QNIX. Aztec C86,
Aztec CII, CI-C86, Eco-C, Eco-C88, HP-UX, Lattice C, Microsoft C, QNIX
C] This program has compiled successfully on 2 UNIX compilers, 5 MSDOS
compilers, and 2 CP/M compilers. A port to BDS C would be extrermely
difficult, but see volume CUG113. A port to Toolworks C is untried.

CUG149.06-A68.DOC v 3.3 By William C. Colley III. 6801 Cross-Assembler
Documentation. ->A68.C. [CP/M-80, CP/M-86, HP-UX MSDOS, PCDOS,
QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88, HP-UX, Lattice C,
Microsoft C, QNIX C]

CUG149.07-TEST68.ASM

CUG149.08-A18UTIL.C v 2.3 By William C. Colley III. 1805A
Cross-Assembler (Portable). ->A18.C. [CP/M-80, CP/M-86, HP-UX, MSDOS,
PCDOS, QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88, HP-UX,
Lattice C, Microsoft C, QNIX C]

CUG149.09-A18.DOC v 2.3 By William C. Colley III. 1805A
Cross-Assembler Documentation. ->A18.C. [CP/M-80, CP/M-86, HP-UX,
MSDOS, PCDOS, QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88,
HP-UX, Lattice C, Microsoft C, QNIX C]

CUG149.10-A68.C v 3.3 By William C. Colley III. 6801 Cross-Assembler
(Portable). This program lets you use your computer to assemble code
for the Motorola 6800, 6801, 6802, 6803, 6808, and 68701
microprocessors. The program is written in portable C rather than BDS
C. All assembler features are supported except relocation, linkage,
and macros. ->CUG113, 6800 Cross-Assembler. [CP/M-80, CP/M-86, HP-UX,
MSDOS, PCDOS, QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88,
HP-UX, Lattice C, Microsoft C, QNIX C] This program has compiled
successfully on 2 UNIX compilers, 5 MSDOS compilers, and 2 CP/M
compilers. A port to BDS C would be extremely difficult, but see
volume CUG113. A port to Toolworks C is untried.

CUG149.11-A685UTIL.C v 0.1 By William C. Colley III. 6805
Cross-Assembler (Portable). ->A68S.C. [CP/M-80, CP/M-86, HP-UX, MSDOS,
PCDOS, QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88, HP-UX,
Lattice C, Microsoft C, QNIX C]

CUG149.12-A685EVAL.C v 0.1 By William C. Colley III. 6805
Cross-Assembler (Portable). ->A685.C. [CP/M-80, CP/M-86, HP-UX, MSDOS,
PCDOS, QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88, HP-UX,
Lattice C Microsoft C, QNIX C]

CUG149.13-A685.H v 0.1 By William C. Colley III. 6805 Cross-Assembler
(Portable). ->A685.C. [CP/M-80, CP/M-86, HP-UX, MSDOS, PCDOS,
QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88, HP-UX, Lattice C,
Microsoft C, QNIX C]

CUG149.14-A18.C v 2.3 By William C. Colley III. 1805A Cross-Assembler
(Portable). This program lets you use your computer to assemble code
for the RCA 1802, 1804, 1805, 1805A, 1806, and 1806A Microprocessors.
The program is written in portable C rather than BDS C. All assembler
features are supported except relocation, linkage, and macros.
->CUG113 1802 Cross-Assembler. [CP/M-80 CP/M-86, HP-UX, MSDOS, PCDOS,
QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88, HP-UX, Lattice C,
Microsoft C, QNIX C] This program has compiled successfully on 2 UNIX
compilers, 5 MSDOS compilers, and 2 CP/M compilers. A port to BDS C
would be extremely difficult, but see volume CUG113. A port to
Toolworks C is untried.

CUG149.15-TEST18.ASM

CUG149.16-A68.H v 3.3 By William C. Colley III. 6801 Cross-Assembler
(Portable). [CP/M-80, CP/M-86, HP-UX, MSDOS, PCDOS, UNIX:Aztec C86,
Aztec CII, Eco-C, HP-UX, Microsoft C, QNIX C]

CUG149.17-A685.DOC v 0.1 By William C. Colley III. 6801
Cross-Assembler Documentation. ->A685.C. [CP/M-80, CP/M-86, HP-UX,
MSDOS, PCDOS, QNIX:Aztec C88, Aztec CII, CI-C86, Eco-C, Eco-C88,
HP-UX, Lattice C, Microsoft C, QNIX C]

CUG149.18-TEST685.ASM

CUG149.19-A68EVAL.C v 3.3 By William C. Colley III. 6801
Cross-Assembler (Portable). ->A68.C. [CP/M-80, CP/M-86, HP-UX, MSDOS,
PCDOS, QNIX:Aztec C86, Aztec CII, CI-C86, Eco-C, Eco-C88 HP-UX,
Lattice C, Microsoft C QNIX C]

==============================================================================
CUG150 -
-----------

CUG150.01-AFT8087.MAC v 1.0 By Jean-Marc Belisle. Adj Real No
Exponent. Converts real numbers from Microsoft(?) BASIC or FORTRAN
format to one compatible with the 8087 numeric coprocessor. [MSDOS:

CUG150.02-BIOS.MAC IBM PC BIOS Interface Macros. Macro calls to each
of the BIOS (Basic Input Output System) functions. Advantage of using
these macros is that the call (actually an interrupt) can be made by
name, rather than by number, and the macros will move the specified
parameters to the proper location before invoking the BIOS routine. By
the nature of the BIOS functions, these are very low-level function
calls. Intended for use in assembler language programs or subroutines.
->DOS.MAC. [MSDOS:] IBM PC Technical Reference Manual is needed to
document each macro's purpose and parameters.

CUG150.03-CLINK.ASM By Ray Duncan, Patrick Banchy. Load/Link Graphics
Character Table. Allocates 1Kbyte of space for the table, terminates
while stayinq resident. Subsequent calls will load the first lK bytes
of the specified file into the table, and link the table into the
screen display BIOS routine. Purpose is to define the screen images of
the characters between 0x80 and 0xFF, which IBM left as a user
definable option with the PC color graphics adapter card. ->CLINK.COM.
[MSDOS:] User documentation not included. Limited error checking.

CUG150.04-ROFF1.C v 5.1 By M. S. Zachmann. ROFF - " RUNOFFS " Text
Formatter Program. A Text formatter based upon the one in Kernighan
and Plauger's book SOFTWARE TOOLS. Contains provisions for right
justification, page headings and footings, variable margins,
indentation, page numbers in header text, centered text, underlining,
and page lengths. Processes plain ASCII text from almost any editor,
and formats it to drive most printers in straightforward fashion. No
provisions for fancy fonts, proportional spacing, etc. DOC file
contains good but brief tutorial; sufficient for most semi-experienced
users. ->ROFF.DOC, ROFF.H, ROFF.HE, ROFF2.C, ROFF.EXE, CUG103, CUG145,
CUG127, CU6128. [MSDOS: Lattice, Eco-C, Microsoft]

CUG150.05-LDIR.EXE ->LDIR.C. [MSDOS:Lattice C]

CUG150.06-DOS.MAC MSDOS Interface Macros. Assembler language macros
which call each of the (published) operating system functions of MSDOS
Releases 1.0 and 2.0. The advantage of using these macros is that the
call can be symbolic and the macros will move the parameters to the
correct reqisters before the call. The 1.0 calls have brief
documentation; the 2.0 calls have no documentation. ->BIOS.MAC.
[MSDOS:] MSDOS Manual needed to document the usage of each macro.

CUG150.07-LTYPE.EXE By S. Kluger, Pete Mack. ->LTYPE.C. [MSDOS:Lattice
C] User documentation not included.

CUG150.08-ROFF2.C v 5.1 By M. S. Zachmann. ROFF - "RUNOFFS" Text
Formatter Program. ->ROFF1.C. Lattice, Eco-C, Microsoft]

CUG150.09-XENIX.ASM By T. Jennings. MSDOS I/O Subroutines for Lattice.
Assembler subroutines which allow Lattice C to use the Xenix-like
functions of MSDOS 2.x. Routines for CREATE/OPEN/CLOSE/
READ/WRITE/FIND/FSIZE/DELETE of files using path names. Although there
may be some good interfacing information buried here, the need for
these subroutines was ended when Lattice upgraded their C library to
support MSDOS 2.x path names. Comments in file describe how to use
each of the subroutines. [MSDOS 2.x:Lattice]

CUG150.10-ROFF.EXE ->ROFF1.C. [MSDOS:]

CUG150.11-ROFF.DOC v 5.1 User Documentation for ROFF. ->ROFF1.C.

CUG150.12-ROFF.H v 5.1 By M. S. Zachmann. ROFF - " RUNOFF " Text
formatter Program. Include file for ROFF1.C. It is like the file
ROFF.HE, except that the variables are not made 'extern'. ->ROFF1.C.
MSDOS:Lattice, Eco-C, Microsoft]

CUG150.13-ROFF.HE v 5.1 By M. S. Zachmann. ROFF - " RUNOFF " Text
Formatter Program. ->ROFF1.C.

CUG150.14-TRAN.C Transcendental Function Library. Subroutines to
compute square root, log (to base e), and exponential functions.
Iterates until 1E-7 difference. ->HP.C. User documentation not
included. Requires a C compiler with double precision real numbers.

CUG150.15-LTYPE.C v 3.0 By S. Kluger, Pete Mack. LTYPE - Type Library
Member to STDOUT. Copies the specified library member to the STDOUT
file. Usage is: LTYPE <library file> <member name> A library file is a
single large file to the operating system which has been built from
many smaller files. The purpose of a library file is to save the
diskette space which otherwise would be wasted, due to the allocation
of disk space in units of fixed size. ->Library Utility, LU, LDIR.C.
[MSDOS:Lattice C] User documentation not included.

CUG150.16-CLINK.COM

CUG150.17-LDIR.C v 3.0 By Gary P. Novosielskl, Pete Mack. Library
Directory Display Program. Displays the file names and sizes (in
sectors or kilobytes) of the files whlch are contained in a library
(.LBR) file. Intended for use on Remote CP/M systems where the full
library utility (LU) is not made available for security reasons. A
library file is a single large file to the operating system which has
been built from many smaller files. The purpose of a library file is
to save the diskette space which otherwise would be wasted, due to the
allocation of disk space in units of fixed size. ->Library Utility LU,
LTYPE.C. [MSDOS:Lattice C] User documentation not included. Program
prints syntax and options summary when called with no command line
options. Copyrighted. Permission granted for noncommercial use.

CUG150.18-SUBMIT.DSK

CUG150.19-HP.C Reverse Polish Notation. A small program which turns
your PC into a very expensive, but convenient(?), pocket calculator.
It operates like the Hewlett-Packard calculators, which use RPN. It
has a 6 value stack, although this could easily be modified. It is NOT
a resident program, like the commercial desktop assistant programs.
->TRAN.C. [MSDOS:Lattice] User documentation not included. Requires C
compiler with double precision real numbers. Requires file TRAN.C to
compute transcendental functions.

==============================================================================
CUG151 -
-----------

CUG151.01-ED2.C By Edward K. Ream, Alan D. Howard. Ed Ream's Screen
Editor. Includes seven top level functions and the main function of Ed
Ream's Screen Editor. This is an enhanced version of the editor
published in January 1982 by Dr. Dobb's Journal. This version was
implemented by Alan D. Howard. The disk contains several program
modules: two include files, nine source files, an assembler source
file and a documentation file. also included is the executable module
in EXE format. This program is a full screen editor that can be used
to develop C programs. ->CUG114, CUG115. [MS-DOS:DeSmet]

CUG151.02-ED7.C Thirteen [pmt ...] print functions for Ed Ream's
Screen Editor. These functions print the initial screen and set up the
editor. ->ED2.C.

CUG151.03-ED11.A

CUG151.04-ED1.CCC #defines fifty identifiers for Ed Ream's Screen
Editor. The text consists of a series of constants representing the
video attributes, cursor movements, etc.... ->ED2.C.

CUG151.05-ED6.C Includes eleven [out...] functions for Ed Ream's
Screen Editor. The functions get or set the cursor position, clear the
screen, delete entire line or to the end of the line, and scroll.
->ED2.C.

CUG151.06-ED9.C Twenty [sys ... ] system functions and one assembler
function for Ed Ream's Screen Editor. The system functions manipulate
the editor's system or run time environment by handling files,
checking keyboard status, or by initializing and closing the editor.
->ED2.C.

CUG151.07-ED9.C Fifteen low-level tool functions for Ed Ream's Screen
Editor. ->ED2.C.

CUG151.08-ED4.C Thirty-four [ed...] edit functions for Ed Ream's
Screen Editor. These functions place the program into insert mode,
split lines, mark lines and search for specific strings, to describe a
few. ->ED2.C.

CUG151.09-EDO.C Defines thirteen identifiers for Ed Ream's Screen
Editor. The text consists of a series of constants representing the
maximum length of a string, the maximum number of characters in a
filename, etc.... ->ED2.C.

CUG151.10-ED3.C Includes forty top level functions for Ed Ream's
Screen Editor. Some of these are command functions and some support
the command functions. The top level command functions parallel the
editors commands, for example: rename() find(), list(), save() and
search(), to name a few. ->ED2.C.

CUG151.11-ED5.C Includes thirteen functions, one tab length function
and twelve [buf... ] editor functions, for Ed Ream's Screen Editor.
These functions perform such duties as printing out characters,
assigning the default output device, and setting the editors tab
lengths. ->ED2.C.

CUG151.12-ED10.C Includes twenty-seven [buf...] buffer functions for
Ed Ream's screen editor. All of these functions control the virtual
file. Some of the functions move lines within the buffer, copy lines,
check the buffer status, increase the buffer file size, and save the
buffer to a file. ->ED2.C.

CUG151.13-LINK.BAT

CUG151.14-LIST.BAT

CUG151.15-EDIT.EXE

CUG151.16-READ.ME

CUG151.17-#137

CUG151.18-SUBMIT.DSK

CUG151.19-CRC.TXT

CUG151.20-CRCK4.COM

CUG151.21-ED.DOC

==============================================================================
CUG152 -
-----------

CUG152.01-LUMP.DOC By David N. Smith. Lump Documentation.
Documentation on LUMP.EXE which is a utility to transfer files in a
group or lump such as to or from a BBS. ->LUMP.C.

CUG152.02-SUBMIT.DSK

CUG152.03-LUMP.EXE By David N. Smith. Lump File transfer Utility.
Transfers files in a group or lump such as to or from a BBS. [CI/C86]

CUG152.04-UNLUMP.EXE By David N. Smith. Unlump file Transfer Utility.
Separates files which have been transferred in a group or lump with
the utility WMP.EXE. [CI/C86]

CUG152.05-GXEP.DOC By David N. Smith, Digital Equipment Corp.. GREP.
Documentation for UNIX-like Grep command to find strings in files.
->GREP.C. [CI/C86]

CUG152.06-GREP.EXE

CUG152.07-XC.DOC By Philip N. Hisley, David N. Smith. Documentation
for XC. [CI/C86]

CUG152.08-XC.EXE.

CUG152.09-CC.DOC BY T. Jennings, David N. Smith. Program checker doc.
[CI/C86]

CUG152.10-CC.EXE

CUG152.11-CC.OBJ

CUG152.12-README By David N. Smith. Notes on WG152. Notes on LUMP,
UNLUMP, GRIP, XC, & CC which are utilities designed to send multiple
files in a 'lump', separate files which have been lumped together with
lump, find strings in files, build a cross-reference file to a C
source code file, and check a C source code file for matched braces
comments, and parenthesis.

CUG152.13-UNLUMP.C By David N. Smith. Unlump Transfer Utility.
Separates files which have been transferred in a group or lump with
the utility LUMP.EXE. [CI/C86] The authors claim copyrights and
authorize non-commercial use only.

CUG152.14-GREP.C By David N. Smith, Digital equipment Corp. UNIX-like
GREP. A program to find strings in a file. The program creates the
GREP command like UNIX. [CI/C86] Upper and lower case are always
ignored. Blank lines always fail to match. The authors claim
copyrights and authorize non-commercial use only.

CUG152.15-LUMP.C By David N. Smith. Lump File Transfer Utility.
Transfers files in a group or lump such as to or from a BBS. [CI/C86]
The authors claim copyrights and authorize non-commercial use only.

CUG152.16-XC.C By Philip N. Hisley, David N. Smith. Concordance or
cross-reference. A utility to develop lists of reserved words in
source code to form a concordance or cross-reference of the program.
[CI/C86] The authors claim copyrights and authorize non-commercial use
only.

CUG152.17-CC.C By T. Jennings, David N. Smith. A C program checker.
The source code of a utility to check for matched braces and other
essential elements by counting the numbers of braces, parenthesis, and
comments in order to debug C source code. [CI/C86] The authors claim
copyrights and authorize non-commercial use only.

==============================================================================
CUG153 -
-----------

CUG153.01-CHOSIT.C v. 1.0 By L. Cuthbertson. Simple menu utility
(Cuth84). Simple C routine to display a menu, obtain a response, and
validate the response. ->mencon.c. [MSDOS v. 2.0:Microsoft C]

CUG153.02-NEWSLET.216

CUG153.03-BIOSIO.ASM v. 1.0 By L. Cuthbertson. IBMPC BIOS Assembly
Routines (Cuth84). Assembly routines which interface directly with the
IBMPC BIOS callable from Microsoft C. Includes some routines for
keyboard, screen, and memory I/O. [MSDOS v. 2.0:Microsoft C]

CUG153.04-DOSDATE.ASM v. 1.0 By L. Cuthbertson. IBMPC DOSdate to
Integers (Cuth84). assembly routine which uses DOS interrupt 21h to
obtain the DOS date as a set of integers. [MSDOS v. 2.0:Microsoft C]

CUG153.05-DOSTIME.ASM v. 1.0 By L. Cuthbertson. IBMPC DOStime to
Integers (Cuth84). Assembly routine which uses interrupt 21h to obtain
the DOS time in hours, minutes, seconds, and hundreths of seconds as
integers. [MSDOS v. 2.0:Microsoft C]

CUG153.06-CAT.BAT v. 1.0 By L. Cuthbertson. Batch file: UNIX cat
(Cuth84). Batch file which emulates UNIX cat command. (Prints
consecutive files to stdout). [MSDOS v. 2.0:]

CUG153.07-CC.BAT v. 1.0 By L. Cuthbertson. Batch file: UNIX cc
(Cuth84). Batch file: UNIX (Cuth84). Batch file which emulates UNIX cc
command. (Invokes the c compiler). Batch file which emulates UNIX
command 1. (Sorts DOS output from dir command and pipes it through
more.). [MSDOS v. 2.0:] File is corrupted.

CUG153.08-CL.BAT v. 1.0 By L. Cuthbertson. Batch file: UNIX cl
(Cuth84). Batch file which emulates UNIX command cl (cls). [MSDOS v.
2.0:]

CUG153.09-

CUG153.10-LD.BAT v. 1.0 By L. Cuthbertson. Batch file: ld (Cuth84).
Batch file which invokes a linker. [MSDOS v. 2.0:]

CUG153.11-LS.BAT v. 1.0 By L. Cuthbertson. Batch file: UNIX ls
(Cuth84). Batch file which emulates UNIX command ls. (Does a regular
DOS dir command, as well as invokes dir on the batch file arguments).
[MSDOS v. 2.0:]

CUG153.12-MV.BAT v. 1.0 By L. Cuthbertson. Batch file: UNIX mv
(Cuth84). Batch file which emulates UNIX command mv. (Renames a file).
[MSDOS v. 2.0:]

CUG153.13-RM.BAT v. 1.0 By L. Cuthbertson. Batch file: UNIX rm
(Cuth84). Batch file which emulates UNIX command rm. (Delete a file).
[MSDOS v. 2.0:]

CUG153.14-VI.BAT v. 1.0 By L. Cuthbertson. Batch file to invoke edlin.
(Cuth84). Batch file which invokes the edlin editor. [MSDOS v. 2.0:]

CUG153.15-CURBACK.C v. 1.0 By L. Cuthbertson. Curback.c (Cuth84). C
routine to move the cursor backward x relative columns. [MSDOS v.
2.0:Microsoft C]

CUG153.16-CURDOWN.C v. 1.0 By L. Cuthbertson. Curdown.c (Cuth84). C
routine to move the cursor down y relative lines. [MSDOS v.
2.0:Microsoft C]

CUG153.17-CURFOR.C v. 1.0 By L. Cuthbertson. Curfor.c (Cuth84). C
routine to move the cursor forward x relative columns. [MSDOS v.
2.0:Microsoft C]

CUG153.18-CURSOR.C v. 1.0 By L. Cuthbertson. Cursor.c (Cuth84). C
routine to move the cursor to a specific row, col position. [MSDOS v.
2.0:Microsoft C]

CUG153.19-CURUP.C v. 1.0 By L. Cuthbertson. Curup.c (Cuth84). C
routine to move the cursor up y relative lines. [MSDOS v.
2.0:Microsoft C]

CUG153.20-CVTDATE.C v. 1.0 By L. Cuthberson. Convert date (Cuth84). C
routine to expand a packed date (1/1/83) to its long form (01/01/84)
MSDOS v. 2.0:Microsoft C]

CUG153.21-ELINE.C v. 1.0 By L. Cuthbertson. Erase Screen Line
(Cuth84). C routine to erase a line or partial line from the screen.
[MSDOS v. 2.0:Microsoft C]

CUG153.22-ESCREEN.C v. 1.0 By L. Cuthbertson. Erase Screen Lines
(Cuth84). C routine to erase the screen or partial screen. [MSDOS v.
2.0:Microsoft C]

CUG153.23-FRAME.C v. 1.0 By L. Cuthbertson. Draw Box or Frame
(Cuth84). C routine to draw a box given the upper left and lower right
coordinates of the frame. Uses BIOS calls, extended graphics charactsr
set, no graphics board needed. [MSDOS v. 2.0:Microsoft C]

CUG153.24-GETDATE.C v. 1.0 By L. Cuthbertson. Get Date as mm/dd/yy
(Cuth84). C routine to return the DOS date as a string in the form
mm/dd/yy. [MSDOS v. 2.0:Microsoft C]

CUG153.25-GETLINE.C v. 1.0 By L. Cuthbertson. Get line from file
(Cuth84). C routine to read a line from a file into a string. [MSDOS
v. 2.0:Microsoft C]

CUG153.26-GETTIME.C v. 1.0 By L. Cuthbertson. Get Military (Cuth84). C
routine to return time in military form HH:MM:SS. [MSDOS v.
2.0:Microsoft C]

CUG153.27-GTOJ.G v. 1.0 By L. Cuthbertson. Gregorian to Julian
(Cuth84). C routine which converts a Gregorian date in the form
mm/dd/yy to a Julian date integer. Julian day 1 is 1/1/1 AD. [MSDOS v.
2.0:Microsoft C]

CUG153.28-IBMTTY.C v. 1.0 By L. Cuthbertson. Terminal Emulator
(Cuth84). C terminal emulator with file upload and download
capabilities, optimized to communicate with a VAX 11/180. [MSDOS v.
2.0:Microsoft C]

CUG153.29-JTOJ.C v. 1.0 By L. Cuthbertson. Julian date to Julian
(Cuth84). C routine to convert a Julian date from form yddd to an
integer. [MSDOS v. 2.0:Microsoft C]

CUG153.30-MENCON.C v. 1.0 By L. Cuthbertson. Menu constructor
(Cuth84). C program to construct a menu from an ascii menu control
file. ->. [MSDOS v. 2.0:Microsoft C]

CUG153.31-PAUSE.C v. 1.0 By L. Cuthbertson. Pause routine [Cuth84]. C
routine to force a program to pause for a specified time. Accurate to
hundredths of second, using the system clock. [MSDOS v. 2.0:Microsoft
C]

CUG153.32-READC.C v. 1.0 By L. Cuthbertson. Read character to screen
(Cuth84). C routine to read a character from stdin using a DOS
function. [MSDOS v. 2.0:Microsoft C]

CUG153.33-READS.C v. 1.0 By L. Cuthbertson. Read string from stdin
(Cuth84). C routine to read string from stdin. [MSDOS v. 2.0:Microsoft
C]

CUG153.34-SCRATT.C v. 1.0 By L. Cuthbertson. Screen Attribute
Controller (Cuth84). C routine to manipulate screen attributes such as
bold, blink, and reverse video. [MSDOS v. 2.0:Microsoft C]

CUG153.35-SCRINIT.C v. 1.0 By L. Cuthbertson. Screen Initializer
(Cuth84). Day C routine to initialize the screen using initializing in
a statements in the include file scontrol.h. [MSDOS v. 2.0:Microsoft
C]

CUG153.36-WEEKDAY.C v. 1.0 By L. Cuthbertson. Day of Week (Cuth84). C
routine to determine the day of week of a given Gregorian date in the
for mm/dd/yy. [MSDOS v. 2.0:Microsoft C]

CUG153.37-WRITEC.C v. 1.0 By L. Cuthbertson. Write char to screen
(Cuth84). C routine to write a character to the screen using a DOS
function. [MSDOS v. 2.0:Microsoft C]

CUG153.38-WRITES.C v. 1.0 By L. Cuthbertson. Write string to screen
(Cuth84). C routine to write a string to the screen using DOS function
call. [MSDOS v. 2.0:Microsoft C]

CUG153.39-CRCK4.COM

CUG153.40-README.DOC v. 1.0 By L. Cuthbertson. CU6153 Table of
Contents (Cuth84). Documentation describing disk contents. [MSDOS v.
2.0:]

CUG153.41-SUBMIT.DSK

CUG153.42-SCONTROL.H v. 1.0 By L. Cuthbertson. Screen control include
file (Cuth84). Include file for the scrinit.c program. ->scrinit.c.
[MSDOS v. 2.0:]

CUG153.43-COMM.MNU v. 1.0 By L. Cuthbertson. Menu layout example.
(Cuth84). Menu control file which is used by the mencon program to
construct a menu. ->mencon.c, ibmtty.c. [MSDOS v. 2.0]

CUG153.44-CRC.TXT

CUG153.45-JTOG.C v. 1.0 By L. Cuthbertson. Julian date to Gregorian
(Cuth84). C routine to convert a Julian date (integer) into a
Gregorian date of the form mm/dd/yy. Julian day 1 is Gregorian 1/1/1.
[MSDOS v 2.0:Microsoft C]

==============================================================================
CUG154 -
-----------

CUG154.01-CAT.C v. 1.0 By C. Allison. Catenate files (Alli85).
Concatenates (joins) files and prints them to stdout. [MSDOS v.
2.0:Mark Williams C86]

CUG154.02-CALC.C v. 1.0 By C. Allison. Simple Calculator (Alli85).
Simple display accumulator for quick on-screen calculations. [MSDOS v.
2.0:Mark Williams C86]

CUG154.03-DARKEN.C v. 1.0 By C. Allison. Darken text 1 tries (Alli85).
Darkens text 1 tries on printouts by over striking them several times.
[MSDOS v. 2.0:Mark Williams C86]

CUG154.04-DETAB.C v. 1.0 By C. Allison. Change tabs to blanks
(Alli85). Changes tabs to blanks in a file. Can modify source to
handle various tab lengths. [MSDOS v. 2.0:Mark Williams C86]

CUG154.05-EATCOM.C v. 1.0 By C. Allison. Strip comments (Alli85).
Filter which strips comments from the stdin I/O stream. [MSDOS v.
2.0:Mark Williams C86]

CUG154.06-GETKEY.C v. 1.0 By C. Allison. Unbuffered key press read
(Alli85). Single unbuffered key press read using the BIOS. [MSDOS v.
2.0:Mark Williams C86]

CUG154.07-GREP2.C v. 1.0 By C. Allison. Decus C Grep2 (Alli85).
General regular expression matcher from Decus C tool set. [MSDOS v.
2.0:Mark Williams C86] Non-commercial use only.

CUG154.08-HASH.C v. 1.0 By C. Allison. Create/display hash table
(Alli85). Creates and displays an open hash table. [MSDOS v. 2.0:Mark
Williams C86]

CUG154.09-HEAD.C v. 1.0 By C. Allison. Display head of file (Alli85).
Display first N lines of text files. [MSDOS v. 2.0:Mark Williams C86]

CUG154.10-INCLUDE.C v. 1.0 By C. Allison. File inclusion to 7 levels
(Alli85). Do it yourself file inclusion, based on Software Tools,
adapted by the author. Guards against recursive inclusion. Allows 7
levels of nesting. [MSDOS v. 2.0:Mark Williams C86]

CUG154.11-

CUG154.12-MAKEARG.C v. 1.0 By C. Allison. Make global argv from
cmdline (Alli85). Makes a global argv[] by parsing the command line.
->GREP2.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.13-MARK.C v. 1.0 By C. Allison. Mark reserved words (Alli85).
Underline C reserved words from standard input. [MSDOS v. 2.0:Mark
Williams C86]

CUG154.14-PAGE.C v. 1.0 By C. Allison. Page (UNIX more clone)
(Alli85). A UNIX more clone for examining ascii files on the screen.
[MSDOS v. 2.0:Mark Williams C86]

CUG154.15-PR.C v. 1.0 By C. Allison. Detabbing file printer (Alli85).
Prints a file to stdout. Adapted from Software Tools by the author.
[MSDOS v. 2.0:Mark Williams C86]

CUG154.16-RM.C v. 1.0 By C. Allison. Deletes files (Alli85). Delete
files with query options. [MSDOS v. 2.0:Mark Williams C86]

CUG154.17-ROFF.C v. 1.0 By C. Allison. Software Tools Roff (Alli85).
Software Tools Roff optimized by the Author. [MSDOS v. 2.0:Mark
Williams C86]

CUG154.18-UNIQ.C v. 1.0 By C. Allison. Software Tools uniq (Alli85).
Filters out unique lines from files, adapted from Software Tools by
the Author. [MSDOS v. 2.0:Mark Williams C86]

CUG154.19-UNIQ2.C v. 1.0 By C. Allison. Filter repeated lines
(Alli85). Filters out all repeated lines, keeping the first
occurrence. Descended from Software Tools uniq. [MSDOS v. 2.0:Mark
Williams C86]

CUG154.20-WC.C v. 1.0 By C. Allison. Word Count (Alli85). Word/line
counter program from The C Programming Language. [MSDOS v. 2.0:Mark
Williams C86]

CUG154.21-XREF.C v. 1.0 By C. Allison. Word to Line Xref (Alli85).
Creates a cross reference listing of words in the file and the lines
containing the words. [MSDOS v. 2.0:Mdrk Williams C86]

CUG154.22-

CUG154.23-

CUG154.24-GREP2.DOC v. 1.0 By C. Allison. Grep2 documentation
(Alli85). Documentation for grep2.c. ->GREP2.C. [MSDOS v. 2.0:

CUG154.25-ROFF.DOC v. 1.0 By C. Allison. Roff documentation (Alli85).
Documentation for roff.c. ->ROFF.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.26-TOOLS.DOC v. 1.0 By C. Allison. Tools documentation
(Alli85). Roff input file for CUG154 documentation file read.me.
->READ.ME. [MSDOS v. 2.0:roff]

CUG154.27-CALC.EXE v. 1.0 By C. Allison. Calc.exe (Alli85). Exe file
for oak.c. ->CALC.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.28-CAT.EXE v. 1.0 By C. Allison. Cat.exe (Alli85). Executable
file for cat.c. ->CAT.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.29-DARKEN.EXE v. 1.0 By C. Allison. Darken.exe (Alli85).
Executable file for darken.c. ->DARKEN.C. [MSDOS v. 2.0:Mark Williams
C86]

CUG154.30-FC.EXE

CUG154.31-GREP2.EXE v. 1.0 By C. Allison. Grep2.exe (Alli85).
Executable file for grep2.c. ->GREP2.C. [MSDOS v. 2.0:Mark Williams
C86]

CUG154.32-HEAD.EXE v. 1.0 By C. Allison. Head.exe (Alli85). Executable
file for head.c. ->HEAD.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.33-PAGE.EXE v. 1.0 By C. Allison. Page.exe (Alli85). Executable
file for page.c. ->PAGE.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.34-PR.EXE v. 1.0 By C. Allison. pr.exe (Alli85). Executable
file for pr.c. ->PR.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.35-RM.EXE v. 1.0 By C. Allison. Rm.exe (Alli85). Executable for
rm.c. ->RM.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.36-ROFF.EXE v. 1.0 By C. Allison. Roff.exe (Alli85). Executable
file for roff.c. ->ROFF.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.37-UNIQ.exe v. 1.0 By C. Allison. Uniq.exe (Alli85). Executable
file for uniq.c. ->UNIQ.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.38-UNIQ2.EXE v. 1.0 By C. Allison. Uniq2.exe (Alli85).
Executable file for uniq2.c. ->UNIQ2.C. [MSDOS v. 2.0:Mark Williams
C86]

CUG154.39-WC.EXE v. 1.0 By C. Allison. Wc.exe (Alli85). Executable
file for wc.c. ->WC.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.40-XREF.EXE v. 1.0 By C. Allison. Xref.exe (Alli85). Executable
file for xref.c. ->XREf.C. [MSDOS v. 2.0:Mark Williams C86]

CUG154.41-TIME.H v. 1.0 By C. Allison. DOS Time and date (Alli85).
Functions to return time and date from DOS. [MSDOS v. 2.0:Mark
Williams C86]

CUG154.42-READ.ME v. 1.0 By C. Allison. CUG154 Table of Contents
(Alli85). Contains notes on disk contents. [MSDOS v. 2.0:Mark Williams
C86]

CUG154.43-CRC.TXT

CUG154.44-ROFF.TXT v. 1.0 By C. Allison. Roff.doc roff input file
(Alli85). This is a roff input file, and produces roff.doc when
formatted with roff. ->ROFF.DOC. [MSDOS v. 2.0:roff]

==============================================================================
CUG155 -
-----------

CUG155.01-DISK3.C v. 2.0 By Richard Damon. Disk Utility Program.
Examines and modifies a CP/M disk sector by sector. [CP/M:BDS v. 1.5]

CUG155.02-DISK3.COM

CUG155.03-BDOS.CSM

CUG155.04-EXAMPLE.C By Ray Swartz. Tree Demonstration. This program is
an example of how to use Ray Swartz's btree library. Searches and
modifies a tree containing only keys. ->BTREEO.C. [CP/M:]

CUG155.05-ONEDLIB.C By David L. Fox. ONED. UNIX like library functions
called by oned fgets -Read one line. setjmp -- Save registers for
later restoration by longjmp. longjmp -- Transfer execution to
previously called setjmp. Coded in 8080 assembly language for use with
C/80 compiler. [CP/M:C/80]

CUG155.06-TREEINIT.C Initialize Key file. Creates a key file suitable
for manipulation by the binary tree routines. ->BTREEO.C. [CP/M:]

CUG155.07-BTREE.H By Ray Swartz. ->BTREEO.C.

CUG155.08-README By Ray Swartz. B-tree Library Documentation.
->BTREEO.C. [CP/M:]

CUG155.09-TERMCTRL.C By Ray Swartz. Data Input Routines. Terminal
interface routines for a Televideo 925. Includes cursor addversy,
mini-menu and a few other routines to support data input. [CP/M:]

CUG155.10-CUGDISK3.BRF By Alexander von Obert. Program Submitted.
[CP/M:]

CUG155.11-FFT.C By Jim Pisano. Fast Fourier Transform. Performs fast
fourier transform using method described by E. O. Brigham. For details
of the method, refer to Brigham's book. THE FAST FOURIER TRANSFORM. [
:DeSmet] This program is self-contained. All that is needed is a
manner of getting the data into the array real data (& imag data, if
applicable). The transformed data will reside in these two arrays upon
return with the original data being destroyed.

CUG155.12-ONED.COM

CUG155.13-CRYPT.C By Jim Pisano. Crypt. This uses the simple
encryption/decryption scheme of XORing each character with those of a
comparison string. The security in this is that any string of
characters, known only by the user, can encode the text. Furthermore
to retrieve the original text, the user simply applies the same key
string. [:DeSmet] Do not encrypt a file with itself! You will lose the
original file (it will be all blank spaces due to the method used)

CUG155.14-BTREE1.C By Ray Swartz. Tree Functions. A set of library
routines to manipulate balanced binary trees. The insert routine was
directly translated from the algorithm in Knuth's book. Single letter
variables (p,q,r,s) are used to make the steps more obvious.
->BTREE0.C. [CP/M:]

CUG155.15-BTREEO.O By Ray Swartz. Btree Library Routines. Package to
create and maintain balanced binary trees. ->BTREE1.C, TREEINIT.C,
BTREE.H, EXAMPLE.C, TERMCTRL.C. [CP/M:]

CUG155.16-IBMBIO.COM

CUG155.17-ONED.DOC v. 1.0 By David L. Fox. ONED Documentation.
->ONED.C, ONEDLIB.C. [CP/M:C/80]

CUG155.18-ONED.C v. 1.0 By David L. Fox. ONED. One dimensional
cellular automata simulation. ->ONED.DOC, ONEDLIB.C. [CP/M:C/80]
Expects Osborne 1 display.

CUG155.19-FFT.DOC By Jim Pisano. Fast Fourier Transform Documentation.
->FFT.C.

CUG155.20-SUBMIT.DSK

==============================================================================
CUG156 -
-----------

CUG156.01-IOLIB.C By James Van Zandt. I/O Library. Provide a
'standard' interface between C programs and the CP/M I/O system.
->C80V.C, IOLIB.DOC. [CP/M:Self compiling]

CUG156.02-ARGS.C By Jan Hennrik Johansson, James Van Zandt. Command
Line Functions. Purpose is to fetch arguments from the command line.
->C80V.C. [CP/M:Self compiling]

CUG156.03-TEST.C I/O Demonstration. ->C80V.C. [CP/M:Self compiling]

CUG156.04-PRINTF1.C By J. E. Handrix. Expanded Printf function.
Identical to Printf2.c except that it formats 'f' and 'e' of Printf.
->C80V.C, PRINTF2.C. [CP/M:Self compiling]

CUG156.05-PRINTF2.C By J. E. Hendrix, James Van Zandt. PRINTF
Function. This supplies formatted output like that described by K&R.
Input conversion routines utoi (for unsigned integers) and at of (for
floating point numbers) are also supplied. ->C80Y.C, PRINTF1.C,
PRINTF2.C. [CP/M:Self compiling] Requires FLOAT.

CUG156.06-FLOAT.C By Neil Colvin, James Van Zandt. Floating Point
Routines. ->C80V.C, FLOAT.DOC. [CP/M:Self compiling] This code uses
some of the z80's undocumented instructions.

CUG156.07-C80V-2.C v. 1.2 By Ron Cain, James Van Zandt. Module 2 of
Small C. ->C80V.C. [CP/M:Self compiling]

CUG156.08-C80V.C v. 1.2 By Ron Cain, James Van Zandt. Small C Compiler
with Floats. z80 Small C Compiler with floating point math. Executable
image is included so that compiler is self-compiling. Produces
relocatable assembly for ZMAC & ZLINK (also on the disk). ->CUG104,
CUG115, CUG132, CUG146, CUG163. [CP/M:Self compiling]

CUG156.09-ZLINK.COM

CUG156.10-CC.DOC C Compiler Documentation. Documentation for the z80
Small C Compiler with floating point math. ->C80V.C. [CP/M:Self
compiling]

CUG156.11-ARGS.DOC By Jan Henrik Johansson, James Van Zandt.
Documentation for ARGS. ->C80Y.C, ARGS.C. [CP/M:Self compiling]

CUG156.12-FLOAT.DOC By James Van Zandt. Float Library Doc. ->C80V.C,
FLOAT.C. [CP/M:Self compiling]

CUG156.13-IOLIB.DOC By James Van Zandt. Documentation for IOLIB.
->C80V.C, IOLIB.C. [CP/M:Self compiling]

CUG156.14-PRINTF.DOC PRINTF Library Doc. ->C80V.C, PRINTF1.C,
PRINTF2.C. [CP/M:Self compiling]

CUG156.15-PROFILE.DOC Documentation for Profile. ->C80V.C,
PROFILE.ASM. [CP/M:Self compiling]

CUG156.16-TRANSCEN.DOC By James Van Zandt. Float Library Doc.
->C80V.C, TRANSCEN.C. [CP/M:Self compiling]

CUG156.17-ZLINK.DOC By Bruce Mallett. Linkage Editor. ZLINK is a
linkage editor for proqrams assembled by ZMAC. ->C80V.C, ZMAC.DOC,
ZLINK.COM. [CP/M:Self compiling]

CUG156.18-ZMAC.DOC By Bruce Mallet. Relocating z80 Assembler. A Zilog
mnemonic relocating assembler with command language syntax similar to
DEC assemblers. ->C80V.C, ZMAC.COM, ZLINK.DOC. [CP/M:Self compiling]

CUG156.19-IOLIB.OBJ

CUG156.20-PRINTF1.OBJ

CUG156.21-TRANSCEN.C By James Van Zandt, Neil Colvin. Transcendentals
floating point. Routines to compute - powers, sine, cosine, square
root. ->C80V.C, TRANSCEN.DOC. [CP/M:Self compiling]

CUG156.22-CC.COM

CUG156.23-ZMAC.COM

CUG156.24-PRINTF2.OBJ

CUG156.25-ARGS.H By Jan Henrik Johansson, James Van Zandt. Header for
ARGS. ->C80V.C, ARGS.C, AR6S. DOC. [CP/M:Self compiling]

CUG156.26-ARGS.OBJ

CUG156.27-PROFILE.ASM A run time profiler for use with Small C. Also
provides function call walkbacks to assist in debugging. ->C80V.C,
PROFILE.DOC. [CP/M:Self compiling]

CUG156.28-FLOAT.H Part of Floating Point. ->C80V.C, FLOAT.C.
[CP/M:Self compiling]

CUG156.29-IOLIB.H By James Van Zandt. Globals for IOLIB. ->C80V.C,
IOL1B.H. [CP/M:Self compiling]

CUG156.30-PRINTF1.H

CUG156.31-PRINTF2.H

CUG156.32-PROFILE.H

CUG156.33-TRANSCEN.H

CUG156.34-GLIBV.OBJ

CUG156.35-FLOAT.OBJ

CUG156.36-PROFILE.OBJ

CUG156.37-TRANSCEN.OBJ

CUG156.38-CATALOG.224

CUG156.39-CRC.COM error Detection Utility. Computes a relatively
unique number from the contents of a file -- used to verify file
integrity. [CP/M:]

CUG156.40-SUBMIT.DSK

CUG156.41-USQ.COM Unsqueeze. Expands a file compacted by squeeze.
[CP/M:]

==============================================================================
CUG157 -
-----------

CUG157.01-QED6 By G. Nigel Gilbert, James W. Haefner. Module 6 of QED
editor. Performs block commands. [MSDOS:DeSmet]

CUG157.02-QED.DOC By J. W. Haefner. Documentation for QE and QED. Good
help with QE and QED and with their modifications. QED is an easy to
learn full screen editor based on E. Unlike E, QED uses Wordstar-like
commands and runs under MSDOS. It is not, however, configured to run
on a PC clone. See GED for PC clone compatability. QED supports block
operations, textual searches, auto indent and other programmer
oriented features. Used Pop-down menus. ->E, QE, GED, QEDI-QEDIV,
QEDT925.

CUG157.03-E.DOC v 4.6 By G. Nigel Gilbert. E Tutorial Guide.
Documentation for the E screen editor.

CUG157.04-CMODEM

CUG157.05-COVER.LET

CUG157.06-QED5 By G. Nigel Gilbert, James W. Haefner. Module 5 of QED
editor. Read and write files. [MSDOS:DeSmet]

CUG157.07-QED10 By G. Nigel Gilbert, James W. Haefner. Module 10 of
QED editor. File buffer operations extracted and stripped from
stdlib1, with protection from bdos error crashes removed for MSDOS.
[MSDOS:DeSmet]

CUG157.08-QED3 By G. Nigel Gilbert, James W. Haefner. Module 3 of QED
editor. Write text to screen. [MSDOS:DeSmet]

CUG157.09-QED4 By G. Nigel Gilbert, James W. Haefner. Module 4 of QED
editor. Perform find, alter and repeat commands. [MSDOS:DeSmet]

CUG157.10-FFT.C v 1.00 By Ian Ashdown. FFT.C - Fast Fourier Transform.
A Fast Fourier Transform implementation based on Cooley's
successive-doubling method. ->FWT.C. Vanilla] Complex numbers are
represented by their real and imaginary components in a 2-D array.
Data must be presented in multiples of two.

CUG157.11-QED8 3y G. Nigel Gilbert and James W. Haefner. Module 8 of
QED editor. Get and put text lines into and out of storage.
[MSDOS:DeSmet]

CUG157.12-CMODEM.C v 5.01 By Bill Rogers. Xmodem communications in C.
This program implements an elementary version of xmodem for under
MSDOS or PCDOS. Adapted from a version from BDS C. ->LOCAL.H.
[MSDOS:C86] The zilog usart option is not yet tested.

CUG157.13-QED.H By G. Nigel Gilbert, James W. Haefner. Definition for
QED editor. Standard header file, #included in all function files (NB
qed does NOT require <stdio.h>). [MSDOS:DeSmet]

CUG157.14-QED9 By G. Nigel Gilbert, James W. Haefner. Module 9 of QED
editor. Manages virtual memory. [MSDOS:DeSmet]

CUG157.15-LOCAL.H v 3.01 By Bill Rogers. Local Header. This file plus
'stdio.h' should result in the same interface independent of the
computer, operating system or C compiler! Note the type name that can
be redefined for different environments (courtesy Computer
Innovations). ->CMODEM [MSDOS, UNIX/3, UNIX/5:C86 Lattice C, UNIX/3 C,
UNIX/5 C]

CUG157.16-QEDBIND.BAT

CUG157.17-QEDCOMP.BAT

CUG157.18-QEDTV.EXE

CUG157.19-QED.0

CUG157.20-QED1.0

CUG157.21-QED2.0

CUG157.22-QED3.0

CUG157.23-QED4.0

CUG157.24-QED5.0

CUG157.25-QED6.0

CUG157.26-QED7.0

CUG157.27-FWT.C v 1.00 By Ian Ashdown. FWT.C - Fast Walsh Transform. A
Fast Walsh Transform implementation based on Cooley's
successive-doubling method. See the September '77 issue of BYTE for a
description of this alternative to the Fourier transform. ->FFT.C.
Vanilla] Data must be presented in multiples of two.

CUG157.28-QEDFUNCS.DOC

CUG157.29-QED7 By G. Nigel Gilbert, James W. Haefner. Module 7 of QED
editor. Low level terminal I/O functions. [MSDOS:DeSmet]

CUG157.30-TR.C v 1.00 By Ian Ashdown. TR.C - translate Characters. A
full implementation of the UNIX 'tr' utility. It copies input from
'stdin' to 'stdout ' with substitution or deletion of selected
characters that are specified in the command line that invokes the
program. Vanilla] Any operating system that converts all command line
lowercase characters to uppercase makes this utility more of a
curiosity than a useful tool. Lowercase characters can only be
specified by their octal equivalents.

CUG157.31-LETTER By Thomas Fee. An example of how TP.C works. ->TP.C.

CUG157.32-CH Change filenames. A Shell program according to a pattern,
changes file names, taking advantage of the shell's existing filename
matching compatability. [UNIX:]

CUG157.33-TP.C By Thomas Fee. Designed to take a file with a matrix of
words and output a file with the matrix transposed. ->LETTER. [UNIX:]

CUG157.34-QED1 By G. Nigel Gilbert and James W. Haefner. Module 1 of
QED editor. Environment; change files. [MSDOS:DeSmet]

CUG157.35-QED By G. Nigel Gilbert, James W. Haefner. Module 0 of QED
editor. Initialize; process commands. [MSDOS:DeSmet]

CUG157.36-QED2 By G. Nigel Gilbert and James W. Haefner. Module 2 of
QED editor. Performs text changing commands. [MSDOS:DeSmet]

CUG157.37-SUBMIT.DSK

CUG157.38-QEDTV925 By G. Nigel Gilbert, James W. Haefner. Terminal
specific module. Terminal dependent screen control functions. Code set
for Televideo 925. [MSDOS:DeSmet]

==============================================================================
CUG158 -
-----------

CUG158.01-QE9 By G. Nigel Gilbert, James W. Haefner. Part 9 of
modified 'e' 4.6. Module 9 of QE editor. Manages virtual memory.
[CP/M:BDS v. 1.5]

CUG158.02-QETERM By G. Nigel Gilbert, James W. Haefner. Terminal
specific functions. Terminal dependent screen control functions.
[CP/M:BDS v. 1.5]

CUG158.03-QE6 By G. Nigel Gilbert, James W. Haefner. Part of modified
'e' 4.6. Module 6 of QE editor. Performs block commands. [CP/M:BDS v.
1.5]

CUG158.04-QE-D.DOC

CUG158.05-QE3A.CRL

CUG158.06-

CUG158.07-QE8 By G. Nigel Gilbert, James W. Haefner. Part 8 of
modified 'e' 4.6. Module 8 of QE editor. Gets and puts text lines into
and out of storage. [CP/M:BDS v. 1.5]

CUG158.08-QE2A.CRL

CUG158.09-QE7 By G. Nigel Gilbert, James W. Haefner. Part 7 of
modified 'e' 4.6. Module 7 of QE editor. Low level terminal I/O
functions. [CP/M:BDS v. 1.5]

CUG158.10-QEADDS By G. Nigel Gilbert, James W. Haefner. Terminal
specific functions. Terminal dependent screen control functions. BDS
v. 1.5]

CUG158.11-FFT.C v 1.00 By lan Ashdown. FFT.C - Fast Fourier Transform.
A Fast Fourier Transform implementation based on Cooley's
successive-doubling method. ->FWT.C. Complex numbers are represented
by their real and imaginary components in a 2-D array. Data must be
presented in multiples of two.

CUG158.12-QE10 By G. Nigel Gilbert, James W. Haefner. Part 10 of
modified 'e' 4.6. Module 10 of QE editor. File buffer operations
extracted and stripped from stdlib1, with protection from bdos error
crashes added. [CP/M:BDS v. 1.5]

CUG158.13-QE5 By G. Nigel Gilbert, James W. Haefner. Part 5 of
modified 'e' 4.6. Module 5 of QE editor. Reads and writes files.
[CP/M:BDS v. 1.5]

CUG158.14-QE1 By G. Nigel Gilbert, James W. Haefner. Part 1 of
modified 'e' 4.6. Module 1 for QE editor. Environment; change files.
[CP/M:BDS v. 1.5]

CUG158.15-QE3.CRL

CUG158.16-QE5.CRL

CUG158.17-QE9.CRL

CUG158.18-QE4.CRL

CUG158.19-QE2.CRL

CUG158.20-QE7.CRL

CUG158.21-QETERM.CRL

CUG158.22-QE1.CRL

CUG158.23-QE6.CRL

CUG158.24-QE10.CRL

CUG158.25-QE8.CRL

CUG158.26-QE.CRL

CUG158.27-QE3 By G. Nigel Gilbert, James W. Haefner. Part 3 of
modified 'e' 4.6. Module 3 of QE editor. Writes text to screen.
[CP/M:BDS v. 1.5]

CUG158.28-QEL2.SUB

CUG158.29-QEAL2.SUB

CUG158.30-

CUG158.31-COVER.LET

CUG158.32-QE.H By G. Nigel Gibert, James W. Haefner. Definition file
for modified 'e' 4.6. Header include file for QE editor. [CP/M:BDS v.
1.5]

CUG158.33-QE4 By G. Nigel Gilbert, James W. Haefner. Part 4 of
modified 'e' 4.6. Module 4 of QE editor. Perform find, alter and
repeat commands. [CP/M:BDS v. 1.5]

CUG158.34-QE2A By E. Nigel Gilbert, James W. Haefner. Part 2 of
modified 'e' 4.6. Module 2 for QE editor containing special functions
for terminals without 'linedelete' capabilities. [CP/M:BDS v. 1.5]

CUG158.35-QEADDS.CRL

CUG158.36-QEA.SUB

CUG158.37-QEA By G. Nigel Gilbert, James W. Haefner. Part 0 of
modified 'e' 4.6. Module 0 of QEA. Initialize; process commands.
[CP/M:BDS v. 1.5]

CUG158.38-QE.COM

CUG158.39-QEFUNCS.DOC

CUG158.40-TR.C v 1.00 By Ian Ashdown. TR.C - Translate Characters. A
full implementation of the UNIX 'tr' utility. It copies input from
'stdin' to 'stdout' with substitution or deletion of selected
characters that are specified in the command line that invokes the
program. Any operating system that converts all command line lowercase
characters to uppercase makes this utility more of a curiosity than a
useful tool. Lowercase characters can only be specified by their octal
equivalents.

CUG158.41-CMODEM.C v 5.01 By Bill Rogers. Xmodem communications in C.
This program implements an elementary version of xmodem for under
MSDOS or PCDOS. ->LOCAL.H. [MSDOS:C86] The zilog usart option is not
yet tested.

CUG158.42-FWT.C v 1.00 By Ian Ashdown. FWT.C - Fast Walsh transform. A
Fast Walsh transform implementation based on Cooley's
successive-doubling method. See the September '77 issue of BYTE for a
description of this alternative to the Fourier transform. ->FFT.C.
Data must be presented in multiples of two.

CUG158.43-LETTER

CUG158.44-QE3A By G. Nigel Gilbert, James W. Haefner. Part 3 of
modified 'e' 4.6. Module 3 for qe containing special functions for
terminals without 'linedelete' capabilities. [CP/M:BDS v. 1.5]

CUG158.45-LOCAL.H v 3.01 By Bill Rogers. Local Header. This file plus
'stdio.h' should result in the same interface independent of the
computer, operating system or C compiler! Note the type names that can
be redefined for different environments (courtesy Computer
Innovations). ->CMODEM. (MSDOS, UNIX/3, UNIX/5:C86, Lattice C, UNIX/3
C, UNIX/5 C]

CUG158.46-TP.C

CUG158.47-CMODEM

CUG158.48-SUBMIT.DSK

CUG158.49-QE2 By G. Nigel Gilbert, James W. Haefner. Part 2 of
modified 'e' 4.6. Module 2 of QE editor. Performs text changing
commands. [CP/M:BDS v. 1.5]

==============================================================================
CUG159 -
-----------

CUG159.01-ADVENTUR.E

CUG159.02-DATABASE.C Adventure Module. Data manipulation functions.
[MSDOS:Eco-C88, DeSmet, Lattice]

CUG159.03-TURN.C By Bob Withers. Adventure Module. ->ADVENT.C.
[MSDOS:Eco-C88, DeSmet, Lattice]

CUG159.04-SAVEADV.C By Bob Withers. Adventure Module. Save game to
disk. ->ADVENT.C. [MSDOS:Eco-C88, DeSmet, Lattice]

CUG159.05-VERB.C By Bob Withers. Adventure Module. ->ADVENT.C.
[MSDOS:Eco-C88, DeSmet, Lattice]

CUG159.06-ENGLISH.C By Bob Withers. Adventure Module. ->AVENT.C.
[MSDOS:Eco-C88, DeSmet, Lattice]

CUG159.07-ITVERB.C By Bob Withers. Adventure Module. - >ADVENT.C.
[MSDOS:Eco-C88 DeSmet, Lattice]

CUG159.08-EADVENT.C By Bob Withers. Adventure Module. ->ADVENT.C.
[MSDOS: Eco-C88, DeSmet, Lattice]

CUG159.09-HISTORY.DOC History of this Adventure.

CUG159.10-ENVIRON.DOC By Bob Withers. Adventure's Environment.
Author's notes on MSDOS implementation.

CUG159.11-CATALOG.DOC Listing of CUG159. [MSDOS:]

CUG159.12-ADVENT-D.EXE

CUG159.13-ADVENT-L.EXE

CUG159.14-ADVENT-E.EXE

CUG159.15-ADVENT3.DAT Furnished Data file. ->ADVENT.C.

CUG159.16-ADVENT2.DAT Furnished Data file. ->ADVENT.C.

CUG159.17-ADVENT5.DAT Furnished Data file. ->ADVENT.C.

CUG159.18-ADVENT4.DAT Furnished Data file. ->ADVENT.C.

CUG159.19-AVVENT1.DAT Furnished Data file. ->ADVENT.C.

CUG159.20-ADVENT6.VAT Furnished Data file. ->ADVENT.C.

CUG159.21- SUBMIT.DSK

CUG159.22-ADVENT.H By Bob Withers. Adventure Definitions Header.
Defines all variable for driver routines and declares externals for
all sub-modules. ->ADVENT.C. [MSDOS:Eco-C88 DeSmet, Lattice]

CUG159.23-ADVENT.C By Bob Withers. Main Adventure Program. An
implementation of the original adventure game for PC clones. Adapted
from BDS version. ->CUG116. [MSDOS: Eco-C88, DeSmet, Lattice]

==============================================================================
CUG160 -
-----------

CUG160.01-INPUTS By Tom Plum. ->SOURCES. [MS/DOS:]

CUG160.02-COPYRIGH

CUG160.03-OUTPUTS By Tom Plum. ->SOURCES. [MS/DOS:]

CUG160.04-UNIRD.EXE

CUG160.05-READ.ME By Tom Plum. ->SOURCES. [MS/DOS:]

CUG160.06-SAMPLE.OUT By Tom Plum. ->SOURCES. [MS/DOS:]

CUG160.07-SAMPLE.SH By Tom Plum. ->SOURCES. [MS/DOS:]

CUG160.08-BJ By Tom Plum. ->SOURCES. [MS/DOS:]

CUG160.09-LCC.BAT

CUG160.10-LCCM.BAT

CUG160.11-HEADERS By Tom Plum. ->SOURCES. [MS/DOS:]

CUG160.12-UNIRD.C By Tom Plum. ->SOURCES. [MS/DOS:]

CUG160.13-INSTALL.BAT

CUG160.14-SAMPLE.BAT

CUG160.15-MAKX.BAT

CUG160.16-MAKXNT.BAT

CUG160.17-SUBMIT.DSK

CUG160.18-SOURCES By Tom Plum. Plum Hall Tutorial programs. A lumped
file containing tutorial programs from the Plum Hall book 'Learning to
Program in C.'. [MS/DOS:]

==============================================================================
CUG161 -
-----------

CUG161.01-READ.ME By Tom Plum, Jim Brodie. Efficient C. Source Code
from the book Efficient C. [MSDOS, IDRIS, UNIX, VAX, M68K:]

CUG161.02-104.C

CUG161.03-105.C

CUG161.04-106.C

CUG161.05-401.C

CUG161.06-402.C

CUG161.07-403.C

CUG161.08-405.C

CUG161.09-411.C

CUG161.10-413.C

CUG161.11-501.C

CUG161.12-503.C

CUG161.13-504.C

CUG161.14-505.C

CUG161.15-506.C

CUG161.16-507.C

CUG161.17-508.C

CUG161.18-601.C

CUG161.19-ALLTYP.H

CUG161.20-ALUTYP.H

CUG161.21-AVG.C

CUG161.22-BEGINT.C

CUG161.23-BFIELDS.C

CUG161.24-BOOLBITS.C

CUG161.25-CALIB.C

CUG161.26-CAUTO.C

CUG161.27-CTYPELIB.C

CUG161.28-DADD.C

CUG161.29-DAND.C

CUG161.30-DAUTO.C

CUG161.31-DBAN.C

CUG161.32-DBOR.C

CUG161.33-DDIV.C

CUG161.34-DEOR.C

CUG161.35-DEQ.C

CUG161.36-DLSH.C

CUG161.37-DLT.C

CUG161.38-DMUL.C

CUG161.39-DREM.C

CUG161.40-DRSH.C

CUG161.41-DSUB.C

CUG161.42-ECHO.C

CUG161.43-ERROR.C

CUG161.44-FAUTO.C

CUG161.45-FULIB.C

CUG161.46-FMTTRL.C

CUG161.47-FNCALL.C

CUG161.48-FROUND.C

CUG161.49-GROUPS.C

CUG161.50-HARNESS1.C

CUG161.51-HARNESS2.C

CUG161.52-HARNESS3.C

CUG161.53-HARNESS4.C

CUG161.54-HELLO.C

CUG161.55-INTREG.C

CUG161.56-LAUTO.C

CUG161.57-LOCAL.H

CUG161.58-LOOPS1.C

CUG161.59-LOOPS2.C

CUG161.60-MATHLIB.C

CUG161.61-OPTIMTST.C

CUG161.62-QSORTITM.C

CUG161.63-QSORTM.C

CUG161.64-QSORTPRO.C

CUG161.65-QSORTRCM.C

CUG161.66-RETURNP.C

CUG161.67-SAUTO.C

CUG161.68-SSTAT.C

CUG161.69-STDIOLIB.C

CUG161.70-STDLIB.C

CUG161.71-STRLIB.C

CUG161.72-SWITCH.C

CUG161.73-SWITCH1.I

CUG161.74-SWITCH2.I

CUG161.75-TIMER1.H

CUG161.76-TST_SORT.C

CUG161.77-UINC.C

CUG161.78-UNEG.C

CUG161.79-UPIN.C

CUG161.80-UNIRD.C

CUG161.81-UNIRD.EXE

CUG161.82-IDRIS.D

CUG161.83-DOCUMENT.D

CUG161.84-MS_DOS.D

CUG161.85-UNIX.U

CUG161.86-VAX.D

CUG161.87-M68K.D

CUG161.88-102.C

CUG161.89-BENCHES.D

CUG161.90-READERS.IN

CUG161.91-SUBMIT.DSK

==============================================================================
CUG162 -
-----------

CUG162.01-DEM01.C

CUG162.02-COMP32.MAC By James Dick. Long and float comparison.
->README.DOC, DEQ.MAC. [CP/M:] In Z80 assembly.

CUG162.03-CONV32.MAC By James Dick. Longs to Float. Convert float
variables to long type and vice versa in Z80 assembly code. ->
README.DOC DEQ.MAC. [CP/M:]

CUG162.04-FTOA.C By James Dick. Float to Ascii. Converts float type to
ASCII string. ->README.DOC. [CP/M:C/80]

CUG162.05-DEMO3.C By James Dick. Hex dump of float variables.
->README.DOC, DEMO2.C. [CP/M:C/80]

CUG162.06-DEQ.MAC By James Dick. Device Equates. I/O ports for AM9511
arithmetic processor chip. ->README.DOC. [CP/M:C/80] Must be modified
to suit user's hardware.

CUG162.07-DLIBRARY.REL

CUG162.08-EDCODE.MAC By James Dick. Essential device Code. Machine
level interface to 9511 in Z80 assembly. ->README.DOC. [CP/M:] Include
DEQ.MAC.

CUG162.09-DEM02.C By James Dick. Float Demonstrations. Returns inverse
sine, in radians and degrees, or an error message if out of range.
->README. DOC. [CP/M:C/80]

CUG162.10-FMDX.C By James Dick. Multiply and divide. Fdter and fmter
return the value of fexb divided by ten, or multiplied by ten.
->README.DOC. [CP/M:C/80]

CUG162.11-LOGPOW.C v 1.2 By James Dick. Logs and powers. Sqrt(),
exp(), pow(), power10(), in(), log() and fabol(). The extra function
invrt() returns the float value of one() divided by the float
argument. ->README.DOC DEQ.MAC. [CP/M:C/80] Includes DEQ.MAC.

CUG162.12-ATOF.C v 1.2 By James Dick. Ascii to Float. Convert Ascii
string to 32 bit binary float variable. ->README.DOC. [CP/M:C/80]
Requires AM9511.

CUG162.13-README.DOC v 1.2 By James Dick. Mchip80 Documentation.
Explains how to build custom version of Mchip80 package. Mchip80
replaces C/80 Mathpak functions with calls to AM9511 floating point
unit. ->READMORE.DOC. [CP/M:C/80]

CUG162.14-READMORE.DOC v 1.2 By James Dick. Mchip80 Documentation.
Additional explanation of C/80 code generation and its impact on
Mchip80. ->README.DOC. [CP/M:C/80]

CUG162.15-XLONG.MAC By James Dick. A single long operation. Performs a
long module operation. In Z80 Assembly language. ->README.DOC,
DEQ.MAC. [CP/M:]

CUG162.16-FTRIG.C By James Dick. Trig Functions. Sine(), cosine(),
at2n(), tan(), asin(), and acos(). ->README.DOC, DEQ.MAC. [CP/M:C/80]

==============================================================================
CUG163 -
-----------

CUG163.01-CC11.C By J. Hendrix, Daniel R. Hicks. Small C v. 2. Small C
Compiler by J. Hndrix adapted to MSDOS environment. [MSDOS:Small C]

CUG163.02-CC1.C

CUG163.03-ERRNO.H

CUG163.04-SGTTY.H

CUG163.05-ASSERT.H

CUG163.06-CC.EXE

CUG163.07-CTYPE.H

CUG163.08-DOSCALL.H

CUG163.09-STREAMIO.H

CUG163.10-STDIO.C

CUG163.11-STREAMIO.C

CUG163.12-BASEIO1.C

CUG163.13-BASEI02.C

CUG163.14-ISALPHA.C

CUG163.15-ISUPPER.C

CUG163.16-ISLOWER.C

CUG163.17-ISDIGIT.C

CUG163.18-ISALNUM.C

CUG163.19-ISSPACE.C

CUG163.20-ISPUNCT.C

CUG163.21-ISCNTRL.C

CUG163.22-ISASCII.C

CUG163.23-ISPRINT.C

CUG163.24-FPRINTF.C

CUG163.25-FREAD.C

CUG163.26-FWRITE.C

CUG163.27-FSEEK2.C

CUG163.28-FGETS.C

CUG163.29-FPUTS.C

CUG163.30-FEOF.C

CUG163.31-FERROR.C

CUG163.32-FILENO.C

CUG163.33-FBINARY.C

CUG163.34-FTELL2.C

CUG163.35-PRINTF.C

CUG163.36-PERROR.C

CUG163.37-PEEKC.C

CUG163.38-PUTCHAR.C

CUG163.39-PUTS.C

CUG163.40-PUTW.C

CUG163.41-STRCMP.C

CUG163.42-STRCPY.C

CUG163.43-STRNCPY.C

CUG163.44-STRNCMP.C

CUG163.45-STRCAT.C

CUG163.46-STRNCAT.C

CUG163.47-STRLEN.C

CUG163.48-DOSCALL.C

CUG163.49-ABS.C

CUG163.50-ATOI.C

CUG163.51-ASSERT.C

CUG163.52-HEAP.C

CUG163.53-INDEX.C

CUG163.54-RINDEX.C

CUG163.55-SWAB.C

CUG163.56-TOUPPER.C

CUG163.57-TOLOWER.C

CUG163.58-CALLOC.C

CUG163.59-SYS_ERRL.C

CUG163.60-CCARGC.C

CUG163.61-FORMAT.C

CUG163.62-SPRINTF.C

CUG163.63-GETPARM.C

CUG163.64-UNGETC.C

CUG163.65-GETCHAR.C

CUG163.66-GETS.C

CUG163.67-CLEARERR.C

CUG163.68-REWIND.C

CUG163.69-GETW.C

CUG163.70-CC12.C

CUG163.71-CC13.C

CUG163.72-CC2.C

CUG163.73-CC21.C

CUG163.74-CC22.C

CUG163.75-CC3.C

CUG163.76-CC31.C

CUG163.77-CC32.C

CUG163.78-CC33.C

CUG163.79-CC4.C

CUG163.80-CC41.C

CUG163.81-CC42.C

CUG163.82-CC5.C

CUG163.83-CC51.C

CUG163.84-CC52.C

CUG163.85-PCCT190

CUG163.86-PCCT189

CUG163.87-SCLIB.SCR

CUG163.88-SMALLCV2.DOC

CUG163.89-COPYRGHT.DOC

CUG163.90-STDIO.H

CUG163.91-C.LIB

CUG163.92-IBMLIB.H

CUG163.93-IBM.LIB

CUG163.94-SUBMIT.DSK

==============================================================================
CUG164 -
-----------

CUG164.01-LU.DOC By T. Jennings. Documentation for Library. Complete
documentation for LU, an MSDOS library utility. Describes LU commands,
file organization and LBR file structure.

CUG164.02-CB.C By John W. Kindschi. C Source Formattor. Takes as input
a C source program file and formats it with the proper indents for
each statement. The original input file is renamed as a .BAK file, and
the formatted output is placed in a file with the same name as the
original input. A command line option allows the indent level to be
specified as from one to eight spaces. ->CB.DOC. [MSDOS: Lattice] Will
only run under DOS 2.0 or later.

CUG164.03-TAIL.EXE

CUG164.04-TAIL.DOC Tail Manual Page. [MSDOS:]

CUG164.05-MATH.INT By Bill Ferreira. Pascal Math Interface. The
interface between your program and the extended precision MATH
subroutines. ->DEMO. [MSDOS:] Source for interface only. Cheapware.

CUG164.06-MATH.OBJ

CUG164.07-MATHTEST.EXE

CUG164.08-MATHTEST.PAS By Bill Ferreira. Math Demonstration.
->MATH.INIT. [MSDOS:] Cheapware.

CUG164.09-MATHV1.OBJ

CUG164.10-MATH.DOC By Bill Ferreira. Documentation for MATH. This MATH
package contains a set of subroutines and a demonstration program that
performs 64 bit integer arithmetic for users of IBM Pascal. [MSDOS:IBM
Pascal] Cheapware- object only.

CUG164.11-PROCXRF.EXE

CUG164.12-PX.DOC v 1.0 By Christopher Dunford. PX-Procedure
Documentation. Generates procedure prologues and extends induced
cross-references. For assembly Language. [MSDOS:] Executable only.

CUG164.13-CB.COM

CUG164.14-CB.DOC Source Formatter Manual Page. ->CB.C.

CUG164.15-CC.EXE

CUG164.16-WINDOW.H By Ray L. McVay. Window Control Block Definitions.
->WINDOW.C. [MSDOS:DeSmet]

CUG164.17-FGREP.EXE

CUG164.18-FGREP.DOC Fgrep Manual Page. Searches files for text
patterns. Each line on which the pattern is found is displayed.
[MSDOS:] The text patterns cannot contain blanks or wild cards.
Executable only.

CUG164.19-MV.EXE

CUG164.20-MV.DOC Move Manual Page. The mv command is used to move
files. MV will never move a file onto itself. [MSDOS:]

CUG164.21-SETSCRN.C By Ray McVay. Set a Display Mode. Control the IBM
graphics mode from the keyboard. [MSDOS:DeSmet]

CUG164.22-WNDEMO.C By Ray L. McVay. Window Demonstration. Shows how to
open windows, write strings in them and close them. ->WINDOW.C.
[MSDOS:DeSmet]

CUG164.23-WINDOW.C

CUG164.24-VLIB.A v 2.01 By Ray L. McVay. Video Library. Assembly
language video functions which call on the BIOS. Originally written to
replace the init10() function of small c:pc. ->WINDOW.C.
[MSDOS:DeSmet] Must be rewritten if used with other compilers.

CUG164.25-VLIB.0

CUG164.26-LDIR.C v 3.0 By Gary P. Novolsielski, Pete Mack. Library
Directory Display. Views the directory of an .LBR file. ->LDIR.DOC.
[MSDOS:Lattice]

CUG164.27-WNDEMO.EXE

CUG164.28-TRAN.C Transcendental Functions. Square root, log and
exponential approximations in C. ->HP.C. [MSDOS:] Undocumented.

CUG164.29-SETSCRN.EXE

CUG164.30-WINDOW.DOC By Ray L. McVay. Windows Documentation.
->WINDOW.C.

CUG164.31-LU.EXE

CUG164.32-README.1ST

CUG164.33-WINDOW.C v 1.2 By Ray L. McVay. Simple Window Management. A
simple window management library based on an article by Edward
Mitchell. This implementation uses dynamically allocated buffers for
window control blocks and screen save offers. ->WINDOW.DOC.
[MSDOS:DeSmet C] Assumes availability of VLIB assembly language ROM
BIOS interface.

CUG164.34-HP.C RPN. HP -- a reverse Polish notation calculator.
[MSDOS:] Requires TRAN.C. Undocumented.

CUG164.35-LTYPE.C v 3.0 By S. Kluger, P.H. Mack. Type Library Member.
This program will type a member of a .LBR file. Any member but
anything other than an ascii file will produce a screenful of garbage.
[MSDOS:Lattice]

CUG164.36-LTYPE.EXE

CUG164.37-LDIR.DOC By Pete Mack. LDIR implementation role. ->LDIR.C.

CUG164.38-LDIR. EXE

CUG164.39-SUBMIT.DSK

CUG164.40-CC.C BY T. Jennings. CC (C Checker). C Source parser,
bracket and comment checker. Very crude but very effective C source
debugger. Counts the number of matching braces, parenthesis and
comments, and displays them at the left edge of the screen.
[MSDOS:Vanilla] Gets confused by quoted delimiters.

==============================================================================
CUG165 -
-----------

CUG165.01-HEADERS.D BY Thomas Plum. Definitions for Reliable Data
Structures Programs. ->UNIRD.C, READ.ME. [Vanilla]

CUG165.02-UNIRD.EXE

CUG165.03-COPYRIGH

CUG165.04-SOURCE.D BY Thomas Plum. The programs from Reliable Data
Structures in C. A special lumped file that may be unpacked with
UNIRD. ->UNIRD.C, READ.ME. [Vanilla]

CUG165.05-BIN.D By Thomas Plum. ->UNIRD.C, READ.ME.

CUG165.06-QSORT.C By Thomas Plum. Sort Array using quick sort.
[Vanilla]

CUG165.07-READ.ME By Thomas Plum. Installation Instructions.
->UNIRD.C.

CUG165.08-SUBMIT.DSK

CUG165.09-UNIRD.C By Thomas Plum. Universal Read Distribution. Takes a
large lumped file and reconstitutes all the individual files.
->READ.ME. [Vanlla]

==============================================================================
CUG166 -
-----------

CUG166.01-C-UG-DIR

CUG166.02-READ-ME.DOC

CUG166.03-CUG-DIR.D0C BY Takashi Ohtsuka. C Users Group Library. Table
of Contents for the C User's Group Library (CUG101-CUG155) except
CU6119 is missing. Obsolete.

CUG166.04-SUBMIT.DSK

CUG166.05-CUGDIR

==============================================================================
CUG167 -
-----------

CUG167.01-C-WINDOW.OBJ

CUG167.02-PREP.C V 1.00 BY Ian Ashdown. Prepare Text. PREP is a full
emulation of UNIX's 'prep' utility. It reads each text file given on
the command line in sequence and writes it on the standard output, one
word to a line. [Vanilla]

CUG167.03-C-WINDOW.DOC Windows Documentation. Windowing library for
Lattice on a PC clone. Supports blinking and bright attributes, up and
down scrolls, obstring windows, linewrap, two different borders and
input editing. ->C-WDEF.INC, C-WINDOW.OBJ, C-WINDOW.ABS C-W-DEMO.EXE.
[MSDOS:Lattice] User supported; object only. Source $15 from author.

CUG167.04-C-WDEF.INC

CUG167.05-C-W-DEMO.EXE

CUG167.06-C-WINDOW.ABS

CUG167.07-C-USER.L4

CUG167.08-FGREP.DOC V 1.00 By Ian Ashdown. Parallel Pattern Matching
and FGREP. Development of algorithm used in FGREP, a full emulation of
UNIX's 'fgrep' utility. ->FGREP.C.

CUG167.09-SPLINE.DOC v 1.00 Cubic Spline Functions Theory.
Mathematical background and development of equations used in SPLINE, a
full emulation of UNIX's 'spline' utility. ->SPLINE.C.

CUG167.10-MORE.C V 1.00 BY Ian Ashdown. Emulation of MS-DOS 'more'
Utility. An emulation of MS-DOS 'more' utility for use with the CP/M
operating system. [CP/M:Vanilla]

CUG167.11-SPLINE.C v 1.00 BY Ian Ashdown. Interpolate Smooth Curve.
SPlINE takes pairs of numbers from the standard input as abscissae and
ordinates of a function. It produces a similar set, which is
approximateiy equally spaced and includes the input set, on the
standard output. The cubic spline output has two continuous
derivatives and sufficiently many points to look smooth when plotted.
->SPLINE.DOC. [Vanilla].

CUG167.12-FGREP.C v 1.05 By Ian Ashdown. Search File(s) for fixed
Pattern(s). A full implementation of the UNIX 'fgrep' utility. The
algorithm used in this program constructs a deterministic finite state
automaton (FSA) for pattern matching from the sub strings, then uses
the FSA to process the text string in one pass. The time taken to
construct the FSA is proportional to the sum of the lengths of the
substrings. The number of state transitions made by the FSA in
processing the text string is independent of the number of substrings.
->FGREP.DOC. Vanilla] The '-s' option may not be consistently
supported by various non-UNIX operating systems and compilers. Also,
the UNIX-specific '-b' option of 'fgrep' is not supported. Finally,
non-UNlX operating systems may not accept lower case character strings
on the command line, although these can be entered through files.

CUG167.13-SUBMIT.DSK

CUG167.14-BU.C v 1.2 By Ian Ashdown. File Backup Utility. [CP/M:Aztec
CII, DeSmet C88]

==============================================================================
CUG168 -
-----------

CUG168.01-IEX.C By David Betz, David Smith. SDB -Import/Export
Commands. ->SDB.C. [VAX, MSDOS, RT-11:DECUS, Lattice]

CUG168.02-SDBGEN.ARF

CUG168.03-SDBGEN.BAT

CUG168.04-SDBGREP.BAT

CUG168.05-SDBLUMP.BAT

CUG168.06-SDBXC.BAT

CUG168.07-SDB.EXE

CUG168-08-SDB.HLB By David Betz, David Smith. SDB -- Command Summary.
->SDB.C.

CUG168.09-SDB.MEM By David Betz, David Smith. Manual For Simple Data
Base. ->SDB.C.

CUG168.10-README By David Smith. Implementation Notes.

CUG168.11-SCN.C By David Betz, David Smith. SDB -- Token Scanning.
->SDB.C. [VAK, MSDOS, RT-11:DECUS, Lattice]

CUG168.12-PCJUNK.C By David Betz, David Smith. Spa -- Misc. Support
Functions. Includes versions of alloc, strncpy and strncmp. ->SDB.C.
[VAX, MSDOS, RT-11:DECUS, Lattice]

CUG168.13-IO.C By David Betz, David Smith. SDB -- Manipulate Files.
Routine to get, put and find tuples in a relation file. ->SDB.C. [VAX,
MSDOS, RT-11:DECUS, Lattice]

CUG168.14-MTH.C By David Betz, David Smith. SDB -- String Arithmetic.
->SDB.C. [VAX, MSDOS, RT-11:DECUS, Lattice]

CUG168.15-SRT.C By David Betz, David Smith. Spa -- Sort Routines.
->SDB.C. [VAX, MSDOS, RT-11:DECUS, Lattice]

CUG168.16-SEL.C By David Betz, David Smith. Spa -- Data Selection.
Selects a set of tuples from a set of relations. ->SDB.C. [VAX, MSDOS,
RT-11:DECUS, Lattice]

CUG168.17-TBL.C By David Betz, David Smith. SDB -- Report Generator.
->SDB.C. [YAK, MSDOS, RT-11:DECUS, Lattice]

CUG168.18-COM.C By David Betz, David Smith. SDB -expression Parser.
->SDB.C. [VAK, MSDOS, RT-11:DECUS, Lattice]

CUG168.19-INT.C By David Betz, David Smith. SDB -- Boolean Expression.
->SDB.C. [VAK, MSDOS, RT-11:DECUS, Lattice]

CUG168.20-SDBIO.H By David Betz, David Smith. SDB -Definition File.
->SDB.C. VAX, MSDOS, RT-11:DECUS, Lattice]

CUG168.21-CMD.C By David Betz, David Smith. Spa -- Command Parser.
->SDB.C. [VAX, MSDOS, RT-11:DECUS, Lattice]

CUG168.22-CRE.C By David Betz, David Smith. SDB -- Relation Creation.
Initialize a relation file. ->SDB.C. [VAX, MSDOS, RT-11:DECUS,
Lattice]

CUG168.23-JUNK.OBJ

CUG168.24-SDB.OBJ

CUG168.25-CRE.OBJ

CUG168.26-ERR.OBJ

CUG168.27-IEX.OBJ

CUG168.28-INT.OBJ

CUG168.29-CMD.OBJ

CUG168.30-COM.OBJ

CUG168.31-MTH.OBJ

CUG168.32-SCN.OBJ

CUG168.33-SEL.OBJ

CUG168.34-SRT.OBJ

CUG168.35-TBL.OBJ

CUG168.36-IO.OBJ

CUG168.37-C.OBJ

CUG168.38-PCJUNK.OBJ

CUG168.39-SDB.C v 2.0 By David Betz, David N. Smith. A Simple
Database. SDB is a simple database manager for small systems. It was
developed to provide a relatively low overhead system for storing data
on machines with limited disk and memory resources. Provided
relational operators select, project, and join. ->SDB.MEM SDB.HLP,
SDBGEN.ARF, SDBGEN.BAT SDBGREP.BAT, SDBIO.H, SDBLUMP.BAT, SDBXC.BAT,
CMO.C, COM.C, CRE.C ERR.C, IEX.C, INT.C, IO.C, MTH.C PCJUNK.C, SCN.C,
SEL.C, SRT.C, TBL.C, SDBIO.H. [VAX, MSDOS, RT-11:Decus, Lattice]
Requires 60k memory under RT-11.

CUG168.40-SUBMIT.DSK

CUG168.41-ERR.C By David Betz, David Smith. Spa -- Generate Error
Message. ->SDB.C. [VAX MSDOS, RT-11:DECUS, Lattice]

==============================================================================
CUG169 -
-----------

CUG169.01-C86MOD.DOC By Michael Evans. How to make C86 programs return
status to DOS 2.0 bat files. [MS/DOS:C86]

CUG169.02-CSYSINT.ASM By George Eberheart, T. Cox, Will Fastre. C to
MSDOS interface. Assembly language function allows C programs to call
drive on DOS services. [MS/DOS:Microsoft]

CUG169.03-C86SAMPL.BAT

CUG169.04-UNLUMP.C Separate lumped files. ->LUMP.C. [MS/DOS:Vanilla,
ECO.C]

CUG169.05-CASYNC.ASM By Curt Klinsing. Serial I/O support. Assembly
functions which allow C programs to perform interrupt driver
communications on IBM PC. [MS/DOS:Lattice]

CUG169.06-MEMCLEAN.C v. 1.0 By Robert J. Beilstein. Memory Clean.
Memory to avoid parity check. ->MEMCLEAN.DOC. [MS/DOS:]

CUG169.07-MEMCLEAN.DOC v. 1.0 By Robert J. Beilstein. Documentation of
Memory Clean. ->MEMCLEAN.C. [MS/DOS:]

CUG169.08-CC.EXE

CUG169.09-RANDOM.C Random Number Generator. Test driver for random
.asm. ->RANDOM.ASM. [MS/DOS:Vanilla]

CUG169.10-CPRGRMS1.BAT

CUG169.11-CPRGRMS1.DOC Table of Contents. A short description of the
files on CUG169. [MS/DOS:]

CUG169.12-SETPRTR.C v. 1.0 By Michael Burton. Setup the parameters far
the Epson printers. Send printer setup codes to the IBM printer.
[MS/DOS:]

CUG169.13-CPRGRMS2.DOC Table of Contents. A short description of the
files on CUG169. ->CPRGRMS1.DOC. [MS/DOS:]

CUG169.14-CLS.C Clear Video Screen. This function cleans the terminal.
It requires no parameters. [MS/DOS:]

CUG169.15-RANDOM.ASM Random Number Generator. ->RANDOM.C. [MS/DOS:]

CUG169.16-XC.C v. 1.0 By Philip N. Hisley. A C Concordance Utility.
Cross-reference utility for C programs. ->XC.DOC. [MS/DOS:C86,
Lattice]

CUG169.17-GETSEG-C.ASM Fetch 8086 Segment Registers. Returns the
current values of all, 8086 segment registers. [MS/DOS:]

CUG169.18-GREP.C86 By David N. Smith. Grep for C86. UNIX-like tool.
Searches for line matching a pattern specified as a regular
expression. [MS/DOS:C86]

CUG169.19-NAMES.C -By Lynn Long. File I/O example. Shows how to access
disk from C. [MS/DOS:DeSmet]

CUG169.20-SQ.C86 Squeeze a text file into less space. [MS/DOS:C86]

CUG169.21-TPRINT.C By T. Jennings. ASCII file to transfer to PRN.
Prints file with page numbers, headers, etc. [MS/DOS:]

CUG169.22-KERMITPC.C By Jim Guyton, Columbia University. KERMIT.
Columbia University file transfer utility. This is 'vanilla' UNIX
version. [MS/DOS:vanilla]

CUG169.23-GREP.DOC Pattern Search. Documentation on Grep. ->GREP.C86.
[MS/DOS:]

CUG169.24-IOS1-20.ASM By Ted Reuss. DOS I/O services. Calls DOS
service to implement CREATE, OPEN, CLOSE, READ, WRITE, and LSEEK.
[MS/DOS:Lattice]

CUG169.25-USQ.C86 v. 1.7 By Wayne Fruhwald. Unsqueezes a text file for
Computer Innovations C86. [MS/DOS:C86]

CUG169.26-LUMP.C Lump a group of files together. Concatenates files as
standard output, placing an identifying line at the start of esach new
file. Can be used with unlump as primitive archive utility.
->UNLUMP.C. [MS/DOS:vanilla] Needs library functions Flshf and filbf
which aren't on disk.

CUG169.27-CC.C v. 1.0 By Bob Lafleur, Tom Vaughan. Compile Flow
Generator. C program to run C86 compiler. [MS/DOS:C86]

CUG169.28-KERMITPC.HLP Kermit's Documentation. Documentation for PC
Kermit, an assembly language version of Kermit for the IBM PC. The
referenced source file is not on this disk, but is similar in
capability to KERMITPC.C. ->KERMITPC.C. [MS/DOS:]

CUG169.29-LOCATE.C By T. Cox. Locate-position cursor on screen. This
function directly controls the cursor placing it on a specified row
and column. ->CSYSINT.ASM. [MS/DOS:microsoft c]

CUG169.30-SWITCH.C86 By Earl C. Terwilliger Jr.. Switch Display.
Change display type for IBM PC. [MS/DOS:C86]

CUG169.31-TYPESQ.C86 By W. Earnest. Type. Displays a squeezed file.
[MS/DOS:C86]

CUG169.32-MOVMEML.ASM Block move across segments. Allows memory to be
copied between 8086 segments. A ' large model programmer's aide.
[MS/DOS:]

CUG169.33-SWITCH1.C Select IBM display mode. This utility changes the
display mode on an IBM compatible display. [MS/DOS:]

CUG169.34-STDIO.H Standard I/O header. [MS/DOS:]

CUG169.35-LEJ_LIB.C By Larry Jordan. Demonstration program with
functions. Performs numeric conversions of C. [MS/DOS. ]

CUG169.36-TPRINT.DOC Documentation for TPRINT. ->TPRINT.C. [MS/DOS:]

CUG169.37-CTYPE.H Standard Character Macros. [MS/DOS:]

CUG169.38-XC.DOC v. 1.0 By Phillip N. Hisley. Documentation for XC.
->XC.C. [MS/DOS:]

CUG169.39-XC.EXE

CUG169.40-XENIX.OBJ

CUG169.41-XENIX.ASM By T. Jennings. "Handle" oriented file OPs.
Assembly functions which make DOS service using file handles available
to a C program. [MS/DOS:Lattice]

CUG169.42-FILES314.TXT Table of Contents. [MS/DOS:]

CUG169.43-TPRINT.MAP

CUG169.44-TPRINT.OBJ

CUG169.45-TPRINT.EXE

CUG169.46-PCSIG314.LBL

CUG169.47-SUBMIT.DSK

CUG169.48-CRC.C Cyclic Redundancy Check. Does CRC error checking on
blocks of data. [MS/DOS:]

CUG169.49-GREP.C By Chris Kern. Grep for Lattic C.UNIX-like tool.
Searches for line matching a pattern specified as a regular
expression. [MS/DOS:Lattice]

==============================================================================
CUG170 -
-----------

CUG170.01-CPMFILES.C By Tom Jennings. Portable I/O for BDS C. Makes
BDS C look more UNIX compatible. [CP/M:BDS]

CUG170.02-ISCHECK.C v 1.04 By W. H. Rauser. Checks Microsoft's
issomething matrix. [MSDOS:Microsoft]

CUG170.03-TEXTFORM.C By Tom Jennings. Text File Formatter. Prints
and/or formats edited text using Wordstar compatible dot commands, for
use on non-Wordstar systems. ->TEXTFORM.DOC. [MSDOS:]

CUG170.04-LAR.C By Stephen C. Hemminger, Tom Jennings. LU Format
Library. Manipulates CP/M LU format libraries. [MSDOS:Lattice]

CUG170.05-FUNKEY.C By Kenneth C. Wood. Set Function Keys. A program to
redefine PC clone function keys. [MSDOS:] Requires ansi.sys.

CUG170.06-CPCLIB.OBJ

CUG170.07-DUMP2.C By Ted Reuss. Hexadecimal File Dump. [MSDOS:Lattice]

CUG170.08-FRAME.C By Lynn Long. Frame Menu. [MSDOS:Vanilla]

CUG170.09-CPCN.C By Caprock Systems. Small C:PC Compiler. A small C
compiler written in C. [MSDOS:] Standard library functions are missing
from this distribution.

CUG170.10-ZAPLOAD.EXE

CUG170.11-UNTAB4.EXE

CUG170.12-ADDLF.C By W H. Rausesr. Convert UNIX Text to MSDOS. Filter
to add line feeds after carriage return only if needed. Copies input
to output, a better mouse trap. [MSDOS:Microsoft]

CUG170.13-INKEY.C Read Character. Get character and RAW scan code from
PC clone keyboard. Supports both wait and no wait options. [MSDOS:]

CUG170.14-RENAME.C Function to rename a file. Builds UNIX rename
capability from MSDOS BIOS calls. [MSDOS:] Requires fcbinit() and
BIOS().

CUG170.15-LIFE.C Another Life Game. This implementation demonstrates
use of Bar functions of C88. [MSDOS:C88]

CUG170.16-ZAPLOAD.C By To Jennings. Zap load. Used to convert binary
file to INTEL hex format, and send to a file, punch device or printer.
->ZAPLOAD.DOC. [MSDOS:]

CUG170.17-TOWERS.C By Lynn Long. Towers of Hanoi. Classic recursive
solution to Towers of Honoi's problem. [MSDOS:] Terminal specificed
display functions don't like anal.sys.

CUG170.18-PRINT.C By M. Rurton. Print. Print text files with page
numbers. Headers and optional line numbers. [MSDOS:C186]

CUG170.19-ZAPLOAD.DOC By Tom Jennings. Documentation for Zapload.
->ZAPLOAD.C. [MSDOS:]

CUG170.20-SNAP.C By Stan Peters. Memory Snapshot Routine. A debugging
function. Copies a labelled block of memory to standard output in hex
and ascii. ->DUMP2.C. [MSDOS:DeSmet]

CUG170.21-STRING.C By Lynn Long. Complete Set of String Functions.
[MSDOS:]

CUG170.22-SNAP.OBJ

CUG170.23-CONIO.C Consols I/O Functions. Low level interface to BDS.
[MSDOS:]

CUG170.24-TYPECONV.C

CUG170.25-_MAIN.C

CUG170.26-TINKEY.C Test Inkey Program. [MSDOS:]

CUG170.27-ISAMC.LBR

CUG170.28-FILES315.TXT

CUG170.29-PCSIG315.LBL

CUG170.30-SUBMIT.DSK

CUG170.31-UNTAB4.C By Vincent T. Sly. Expand Tabs. Converts tabs to
spaces. Assume tab stops are set at four space intervals.
[MSDOS:DeSmet v. 2.2]

==============================================================================
CUG171 -
-----------

CUG171.00-SYSINT.ASM MSDOS Interrupt Function. Assembly language
interrace to 8086 Software interrupt #16. [MSDOS:]

CUG171.01-FUNKEY.C By Kenneth C. Wood. Set Function Keys. A program to
redefine PC clone function keys. [MSDOS:] Requires ansi.sys.

CUG171.02-CRC.C Cyclic Redundancy Check. Generates CCITT CRC-16 check
value. Includes tutorial documentation. [MSDOS:]

CUG171.03-MAIN.C By Ted Reuss. Main Function for Lattice. ->CC.ASM.
[MSDOS:Lattice v. 1.04]

CUG171.04-DUMP2.C By Ted Reuss. Hexadecimal File Dump. [MSDOS:Lattice]

CUG171.05-GETSEG_.ASM Get Segment Registers. Makes contents of 8086
segment registers available. [MSDOS:]

CUG171.06-ISCHECK.C v 1.04 By W. H. Rauser. Checks microsoft's
issomething matrix. [MSDOS:Microsoft]

CUG171.07-DUMP2.C By Ted Reuss. Hexadecimal File Dump. [MSDOS:Lattice]

CUG171.08-MEMCLEAN.C v 1.0 By Robert J. Beilstein. Memory Clean.
Cleans memory above 640K. [MSDOS:]

CUG171.09-GETSEG C.ASM Get Segment Registers. Makes contents of 8086
segment registers available. [MSDOS:]

CUG171.10-INKEY.C Read Character. Get character RAW scancate from PC
clone keyboard. Supports both wait and now out options. [MSDOS:]

CUG171.11-10S1-20.ASM By Ted Reuss. I/O Routines. Assembly version of
level 1 I/O routines for Lattice under DOS 2.0. Includes create, open,
close, read, write, lseek. ->CC.ASM. [MSDOS:Lattice v. 1.04]

CUG171.12-LIFE.C Another Life Game. This implementation demonstrates
use of Bar functions of C88. [MSDOS:C88]

CUG171.13-LEJ_LIB.C

CUG171.14-MEMCLEAN.DOC v 1.0 By Robert J. Beilstein. Documentation for
Memory. ->MEMCLEAN.C. [MSDOS:]

CUG171.15-M8087.MAC 8087 Support. Assembly language to provide
assembly level support for 8087NDP. [MSDOS:]

CUG171.16-TOWERS.C By Lynn Long. Towers of Hanoi. Classic recursive
solution to Towers of Hanoi's problem. [MSDOS:] Terminal specific
display functions don't like ansi.sys.

CUG171.17-PRINT.C By M. Burton. Print. Print text files with page
numbers. Headers and optional line numbers. [MSDOS:CI86]

CUG171.18-RENAME.C Function to rename a tile. Builds UNIX rename
capability from MSDOS BIOS calls. [MSDOS:] Requires fcbinit() and
bios().

CUG171.19-FILES.TXT

CUG171.20-SNAP.C By Stan Peters. Memory Snapshot Routine. A debugging
function. Copies a labelled block of memory to standard output in hex
and ascii. ->DUMP2.C. [MSDOS:DeSmet]

CUG171.21-STRING.C By Lynn Long. Complete Set of String Functions.
[MSDOS:]

CUG171.22-SNAP.OBJ

CUG171.23-TIMEMARK.TXT By Ed Keating. Timestamping functions and
benchmarks test. This file contains 4 source code files, some C and
some assembly. [MSDOS:]

CUG171.24-SYSINT.ASM

CUG171.25-TINKEY.C Test Inkey Program. [MSDOS:]

CUG171.26-XC.C v 1.0 By Phillip N. Hisley, W.H. Rauser. Cross
Reference Generator. MSDOS Version of programmer's cross-reference
generatororiginally for BDS. ->CUG126. [MSDOS:Microsoft, CI86]

CUG171.27-TYPECONV.C Type Conversion Demonstration. [MSDOS:]

CUG171.28-ADDLF.C By W.H. Rauser. Convert UNIX Text to MSDOS. Filter
to add line feeds after carriage return only if needed copies input to
output, better mouse trap. [MSDOS:Microsoft]

CUG171.29-CONIO.C Console I/O Functions. Low level interface to BDOS.
[MSDOS:]

CUG171.30-CC.ASM By Ted Reuse. DOS 2.0 Startup Code. ->-MAIN.C.
[MSDOS:Lattice v. 1.04]

CUG171.31-FILES341.TXT

CUG171.32-PCSIG341.LBL

CUG171.33-SUBMIT.DSK

CUG171.34-DOS_ERR.TXT Bug Report. Documents bugs in MSDOS 2.0 console
redirection. [MSDOS:]

==============================================================================
CUG172 -
-----------

CUG172.01-LEX.C By Scott Guthery, Martin Minow, Charles H. Forsyth. A
Lexiccal Analyser Generator. Compiles a lexical analyser from a
grammar and description of actions. This version is descended from a
DECUS release. ->YACC, PREP. [MSDOS:DeSmet] This program is not for
the casual user. It will be useful primarily to expert developers.

CUG172.02-SYSTEM.H

CUG172.03-YTAB.H

CUG172.04-LEX.H

CUG172.05-BASE.C

CUG172.06-COMMEN.C

CUG172.07-ECLOSU.C

CUG172.08-GETTOK.C

CUG172.09-DFA.C

CUG172.10-IMPURE.C

CUG172.11-INTEG.C

CUG172.12-LEXCHA.C

CUG172.13-LEXLEX.H

CUG172.14-LEXERR.C

CUG172.15-LEXGET.C

CUG172.16-LEXLEN.C

CUG172.17-LEXPEE.C

CUG172.18-LEXSRT.C

CUG172.19-LEXSWI.C

CUG172.20-LLSAVE.C

CUG172.21-LMOVB.C

CUG172.22-LMOVI.C

CUG172.23-MAPCH.C

CUG172.24-MIN.C

CUG172.25-OUT2.C

CUG172.26-OUT1.C

CUG172.27-TOKEN.C

CUG172.28-YTAB.C

CUG172.29-YYLEX.C

CUG172.30-STDIO.H

CUG172.31-LEX.EXE

CUG172.32-LEXECH.C

==============================================================================
CUG173 -
-----------

CUG173.01-LEX.MEM Lex Users Manual. ->CUG172.01.

CUG173.02-LEX.HLP

CUG173.03-LEX.Y

CUG173.04-BUILD.BAT

CUG173.05-FINUC.BAT

CUG173.06-COMPILE.BAT

CUG173.07-MAKELIB.BAT

CUG173.08-BACKUP.BAT

CUG173.09-ABC.LXI

CUG173.10-BCPL.LXI

CUG173.11-BTOB.LXI

CUG173.12-CAP.LXI

CUG173.13-CLEX.LXI

CUG173.14-CSTOCK.LXI

CUG173.15-CTOC.LXI

CUG173.16-HWORD.LXI

CUG173.17-LANDY.LXI

CUG173.18-WORD.LXI

CUG173.19-LEXLIB.S

CUG173.20-SUBMIT.DSK

CUG173.21-LEX.INF

==============================================================================
CUG174 -
-----------

CUG174.01-YMAIN.1C v 1.0 By Scott Guthery. YACC - Yet Another
Compiler-Compiler. LALR(1) Parser Generator. Clone of UNIX v. 7
implementation, descended from DECUS release. ->LEX, PREP, CUG175.
[MSDOS:DeSmet] This program is not for the casual user. It will be
useful primarily to expert developers.

CUG174.02-Y4IMP.C

CUG174.03-YERROR.C

CUG174.04-YARYFL.1C

CUG174.05-YCEMTY.1C

CUG174.06-YCHCPY.1C

CUG174.07-YYWRAP.C

CUG174.08-YCLSUR.1C

CUG174.09-Y1IMP.C

CUG174.10-YCPRES.1C

CUG174.11-YERROR.1C

CUG174.12-YFLSET.1C

CUG174.13-YPRLOK.1C

CUG174.14-YOTHRS.1C

CUG174.15-Y2IMP.C

CUG174.16-YPTITM.1C

CUG174.17-YSTATE.1C

CUG174.18-YSMNAM.1C

CUG174.19-YSTAGN.1C

CUG174.20-YSTUNI.1C

CUG174.21-YCPFIR.1C

CUG174.22-YSUMRY.1C

CUG174.23-YWRITM.1C

CUG174.24-YCHFND.2G

CUG174.25-YCPACT.2C

CUG174.26-YCPUNJ.2C

CUG174.27-YCPYCD.2C

CUG174.28-YCSTSH.2C

CUG174.29-YDEFIN.2C

CUG174.30-YDFOUT.2C

CUG174.31-YFDTYP.2C

CUG174.32-YFNACT.2C

CUG174.33-YGTTOK.2C

CUG174.34-YSETUP.2C

CUG174.35-YSKPCM.2C

CUG174.36-YAPACK.3C

CUG174.37-YG2GEN.3C

CUG174.38-YG20UT.3C

CUG174.39-YHDPRD.3C

CUG174.40-YOUTPT.3C

CUG174.41-YPRCFT.3C

CUG174.42-YWARRY.3C

CUG174.43-YWRACT.3C

CUG174.44-YWSTAT.3C

CUG174.45-YCLOPT.4C

CUG174.46-Y3IMP.C

CUG174.47-YAROUT.4C

CUG174.48-YGIN.4C

CUG174.49-YGTNM.4C

CUG174.50-YNXTI.4C

CUG174.51-YOSMRY.4C

CUG174.52-YSTIN.4C

CUG174.53-Y1.H

CUG174.54-Y2.H

CUG174.55-Y3.H

CUG174.56-Y4.H

CUG174.57-DTXTRN.H

CUG174.58-SYSTEM.H

CUG174.59-YAOPUT.4C

CUG174.60-BACKUP.BAT

CUG174.61-LIB1.BAT

CUG174.62-LIB2.BAT

CUG174.63-LIB3.BAT

CUG174.64-LIB4.BAT

==============================================================================
CUG175 -
-----------

CUG175.01-COMPILE.BAT

CUG175.02-PFINDC.BAT

CUG175.03-PBACKUP.BAT

CUG175.04-PBUILD.BAT

CUG175.05-PCOMPILE.BAT

CUG175.06-PREP1.C v 1.0 By Scott Guthery, J. Van Katwijk. PREP -
Preprocessor for YACC. Preprocessor for YACC Programs. ->LEX, YACC.
[MSDOS:DeSmet] This program is not for the casual user. It will be
useful primarily to expert developers.

CUG175.07-PREP3.C v 1.0 By Scott Guthery, J. Van Katwijk. PREP.
->PREP1.C. [MSDOS:DeSmet]

CUG175.08-PREP4.C v 1.0 By Scott Guthery, J. Uan Katwijk. PREP.
->PREP1.C. [MSDOS:DeSmet]

CUG175.09-PREP.H v 1.0 By Scott Guthery, J. Van Katwijk. PREP.
->PRE1.C [MSDOS:DeSmet]

CUG175.10-FINDC.BAT

CUG175.11-LANDY.LXI Sample Lex Input. ->LEX, CUG172, CUG173.

CUG175.12-BUILD.BAT

CUG175.13-YYLESS.C By Scott Guthery. Part of YACC. ->CUG174.
[MSDOS:DeSmet]

CUG175.14-YACC.INF By Scott Guthery. Part of YACC. ->CUG174.
[MSDOS:DeSmet]

CUG175.15-CPY.Y sample YACC Input. ->CUG174, YACC.DOC, YACC.INF.

CUG175.16-SIMPL.Y Sample YACC Input. ->CUG174, YACC.DOC, YACC.INF.

CUG175.17-SPlKE.Y Sample YACC Input. ->CUG174, YACC.DOC, YACC.INF.

CUG175.18-LANDY.Y Sample YACC Input. ->CUG174, YACC.DOC, YACC.INF.

CUG175.19-EXAMPLE.Y Sample YACC Input. ->CUG174, YACC.DOC, YACC.INF.

CUG175.20-YYPARS.C By Scott Guthery. Part of YACC. ->CUG174.
[MSDOS:DeSmet]

CUG175.21-EXAMPLE.ATR

CUG175.22-BIT.ATR

CUG175.23-MYSTERY.ATR

CUG175.24-PREP.INF v 1.0 By Scott Guthery, J.Van Katwijk. PREP --
Documentation. ->PREP1.C. [MSDOS: DeSmet]

CUG175.25-YACC.DOC By Scott Guthery. YACC Documentation. ->CUG174.
[MSDOS:DeSmet]

CUG175.26-PREP2.C v 1.0 By Scott Guthery, J. Van Katwijk. PREP.
->PREP1.C. [MSDOS:DeSmet]

CUG175.27-BIT.LXI Sample Lex Input. ->LEX, CUG172, CUG173.

CUG175.28-EX613.Y Sole YACC Input. ->CUG174, YACC.DOC, YACC.INF.

CUG175.29-YACC.EXE

CUG175.30-PREP.EXE

CUG175.31-SUBMIT.DSK

CUG175.32-EXAMPLE.C Sample YACC Output.

==============================================================================
CUG176 -
-----------

CUG176.01-XLDMEM.C v 1.6 By David Betz. XLISP Dynamic Memory.
->xlisp.c. [MS-DOS:]

CUG176.02-XLISP.C v 1.6 By David Betz. XLISP. A small implementation
of LISP with object-oriented programming support. ->xlisp.doc.
[MS-DOS:] All rights reserved. Unrestricted permission granted for
non-commercial use.

CUG176.03-XLFIO.C v 1.6 By David Betz. XLISP - File I/O. ->xlisp.c.
[MS-DOS:]

CUG176.04-XLIO.C v 1.6 By David Betz. XLISP - I/O Routines. ->xlisp.c.
[MS-DOS:]

CUG176.05-XLFTAB.C By David Betz. XLISP Function Table. ->xlisp.c.
[MS-DOS:]

CUG176.06-XLGLOB.C v 1.6 By David Betz. XLISP global variables.
->xlisp.c. [MS-DOS:]

CUG176.07-XLINIT.C v 1.6 By David Betz. XLISP - Initialization module.
->xlisp.c. [MS-DOS:]

CUG176.08-XLREAD.C v 1.6 By David Betz. XLISP - Expressior, input.
->xlisp.c. [MS-DOS:]

CUG176.09-XLEVAL.C v 1.6 By David Betz. XLISP Expression Evaluator.
->xlisp.c. [MSDOS:]

CUG176.10-XLISP.H v 1.6 By David Betz. XLISP - System Definitions.
->xlisp.c. [MS-DOS:]

CUG176.11-XLJUMP.C v 1.6 By David Betz. XLISP - Execution Context
Routines. ->xlisp.c. [MS-DOS:]

CUG176.12-XLMATH.C By David Betz. XLISP Arithmetic Functions.
->xlisp.c. [MSDOS:]

CUG176.13-XLOBJ.C v 1.6 By David Betz. XLISP - Object Functions.
->xlisp.c. [MS-DOS:]

CUG176.14-XLPRIN.C v 1.6 By David Betz. XLISP- Print Routine.
->xlisp.c. [MS-DOS:]

CUG176.15-XLLIST.C v 1.6 By David Betz. XLISP - Built in List
Functions. ->xlisp.c. [MS-DOS:]

CUG176.16-XLSTR.C By David Betz. XLISP String Functions. ->xlisp.c.
[MS-DOS:]

CUG176.17-XLSUBR.C v 1.6 By David Betz. XLISP - Built in functions.
->xlisp.c. [MS-DOS:]

CUG176.18-XLSYM.C v 1.6 By David Betz. XLISP - Symbol Handling.
->xlisp.c. [MS-DOS:]

CUG176.19-XLSYS.C v 1.6 By David Betz. XLISP - System Functions.
->xlisp.c. [MS-DOS:]

CUG176.20-PCSTUFF.C By David Betz. PC Clone Specific Routines.
->xlisp.c. [MS-DOS:]

CUG176.21-XLBFUN.C v 1.6 By David Betz. XLISP - Library Functions.
->xlisp.c. [MS-DOS:]

CUG176.22-XLISP.DOC v 1.6 By David Betz. XLISP Documentation. 39
pages. ->xlisp.c.

CUG176.23-XLCONT.C v 1.6 By David Betz. XLISP - Built-in Control
Functions. Support for cond, case, and, or, if, let, throw, catch,
break, continue, and several forms of prog and do. ->xlisp.c.
[MS-DOS:]

CUG176.24-XLISPPC.EXE

CUG176.25-XLISPMS.EXE

CUG176.26-PCTURTLE.LSP Turtle Graphics Demonstration. LISP Program to
Generate Turtle Graphics for a PC clone. Uses ANSI escape sequences.

CUG176.27-INIT.LSP By David Betz. LISP Examples initialization.
Defines several useful functions. Makes XLISP look more like Common
Lisp. ->xlisp.c.

CUG176.28-FACT.LSPLISP Examples -- Factorial. Classic recursive
computation of factorial(n).

CUG176.29-FIB.LSPLISP Examples -- Fibonacci. Classic recursive
computation of Fibonacci(n).

CUG176.30-PROLOG.LSP By Ken Kahn, David Betz. Tiny Prolog Interpreter.
LISP implementation.

CUG176.31-PT.LSP Turtle Graphics Demonstration. Implements a simple
form of programmable turtle for VT100 compatibile terminals.
->xlisp.c, LISP.

CUG176.32-TRACE.LSP Simple LISP Trace Facility.

CUG176.33-PP.LSP v 1.0 By Gregory Frascadore. LISP Examples -- Pretty
Printer. Formats a LISP source file with indentation to reflect
program structure.

CUG176.34-ART.LSP By David Betz. Code From Byte. Programs from Betz's
article in Byte. Demonstrates use of object-oriented programming
support in XLISP. ->XLISP.C.

CUG176.35-MSSTUFF.C MS-DOS Specific Routines. ->xlisp.c. [MS-DOS:]

CUG176.36-ARC.EXE

CUG176.37-PCFUN.DOC List of PC-Specific Functions in XLISP.

CUG176.38-SUBMIT.DSK

CUG176.39-XLDBUG.C XLISP Debugging Support. ->xlisp.c. [MS-DOS:]

CUG176.40-README.TXT Table of Contents.

==============================================================================
CUG177 -
-----------

CUG177.01-CP.EXE By Richard Shaw. Copy. UNIX stype copy facility.
Accepts multiple source file specifications. [MS-DOS:] Payware. Object
Code Only. Source available from author.

CUG177.02-CAT.EXE By Richard Shaw. Concatenate Files. Appends one file
to another or to a special device such as the console. [MS-DOS:]
Payware. Object Cods Only. Source available from author.

CUG177.03-CHMOD.EXE By Richard Shaw. Change Fite Attribute.
Manipulates read-only, hidden, system and archival file attributes.
[MS-DOS:] Payware. Object Code Only. Source available from author.

CUG177.04-LS.EXE By Richard Shaw. List Directory. A directory lister
with many UNIX-like options. [MS-DOS:] Payware. Object Code Only.
Sourcs available from author.

CUG177.05-MV.EXE By Richard Shaw. Move A File. Changes a file's
location within a tree-structured directory. Causes the file to have a
different path name. [MS-DOS:] Payware. Object Code Only. Source
available from author.

CUG177.06-SH.EXE By Richard Shaw. Shell. Command interpreter for
MS-DOS. Supports multiple commands per line, re-use and editing of
recent commands, menu generation, and expands the set of internal
commands with commands to monitor memory usage, display, and edit the
command buffer. [MS-DOS:] Payware. Object Code Only. Source available
from author. Menu generation works only with MS-DOS 3.0 or better.

CUG177.07-TEE.EXE By Richard Shaw. TEE. A 'pipe fitting'. Copies
standard input to both standard output and some second stream.
[MS-DOS:] Payware. Object Code Only. Source available from author.

CUG177.08-UNIQ.EXE By Richard Shaw. Find Unique Lines. Copies all
unique lines at standard input to standard output. Has the effect of
deleting adjacent duplicate lines. [MS-DOS:] Payware. Object Code
Only. Source available from author.

CUG177.09-HELP.BAT

CUG177.10-ROOT.BAT

CUG177.11-SHBIN.BAT

CUG177.12-SHNSTALL.BAT

CUG177.13-MENU.CFG By Richard Shaw. Menu Configuration File.

CUG177.14-CONFIG.SH By Richard Shaw. Shell Configuration File.

CUG177.15-SHELL.DOC By Richard Shaw. Shell Documentation. A tutorial
and user's manual for the shell package. ->SH.EXE.

CUG177.16-HELP1.DOC By Richard Shaw. Text for On-Line Help.

CUG177.17-SHELL.BAT

CUG177.18-PRINTDOC.BAT

CUG177.19-VIEW.COM

CUG177.20-UPDATE.DOC By Richard Shaw. Update Documentation. Notes on
improvements and changes in this release.

CUG177.21-READ.ME Table of Contents.

CUG177.22-SUBMIT.DSK

==============================================================================
CUG178 -
-----------

CUG178.01-README v 1.0 By Dr. Bruce Wampler. TVX editor release notes.
Release notes and file descriptions for tvx editor. ->tvx1.c.

CUG178.02-TVX MAKE.BAT v 1.0 By Dr. Bruce Wampler. TVX editor makes
batch file. Batch file to compile and link the tvx editor. ->tvx 1.c.

CUG178.03-TVX LIB.C v 1.0 By Dr. Bruce Wampler. TVX editor library
routines (Wamp85). This file contains library functions used by the
editor. ->tvx_1.c. [MS-DOS:C/86]

CUG178.04-TVX 2.C v 1.0 By Dr. Bruce Wampler. TVX editor Part 2. ->tvx
1.c. [MS-DOS:C/86]

CUG178.05-TVX CFG.C v 1.0 By Dr. Bruce Wampler. TVX editor config
program. Builds config.tvx, a binary file used by tvx peck to patch
the tvx object code with user defined key bindings and other such
options. ->tvx_1.c. [MS-DOS:C/86]

CUG178.06-TVX_IBM.C v 1.0 By Dr. Bruce Wampler. TVX editor PC Clone
interface. Contains routines to interface the tvx editor to a PC
clone. ->tvx_1.c. [MS-DOS:C/86]

CUG178.07-TVX_IO.C v 1.0 By Dr. Bruce Wampler. TYX editor I/O
routines. ->tvx_1.c. [MS-DOS:C/86]

CUG178.08-TVX_LEX.C v 1.0 By Dr. Bruce Wampler. TVX editor lex/help
code. Contains the help and lexical input routines for the tvx editor.
->tvx_1.c. [MS-DOS:C/86]

CUG178.09-TVX_PTCH.C v 1.0 By Dr. Bruce Wampler. TVX editor patcher.
Uses the binary config.tvx file to patch the tvx.exe file with user
defined keybindings. ->tvx_1.c. [MS-DOS:C/86]

CUG178.10-TVX_UNTX.C v 1.0 By Dr. Bruce sampler. TYX editor UNIX
interface. Contains routines used to interface the editor to a UNIX
based operating system. ->tvx_1.c. [MS-DOS:C/86]

CUG178.11-TVX_DEFS.IC v 1.0 By Dr. Bruce Wampler. TVX editor include
file 1. Contains the revision summary and various operating system
dependent definitions selected by conditional compilation. ->tvx_1.c.
[MS-DOS:C/86]

CUG178.12-TVX_GLBL.IC v 1.0 By Dr. Bruce Wampler. TVX editor include
file 2. Defines globals used by the editor. ->tvx_1.c. [MS-DOS:C/86]

CUG178.13-TVX 1.C v 1.0 By Dr. Bruce Wampler. TVX editor Part 1. Part
1 of tvx screen editor. Tvx has historical roots in the TECO editor
and in Ratfor circa 1979. This is a stable, reliable, user
configurable editor which can be used on several operating systems.
[MS-DOS:C/86]

CUG178.14-TVX TERM.IC v 1.0 By Dr. Bruce Wampler. TVX editor terminal
interfaces. Defines interfaces for IBM PC, VT100, Heath 19, Atari 520,
HP 2621, and UNIX term cap interfaces. ->tvx_1.c. [MS-DOS:C/86]

CUG178.15-SUBMTT.DSK

CUG178.16-MAKEFILE v 1.0 By Dr. Bruce Wampler. Make file for Tvx
editor. ->tvx_1.c.

CUG178.17-CONFIG.TVX

==============================================================================
CUG179 -
-----------

CUG179.01-QUICKREF.TVX v 1.0 By Dr. Bruce Wampler. TYX Editor Quick
Reference. A quick reference command summary for the TVX editor.
->TVX-1.C, CUG178.

CUG179.02-README v 1.0 By Dr. Bruce Wampler. TVX editor Releass Notes.
Release notes and file descriptions for TVX editor. ->TVX-1.C, CUG178.

CUG179.03-TVX-REFA.DOC v 1.0 By Dr. Bruce Wampler. TVX Editor Manual
Part 1. Seventeen pages. ->TVX-1.C, CUG178.

CUG179.04-TVX.EXE

CUG179.05-TVX-CFG.EXE

CUG179.06-TVX-PTCH.EXE

CUG179.07-TVX-REFB.DOC v 1.0 By Dr. Bruce Wampler. TVX Editor Manual
Part 2. Seventeen pages. ->TVX-1.C, CUG178.

CUG179.08-SUBMIT.DSK This volume has been withdrawn because not all of
the files were clearly in the public domain.

==============================================================================
CUG181 -
-----------

CUG181.01-LI8ES.C By Alex Soya. WordStar File Formatter. Software from
MicroSystems Journal Vol. 1, No. 2. A text for matter for WordStar
files.

CUG181.02-YILTER32.C By N.T. Carnevale. Adapt Textfile. Makes MS-DOS
and UNIX files palatable to CP/M. Reads specified text file, filters
as directed and displays on standard output. Expands tabs, adds
carriage returns or line feeds, double spaces and performs inverse of
each of these. [CP/M:C/80]

CUG181.03-LZWCOM.C By Kent Williams. File Compresser. Compresses a
file using Lempel/Ziv/Welch algorithm. File is expanded with LZWUNC.C.
->LZWUNC.C, COMMLZW.C, LZH.DOC, LZWCOM.DOC. [MS-DOS, CP/M Xenix:Aztec
C86, Aztec CII, Xenix 286]

CUG181.04-CFORUM.2-3 By Don Libes. Micro/Systsms C Forum. From Vol. 2,
No. 2. A subroutine for parsing command line arguments.

CUG181.05-_KBDFLY.DOC

CUG181.06-_KBDFLY.OBJ

CUG181.07-FILES2.LST

CUG181.08-CFORUM.1-3 By Don Libes. Micro/Systems C Forum. From Yol. 1,
No. 3. Implementing sets with bit operations.

CUG181.09-CFORUM.1-2 By Don Libes. Micro/Systems C Forum. From Yol. 1,
No. 2. A program to undecipher WordStar files. ->LIBES.C.

CUG181.10-C80DEF.H Definitions. Defines read and write mode constants,
standard I/O channels, void and Boolean types. [CP/M:C/80]

CUG181.11-CFORUM.1-1 By Don Libes. Micro/Systems C Forum. From Vol. 1,
Issue 1. An introduction to some of C's subtleties especially
variably-sized and multi-dimensioned arrays.

CUG181.12-CFORUM.1-4 By Don Libes. Micro/Systems C Forum. From Vow. 1,
No. 4. The 1985 Obfuscated Code Contest.

CUG181.13-CATLBR.C By Joe Voyler. LBR Catalog Utility. Generates a
submit file to supervise the creation of a master catalog for a set of
LBR library files. The resulting submit file invokes LDIRSORT.
->LDIRSORT.C. [CP/M:BDS v. 1.5]

CUG181.14-DEBUG.H By Kent Williams. Pet initions for LZW. Macro
definitions to facilitate debugging. [MS-DOS, CP/M, Xenix:Aztec C86,
Aztec CII, Xenix]

CUG181.15-CARNE-FP.COD

CUG181.16-YACCHDR.DAT Data for CUGEDT and CUGINS. ->CUGEOT.PAS,
CUGINS.PAS, HEADER.C.

CUG181.17-CUGINS.PAS By Chuck E. Thornton. Insert Catalog Header.
Concatenate a standard CUG header to the beginning of each file named
in a special control file. ->CUGUTL.DOC. In Pascal.

CUG181.18-YACCLST.DAT file List for CUGEDT and CUGINS. ->CUGEDT.PAS,
CUGINS.PAS, HEADER.C.

CUG181.19-CUGEDIT.PAS By Chuck Thornton. Edit CUG Headers. Modifies a
list of CUG catalog headers by performing substitutions specified in
an 'edit' file.

CUG181.20-CUGINS.COM

CUG181.21-LEXHDR.DAT Data for CUGEDT and CUGINS. ->CUGEDT.PAS,
CUGINS.PAS, HEADER.C.

CUG181.22-FLOWLST.DAT File List for CUGEDT and CUGINS. ->CUGEDT.PAS,
CUGINS.PAS, HEADER.C.

CUG181.23-LEXLST.DAT File List for CUGEDT and CUGINS. ->CUGEDT.PAS,
CUGINS.PAS, HEADER.C.

CUG181.24-FLOWHDR.DAT Data for CUGEDT and CUGINS. ->CUGEDT.PAS,
CUGINS.PAS, HEADER.C.

CUG181.25-PREPLST.DAT File List for CUGEDT and CUGINS. ->CUGEDT.PAS,
CUGINS.PAS, HEADER.C.

CUG181.26-CUGUTL.DOC By Chuck Thornton. CUGINS and CUGEDT
Documentation. ->CUGINS.PAS, CUGEDT.PAS.

CUG181.27-PREPHDR.DAT Data for CUGEDT and CUGINS. ->CUGEDT.PAS,
CUGINS.PAS, HEADER.C.

CUG181.28-CUGEDT.COM

CUG181.29-LZW.C By Kent Williams. File Compresser. Variant of
LZWCOM.C. ->LZWCOM.C. [MS-DOS, CP/M, Xenix:Aztec C86, Aztec CII, Xenix
286]

CUG181.30-CATALL.SUB CATLBR Examplc.->CATLBR.C.

CUG181.31-CATLBR.OBJ

CUG181.32-LDIRSORT.OBJ

CUG181.33-MSYS.CAT Table of Contents.

CUG181.34-FILTER32.DOC

CUG181.35-FILTER32.COM

CUG181.36-SP.C By George Defenbaugh. IBM Graphics Printer Setup.
Portable printer setup program. [MSDOS:Microsoft v. 3.0] Requires
ANSI.SYS.

CUG181.37-CATLBR.DOC

CUG181.38-LZWUNC.C By Ted Williams. Uncompress a LZW File. ->LZWCOM.C.
[MS-DOS, CP/M, Xenix:Aztec CII, Aztec C86, Xenix 286]

CUG181.39-COMMLZW.C By Ted Williams. Common LZW Routines. Routines
used by both LZWCOM and LZWUNC. ->LZWCOM.C, [MS-DOS, CP/M, Xenix:Aztec
C86, Aztec CII,- Xenix 286]

CUG181.40-LZW.SUB

CUG181.41-LZW80COM.COM

CUG181.42-READ-ME By David Giunti. LZW Submittal Letter.

CUG181.43-LZWUNC80.COM

CUG181.44-LZWCOM.DOC By Kent Willidms. LZW Documentation. Includes a
tutorial on data compression and the Lempel/Ziv/Welch Algorithm.

CUG181.45-LZW.DOC By Ted Williams. LZW Implementation Notes.

CUG181.46-WHERE.C By urge Defenbaugh. Where. Locates files in a
hierarchical file system. Will search through all subdirectories of
the input path looking for files which match pattern given on the
command line. [MS-DOS:Microsoft v. 3.0] Requires MS-DOS v. 2.x or
better.

CUG181.47-LZWCOM.EXE

CUG181.48-LZWUNC.EXE

CUG181.49-SUBMIT.DSK

CUG181.50-DISK1-C.LST By Edward Heyman. Disk Controller Routines. Erom
Micro/Systems Vol. 1, Issue 2. Routines to manipulate a floppy disk
controller (8272 Godbout Disk-1).

CUG181.51-LDIRSORT.C By Gary P. Novosielski, Joe Vogler. Modified
Library Directory Eister. Modified LDIR. Generates names.sub output
file for use by catlbr. ->CATLBR.C. [CP/M:BDS v. 1.5]

CUG181.52-KBDFLY.DOC By George Defenbaugh. In key Function. Duplicates
BASIC's INKEY$ function.

==============================================================================
CUG182 -
-----------

CUG182.01-TPRINT.C By T. Jennings. Print Utility. Send file to PRN
device. [:Vanilla]

CUG182.02-UMODEM40.C v 4.0 By T. Jennings, Lauren Weinstein Richard
Conn. Xmodem Updated. Implements Xmodem protocol, and Term II file
transfer protocols number 1 and 4. [UNIX v. 7:]

CUG182.03-UNIXUSQ.C v 1.7 Unsquesze for UNIX. UNIX version of CP/PI
unsqueeze utility. [UNIX:]

CUG182.04-SCRUB.C By Bill Bolt on. Remove WordStar Trash. Clear high
order bit and other WordStar trash from a text file. [:Vanilla] Will
compile with Eco C if CPMEOF define is removed.

CUG182.05-XPND.C v 5.C By Marty Chamberlain. Expand an Image. rreat
standard input as an image and enlarge it by specified horizon and
vertical scale factors. [UNIX/5:]

CUG182.06-LOCAL.H v 3.01 By Bill Rogers. Local Header. This file plus
'stdio.h' should result in the same interface independent of the
computer, operating system or C compiler! Note the type names that can
be redefined for different environments (courtesy Computer
Innovations). ->cmodem. [MS-DOS, UNIX/3, UNIX/5:C/86, Lattice, UNIX/3,
UNIX/5]

CUG182.07-BBSC.C v 1.0 By Mike Kelly. UNIX Bulletin Board. ->rb-215.c,
sb-217.c. [UNIX/3:] No documentation. Requires knowledge of both
UNIX/3 v. 7 and BDS 2.8 - 4.2. Not easily installed.

CUG182.08-UNDOS.C By Omen Technology. Remove Carriage Returns. Change
MSDOS and CP/M files to UNIX format. Converts CR-LF pairs to new line.
[UNIX:Vanilla]

CUG182.09-MINILINT.C By T. Jennings. Delimiter Checker. Checks for
matching delimiters. More a curly brace checker than a true lint.
->curly brace checkers, debugging. [MS-DOS:Vanilla]

CUG182.10-LDIR.C v 1.04 By Paul Homchick. Display Directory. Displays
directory of files in library constructed with LU86. [MS-DOS:DR, C/86]

CUG182.11-QUIP.H Fortune Cookie Definitions. ->quip.c. [:Vanilla]

CUG182.12-QUIP.TXT List of Sayings. ->quip.c.

CUG182.13-BBSCMISC.C v 1.0 By Mike Kelly. Part of BBSC. ->bbsc.c.
[UNIX/3:]

CUG182.14-BBSCFILE.C v 1.0 By Mike Kelly. Part of BBSC. ->bbsc.c.
[UNIX/3:]

CUG182.15-BBSCLOCK.C By Mike Kelly. Part of BBSC. ->bbsc.c. [UNIX/3:]

CUG182.16-BBSCPORT.C v 1.0 By Mlke Kelly. Part of BBSC. ->bbsc.c.
[UNIX/3:]

CUG182.17-UPDATEQU.C Update Fortune Queue. ->quip.c.

CUG182.18-RBSB.C By Chuck Forsberg. RB/SB Support Functions.
->rb-215.c, sb-217.c. [UNIX:]

CUG182.19-SB-217.C v 2.17 By Chuck Forsberg. UNIX to non-UNIX File
Transfer. Sends files to YAM systems. ->bbsc.c, rbsb.c rb-215.c.
[UNIX:]

CUG182.20-BBSCDEF.H By Mike Kelly. Global Defines and Storage Def's.
->bbsc-c. [UNIX/3:]

CUG182.21-RB-215.C v 2.15 By Chuck Forsberg. UNIX to non-UNIX File
transfer. Receives files from XMODEM and YAM systems. ->bbsc.c,
sb-217.c, rbsb.c. [UNIX:]

CUG182.22-CUG.CAT Table of Contents.

CUG182.23-ANYBASE.C By Dan Meyers. Numeric Conversion Utility.
Performs conversions between two positive integers in any base.
Literally any base can be figures. [:Vanilla] Uses long ints.

CUG182.24-SUBMIT.DSK

CUG182.25-QUIP.C Fortune Cookie. Generates smart sayings.
->updatequ.c. [:Vanilla] No documentation.

CUG182.26-EDIT.C By Bill Kennersley. Screen Editor. Has many of the
conveniences of WordStar, but is much smaller and faster progrsm.
[CP/M:] Uses some in-line assembly code.

CUG182.27-ADDQUIP.C Quip Maintenance Utility. ->quip.c. [:Vanilla]

==============================================================================
CUG183 -
-----------

CUG183.01-AREA.DOC By Martin Smith. AREA Documentation. ->dred.c.
[MS-DOS: C/86]

CUG183.02-ADDRESS.EXE

CUG183.03-EXAMPLE1.LTR By Jon Simkins. Letter example. ->letter.c.

CUG183.04-EXAMPLE2.LTR By Jon Simkins. Letter example. ->letter.c.

CUG183.05-EXAMPLE3.LTR By Jon Simkins. Letter example. ->letter.c.

CUG183.06-LETTER.DOC By Jon Simkins. Letter Documentation. ->Letter.c.

CUG183.07-ADDRESS.C By Jon Simkins. Address. Address a standard
envelope using the file 'address' (created by the letter program).
->letter.c. [MS-DOS:DeSmet]

CUG183.08-HANGMATH.C By Peter G. Wohlmut. Guessing Gdme. This game
involves guessing the digits in a three by two digit multiplication.
It is a simple qame, but absorbing. [MS-DOS:Digital Research]

CUG183.09-LETTER.EXE

CUG183.10-DIRLST.TXT Table of Contents.

CUG183.11-AREA.C By Martin Smith. Area Code Search Program. find area
codes by entering an area code or state name on the command line.
->area.doc. [MS-DOS:C/86]

CUG183.12-GRAY.C By Dale Wilson. Bit Manipulation Functions. Bit
manipulations including binary to gray conversion, compute parity and
reverse order. ->gray.sam. [MS-DOS:C/86]

CUG183.13-COMTRM.C By Tom Poindexter. Communication program. File
transfer utility. Primarily a demonstration or how to use comsup.c.
->comsup.c. [MS-DOS:]

CUG183.14-GRAY.EXE

CUG183.15-GRAY.SAM By Dale Wilson. Sample Output. ->gray.c.
[MS-DOS:C/86]

CUG183.16-DETAB.C By Terry Davis. Convert Tabs to Blanks. [MS-DOS:]

CUG183.17-ASTCLOCK.C By Ben R. Wert. Clock. Sets the hardware clock on
the AST Six Pdck Card at addresses 2CO thru 2CA. Gets the date from
AST clock card. [MS-DOS:]

CUG183.18-COMASM.A By Tom Poindexter. Communication Program. Assembler
routines for comsup.c. ->comsup.c. [MS-DOS:]

CUG183.19-COMPGM.C86 v 1.0 By Earl C. Terwilliger, Jr.. Communication
Program. Primitive terminal emulator for PC clones. ->comsup.c.
[MS-DOS:C/86]

CUG183.20-COMSUP.DOC By Tom Poindexter. Communications Support
Documentation. ->comsup.c.

CUG183.21-PCM.C By John Hurst. Personal Communications Manager. File
transfer and terminal emulation. Supports DPS8 transfers. [MS-DOS:]

CUG183.22-LOTTO.C Lottery numbers. Randomly picks and prints batches
of six numbers for lottery betting. [MS-DOS:]

CUG183.23-COMSUP.H By Tom Poindexter. Communications -Definitions.
->comsup.c. [MS-DOS:DeSmet]

CUG183.24-CHMOD.C By Jerry M. Carl in. Change File Attributes.
[MS-DOS:]

CUG183.25-VTYPE.C v 1.7 By Vincent T. Bly. Display a file. Pages
through a file, expanding tabs. Much like more. [MS-DOS:DeSmet]

CUG183.26-CTOOLS.C Various functions. Includes itoa, ltoa, reverse,
fstrn. [MS-DOS:]

CUG183.27-LETTER.C By Jon Simkins. One Page Letter formatter. A short,
savage, document processor that formats one page letters.
->letter.doc, address.c. [MS-DOS:DeSmet]

CUG183.28-SETPRTR.C v 1.7 By Michael Burton. Setup for Epson Printer.
[MS-DOS:Small C]

CUG183.29-DATEDIP.C By John Scarf one. Date Difference. Accepts two
dates in time and calculates the difference. [MS-DOS:Microsoft]

CUG183.30-PCMCOM.S

CUG183.31-GETVOL.C Getvol function. Returns the volume name for the
specified disk drive (o...n). If the drive does not have a volume
label a null string is returned. [MS-DOS:]

CUG183.32-DIRGT.C By Thomas E. Link. List Directory. Demonstrates use
of dirgt.asm. ->dirgt.asm. [MS-DOS:Lattice]

CUG183.33-RFILE.C Random File Access Fuctions. [MS-DOS:Lattice]

CUG183.34-C-ASM.TXT By Bob Leigh. Using Assembler with C. Demonstrates
the use of assembly language routines in C. [MS-DOS:Lattice]

CUG183.35-MSC-ASM.DOC By John Scarfone. Assembly tutorial.
Demonstrates how to link ASII and MicrosoftC v. 3. ->screen.asm.
[:Microsoft]

CUG183.36-QSORT.C Quick sort. Example of Quicksort for Microsoft C v.
3. [MS-DOS:Microsoft]

CUG183.37-ANSI.C By Rex Jaeschke. ANSI control codes. Main function to
test some ANSI device driving functions. ci() is a specific functions
which does direct console input of 1 character without echoing it.
[MS_DOS:DeSmet]

CUG183.38-SDIR.C By Thomas E. Link. Sort Directory. Illustrates use of
sdira.asm and dirgt.asm. ->sdira.asm, dirgt.asm, qsort.c.
[MS-DOS:Lattice]

CUG183.39-SCREEN.ASM By John Scarfone. Sssembler For Tutorial.
[MS-DOS:Microsoft]

CUG183.40-CLEAR.C Clear screen. Demonstrates MS-DOS software
interrupts. [MS-DOS:]

CUG183.41-DIRGT.ASM By Thomas E. Link. Get Disk Directory. Assembly
function to get disk directory including volume name, file length,
date and time. ->dirgt.c. [MS-DOS-Lattice]

CUG183.42-CTOPAS.C C to Pascal. A filter to replace C punctuation and
certain keywords with their Pascal equivalents. [MS-DOS:]

CUG183.43-ALLDIR.C By Joe Welch. List all directories. Traverses DOS's
tree-structured directory, looking for files specified. They are then
displayed onscreen. ->where.c. [MS-DOS:Lattice]

CUG183.44-BAUD1.C Report baud rate. Determine the baud rate by getting
characters until something recognizable is found. [MS-DOS:]

CUG183.45-GEM.C By Robert Molloy. Gemini Printer Setup. Sets printer
attributes for Gemini-10X. [MS-DOS:] Very specific to MS-DOS.

CUG183.46-SDIRA.ASM By Thomas E. Link. Sort Directory. Assembly
functions to sort a directory listing. ->dirgt.asm. [MS-DOS:Lattice]

CUG183.47-SUBMIT.DSK

CUG183.48-LETTER.CAT Table of Contents.

CUG183.49-COMSUP.C By Tom Poindexter. Communications Support
functions. Provides interrupt driven buffered serial communications.
Supports xon/xoff protocol, modem control signals, concurrently active
ports, status reporting and event trapping. ->comprg.c86, comasm.a,
comtrm.c. [MS-DOS:DeSmet] Assembly routines in DeSmet ASM88.

==============================================================================
CUG184 -
-----------

CUG184.01-FL1.MAC By T. Carnevale, Walt Bilofsky. RUNAMD Patch - Part
I. First of three patches for C/80's FLTLIB to use AMD 9511A (Intel
8231A) for floating point operations. ->runamd.doc, fl2.mac, fl3.mac,
fpc.c, c80def.h, cug.186. [CP/M:C/80]

CUG184.02-FL2.MAC By T. Carnevale. RUNAMD Patch - Part 2. Second of
three patches for C/80's FLTLIB to use AMD 9511A (Intel 8231A) for
floating point operations. ->runamd.doc, fl1.mac, fl2.mac, fpc.c,
c80def.h, cug.186. [CP/M:C/80]

CUG184.03-FL3.MAC By T. Carnevale. RUNAMD Patch - Part 3. Third of
three patches for C/80's FLTLIB to use AMD 9511A (Intel 8231A) for
floating point operations. ->runalmd.doc, fl1.mac, fl2.mac, fpc.c,
c80def.h, cug.186. [CP/M:C/80]

CUG184.04-RUNAMD.DOC By T. Carnevale. RUNAMD Documentation. ->fl1.mac,
fl2.mac, fl3.mac, fpc.c, c80def.h, cug.186.

CUG184.05-FPC.C By T. Carnevale. RUNAMD Demonstration. Explores the
bit-level representations of floating point numbers. ->runamd.doc,
fl1.mac, fl2.sac, fl3.mac, c80def.h, cug.186. [CP/M:C/80]

CUG184.06-C80DEF.H By T. Carnevale. RUNAMD Standard Definitions.
->runamd.doc, fl1.mac, fl2.mac, fl3.mac, fpc.c, cug.186. [CP/M:C/80]

CUG184.07-CUG.186 By T. Carnevals. RUNAMD Submittal Letter.
->runamd.doc, fl1.mac, fl2.mac, fl3.mac, fpc.c, c80def.h.

CUG184.08-CUG.CAT Table of Contents.

CUG184.09-ZIPP.COM By Bob Presswood. Zipp Executable. ->zipp.doc,
zipp.c. [CP/M:]

CUG184.10-ZIPP.C By Bob Presswood. Join Columns. Joins up to seven
ASCII files in side-by-side columns. ->zipp.doc, zipp.com.
[CP/M:Aztec]

CUG184.11-H19BD.L By Ken Presser. Heath H-19 terminal specific
routines. Routines specific to the Heath/Zenith H19 terminal, for use
with yanc.c. Includes functions to read and set cursor position, save
and restore cursor position, clear screen, delete line, erase to end
of line and set attributes. ->yanc10.doc, yanc.c, v200.1. [CP/M:BDS v.
1.5, Q/C]

CUG184.12-V200.L By Ken Presser. Visual 200 terminal specific
routines. Routines specific to the Visual 200 terminal, for use with
yanc.c. ->yanc10.doc, yanc.c, h19bd.1. [CP/M:BDS, Q/C]

CUG184.13-YANC10.DOC By Ken Presser. YANC Documentation. ->yanc.c,
h19bd.1, v200.1.

CUG184.14-YANC.C v 1.0 By Ken Presser, David Welch, J.E. Bryam. Yet
Another New Catalog program. menu-driven file cataloging program with
features of FMAP, UCAT, CAT, QCAT, NEWCAT, and CROSSREF. ->yanc10.doc,
h19bd.1, v200. 1. [CP/M:BDS v. 1.5, C/80] Compatible with original
file structure of MAST.CAT, but format incorporates user number and
file size, so may not be downward compatible with other catalog
programs.

CUG184.15-ZIPP.DOC By Bob Presswood. Zipp Manual Page. ->zipp.c,
zipp.com.

CUG184.16-CERRORS.C By KARL L. REMMLER. Help Utility. Translates
compiler error numbers into English messages. [CP/M:Aztec, C/80] Use
prohibited on any IBM Computer System.

==============================================================================
CUG185 -
-----------

CUG185.01-'SSORT.SH v 1.0 By Harvey Moran. MicroShell script for
SSORT.C. ->SSORT.C. [CP/M:BDS v. 1.5]

CUG185.02-HSH.C v 1.1 By Michael M. Rubenstein. History Processing
ZCPR3 Shell. Allows recall and edit of previous commands and much more
sophisticated command editing than is found in the normal CP/M or
ZCPR3 command processor. ->HSH.DOC, HSH.HLP. [CP/M:C/80]

CUG185.03-CFLOW.C By Mark Ellington. Flow Analyzer. Print module call
structure of a C program. ->CFLOW.DOC, CFLOW.FLO, CFLOW.OBJ,
CFLOWLI8.C80. [CP/M v. 2.2:C/80, BDS]

CUG185.04-BOSE.COM

CUG185.05-BOSESORT.MSS By Mark D. Lousheed. Documentation for BOSE.C.
->BOSE.C, STEST.C.

CUG185.06-CFLOWLIB.C80 By Mark Ellington. BDS library for FLOW.C.
->CFLOW.C. [CP/M:C/80, BDS]

CUG185.07-FIXDIR.C v 0.95 By Bill Bolton. Remove Files with Illegal
Names. ->FIXDIR.COM, FIXDIR.DOC, FIXDIR.CRL. [CP/M:]

CUG185.08-CFLOW.DOC By Mark Ellington. Documentation for FLOW.C.
->CFLOW.C.

CUG185.09-CFLOW.PLO By Mark Ellington. Example output of CFLOW.COM.
->CFLOW.C.

CUG185.10-H.C By Karl Remmler. BDS error codes help file. Converts BDS
error codes to English. ->H.OBJ, CERRORS.C. [CP/M:BDS] Author forbids
use with IBM PC.

CUG185.11-FIXDIR.COM

CUG185.12-FIXDIR.DOC v 0.95 By Bill Bolton. Fixdir Documentation.
->FIXDIR.COM, FIXDIR.C, FIXDIR.CRL.

CUG185.13-BOSE.C By Mark D. Lougheed. Bose-Nelson sort for Small
Files. ->BOSESORT.MSS, STEST.C. [CP/M v.2.2:C/80] The bose.com file is
for Z80 only.

CUG185.14-PULL.C By rom Burnett. Extract file from .lbr file.
->PULL.DOC. [CP/M, MS-DOS:Aztec]

CUG185.15-SSORT.C v 1.0 By Harvey Moran. Merge sort utility. Permits
up to 20 sort keys and has a command line option for loading an
alternate collatlng sequence. ->SSORT.DOC, 'SSORT.SH, SORTORDR.ASM,
SSORT.OVL, LEXLATTE.CSM. [CP/M:BDS C]

CUG185.16-HSH.COM

CUG185.17-HSH.DOC By Michael M. Rubenstein. Documentation for HSH.COM.
->HSH.C.

CUG185.18-HSH.HLP v 1.1 By Michael M. Rubenstein. Help for HSH.COM.
->HSH.C.

CUG185.19-LEXLATE.CSM By Harey Moran. Lexical Ordering Function.
Function supports lexical ordering as an alternate merge sort
collating sequence. ->SSORT.C SORTORDER.ASM. [CP/M:BDS v. 1.5]

CUG185.20-PULL.DOC v 1.0 By Harvey Moran. Documentation for PULL.C.
Merge Sort Documentation. ->PULL.C, SSORT.C.

CUG185.21-SSORTORDR.ASM v 1.0 By Harvey Moran. Merge sort utility.
Assembly program, generates custom collating sequence. ->SSORT.C.
[CP/M:BDS v. 1.5]

CUG185.22-STEST.C By Mark D. Lougheed. Test pattern generator for
BOSE.COM. ->BOSE.C. [CP/M:C/80]

CUG185.23-SSORT.OVL v 1.0 By Harvey Moran. Default Ordering Function.
->SSORT.C, SSORT.DOC SSORT.OBJ, 'SSORT.SH, SSORT.SYM LEXLATE.CSM.
[CP/M:BDS v. 1.5

CUG185.24-STEST.COM

CUG185.25-SUBMIT.DSK

CUG185.26-CUG.CAT Table of Contents.

==============================================================================
CUG186 -
-----------

CUG186.01-CHECK.C v 1.3 By Ted Rabenko, Richard Conn. Delimeter
Checker. Displays the nesting level number of each BEGIN/END group.
->NLCHECK.C. [CP/M: C/80]

CUG186.02-AIM.DOC By David McCourt. Documentation for AIM.C. ->AIM.C.

CUG186.03-CATALOG

CUG186.04-DED.C v 1.5 By Collin Brendemuehl. Disk Editor. Allows view
& update in hex & ASCII. Combines the functionality of DU with
DPATCH's ease of use. ->DED.DOC. [CP/M:C/80] Screen setup for
TeleVideo 920.

CUG186.05-CHECK.COM

CUG186.06-FXPR22.C v 2.1 By Thomas McCormick, R.W. Odlin. FX-80
Printer Utility. Derived from PRINTER.C. [CP/M:BDS] User's manual not
included.

CUG186.07-DED.DOC v 1.5 By Collin Brendemuehl. Documentation for
DED.C. ->DED.C.

CUG186.08-LTRI.C By David McCourt. Long Term Risk Index. Computes LTRI
for stock. See Barron's 11/22/82. ->LTRI.DOC. [CP/M:BDS]

CUG186.09-MAKEll.C v 1.1 By Allen Holub, James Pritchett. MAKE. CP/M
version of the UNIX MAKE utility. Rebuilds intelligentlly by
exploiting dependency information. ->MAKE.DOC, MAKE.H, MAKEIO.C,
MDEBUG.C, MAKEFIL. [CP/M:BDS]

CUG186.10-AIM.C By David McCourt. Automatic Investment Management.
Based on the book How to Make $1,000,000... by R. Lichello. ->AIM.DCC,
LTRI.C. [CP/M:BDS]

CUG186.11-MDEBUG.C v 1.1 "Debug routines for MAKE11.C". ->MAKE11.C,
James Pritchett. [CP/M:BDS]

CUG186.12-LTRI.DOC By David McCourt. Documentation for LTRI.C.
->LTRI.C.

CUG186.13-LTRI.FIL By David McCourt. Data for use by LTRI.COM.
->LTRI.C. [CP/M:]

CUG186.14-MAKE.COM

CUG186.15-MAKE.DOC v 1.1 By Allen Holub, James Pritchett.
Documentation for MAKE. ->MAKE11.C

CUG186.16-MAKE.H v 1.1 By Allen Holub, James Pritchett. Make
Definitions. ->MAKE11.C. [CP/M:BDS]

CUG186.17-MAKEIO.C v 1.1 By Allen Holuh, James Pritchett. "I/O
massaging for MAKE11.C". ->MAKE11.C. [CP/M:BDS]

CUG186.18-MAKEFILE v 1.1 By Allen Holub, James Pritchett. Sample
MAKEFILE for MAKE. ->MAKE11.C. BDS C]

CUG186.19-NLCHECK.C v 1.2A By Richard Conn. Delimiter Checker.
Displays the nesting level number of each BEGIN/END group. ->CHECK.C.
[CP/M:BDS C] Requires TeleVideo 920.

CUG186.20-MAKEREVS.DOC v 1.1 By Allen Holub, James Pritchett. Log of
revisions to MAKE. ->MAKE11.C.

CUG186.21-ROBOTS21.C v 2.1 By Tom P. Jansing. ROBOTS CRT game. Chase
game for any addressable cursor CRT. [CP/M:Small C]

CUG186.22-TABIFY5.C v 5.0 By Leor Zolman. Tabify. Replace spaces with
tabs. [CP/M:BDS]

CUG186.23-TXTPLOT.C v 1.0 By James Prichett. TXTPLOT. Version without
memory mapped video needed by VIEW. ->TXTPLOT.CSM, TXTPLOT.DOC,
VIEW151.C. [CP/M:BDS] Function, use with VIEW151.C.

CUG186.24-VIEW151.C v 1.51 By James Pritchett. Display Text Files.
View pages like UNIX more, except VIEW allows user to walk forwards or
backwards through a file. Two text plotting packages are supplied: one
for fast memory-mapped video and one for conventional terminals.
->VIEW.DOC, VIEW151.D0C, TXTPLOT.C, TXTPLOT.CSM, TXTPLOT.DOC.
[CP/M:BDS C] WILDEXP.C not provided.

CUG186.25-TXTPLOT.CSM v 1.1 By James Prichett. TXTPLOT. Version
without memory mapped video needed by VIEW. ->TXTPLOT.C, TXTPLOT.DOC,
VIEW151.C. [CP/M:BDS] Function, use with VIEW151.C.

CUG186.26-TXTPLOT.DOC v 1.1 By James Prichett. Documentation for
txtplot. ->TXTPLOT.CSM, TXTPLOT.C.

CUG186.27-VIEW.DOC v 1.51 By James Pritchett. Usage documentation for
VIEW151.C. ->VIEW151.C, VIEW151.DOC, TXTPLOT.C.

CUG186.28-VIEW151.DOC v 1.51 By James Pritchett. Documentation for
View. Compiling and customization instructions for VIEW. ->VIEW.DOC,
VIEW151.C, TXTPLOT.C.

CUG186.29-SUBMIT.DSK

CUG186.30-CUG.CAT Table of Contents.

==============================================================================
CUG187 -
-----------

CUG187.01-CUG #187

CUG187.02-READ.ME By Richard Threlkeld. Table of Contents.

CUG187.03-SUBMIT.DSK

CUG187.04-BLDDOC.BAT By Richard Threlkeld. Build Doc file. Builds the
documentation file from the ARC file. [MS-DOS:]

CUG187.05-BLDLIB.BAT By Richard Threlkeld. Build CSUBRS Library.
Builds the library file for CSUBRS from an ARC archive file.
->READ.ME. [MS-DOS:]

CUG187.06-CONOUT.C By Richard Threlkeld. Screen I/O Function. Sends a
string to the screen using DeSmet interrupt 10 routine. Renames 'SCR
APUTST function found in DeSmet 'CSTDIO.S' library. ->CSUBRS.MAP.
[MS-DOS:DeSmet] IBM or very near clone. Uses BIOS INT 10 call.

CUG187.07-COPYFILE.C By Richard Threlkeld. COPY FROM-TO. Copies a file
to a second file from within a running program. If a file exists with
the destination name it is deleted before the file is copied.
->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.08-DATAIN.C By Richard Threlkeld. Data Input Routine. Prototype
input routine which reads from either file or keyboard, but checks the
keyboard for override on each call. [MS-DOS:DeSmet]

CUG187.09-CSUBRS.MAP By Richard Threlkeld. CSU8RS Library List. Map
file from the most rscent rebuilding of the CSUBRS.S library.
[MS-DOS:DeSmet]

CUG187.10-DATE-FMT.C By Richard Threlkeld. Return formatted Date.
Utility function for DeSmet C compiler. Returns the current date
formatted in any of 6 different styles. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.11-FIXPATH.C By Richard Threlkeld. Process Path name. Processes
a DOS path name for two different uses. The input path is usually a
DOS command operand. One output, the search path, can take wild card
names. The second output, is a lead-in path which can be prefixed to
the simple filename to make a path for opening or erasing a file.
->CSUBRS.MAP, WILDEXP.C. [MS-DOS:DeSmet]

CUG187.12-BLKDEF.MON By Richard Threlkeld. Definitions for Sparse
Matrix Routines. ->CSUBRS.MAP, SPARSE.C. [MS-DOS:DeSmet]

CUG187.13-DETABS.C By Richard Threlkeld. Tabs To Spaces Function.
Replaces tab characters with a specified number of spaces.
->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.14-MKSTR.C By Richard Threlkeld. Make a String No. 2. Copies
input to output ensuring the result is zero-terminated. ->CSUBRS.MAP.
[MS-DOS:DeSmet]

CUG187.15-CSUBRS.S By Richard Threlkeld. CSUBRS Library File. Library
source code for the set of C subroutines found on CUG187. Small memory
model only is supported. ->CSUBRS.MAP. [MS-DOS:DeSmet] Usable only by
the DeSmet C compiler.

CUG187.16-GETCTL.C By Richard Threlkeld. Convert Control Character.
Transforms a string containing the name of a control character to it's
internal binary value, e.g. NUL to 0x00. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.17-GET-CUR. A By Richard Threlkeld. Find Cursor Location
function. Utility function for DeSmet C compiler. Uses int. 10H to
determine and return the current cursor location. ->CSUBRS.MAP.
[MS-DOS:DeSmet] Written for IBM BIOS and DeSmet C Assembler.

CUG187.18-GETDIR.C By Richard Threlkeld. Get Directory Function. Gets
ths text of the current path on a given drive. ->CSUBRS.MAP.
[MS-DOS:DeSmet] Uses function unique to DeSmet C.

CUG187.19-GETDRV.C By Richard Threlkeld. Get Current Drive function.
Gets the currently logged drive ID. Returns an integer sized value of
the drive, e.g. drive C == 0x03. ->CSUBRS.MAP. [MS-DOS:DeSmet] Uses in
line assembly code.

CUG187.20-GETINT.C By Richard Threlkeld. Get Integer Function. Reads
in two binary bytes and treats them as a reverse 2-byte number.
->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.21-GET-UNIQ.C By Richard Threlkeld. Get Unique File Name
Function. Makes a unique file name from the date and time. An
extension must be added by the caller. ->CSUBRS.MAP. [MS-DOS:DeSmet]
Uses functions unique to DeSmet C.

CUG187.22-JUST.C By Richard Threlkeld. Left Justify String function.
Left justifies a string in a buffer of a given length. ->C-JUST.C,
R-JUST.C, CSUBRS.MAP. [MS-DOS:DeSmet] Requires the function
'REVERSE.C'.

CUG187.23-HSECONDS.C By Richard Threlkeld. Hundredths of Second
Function. Returns the current time of day in hundredths of seconds
since midnight. ->CSUBRS.MAP. [MS-DOS:DeSmet] Uses inline assembly
code.

CUG187.24-HELP.C By Richard Threlkeld. Display Help Messages Function.
Prints help msssages on the screen. Parameter is assumed to be dn
array of pointers to actual help strings. ->CSUBRS.MAP.
[MS-DOS:DeSmet]

CUG187.25-MAKSTR.C By Richard Threlkeld. Make a String Function. Makes
a string of <length> characters. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.26-SHOW-ERR.C By Richard Threlkeld. Show Error Message
Function. Prints two strings and rings the bell. Any required CR/LFs
must be in the strings. ->CSUBRS.MAP. [MS-DOS:DeSmet] Uses functions
unique to DeSmet C and IBM ROM.

CUG187.27-ITOA.C By Richard Threlkeld. INTEGER TO ASCII. Utility
function for DeSmet C compiler. Converts integer values to ASCII
strings. ->CSUBRS.MAP. [MS-DOS:DeSmet] Requires the function
REVERSE.C.

CUG187.28-KBECH().C By Richard Threlkeld. ECHO KEYBOARD. Utility
function for DeSmet C compiler. Collects characters from keyboard
input routine and writes them when a line is full. Control characters
are expanded to reverse video names. ->CSUBRS.MAP. [MS-DOS:DeSmet]
Uses functions unique to DeSmet C and IBM ROM.

CUG187.29-LCSUBRS.BAT By Richard Threlkeld. Link New Subroutine. Links
a new subroutine into a DeSmet C library. ->READ.ME. [MS-DOS:DeSmet]

CUG187.30-LNKSORT.BAT By Richard Threlkeld. Sort DeSmet Map File.
Builds a DeSmet map file sorted by address instead of by name.
->READ.ME. [MS-DOS:DeSmet]

CUG187.31-LTOA.C By Richard Threlkeld. LONG To ASCII. Utility function
for DeSmet C compiler. Converts longs to ASCII strings. ->CSUBRS.MAP.
[MS-DOS:DeSmet] Requires the function REVERSE.C.

CUG187.32-MAK-DEC.C By Richard Threlkeld. MAKE A DECIMAL. Utility
function for DeSmet C compiler. Inserts a decimal point in a numeric
string. Leading zeros will be inserted if needed. ->CSUBRS.MAP.
[MS-DOS:DeSmet]

CUG187.33-SECONDS.C By Richard Threlkeld. Seconds Since Midnight
Function. Returns the current time of day in seconds since midnight.
->CSUBRS.MAP, HSECONDS.C. [MS-DOS:DeSmet] Uses in line assembly code.

CUG187.34-READABS.C By Richard Threlkeld. Read Absolute Sector
Function. Reads numsects sectors from the given drive starting at
logical sector logsec into a buffer. ->CSUBRS.MAP. [MS-DOS:DeSmet]
Uses inline assembly code.

CUG187.35-RESTDTA.C By Richard Threlkeld. Restore Current DOS DTA
function. Restores the current DOS DTA. DTA must have been saved by
the function savedta()'. ->CSUBRS.MAP. [MS-DOS:DeSmet] Uses register
calling routines unique to DeSmet C.

CUG187.36-REVERSE.C By Richard Threlkeld. Reverse a String. Reverses a
string. Used by ITOA, LTOA, UTOA, etc. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.37-CANT.C By Richard Threlkeld. Can't Open Eile Function.
Returns a '<FILENAME>: Cannot Open/n' message if unable to open
requested file. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.38-SETDTA.C By Richard Threlkeld. Set New DTA Function. Sets a
new DTA buffer. buffer must be at least 44 bytes long and must not
cross a segment. ->CSU8RS.MAP, RESTDTA.C, SAVEDTA.C. [MS-DOS:DeSmet]
Uses register calling routines unique to DeSmet C.

CUG187.39-SAVEDTA.C By Richard Threlkeld. Save Current DOS DTA
Function. Saves the current DOS DTA. Restda() is used to restore the
saved DTA. ->CSUBRS.MAP, RESTDTA.C. [MS-DOS:DeSmet] Uses regester
calling routines unique to DeSmet C.

CUG187.40-SHOWCH.C By Richard Threlkeld. Show Characters Function.
Displays a character on the screen. The character is displayed
normally if possible, as a reverse video name if appropriate, or as
\xxx where xxx is the decimal value of the character. ->CSUBRS.MAP.
[MS-DOS:DeSmet] Uses function unique to DeSmet C and IBM ROM.

CUG187.41-USAGE.C By Richard Threlkeld. Template for Standard Error
Report. Template for a standard syntax error report. Adapted from
DECUS GREP utility. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.42-SKPBLK.C By Richard Threlkeld. Skip to Next Non-Blank Value.
Skips to the next non-blank value. A non-blank or NULL will terminate.
->CSUBRS.MAP, SKPTOK.C. [MS-DOS:DeSmet]

CUG187.43-SKPTOK.C By Richard Threlkeld. Skip Over token Function.
Skips over a token to next delimiter. A blank, ';", or NULL will
terminate. ->CSUBRS.MAP, SKPBLK.C. [MS-DOS:DeSmet]

CUG187.44-SPARSE.C By Richard Threlkeld. Sparse Matrix Routines. Set
of routines for maintaining a sparse matrix in free storage. Set tries
the functions get blk(), key amp(), put blk(), add ndx() and cpyblk().
->CSUBRS.MAP. [MS-DOS:DeSmet] Uses heater 'BLKDEF.MON' and 'MISC.MON'.

CUG187.45-STRINGS.C String Handling Routines. Package of string
functions used to process command tails. [MS-DOS:Lattice]

CUG187.46-STRLOWER.C By Richard Threlkeld. Convert Strings to Lower
Case. Changes all letters in a string to lower case. ->STRUPPER.C,
CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.47-STRUPPER.C By Richard Threlkeld. Convert Strings to Upper
Case. Changes all letters in a string to upper case. ->STRLOWER.C,
CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.48-R-JUST.C By Richard Threlkeld. Right Justify String
Function. Right justifies a string in a buffer of a given length.
->L-JUST.C, C-JUST.C, CSUBRS.MAP. [MS-DOS:DeSmet] Requires the
function 'REVERSE.C'.

CUG187.49-TRIM.C By Richard Threlkeld. Trim Trailing Blanks Function.
Trims trailing blanks from a string. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.50-TSECONDS.C By Richard Threlkeld. Tenths of Seconds Since
Midnight. Returns the current time of day in tenths of seconds since
midnight. ->SECONDS.C, HSECONDS.C CSUBRS.MAP. [MS-DOS:DeSmet] Uses in
line assembly code.

CUG187.51-UTOA.C By Richard Threlkeld. Unsigned to ASCII Function.
Converts unsigned to ASCII strings. ->CSUBRS.MAP. [MS-DOS:DeSmet]
Requires the function REVERSE.C.

CUG187.52-VBAR.C By Richard Threlkeld. Generate vertical Bar Graph.
Generates a vertical bar graph from a pair of vectors. ->CSUBRS.MAP.
[MS-DOS:DeSmet]

CUG187.53-XTOA.C By Richard Threlkeld. Integer to Hex String Function.
Converts integer to hex ASCII strings. Useful to prevent loading of
printf() routines. ->CSUBRS.MAP. [MS-DOS:DeSmet] Requires the function
REVERSE.C.

CUG187.54-YYMMDD.C By Richard Threlkeld. Convert Date to YY-MM-DD
Formate. Converts a date in standard form to a normalized date in
YY-MM-DD format. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.55-SUB-STR.C By Richard Threlkeld. Sub string Search Function.
Searches a string for a given sub string. ->CSUBRS.MAP.
[MS-DOS:DeSmet]

CUG187.56-ZFILL.C By Richard Threlkeld. Fill a String with Zeros. Fill
a string of size len with zeros. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.57-C-JUST.C By Richard Threlkeld. Center Justify a String
Function. Centers a string in a buffer to a given length. ->L-JUST.C,
R-JUST.C, CSUBRS.MAP, CENTER.C. [MS-DOS:DeSmet]

CUG187.58-DIRFST.C By Richard Threlkeld. Find First Directory Entry.
Finds the first matching file. Path\filename and attribute must be
specified. ->CSUBRS.MAP, DIRNXT.C. [MS-DOS:DeSmet]

CUG187.59-CHGATTR.C By Richard Threlkeld. Get/ Set Attribute Function.
Gets or sets the attribute on a requested file. ->CSUBRS.MAP.
[MS-DOS:DeSmet]

CUG187.60-CENTER.C By Richard Threlkeld. Center a String Function.
Centers a string on a given length line. ->L-JUST.C R-JUST.C,
C-JUST.C, CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.61-DIRNXT.C By Richard Threlkeld. Find Rest of Directory
Entries. Continues search for matching files based on return from
DIRFST. ->CSUBRS.MAP, DIRFST.C. [MS-DOS:DeSmet]

CUG187.62-DT-PARSE.C By Richard Threlkeld. Date Time Parser.
->CSUBRS.MAP, DT-PARSE.MON. [MS-DOS:DeSmet]

CUG187.63-DTPARSE.MON By Richard Threlkeld. Structure for DT-PARSE.D.
->CSUBRS.MAP DT-PARSE.C. [MS-DOS:DeSmet]

CUG187.64-ERROR.C By Richard Threlkeld. Print Error Message Function.
Prints two strings on the screen and exits with ERRORLEVEL = 1.
->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.65-FDATE.C By Richard Threlkeld. Get File Time/Date Stamp. Gets
the file date/time stamp and returns it in a string form as 'YY-MM-DD
HH:MM:SS '. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.66-FEXPND.C By Richard Threlkeld. Expand a String Function.
Returns a pointer to the next <filename.ext> which matches the
requested string. If no file is found a zero is returned.
->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.67-FIND-ENV.C By Richard Threlkeld. Find Environment Values
Function. Finds the value of a given environment value. Uses DeSmet
lmove() function. ->CSUBRS.MAP. [MS-DOS:DeSmet]

CUG187.68-CRC.C By Richard Threlkeld. Cyclic Redundancy Check (CRC)
functions. Contains the functions crc clear(). crc update() and crc
finish(). ->CSUBRS.MAP. [MS-DOS:DeSmet]

==============================================================================
CUG188 -
-----------

CUG188.01-ARC.EXE v 5.00 By System Enhancement Associates. ARC --
Achive and compression utility. Maintains an archive containing
several different files. Each file is kept in a compressed form in the
archive. The base of four different compression algorithims is chosen
automatically. [MS-DOS:]

CUG188.02-TRANS.C v 1.0 By Tim Prince. Elementary Transcendentals.
Source code for all standard C transcendentals. Employs ldexp() and
frexp() functions; if suitable versions of these are not provided by a
given compiler, the versions provided in source code wlll require
adaptation to the double float formats of the compiler. [CP/M v.
3.1:MIX v. 2.0.1] frexp() and ldexp() are implementation dependent.
The compiler employed does not support minus (-) unary operators in
initializer lists, which are required by the code.

CUG188.03-ARC500.DOC v 5.00 By System Enhancement Associates.
"Documentation for ARC". ->ARC.EXE.

CUG188.04-TRANS.C v 1.0 By Tim Prince. C elementary transcendentals.
Source code for all standard C transcendentals. Employs ldexp() and
frexp() functions; if suitable versions of these are not provided by a
given compiler, the versions provided in source code will require
adaptation to the double float formats of the compiler. [CP/M v.
3.1:MIX v. 2.0.1] frexp() and ldexp() are implementation dependent.
The compiler employed does not support minus (-) unary operators in
initializer lists, which are required by the code.

CUG188.05-TRANSLIB.FOR v 1.0 By Tim Prince. Elementary
Transcendentals. FORTRAN sourcs code for transcental function library.

CUG188.06-HEADER.CRL

CUG188.07-HEADER.COM

CUG188.08-TRANS.DOC v 1.0 By Tim Prince. "Manual for Transcendental
Functions'.

CUG188.09-HEADER.C v 1.0 By Robert Ward. CUG Catalog Header Parser. A
recursive descent parser which extracts information from the free
format CUG documenting header and writes the information in a fixed
field file suitable for use with any of several commercial data base
managers. ->HDRMSDOS.C. [CP/M:BDS v. 1.5] Doesn't ignore leading
whitespace when parsing. <item>.

CUG188.10-SUBMIT.DSK

CUG188.11-READ.ME Table of Contents.

CUG188.12-HDRMSDOS.EXE

CUG188.13-HDRMSDOS.C v 1.0 Header Parser for MS-DOS. ->HEADER.C.
[MS-DOS:C/86]

==============================================================================
CUG189 -
-----------

CUG189.01-CASE.C By Chuck Allison. Convert Strings to One Case.
Includes strupper and strlower functions. [MS-DOS:Mark Williams]

CUG189.02-READ.ME By Chuck Allison. Annotated Table of Contents.

CUG189.03-BROWSE.C By Chuck Allison. File Display Utility. Supports
four way scrolling and string search. [MS-DOS:Mark Williams]

CUG189.04-DARKEN.C By Chuck Allison. Overstrike Text Lines.
Overstrikes each line in a text file to darken the print image.
[MS-DOS:Mark Williams]

CUG189.05-MAKEARG.H v 1.0 By Chuck Allison. Command line parser.
Processes quoted arguments. [MS-DOS:Mark Williams]

CUG189.06-SUBST.EXE

CUG189.07-XDIR.C By Chuck Allison. Get Directory Function.
[MS-DOS:Mark Williams]

CUG189.08-PAGE.EXE

CUG189.09-GREP.EXE

CUG189.10-MERGE.EXE

CUG189.11-MERGE.C By Chuck Allison. Merqe Sorted Files. Merge two
sorted files into one larger file. [MS-DOS:Mark Williams]

CUG189.12-XDIR.H By Chuck Allison. Xdir Structure Definition.
->xdir.c. [MS-DOS:Mark Williams]

CUG189.13-DARKEN.EXE

CUG189.14-FCOMP.EXE

CUG189.15-DUMP.EXE

CUG189.16-GREP.C By Chuck Allison. Pattern Matching Utility. Adapted
from DFCUS C Tools package. Handles quoted arguments, distinguishes
case. [MS-DOS:Mark Williams]

CUG189.17-ROPF.C By Chuck Allison. Text Formatter. Dot command text
formatter a'la Software Tools. ->roff4, nro, rap. [MS-DOS:Mark
Williams]

CUG189.18-DUMP.C By Chuck Allison. Hex/ASCII file dump. [MS-DOS:Mark
Williams]

CUG189.19-WC.C By Chuck Allison. Word Count Utility. [MS-DOS:Mark
Williams]

CUG189.20-WC.EXE

CUG189.21-RM.EXE

CUG189.22-BROWSE.EXE

CUG189.23-PAGE.C By Chuck Allison. Page through Files. Displays files
one screen at a time. [MS-DOS:Mark Williams]

CUG189.24-SUBST.C By Chuck Allison. Replace strings in text. Related
to UNIX change utility. Substitutes new string for all occurrences of
a pattern in pattern file. [MS-DOS:Mark Williams]

CUG189.25-PR.EXE

CUG189.26-PCOMP.C By Chuck Allison. Compare Files. Best version of
DIFF (file comparator) from Jan. '86 issue of Software Practice and
Experience. ->DIFF. [MS-DOS:Mark Williams]

CUG189.27-PR.C By Chuck Allison. Detabbing File Printer. Options for
page numbering, multiple copies, titles, and line numbers.
[MS-DOS:Mark Williams]

CUG189.28-ROFF.EXE

CUG189.29-SUBMIT.DSK

CUG189.30-FTRIM.C v 1.0 By Chuck Allison. Trim filespec function.
[MS-DOS:Mark Williams]

CUG189.31-RM.C By Chuck Allison. Remove Files. Delete files with or
without verification. [MS-DOS:Mark Williams]

==============================================================================
CUG190 -
-----------

CUG190.01-AS68.C v 1.01 By Steve Passe. Source for 68000 Assenbler. A
disk to disk assembler for the Motorola 68000. Uses Motorolla
mnemonics and produces Motorola S-records as output. [CP/M:Aztec]

CUG190.02-SYMTBL.C v 1.01 By Steve Passe. 68000 Symbol Table
Code.->AS68.C. [CP/M:Aztec]

CUG190.03-BC.C v 1.01 By Steve Passe. 68000 Code Builder. ->AS68.C.
[CP/M:Aztec]

CUG190.04-POP.C v 1.01 By Steve Passe. 68000 Oporand Field
parser.->AS68.C. [CP/M:Aztec]

CUG190.05-AS68.H v 1.01 By Steve Passe. Definitions for AS68.
->AS68.C. [CP/M:Aztec]

CUG190.06-PSDO.C v 1.01 By Steve Passe. 68000 Pseudo Operations.
->AS68.C. [CP/M:Aztec]

CUG190.07-LIB68.C v 1.01 By Steve Passe. 68000 Library
Functions.->AS88.C. [CP/M:Aztec]

CUG190.08-AS68.SUB

CUG190.09-AS68.DOC By Steve Passe. AS68 User's Manual. Twenty four
pages, complete with index. ->AS68.C.

CUG190.10-CP

CUG190.11-AS68.COM

CUG190.12-ASMT.C v 1.01 By Steve Passe. 68000 Mnemonic tables.
->AS68.C. [CP/M:Aztec]

==============================================================================
CUG191 -
-----------

CUG191.01-SOUNDOUT.C v 1.0 By P. Canniff. Sound Effects output
routines. ->sound.c. [MS-DOS v. 2.xx:Aztec, Lattice, Ecosoft]

CUG191.02-SOUND.H v 1.0 By P. Canniff. Sound Effects defunctions. This
is the main include file for the sound effect routines. ->sound.c.
[MS-DOS v. 2.xx:Aztec, Lattice, Ecosoft]

CUG191.03-SOUNDP.H v 1.0 By P. Canniff. Sound Effects declarations.
->sound.c. [MS-DOS v. 2.xx:Aztec, Lattice, Ecosoft]

CUG191.04-SOUNDCTL.C v 1.0 By P. Canniff. Sound Effects open and close
routines. ->sound.c. [MS-DOS v. 2.xx:Aztec, Lattice, Ecosoft]

CUG191.05-PLAY.C v 1.0 By P. Canniff. Sound Effects Library (Cann86).
Routines to play music from an ASCII representation of a musical
score. ->sound.c. [MS-DOS v. 2.xx:Aztec, Lattice, Ecosoft]

CUG191.06-CLINK80.C v 1.0 By P. Emerson. Source Linker C/80 version.
Sound linker program which appends source code library functions onto
the end of a main program. ->clink.c. [MS-DOS v. 2.xx:Toolworks]
Toolworks C/80 specific.

CUG191.07-SOUNDINT.ASZ v 1.0 By P. Canniff. Sound Effects interrupt
routines. ->sound.c. [MS-DOS v. 2.xx:Aztec]

CUG191.08-DELAY.ASZ v 1.0 By P. Canniff. Sound Effects delay loop.
->sound.c. [MS-DOS v. 2.xx:Aztec]

CUG191.09-SOUNDINT.ASE v 1.0 By P. Canniff. Sound Effects interrupt
routines. ->sound.c. [MS-DOS v. 2.xx:Ecosoft]

CUG191.10-DELAY.ASE v 1.0 By P. Canniff. Sound Effects delay loop.
->sound.c. [MS-DOS v. 2.xx:Ecosoft]

CUG191.11-SOUNDINT.ASL v 1.0 By P. Canniff. Sound Effects interrupt
routines. ->sound.c. [MS-DOS v. 2.xx:Lattice]

CUG191.12-DELAY.ASL v 1.0 By P. Canniff. Sound Effects delay loop.
->sound.c. [MS-DOS v. 2.xx:Lattice]

CUG191.13-SOUNDTST.C v 1.0 By P. Canniff. Sample sound effects
program. ->sound.c. [MS-DOS v. 2.xx:Aztec, Lattice, Ecosoft]

CUG191.14-CLINK.DOC v 1.0 By P. Emerson. Source linker documentation.
->clink.c. [MS-DOS v. 2.xx:]

CUG191.15-SOUND.DOC

CUG191.16-CLINK.C v 1.0 By P. Emerson. Source code linker (Emer86). A
source linker program which appends source code library functions onto
the end of a main program. The portability of this version has been
improved. ->clink80.c, clink.duc, porting.doc, testc.b, usrlib.c,
libkey.b, testc.c. [MS-DOS:Toolworks]

CUG191.17-CFLOW.C v 1.0 By J. Herbold. Function Abstructor (Herb86).
Abstracts C function calls and declarations from a source file.
Produces a listing of the programs calling hierarchy. [MS-DOS:]

CUG191.18-SPKRCTL.C v 1.0 By P. Canniff. Sound Effects speaker control
routines. Speaker control routines for the sound effects library.
->sound.c. [MS-DOS v. 2.xx:Aztec, Lattice, Ecosoft]

CUG191.19-PORTING.DOC v 1.0 By P. Emerson. Source code linker
(Emer86). Documentation on porting the source linker program.
->clink.c. [MS-DOS v. 2.xx:]

CUG191.20-TESTC.B v 1.0 By P. Emerson. Source code linker (Emer86).
Sample main program illustrating use of linker. ->clink.c. [MS-DOS v.
2.xx:Toolworks]

CUG191.21-USRLIB.B v 1.0 By P. Emerson. Source code linker (Emer86). A
sample source library file for use with the linker. ->clink.c. [MS-DOS
v. 2.xx:Toolworks]

CUG191.22-LIBKEY.B v 1.0 By P. Emerson. Source linker sample index. A
sample index file produced by the linker program. ->clink.c. [MS-DOS
v. 2.xx:Toolworks]

CUG191.23-TESTC.C v 1.0 By P. Emerson. Source linker example results.
Sample result source file which the linker produces using the library
and definition files on this disk. ->clink.c. [MS-DOS v.
2.xx:Toolworks]

CUG191.24-SOUND.C v 1.0 By P. Canniff. Sound Effects Library (Cann86).
Complete library of routines necessary for musical sound effects on PC
compatible computers. Excellent documentation. Code for three
assemblers provided. ->sound.txt, soundp.h, sound.h, soundout.c,
soundctl.c, play.c, spkrctl.c, sountint.as, delay.as, delay.c.
[MS-DOS:Aztec, Lattice, Ecosoft]

CUG191.25-DEMO.PRM v 1.0 By G. Woodley. Window Helpers sample form.
[MS-DOS v. 2.xx:]

CUG191.26-DEMO.C v 1.0 By G. Woodley. Window Helpers demo program.
[MS-DOS v. 2.xx:Microsoft] Requires C Window Object routines.

CUG191.27-W-CHATTR.C v 1.0 By G. Woodley. Window Helpers change
attribute. Changes the attributes of a message in a McVicar C window.
Object code only is given for the C Windowing Toolbox. ->CUG167
[MS-DOS v. 2.xx:Microsoft] Requires C Window object routines.

CUG191.28-C-WDEF.H v 1.0 By G. Woodley. Window Helpers include file.
[MS-DOS v. 2.xx:Microsoft] Requires C Window object routines.

CUG191.29-STD.H v 1.0 By G. Woodley. Window Helpers include file.
Include file for all window Helper functions. [MS-DOS v.
2.xx:Microsoft]

CUG191.30-SOUND.TXT v 1.0b By P. Canniff. Sound Effects documentation.
Contains extensive instructions for using the sound effects routines,
as well as a good discussion on porting the code to other compilers.
->sound.c. [MS-DOS:]

CUG191.31-DEMO.EXE

CUG191.32-DEMO.OBJ

CUG191.33-DELAY.C v 1.0 By P. Canniff. Sound Effects Library delay
loop. ->sound.c. [MS-DOS v. 2.xx:Aztec, lattice, Ecosoft]

CUG191.34-LL.BAT

CUG191.35-C-WINDOW.OBJ

CUG191.36-W-CHATTR.OBJ

CUG191.37-W-FORM.OBJ

CUG191.38-CFLOW.EXE

CUG191.39-CONTENTS.DSK

CUG191.40-SUBMIT.DSK

CUG191.41-W-FORM.C v 1.0 By G. Woodley. McVlicar C_Window Helpers
(Wood86). Fills a McVicar window with a form defined in an ASCII file.
Object code only is given for the C Windowing Toolbox. A small sample
demo program is included. ->demo.c, demo.frm, c-wdef.h, std.1, CUG167.
[MS-DOS:Microsoft] Requires C Window object routines.

==============================================================================
CUG192 -
-----------

CUG192.01-BAWKACT.C v 1.0 By B. Brodt. BAWK actions compiler.
->bawk.c. [CP/M:BDS]

CUG192.02-BAWKDO.C v 1.0 By B. Brodt. BAWK actions interpreter.
->bawk.c. [CP/M:BDS]

CUG192.03-BAWK.DOC v 1.0 By B. Brodt. BAWK documentation. Use of the
program is fully described. ->bawk.c.

CUG192.04-BAWKPAT.C v 1.0 By B. Brodt. BAWK regular expression
interpreter. ->bawk.c. [CP/M:BDS]

CUG192.05-COLOR.C v 1.0 By M. Yokoyama. MSBASIC-like Color Command
(Yoko86). A color command which controls the screen color on PC
compatible computers. Command use and syntax follows the Microsoft
BASIC color command. [MS-DOS:Microsoft] Requires ANSI.SYS device
driver.

CUG192.06-COLOR.DOC v 1.0 By M. Yokoyama. Color Command documentation.
->color.c.

CUG192.07-BAWKSYM.C v 1.0 By B. Brodt. BAWK support module. Contains
the BAWK built in C action functions, the variable declaration
routines, and the stack management routines. ->bawk.c. [CP/M:BDS]

CUG192.08-TDS.C v 1.0 By N. Deasy. Terminal Digit Sort (Deas86). TDS
will sort data records based on the terminal digit in the record
number. Used in a hospital medical records department to sort patient
medical records. [MS-DOS v. 2.xx:Ecosoft]

CUG192.09-RS232EXP.C v 1.0 By J. Kilar. RS232 Diagnostic Helper
(Kila86). He)ps diagnose problems with the RS232 serial port.
[MS-DOS:DeSmet]

CUG192.10-SGREP.DOC v 1.0 By J. McKeon. SGREP documentation.
->sgrep.c.

CUG192.11-KILARUTL.DOC v 1.0 By J. Kilar. Kilar Floppy Disk Utilities
(Kila86). Documentation for the Kilar Floppy Disk Utilities.
->kilar.c. [MS-DOS:DeSmet]

CUG192.12-TDS.OBJ

CUG192.13-TDS.EXE

CUG192.14-CONTENTS.DSK

CUG192.15-BAWK.C v 1.0 By B. Tool (Brod86). BAWK scans text Brodt.
BAWK Text Pattern/Action files for regular expression patterns and
executes a user defined action (C code fragment) for each specified
pattern found. descended from the the DECUS version of the same
program. ->bawk.h, bawk.doc, bawkact.c, bawkdo.c, bawkpat.c,
bawksym.c. [CP/M:BDS]

CUG192.16-PF.BC v 1.0 By J. McKeon. BC to C Translator (McKe86).
Translates a BASIC-like BC language into C. [MS-DOS v. 2.xx:] Requires
files sgrep.exe and bc.bat.

CUG192.17-PROGS.BC v 1.0 By J. McKeon. BC example input. ->pf.bc.
[MS-DOS v. 2.xx:]

CUG192.18-SGREP.EXE

CUG192.19-PROGS.C v 1.0 By J. McKeon. BC example result. ->pf.bc.
[MS-DOS v. 2.xx:Ecosoft]

CUG192.20-BC.H v 1.0 By J. McKeon. BC include file. ->pf.bc. [MS-DOS
v. 2.xx:Ecosoft]

CUG192.21-BC.BAT v 1.0 By J. McKeon. BC batch file. ->pf.bc. [MS-DOS
v. 2.xx:]

CUG192.22-RS232EXP.DOC v 1.0 By J. Kilar. RS232 Helper documentation.
->rs232exp.c. [MS-DOS v. 2.xx:DeSmet]

CUG192.23-COMPFILE.DOC v 1.0 By J. Kilar. File Comparator
documentation. ->compfile.c. [MS-DOS v. 2.xx:DeSmet]

CUG192.24-MKVOLUME.C v 1.0 By J. Kilar. Disk Volume Labeller (Kila86).
Installs a volume label on a floppy disk. [MS-DOS v. 2.xx:DeSmet]

CUG192.25-MKVOLUME.DOC v 1.0 By J. Kilar. Disk Labeller documentation.
->mkvolume.c. [MS-DOS v. 2.xx:DeSmet]

CUG192.26-COMPFILE.C v 1.0 By J. Kilar. Simple File Comparator
(Kila86). Detects first different byte in two files. [MS-DOS v.
2.xx:DeSmet]

CUG192.27-KILARUTL.C v 1.0 By J. Kilar. Kilar Floppy Disk Utilities
(Kila86). A set of simple utilities for floppy disks containing no
subdirectories. Functions include saving a sector as a file,
identifying the file owning a sector, and modifying the contents of a
sector. [MS-DOS:DeSmet]

CUG192.28-RS232EXP.EXE

CUG192.29-COMPFILE.EXE

CUG192.30-MKVOLUME.EXE

CUG192.31-KILARUTL.EXE

CUG192.32-SECTORA.A v 1.0 By J. Kilar. Kilar Utilities Support Module.
->kilarutl.c. [MS-DOS:DeSmet]

CUG192.33-SGREP.C v 1.0 By J. McKeon. SGREP Text Pattern Replacer
(McKe86). Is a modified version of the CUG152 grep program, with the
added features of string substitution, multiple pattern search, case
sensitivity, and scanning option. ->sgrep.doc. [MS-DOS:Eco-C88, C/86]

CUG192.34-SUBMIT.DSK

CUG192.35-BAWK.H v 1.0 By B. Brodt. BAWK include file. ->bawk.c.
[CP/M:BDS]

==============================================================================
CUG193 -
-----------

CUG193.01-FV.C v 1.0 By F. Scacchitti. File Viewer and Comparator
(Scac85). Displays file contents on screen in hex or ASCII. Also will
compare two files and dump the xor'd difference to the screen.
[CP/M:Small C v. 2.1]

CUG193.02-CYPHER2.C v 1.0 By F. Scacchitti. Cryptographers Toolbox
part 2. Complex encyphering algorithm from DDJ article. ->cypher.c.
[CP/M:Small C v. 2.1]

CUG193.03-CY1.COM

CUG193.04-CY2.COM

CUG193.05-CY3.COM

CUG193.06-CYPHER3.C v 1.0 By F. Scacchitti. Cryptographers Toolbox
part 3. Complex encyphering and transposition algorithms described in
DDJ. ->cypher.c. [CP/M:Small C v. 2.1]

CUG193.07-SP.C v 1.0 By F. Scacchitti. Repetitive Pattern Finder
(Scac85). Searches file for repetitive patterns and gives some idea of
location and depth of repeating pattern. [CP/M:Small C v. 2.13]

CUG193.08-FSTAT.C v 1.0 By F. Scacchitti. File Statistics Program
(Scac85). Calculates distribution of characters in a flle, displaying
mean, mode, median, and range of file. Also displays histogram of
character distribution. [CP/M:Small C v. 2.1]

CUG193.09-MAKEF.C v 1.0 By F. Scacchitti. File Generator (Scac85).
Creates a file of arbitrary length containing either a single
character type or the pattern 0-255. Useful for testing file
compression and encryption programs. [CP/M:Small C v. 2.1]

CUG193.10-SETATR.C v 1.0 By P. Cogar. Set File Attributes (Coga86).
Sets file attribute bits for backup tools. ->setatr.h, pec.h.
[CP/M:BDS]

CUG193.11-FSTAT.COM

CUG193.12-PEC.H v 1.0 By P. Cogar. Cogar tools include file.
->setatr.c, setatr.h. [CP/M:BDS]

CUG193.13-FV.COM

CUG193.14-CRYPT.DOC v 1.0 By F. Scacchitti. Cryptographers Toolbox
documentation. ->cypher.c.

CUG193.15-MAKEF.COM

CUG193.16-CYPHER.C v 1.0 By F. Scacchitti. Cryptographers Toolbox part
0. A shell program which calls encyphering subroutines developed
according to the DDJ article. "Infinite Key Encryption Systsm",
August, 1984. ->crypt.doc, cypherl.c, cypher2.c, cypher3.c.
[CP/M:Small C v. 2.1]

CUG193.17-SP.COM

CUG193.18-SETATR.DOC v 1.2 By P. Cogar. Set File Attributes
Documentation. ->setatr.c.

CUG193.19-BACKUP.C v 1.3 By P. Cogar. CP/M File Backup Utility
(Coga86). Archives all files whose archive bit is not set. [CP/M:BDS]

CUG193.20-SETATR.CRL

CUG193.21-SETATR.COM

CUG193.22-BACKUP.TXT v 1.3 Backup Utility Documentation. ->backup.c.

CUG193.23-LISTFILE.C v 1.2 By P. Cogar. CPSM File Printer Utility
(Coga86). Sends a file to the printer, paginating it and adding page
numbers and a header label. [CP/M:BDS]

CUG193.24-BACKUP.CRL

CUG193.25-BACKUP.COM

CUG193.26-DEFF3.C v 1.0 BDS C Library Functions (Coga86). Various (35)
library functions for BDS C under CP/M 2.2. ->deff3.txt, deff4.c.
[CP/M:BDS]

CUG193.27-LISTFILE.CRL

CUG193.28-LISTFILE.COM

CUG193.29-DEFF3.TXT v 1.0 Deff3 Documentation. ->deff3.c.

CUG193.30-DEFF4.C v 1.0 BDSC Library Functions Part 2. Eleven
miscellaneous functions. ->deff3.c. [CP/M:BDS]

CUG193.31-DEFF3.CRL

CUG193.32-DEFF4.TXT v 1.0 By P. Cogar. Deff4 Documentation. ->deff4.c,
deff3.c.

CUG193.33-DEFF4.CRL

CUG193.34-CONTENTS.DSK

CUG193.35-SUBMIT.DSK

CUG193.36-CYPHER1.C v 1.0 By F. Scacchitti. Cryptographers Toolbox
part 1. Simple encyphering algorithm from DDJ article. ->cypher.c.
[CP/M:Small C v. 2.1]

==============================================================================
CUG194 -
-----------

CUG194.01-DEF.H By Hakuo Katayose. Definitions for Software Tools.
[CP/M:BDS v. 1.5]

CUG194.02-ARCHIVE.COM

CUG194.03-BDSCIO.H

CUG194.04-CATO.COM

CUG194.05-CAT1.COM

CUG194.06-CMP.COM

CUG194.07-CMPRS.COM

CUG194.08-CATALOG.017 By Hakuo Katayose. Table of Contents. Programs
from the book 'Software Tools. Rewritten for BDS C. Identical to
Japanese Users' Croup Volume 17. [CP/M:BDS v. 1.5]

CUG194.09-TRANSLIT.C By Hakuo Katayose. Map Characters. Perform
substititions in stream on character by character basis. ->TR.COM.
[CP/M:BDS v. 1.5]

CUG194.10-CONCAT1.C By Hakuo Katayose. Concatenate Files. ->CAT1.COM,
CONCATO.C. [CP/M:BDS v. 1.5]

CUG194.11-MSORT.C By Hakuo Katayose. Sort Text in Memory. [CP/M:BDS v.
1.5] Didn't work for CUG editor.

CUG194.12-DETAB.C By Hakuo Katayose. Convert Tabs to Blanks. [CP/M:BDS
v. 1.5]

CUG194.13-COUNT.COM

CUG194.14-CRC.COM v 5.0 Compute CRC. Produces cyclic redundancy code
for named files. [CP/M:]

CUG194.15-CRYPT1.C By Hakuo Katayose. Encrypt Decrypt -Binary. Like
crypto but extended to handle binary files. ->CRYPTO.C. [CP/M:BDS v.
1.5]

CUG194.16-CRYPTO.COM

CUG194.17-STDIO.H By Hakuo Katayose. Standard I/O Definitions. More
K&R compatible replacement for bdscio.h. [CP/M:BDS v. 1.5]

CUG194.18-CRYPT1.COM

CUG194.19-COMPRESS.C By Hakuo Katayose. Compress File. Reduce file
size through run-length coding. ->CMPRS.COM EXPAND.C. [CP/M:BDS v.
1.5]

CUG194.20-CONCATO.C By Hakuo Katayose. Concatenate Files. ->CATO.COM,
CONCAT1.C. [CP/M:BDS v. 1.5]

CUG194.21-ENTAB.C By Hakuo Katayose. Convert Blanks to Tabs. [CP/M:BDS
v. 1.5]

CUG194.22-DETAB.COM

CUG194.23-PAT.C By Hakuo Katayose. String and Pattern-Matching
Functions. [CP/M:BDS v. 1.5]

CUG194.24-ENTAB.COM

CUG194.25-OVERSTRK.C By Hakuo Katayose. Overstrike Without Bdckspdce.
Filters backspaces from a text file, inserting extra (CR only
terminated) lines to achieve overstrike on printers without backspace.
[CP/M:BDS v. 1.5]

CUG194.26-EXPND.COM

CUG194.27-JUGPDS.FRM

CUG194.28-EXPAND.C By Hakuo Katayose. Restore Compressed File.
->COMPRESS.C, EXPANO.COM. [CP/M:BDS v. 1.5]

CUG194.29-MSORT.COM

CUG194.30-COUNT.C By Hakuo Katayose. Count Chars Lines and Words.
->wc.c. [CP/M:BDS v. 1.5]

CUG194.31-OVERSTRK.COM

CUG194.32-DEFF3.C By Hakuo Katayose. Library Functions. [CP/M:BDS v.
1.5] Needed by most programs on this disk.

CUG194.33-PAT.CRI,

CUG194.34-CRYPTO.C By Hakuo Katayose. Encrypt and Decrypt Text. Uses
the simple exclusive-or cipher described in 'Software Tools'. For text
files only. ->CRYPT1.C. [CP/M:BDS v. 1.5]

CUG194.35-SWTOOLS.DOC By Hakuo Katayose. Software Tools Documentation.
Notes on translating the original Ratfor to C. Cross reference to text
of book 'Software Tools'. A few notes on usage.

CUG194.36-TR.COM

CUG194.37-COMPARE.C By Hakuo Katayose. Compare Files. ->CMP.COM.
[CP/M:BDS v. 1.5]

CUG194.38-CRCKLIST.017

CUG194.39-ARCHIVE.C By Hakuo Katayose. Archive File Maintainer. From
JUGPDS Vol. 17. [CP/M:BDS v. 1.5]

==============================================================================
CUG195 -
-----------

CUG195.01-CHANGE.C By Hakuo Katayose. Replace Strings. Replaces each
occurrsnce of the 'from' pattern with a 'to' string. ->CUG194. [CP/M:
BDS v. 1.5] Requires deff3.c, pat.c def.h and stdio.h from CUG194.

CUG195.02-@D.COM

CUG195.03-DOCTOR3.C By Hakuo Katayose. Disk Doctor for CP/M Plus.
->CUG194. [CP/M Plus:BDS v. 1.5] Requires deff3.c, pat.c def.h and
stdio.h from CUG194.

CUG195.04-CHANGE.COM

CUG195.05-CRC.COM v 5.0 Compute CRC. Produces cyclic redundancy code
for named files. [CP/M:]

CUG195.06-DISPLAY.CRL

CUG195.07-DISPLAY.CSM By Hakuo Katayose. Disk Doctor Support. Assembly
functions for @D.C. ->CUG194, @D.C. [CP/M:BDS v. 1.5] Requires
deff3.c, pat.c def.h and stdio.h from CUG194.

CUG195.08-FORMAT.C By Hakuo Katayose. Text Formatter. Dot command text
formatter from Software Tools. ->CUG194. [CP/M:BDS v. 1.5] Requires
deff3.c, pat.c, def.h and stdio.h from CUG194.

CUG195.09-DOCTOR.COM

CUG195.10-FIND1.C By Hakuo Katayose. Find Patterns in Text. ->CUG194,
FINDO.C. [CP/M:BDS v. 1.5] Requires deff3.c, pat.c, def.h, and stdio.h
from CUG194.

CUG195.11-MACRO.C By Hakuo Katayose. Macro Pre-processor. Expands
parameterized macros. ->CUG194, M4.COM, TEST.M4, TEST.ANS. [CP/M:BDS
v. 1.5] Requires deff3.c, pat.c, def.h, and stdio.h from CUG194.

CUG195.12-FINDO.COM

CUG195.13-KWIC.C By Hakuo Katayose. Create Keyword in Context Index.
->CUG194, UNROT.C. [CP/M: BDS v. 1.5] Requires deff3.c, pat.c, def.h,
and stdio.h from CUG194.

CUG195.14-FIND1.COM

CUG195.15-UNROT.C By Hakuo Katayose. KWIC Support Utility. Rotates
text lines, creating copies that start with each word in the oriqinal
line. ->CUG194, KWIC.C. [CP/M:BDS v. 1.5] Requires deff3.c, pat.c
def.h and stdio.h from CUG194.

CUG195.16-FORMAT.COM

CUG195.17-FRQNCY.C By Hakuo Katayose. Produce Word Frequency List.
->CUG194. [CP/M:BDS v. 1.5] Requires deff3.c, pat.c, def.h, and
stdio.h from CUG191.

CUG195.18-FRQNCY.COM

CUG195.19-SORT.C By Hakuo Katayose. Sort Text Lines in memory.
->CUG194. [CP/M:BDS v. 1.5] Requires deff3.c, pat.c, def.h, and
stdio.h from CUG194. Didn't work for JUG reviewer.

CUG195.20-KWIC.COM

CUG195.21-M4.COM

CUG195.22-UNIQUE.C By Hakuo Katayose. Delete Duplicate Lines.
->CUG194, KWIC.C. [CP/M:BDS v. 1.5] Requires deff3.c, pat.c, def.h,
and stdio.h from CUG194.

CUG195.23-READ-ME.018

CUG195.24-@D.C By Hakuo Katayose. Directory With Statistics. Directory
lister which searches all user numbers and supplies stat-like
information with each file name. Filenames are sorted. An application
of frqncy.c. ->CUG194. [CP/M:BDS v. 1.5] Requires deff3.c, pat.c,
def.h, and stdio.h from CUG194.

CUG195.25-STDIO.H

CUG195.26-TEST.ANS

CUG195.27-TEST.M4

CUG195.28-DOCTOR.C By Hakuo Katayose. Disk Doctor. Allows sector by
sector editing of disk. ->CUG194. [CP/M:BDS v. 1.5] Requires deff3.c,
pat.c, def.h and stdio.h from CUG194.

CUG195.29-UNIQUE.COM

CUG195.30-CATALOG.018 By Hakuo Katayose. Table of Contents. ->CUG194.

CUG195.31-UNROT.COM

CUG195.32-CRCKLIST.018

CUG195.33-FINDO.C By Hakuo Katayose. Find Patterns in Text. ->CUG194,
FIND1.C. [CP/M:BDS v. 1.5] Requires deff3.c, pat.c, def.h and stdio.h
from CUG194.

==============================================================================
CUG196 -
-----------

CUG196.01-FP-TEST.C By Hakuo Katayose. Floating Point Demonstration.
[CP/M:BDS v. 1.5]

CUG196.02-BIT-NP01.DOC By Toshiya Ohta. Answers to Nano-Pico Quizzes.
[CP/M:] In FORTRAN-80.

CUG196.03-BIT78031.COM

CUG196.04-BIT78031.FOR By Toshiya Ohta. Answers to Nano-Pico Quizzes.
[CP/M:] In FORTRAN-80.

CUG196.05-BIT78032.COM

CUG196.06-BIT78032.FOR By Toshiya Ohta. Answers to Nano-Pico Quizzes.
[CP/M:] In FORTRAN-80.

CUG196.07-BIT78061.COM

CUG196.08-BIT78061.FOR By Toshiya Ohta. Answers to Nano-Pico Quizes.
[CP/M:] In FORTRAN-80.

CUG196.09-BTREE.C By Hakuo Katayose. B-tree Functions. Search, Insert
and delete on a B-tree, a'la book 'Algorithms + Data Structures -
Programs'. [CP/M:BDS v. 1.5]

CUG196.10-C-STRING.MAC By Edward McDermont. Optimized String
functions. Assembly language versions of strcpy, strinit, strlen and
cmatch. [CP/M:] Uses Z80 mnemonics.

CUG196.11-CRC.COM v 5.0 Compute CRC. Produces cyclic redundancy code
for named files. [CP/M:]

CUG196.12-DX.COM

CUG196.13-FP-MATH.DOC By Hakuo Katayose. Floating Point Documentation.
->FP128.CSM EP64.CSM. BDS v. 1.5]

CUG196.14-FP-TEST.COM

CUG196.15-FP128.ASM By Hakuo Katayose. ASM Version of FP128.CSM.
[CP/M:BDS v. 1.5]

CUG196.16-FP128.CSM By Hakuo Katayose. Floating Point Package 128 bit.
->FP64.CSM. [CP/M:BDS v. 1.5]

CUG196.17-FP64.CRL

CUG196.18-FP64.CSM By Hakuo Katayose. Floating Point Package 64 bit. A
single omnibus function for floating point arithmetic. Both 64 bit and
128 bit versions supplied. Cordic Algorithm used for trigonometric
functions. Table look up methods for square root and exponential.
->FP128.CSM, FP-MATH.DOC, FP-TEST.C. [CP/M:BDS v. 1.5] Uses Z80 code.

CUG196.19-JUGPDS.FRM

CUG196.20-CRCKLIST.019

CUG196.21-CATALOG.019 By Hakuo Katayose. Table of Contents.

CUG196.22-SIERP.C By Hakuo Katayose. Sierpinski Cure for Epson MP-100.
[CP/M:BDS v. 1.5]

==============================================================================
CUG197 -
-----------

MICRO EMACS v3.9 EXE & DOC
By Daniel M. Lawrence, David G. Con Roy. [public] 1 disk. MicroEMACS
is a micro implementation of the EMACS editor. Source code is on
CUG198, documentation and executable on CUG197. MicroEMACS allows
several files to be edited at the same time. The screen can be split
into different windows, and text may be moved freely from one window
to the next. Depending on the type of file being edited, MicroEMACS
can change how it behaves to make editing simple. Editing standard
text files, program files and wordprocessing documents are all
possible at the same time. For complex repetitive tasks, editing
macros can be written. Special features are also available to perform
a diverse set of operations such as file encryption, automatic backup
file generation, entabbing and detabbing lines, executing DOS commands
and filtering text through other programs (e.g. SORT to allow sorting
text). MicroEMACS can be used with Micro SPELL (CUG248) to create a
system that scans through a file, displaying each questionable word as
part of an edit screen.

CUG197.01-AMIGA.RC command
Amiga version of the startup file for MicroEMACS.

CUG197.02-AZMAP.CMD command
MicroEMACS Macro file to translate an AZTEC C .SYM map file into the
form needed to read it into ADDSYMS to be used with Pheonix's PFIX
plus (C) debugger.

CUG197.03-BDATA.CMD command
Creates a block of data statements for BASIC programs.

CUG197.04-BLOCK.CMD command
Rectangular region cut & paste macros.

CUG197.05-BOXMAC.CMD command
By Daniel M. Lawrence, Suresh Konda. Standard Micro Startup Box
drawing macroes for MicroEMACS.

CUG197.06-COMP link
By J. Manzai. Compiler and Link Specified Source Files. This shell
script eases the compiling and linking of source code, especially when
needing to link several libraries. This shell script should be used in
conjunction with an Emacs start-up file ".emacsrc". => EMACSRC.

CUG197.07-EMACS.HLP doc
online help file.

CUG197.08-EMACS.RC command
Standard startup file for MicroEMACS.

CUG197.09-EMACS.TUT doc
By Brian Straight, Daniel M. Lawrence. EMACS tutorial.

CUG197.10-EMACS.TXT doc
By Brian Straight, Daniel M. Lawrence. EMACS beginners reference
manual.

CUG197.11-EMACSRC command
By J. Manzai. Modified startup file for MicroEMACS. Disables the
bind/unbind key function and modifies the indentation macros to handle
tabs correctly. This startup file should be used with the file COMP.=>
COMP.

CUG197.12-FINDCOM.CMD command
Finds mismatched C comments.

CUG197.13-FUNC.CMD command
Allows mainframe systems like UNIX to simulate function keys.

CUG197.14-INDENT.CMD command
In/undent region & reformat indented paragraph macros.

CUG197.15-ME110.RC command
HP110 version of the startup file for MicroEMACS.

CUG197.16-ME150.RC command
HP150 version of the startup file for MicroEMACS.

CUG197.17-MEIBM.EXE executable
IBM-PC CGA/MONO/EGA version.

CUG197.18-MENU.CMD command
Sample menu learning system for MicroEMACS 3.7. This file is executed
to activate MicroEMACS's menu interface code.

CUG197.19-MENU1 data
Text for MicroEMACS menus.

CUG197.20-README doc
By Daniel M. Lawrence. EMACS file overview and list of new features
since v. 3.8i.

CUG197.21-TRAND.CMD command
Generates random numbers and does statistics on them.

==============================================================================
CUG198 -
-----------

MicroEMACS Editor Source
By Daniel M. Lawrence, David G. Conroy. [public] 2 disks. Source code
for MicroEMACS, documentation and executable in CUG volume 197.

CUG198.01-ANSI.C source
The routines in this file provide support for ANSI style terminals
over a serial line. The serial I/O services are provided by routines
in "termio.c". It compiles into nothing if not a ANSI style device. =>
TERMIO.C.

CUG198.02-BADER.DOC doc
By William Bader. Documentation for the changes made by William Bader
to allow function key use with VT100 terminals and further
modifications to escape sequences.

CUG198.03-BASIC.C source
Basic cursor movement.

CUG198.04-BIND.C source
Key binding commands.

CUG198.05-BUFFER.C source
Buffer manipulation commands.

CUG198.06-CRYPT.C source
By Daniel M. Lawrence, Dana Hoggatt. Encryption functions.

CUG198.07-DG10.C source
Data General 10 terminal driver.

CUG198.08-DISPLAY.C source
The functions in this file handle redisplay. There are two halves, the
ones that update the virtual display screen, and the ones that make
the physical display screen the same as the virtual display screen.
These functions use hints that are left in the windows by the
commands.

CUG198.09-DOLOCK.C source
File locking subroutines.

CUG198.10-EBIND.H header
Initial default key to function binding list.

CUG198.11-EDEF.H header
By Daniel M. Lawrence, David G. Conroy, Steve Wilhite, George Jones.
Global variable declarations.

CUG198.12-EFUNC.H header
This file lists all the C code functions used by MicroEMACS and the
names to use to bind keys to them. To add functions declare it here in
both the extern function list and the name binding table.

CUG198.13-EMACS.C source
The routine in this file is just a main program. For the callable
interface, the main program must be in its own file. => MAIN.C.

CUG198.14-EMACS.KEY doc
List of default key bindings.

CUG198.15-EPATH.H header
Help files default path settings for various operating systems.

CUG198.16-ESTRUCT.H header
Configuration and structure definitions. [VAX/VMS, Amiga, UNIX/XENIX,
CP/M-86, Macintosh, MS-DOS: TC, MSC, LC, MSC5, DLC, LC3, DECUS C]

CUG198.17-EVAL.C source
Expression evaluator.

CUG198.18-EVAR.H header
Environment and user macro variable declarations.

CUG198.19-EXEC.C source
This file is for functions dealing with execution of commands, command
lines, buffers, files and startup files.

CUG198.20-FILE.C source
The routines in this file handle the reading, writing and lookup of
disk files. All of details about the reading and writing of the disk
are in"fileio.c". => FILEIO.C.

CUG198.21-FILEIO.C source
All of the details about the reading and writing of the disk are here.
=> FILEIO.C.

CUG198.22-HP110.C source
HP110 screen driver. => TERMIO.C.

CUG198.23-HP150.C source
HP150 screen driver. => TERMIO.C.

CUG198.24-IBMPC.C source
IBM-PC CGA and monochrome screen driver. => TERMIO.C.

CUG198.25-INPUT.C source
Low level user input driver.

CUG198.26-ISEARCH.C source
The functions in this file implement commands that perform incremental
searches in the forward and backward directions. This "ISearch"
command is intended to emulate the same command from the original
EMACS implementation (ITS). Contains references to routines internal
to SEARCH.C. => SEARCH.C.

CUG198.27-LINE.C source
The functions in this file are a general set of line management
utilities. They are the only routines that touch the text. They also
touch the buffer and window structures, to make sure that the
necessary updating gets done.

CUG198.28-LOCK.C source
File locking functions.

CUG198.29-MAIN.C source
This file contains the main driving routine, and some keyboard
processing code, for the MicroEMACS screen editor.

CUG198.30-MAKEFILE make
DOS make file.

CUG198.31-MENU.C source
Menu processor. => MENU.CMD, MENU1.

CUG198.32-RANDOM.C source
Command processing functions for an unordered collection of emacs
commands.

CUG198.33-REGION.c source
Region cut and paste functions.

CUG198.34-SEARCH.C source
Search and replace functions.

CUG198.35-SPAWN.C source
operating system interface driver.

CUG198.36-ST520.C source
The routines in this file provide support for the Atari 520 or 1040ST
using VT52 emulation. The I/O services are provided here as well. It
compiles into nothing if not a 520ST style device.

CUG198.37-TCAP.C source
Unix V5, V7 and BS4.2 Termcap video driver.

CUG198.38-TERMIO.C source
The functions in this file negotiate with the operating system for
characters, and write characters in a barely buffered fashion on the
display. All operating systems.

CUG198.39-TIPC.C source
The routines in this file provide support for the TI-PC and other
compatible terminals. It goes directly to the graphics RAM to do
screen output. It compiles into nothing if not a TI-PC driver.

CUG198.40-UNIX.MK make
UNIX make file.

CUG198.41-VMSVT.C source
Advanced VMS terminal driver.

CUG198.42-VT52.C source
The routines in this file provide support for VT52 style terminals
over a serial line. The serial I/O services are provided by routines
in "termio.c". It compiles into nothing if not a VT52 style device. =>
TERMIO.C.

CUG198.43-WINDOW.C source
Window manipulation functions. Some of the functions are internal, and
some are attached to keys that the user actually types.

CUG198.44-WORD.C source
Word and paragraph manipulation functions.

CUG198.45-Z309.C source
Zenith 1 OO PC series terminal driver.

==============================================================================
CUG199 -
-----------

CUG199.01-GED.H v 1.0 By Tearle, Haefner, Gilbert. GED definitions.
->ged.c. [MS-DOS: DeSmet]

CUG199.02-GED.EXE

CUG199.03-RAKU.EXE

CUG199.04-GEDFUNCS.DOC v 1.0 By Tearle, Haefner, Gilbert. GED Source
code map. Lists contents and function of each source file in the GED
editor. ->ged.c.

CUG199.05-QED.DOC v 1.0 By Tearle, Haefner, Gilbert. GED
Documentation. Produced for original QED editor. GED specific
information is contained in the files GED.DOC and GEDFUNCS.DOC.
->ged.c.

CUG199.06-TERM.C v 1.0 By Tearle, Haefner, Gilbert. GED Terminal
Drivers. PC clone I/O routines for GED editor. Contains calls to
assembly routines in file pcio.a. -> ged.c, pcio.a. [MS-DOS: DeSmet]
Hardware specific.

CUG199.07-READ.ME v 1.0 By Tearle. GED Author's comments. ->ged.c.
[MS-DOS:DeSmet]

CUG199.08-RAKU.C v 1.0 RAKU Fortune Cookie program (Tearle85).
Displays a fortune similar to that found in a fortune cookie. Operates
from an ASCII data file of sayings. ->fortune.dat, raku.doc.
[MS-DOS:DeSmet]

CUG199.09-GED.DOC v 1.0 By Tearle, Haefner, Gilbert. GED auxiliary
documentation. ->ged.c.

CUG199.10-GED4.C v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 4. Find, alter, and repeat commands for the GED
editor. -> ged.c. [MS-DOS: DeSmet]

CUG199.11-GED5.C v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 5. File manipulation commands for the GED editor;
e.g. readfile, writefile. ->ged.c. [MS-DOS: DeSmet]

CUG199.12-GED2.C v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 2. Text changing routines for the GED editor; e.g.
move char, insert char. ->ged.c. [MS-DOS: DeSmet]

CUG199.13-GED10.C v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 10. File buffer functions for GED editor; e.g.
fcreate fclose. ->ged.c. [MS-DOS: DeSmet]

CUG199.14-GED6.C v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 6. Block operation commands for the GED editor.
->ged.c. [MS-DOS: Desmet]

CUG199.15-GED8.C v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 8. Text storage manipulation routines for the GED
editor; e.g. gettext, puttext. ->ged.c. [MS-DOS:DeSmet]

CUG199.16-GED7.C v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 7. Low level I/O functions for the GED editor.
Putch, Getch, etc. ->ged.c. [MS-DOS: DeSmet]

CUG199.17-GED.C v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 0. A screen editor descended from Gilbert's 'e'
(1981) through Haefner's qed. Somewhat like the Turbo Pascal editor.
Has few bugs. ->qed, pcio.a. [MS-DOS:DeSmet] Has a few bugs.

CUG199.18-GED9.C v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen sditor part 9. Virtual memory manager for GED editor; e.g. swap
out, page out. ->ged.c. [MS-DOS: DeSmet]

CUG199.19-GED3.C V 1.0 Ry Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 3. Screen I/O functions for the GED editor; e.g.
putline, resetcursor. ->ged.c. [MS-DOS:DeSmet]

CUG199.20-GED 1.0 v 1.0 By Tearle, Haefner, Gilbert. GED (nee QED)
screen editor part 1. DOS environment functions for GED editor; e.g.
printdirectory, dirmsk. ->ged.c. [MS-DOS;DeSmet]

CUG199.21-FORTUNE.DAT v 1.0 By Tearle. RAKU Fortunes. Approximately
170 fortunes which are displayed by the raku program. ->raku.c.
[MS-DOS: DeSmet]

CUG199.22-DEBUG.C

CUG199.23-RULER.C

CUG199.24-ALL.BAT

CUG199.25-LINK.BAT

CUG199.26-LINK.DAT

CUG199.27-RAKU.DOC v 1.0 By Tearle. RAKU documentation. ->raku.c.
[MS-DOS:DeSmet]

CUG199.28-SUBMIT.DSK

CUG199.29-PCIO.A v 1.0 By Tearle, Haefner, Gilbert. I/O functions for
GED editor. Assembly routines used by the GED screen editor. ->ged.c.

==============================================================================
CUG200 -
-----------

SCI - Small C Interpreter
This Small C interpreter by Robert Brodt (NJ) is a shareware package
available only as an executable image for PC-Clones and is accom
panied by two extensive documentation files. A useful learning aid.
[share2]

CUG200.01-CALC.SCI 1.5 source
By Bob Brodt. Sample infix notation calculator program => COPY.SCI.

CUG200.02-COPY.SCI 1.4 source
By Bob Brodt. Sample file copy program CALC.SCI.

CUG200.03-PROGRAM.MAN 1.5 doc
By Bob Brodt. Programmer's guide and tutorials for SCI. => USER.MAN.

CUG200.04-READ.ME doc
By Bob Brodt. Software registration info. [MS-DOS:]

CUG200.05-SCI.EXE 1.5 executable
Small C Interpreter. By Bob Brodt. A small C interpreter, designed to
introduce C. Includes a screen editor, & debugger. => USER.MAN
PROG.MAN. [MSDOS:] Requires 64K of memory.

CUG200.06-SHELL.SCI 1.5 source
By Bob Brodt. The command shell, written in SCl's dialect of C. =>
USER.MAN.

CUG200.07-USER.MAN doc
Small C Tutorial. By Bob Brodt. SCI users manual describing shell,
editor, language, library functions and debugger. => PROGRAM.MAN.

==============================================================================
CUG201 -
-----------

MS DOS System Support
Systems oriented programs and functions by Fred Whaley (CA), Don R.
Ridgway (FL), Richard Hilburger (OR), Brian Irvine (CA), and Dan Lewis
(CA). Includes support for MS-DOS device drivers written in Lattice C
small model; STAYRES which allows MS-DOS resident tasks to be written
in C for DeSmet; a collection of macros and function definitions which
support use of ANSI terminal control sequences tested with both
Microsoft and Lattice; enhanced versions of Lattice exe() and chai()
functions that support use of alternate shells; and functions that
handle interactive console input. [mixed]

CUG201.01-ANSIDEM2.EXE executable
By Don F. Ridgway. Demonstration of ANSI.SYS device drivers. =>
ANSISYS2.C ANSIDEMO.C. [MS-DOS: MSC 2.03, LC2. 15]

CUG201.02-ANSIDEMO.C source
By Don F. Ridgway. Demonstrate ANSI screen and keyboard functions. =>
ANSIDEMO.EXE ANSIREAD.DOC. [MS-DOS: MSC 2.03, LC2.15]

CUG201.03-ANSIDEMO.EXE executable
By Don F. Ridgway. => ANSIDEMO.C. [MS-DOS: MSC, LC]

CUG201.04-ANSIREAD.DOC doc
MS-DOS System Support. By Don F. Ridgway. Documentation for ANSI.SYS
device driver. => ANSISYS.C. [MS-DOS:]

CUG201.05-ANSISYS.C source
Graphics Driver. By Don F. Ridgway. A set of functions to facilitate
graphics on the screen (cursor, screen and extended keyboard
controls). => DRIVER.DOC. [MS-DOS: MSC 2.03, LC2.15]

CUG201.06-ANSISYS2.C source
By Don F. Ridgway. Defines a set of screen functions. Minor change for
Lattice C 3.00. => ANSIDEM2.EXE ANSIREAD.DOC. [MS-DOS: LC3.0]

CUG201.07-DRIVER.DOC doc
By Frank Whaley. Describes a method for using Lattice C to develop
installable device drivers for MS-DOS. => DRIVER.H DRIVER.LIB.
[MS-DOS:]

CUG201.08-DRIVER.H header
By Frank Whaley. Device driver header file. => DRIVER.DOC. [MS-DOS:
LC]

CUG201.09-DRIVER.LIB library
By Frank Whaley. Library of device drivers. => MHDR.ASM MONO.C
MAKEMON.BAT DRIVER.DOC. [MS-DOS:]

CUG201.10-EXECUTE.C source
By Dan Lewis. Defines enhanced exec() and chain() functions which look
for a program not only in the current directory, but also in the
current path. => EXECUTE.DOC. [MS-DOS: LC]

CUG201.11-EXECUTE.DOC doc
By Dan Lewis. => EXECUTE.C. [MS-DOS:]

CUG201.12-FDIRES.C 1.3 source
By Brian Irvine. TSR directory display program. => FDIRES.EXE
FDIRTSR.C STMES.C. [MS-DOS: DESMET]

CUG201.13-FDIRES.EXE executable
By Brian Irvine. => FDIRES.C. [MS-DOS:]

CUG201.14-FDIRTSR.C 1.2 source
By Brian Irvine. Define a TSR function. FDIRES.C. [MS-DOS: MSC 2.03,
LC2.15]

CUG201.15-HDR.ASM source
By Frank Whaley. Device driver library. => DRIVER.LIB DRIVER.H
DRIVER.DOC. [MSDOS:]

CUG201.16-KEYBD.C source
By Richard Hilburger. Direct keyboard input functions (inkey and
kbd_rdy) and sample program. => KEYBD.DOC. [MS-DOS: DES MET]

CUG201.17-KEYBD.DOC doc
By Richard Hilburger. Documentation for keyboard functions. =>
KEYBD.C. [MSDOS:]

CUG201.18-KEYBD.EXE executable
By Richard Hilburger. => KEYBD.C KEYBD.DOC. [MS-DOS: DESMET]

CUG201.19-MAKEMON.BAT batch
By Frank Whaley. Batch file for compiling and linking MONO.C. =>
MONO.C DRIVER.DOC. [MS-DOS:]

CUG201.20-MHDR.ASM 0.0 source
By Frank Whaley. Device driver library. DRIVER.LIB DRIVER.DOC.
[MS-DOS:]

CUG201.21-MONO.C source
By Frank Whaley. Example monochrome character device driver. =>
DRIVER.DOC. [MS-DOS: LC]

CUG201.22-NODUPE.C 1.1 source
By Brian Irvine. Avoid installing the same program twice. => FDIRES.C
STAYRES.DOC. [MS-DOS:]

CUG201.23-STAYRES.C 1.2 source
By Brian Irvine. An outline main() which includes all code necessary
for a terminate and stay resident program. main() may be modified or
linked externally to user's code. => STAYRES.DOC. [MS-DOS: DESMET, LC,
MSC 2.03] Requires DESMET C library functions, inline assembly code.

CUG201.24-STAYRES.DOC doc
By Brain Irvine. Documentation of the TSR program => STAYRES.C.
[MSDOS:]

==============================================================================
CUG202 -
-----------

Karel For MS-DOS
An MS-DOS version of Linda Rising's (IN) KAREL The Robot interpreter.
KAREL programs manipulate a robot and beepers. The Pascal-like
language introduces controls structures and structured design without
the complexity of data structures, types and expressions. This
implementation includes a syntax-directed editor and outputs calls and
tables which are linked to predefined C functions to build a program
simulator. It compiles under an early version of Microsoft. [public]

CUG202.01-KAREL.BAT batch
By Unda Rising. Batch file for Karel simulator. => KAREL1.C
README.DOC. [MS-DOS: MSC]

CUG202.02-KAREL.H header
By Unda Rising. Header file for Karel simulator. => KAREL1.C.
[MS-DOS:]

CUG202.03-KAREL1.C source
By Unda Rising. Source for Karel world builder. => KAREL1.EXE KAREL.H
UGUIDE.DOC CUG139 KED.C. [MS-DOS:]

CUG202.04-KAREL1.EXE executable
Karel the Robot. By Unda Rising. => KAREL1.C. [MS-DOS:]

CUG202.05-KED.C source
By Unda Rising. Part 1 of the source for syntax-directed editor. =>
KED2.C KED1.C KED.H. [MS-DOS:]

CUG202.06-KED.EXE executable
=> KED.C KAREL1.C KED2.C KED.H. [MS-DOS:]

CUG202.07-KED.H header
By Unda Rising. Header file for Ked editor. => KED.C KED2.C. [MS-DOS:
MSC]

CUG202.08-KED2.C source
By Unda Rising. Part 2 of source for syntaxdirected editor. _ KED.C
KED.H KED.EXE. [MS-DOS:]

CUG202.09-MENU.DOC doc
By Linda Rising. Commands for the Ked editor. => UGUIDE.DOC. [MS-DOS:]

CUG202.10-README.DOC doc
By Unda Rising. Notes on files and compilation instructions. =>
README2.DOC UGUIDE.DOC. [MS-DOS:]

CUG202.11-README2.DOC doc
By Linda Rising. Notes on source files. README.DOC UGUIDE.DOC.
[MS-DOS:]

CUG202.12-SESSIONS.DOC doc
By Unda Rising. Sample editing sessions. UGUIDE.DOC KED.C. [MS-DOS:]

CUG202.13-UGUIDE.DOC doc
By Unda Rising. User's guide for Karel simulator and Ked. =>
SESSIONS.DOC CUG139 README2.DOC. [MS-DOS:]

==============================================================================
CUG203 -
-----------

YAM For MS-DOS
An MS-DOS port of YAM, a modem control utility that supports XMODEM
(Ward Christensen) XMODEM/CRC-16, MODEM7, CompuserveA, UNIX sb, and
YMODEM transfer protocols. This version by Olen Pederson, (MN) is
descended from the BDS C original by Chuck Forsberg, (OR) et al,
(CUG110) and Paul Homchick's ClC86 CP/M 86 version. Includes ex
tensive documentation. [public]

CUG203.01-CC.BAT batch
By Olen Pederson, Chuck Forsberg. Batch file for compiling a single
YAM module. [MS-DOS: LC]

CUG203.02-CCL.BAT batch
By Olen Pederson, Chuck Forsberg. Batch file for compiling and linking
a YAM module. [MS-DOS:]

CUG203.03-LLYAM.BAT batch
By Olen Pederson, Chuck Forsberg. Batch file to link YAM modules.
[MS-DOS:]

CUG203.04-MAKEARC.BAT batch
By Olen Pederson, Chuck Forsberg. Makes archive of all needed YAM
files. [MS-DOS:]

CUG203.05-README.DOC doc
By Olen Pederson, Chuck Forsberg. YAMMAN.DOC.

CUG203.06-YAM.EXE executable
YAM for MS-DOS. By Olen Pederson, Chuck Forsberg. => YAMMAN.DOC YAM1.C
CUG110. [MS-DOS: LC]

CUG203.07-YAM.H header
By Olen Pederson, Chuck Forsberg. Macros, prototypes, and data types.
YAMSYS.H. [MS-DOS:]

CUG203.08-YAM1.C source
By Olen Pederson, Chuck Forsberg. Main program and command sequencer.
YAM.H. [MS-DOS:]

CUG203.09-YAM10.C source
By Olen Pederson, Chuck Forsberg. File display, unsqueeze functions.
=> YAM.H. [MS-DOS:]

CUG203.10-YAM11.ASM source
By Olen Pederson, Chuck Forsberg. YAM's terminal I/O assembly
routines. [MS-DOS:]

CUG203.11-YAM2.C source
By Olen Pederson, Chuck Forsberg. File transmission protocol headers.
=> YAM.H. [MS-DOS: LC]

CUG203.12-YAM3.C source
By Olen Pederson, Chuck Forsberg. Conversation with data capture, file
XMSN without error checking. => YAM.H. [MSDOS:]

CUG203.13-YAM4.C source
By Olen Pederson, Chuck Forsberg. CIS, a protocol handler. => YAM.H.
[MS-DOS:]

CUG203.14-YAM5.C source
By Olen Pederson, Chuck Forsberg. Basic low-level modem functions.
User specific modem initialization. => YAM.H. [MS-DOS:]

CUG203.15-YAM6.C source
By Olen Pederson, Chuck Forsberg. Global variables and constants. =>
YAM.H. [MSDOS:]

CUG203.16-YAM7.C source
By Olen Pederson, Chuck Forsberg. File and initialization. => YAM.H.
[MS-DOS:]

CUG203.17-YAM8.ASM source
By Olen Pederson, Chuck Forsberg. CRCK subroutine. [MS-DOS:]

CUG203.18-YAM9.ASM 1.2 source
By Olen Pederson, Chuck Forsberg. CRCK subroutine. [MS-DOS:]

CUG203.19-YAMCC.BAT batch
By Olen Pederson, Chuck Forsberg. Batch file for compiling and
assembling YAM [MS-DOS: MASM]

CUG203.20-YAMCFG.T doc
By Olen Pederson, Chuck Forsberg. tup configuration file.

CUG203.21-YAMHELP.T doc
By Olen Pederson, Chuck Forsberg. Help file. => YAMMAN.DOC YAMIMPL.DOC

CUG203.22-YAMIMPL.DOC doc
By Olen Pederson, Chuck Forsberg. Implementation manual for YAM. =>
YAM MAN.DOC. [MS-DOS:]

CUG203.23-YAMLIST doc
By Olen Pederson, Chuck Forsberg. List of file to link. [MS-DOS: LC]

CUG203.24-YAMMAN.DOC doc
By Chuck Forsberg, Olen Pederso. Complete user instructions, options,
function by function description, and file descriptions. Also a sample
session and bug report. => YAMIMPL.DOC CUG110.

CUG203.25-YAMPHONE.T doc
By Olen Pederson, Chuck Forsberg. Telephone numbers used by YAM.

CUG203.26-YAMSYS.H header
By Olen Pederson, Chuck Forsberg, Olen Pederson, Chuck Forsberg.
Header and global. Global equates for specific installations and modem
ports. => YAMSYS.H YAM.H YAM5.C. [MS-DOS, MS-DOS: LC]

CUG203.27-YMODEM.DOC doc
XMODEM/YMODEM Protocol Reference. By Chuck Forsberg, Ward Christensen.
Length description of the operation and options of XMODEM/YMODEM
protocol. YAMMAN.DOC CUG139.

==============================================================================
CUG204 -
-----------

68000 C Compiler
A 68000 C compiler by Matthew Brandt (GA). Brandt describes the
compiler as "an optimizing C compiler which has successfully compiled
itself under UNIX System V." The compiler accepts floating point types
but doesn't know how to generate code for them. It supports only
#include and #define preprocessor directives. Output is in UNIX 68000
object code format. The compiler will compile under Microsoft C v3.0
or later. Package has little documentation. [restricted]

CUG204.01-ANALYZE.C source
By Matthew Brandt. Expression optimizer. C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS: MSC]

CUG204.02-C.H header
By Matthew Brandt. [UNIX, MS-DOS:]

CUG204.03-CC68.EXE executable
By Matthew Brandt. C compiler that generates UNIX 68000 assembler
format. [UNIX, MS-DOS: MSC]

CUG204.04-CGLBDEC.H header
By Matthew Brandt. Global definitions. [UNIX, MS-DOS:]

CUG204.05-CGLBDEF.C source
By Matthew Brandt. Global definitions. => C.H EXPR.H GEN.H. [UNIX,
MS-DOS:]

CUG204.06-CMAIN.C source
68000 C Compiler. By Matthew Brandt. Define main function. => C.H
EXPR.H GEN.H CGLBDEC.H. [UNIX, MS-DOS: UNIX] Requires 68000 processor
for use on UNIX system.

CUG204.07-CODE.H header
By Matthew Brandt. Code structure definitions. [UNIX, MS-DOS: MSC]

CUG204.08-DECL.C source
By Matthew Brandt. Parsing declarations. C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS:]

CUG204.09-EXPR.C source
By Matthew Brandt. Expression evaluation. Builds a parse tree for an
expression. => C.H EXPR.H GEN.H CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.10-EXPR.H header
By Matthew Brandt. Expression tree descriptions. [MS-DOS, UNIX:]

CUG204.11-FUNC.C source
By Matthew Brandt. Function compilation routines. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.12-GEN.H header
By Matthew Brandt. Code generation structure and constants. [UNIX,
MS-DOS:]

CUG204.13-GENCODE.C source
By Matthew Brandt. Code generation routines for evaluating expressions
and conditions. => C.H EXPR.H GEN.H CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.14-GENSTMT.C source
By Matthew Brandt. Generates code. => C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS:]

CUG204.15-GETSYM.C source
By Matthew Brandt. Get a symbol from input stream. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.16-INIT.C source
By Matthew Brandt. Program initialization routine. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.17-INTEXPR.C source
By Matthew Brandt. Evaluates integer expression. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.18-LIB.S source
By Matthew Brandt. Assembly coded long signed multiplication. [UNIX:]
Motorola 68000 processor.

CUG204.19-LIST.C source
By Matthew Brandt. List the symbol table. C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS: MSC]

CUG204.20-MAKE.BAT batch
By Matthew Brandt. Batch file to create cc68 compiler. [MS-DOS:]

CUG204.21-MEMMGT.C source
By Matthew Brandt. Memory management functions. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.22-OPTIMIZE.C source
By Matthew Brandt. Optimization code. => C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS:]

CUG204.23-OUTCODE.C source
By Matthew Brandt. Generate code. => C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MSDOS:]

CUG204.24-PEEPGEN.C source
By Matthew Brandt. Peephole optimization functions. => C.H EXPR.H
GEN.H CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.25-PREPROC.C source
By Matthew Brandt. Preprocessor functions. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.26-README doc
By Matthew Brandt. Author's bug report along with system requirements.

CUG204.27-REGISTER.C source
By Matthew Brandt. Handles the allocation and deallocation of
temporary registers. C.H EXPR.H GEN.H CGLBDEC.H. [UNIX, MS-DOS: MSC]

CUG204.28-SEARCHKW.C source
By Matthew Brandt. Searches keyword. => C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS:]

CUG204.29-SIEVE.C source
By Matthew Brandt. Produces SIEVE.LIS and SIEVE.S. [UNIX, MS-DOS:]

CUG204.30-START.C source
By Matthew Brandt. Builds a parse tree of statements. => C.H EXPR.H
GEN.H CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.31-SYMBOL.C source
By Matthew Brandt. Symbol table routines. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

==============================================================================
CUG205 -
-----------

Utilities Vll
Rewrites of backgammon and go fish from CUG102 plus some text filters
and other utilities including detabber, word frequency counter, and
UNIX tee and word filters. Developed under Microsoft v3.0. Submitted
by Michael N. Yokoyama (HI). [public]

CUG205.01-BG.C 2.0 source
By Michael Yokoyama. Adaptation of Leor Zolman's backgammon for
MS-DOS. Uses ANSI.SYS for screen control and colors.-BG.EXE BGDISP.C
BGTALK.C CUG 102.22. [MS-DOS: MSC3.0] Requires ANSI.SYS.

CUG205.02-BG.EXE 2.0 executable
By Michael Yokoyama. Backgammon executable. => BG.C. [MS-DOS:]

CUG205.03-BGDISP.C 2.0 source
By Michael Yokoyama. Display subroutine for backgammon. => CUG102 BG.C
BGHELP.C. [MS-DOS:]

CUG205.04-BGTALK.C 2.0 source
By Michael Yokoyama. Conversation module for Backgammon II. => CUG102
BG.C BGDISP.C. [MS-DOS:]

CUG205.05-CAPITALS.C 2.0 source
By Michael Yokoyama. Capitalize text files. => CAPITALS.DOC
CAPITALS.EXE. [MSDOS: MSC]

CUG205.06-CAPITALS.DOC doc
By Michael Yokoyama. Usage information. => CAPITALS.C CAPITALS.EXE.
[MS-DOS:]

CUG205.07-CAPITALS.EXE executable
By Michael Yokoyama. => CAPITALS.C CAPITALS.DOC. [MS-DOS: MSC]

CUG205.08-CCL-CL.C source
By Michael Yokoyama. Filter to eliminate multiple carraige returns. =>
CCL-CL.DOC. [MS-DOS:]

CUG205.09-CCL-CL.DOC doc
By Michael Yokoyama. Usage information. => CCL-CL.C. [MS-DOS:]

CUG205.10-CCL-CL.EXE executable
By Michael Yokoyama. => CCL-CL.CCLCLDOC. [MS-DOS: MSC]

CUG205.11-COLOR.C source
By Michael Yokoyama. Changes the colors of text on PC-clones. =>
COLOR.DOC COLOR.EXE. [MS-DOS:] Requires ANSI.SYS.

CUG205.12-COLOR.DOC doc
By Michael Yokoyama. Usage information. => COLOR.EXE. [MS-DOS:]
CONFIG.SYS must contain device = ANSI.SYS.

CUG205.13-COLOR.EXE executable
By Michael Yokoyama. => COLOR.C COLOR.DOC. [MS-DOS:]

CUG205.14-CONVERT.EXE executable
By Michael Yokoyama, Michael Yokoyama. Convert a number to hexadecimal
and octal. => CONVERT.EXE CONVERT.C. [MSDOS, MS-DOS:]

CUG205.15-CUG205.LST doc
Listing of files along with file by file description.

CUG205.16-DETAB.C source
By Michael Yokoyama. Replaces tabs with equivalent number of spaces.
=> DETAB.DOC DETAB.EXE. [MS-DOS: MSC]

CUG205.17-DETAB.DOC doc
By Michael Yokoyama. Usage information. DETAB.C. [MS-DOS:]

CUG205.18-DETAB.EXE executable
By Michael Yokoyama. => DETAB.C. [MSDOS:]

CUG205.19-ENTAB.C source
By Michael Yokoyama. Replaces spaces with tabs. => DETAB.C ENTAB.DOC.
[MSDOS:]

CUG205.20-ENTAB.DOC doc
By Michael Yokoyama. Usage information. => ENTAB.C. [MS-DOS:]

CUG205.21-ENTAB.EXE executable
By Michael Yokoyama. => ENTAB.C DETAB.C. [MS-DOS: MSC]

CUG205.22-EXPOSE.C 1.1 source
By Michael Yokoyama. List messages in executable files. => EXPOSE.EXE.
[MS-DOS:]

CUG205.23-EXPOSE.EXE 1.1 executable
By Michael Yokoyama. => EXPOSE.C. [MSDOS:]

CUG205.24-FISH.C source
By Michael Yokoyama. Children's Go-Fish game. => FISH.EXE CUG102.11.
[MSDOS:]

CUG205.25-FISH.EXE executable
By Michael Yokoyama. => FISH.C. [MSDOS:]

CUG205.26-FKEY.C source
By Michael Yokoyama. Function key redefinition program. => FKEY.EXE
TIMEMARK.C. [MS-DOS:]

CUG205.27-FKEY.EXE executable
By Michael Yokoyama. => FKEY.C. [MSDOS:]

CUG205.28-FREQ.C source
By Michael Yokoyama. Counts occurrences of similar lines in sorted
files. => FREQ.EXE WHITE.C RS.C WORDS.C. [MS-DOS:]

CUG205.29-FREQ.DOC doc
By Michael Yokoyama. Usage information. => FREQ.C. [MS-DOS:]

CUG205.30-FREQ.EXE executable
By Michael Yokoyama. => FREQ.C FREQ.DOC. [MS-DOS: MSC]

CUG205.31-LOWCASE.C source
By Michael Yokoyama. Filter for converting entire text files to lower
case. => CAPITALS.C LOWCASE.DOC. [MS-DOS:]

CUG205.32-LOWCASE.DOC doc
By Michael Yokoyama. Usage information. LOWCASE.C LOWCASE.EXE. [MS
DOS:]

CUG205.33-LOWCASE.EXE executable
By Michael Yokoyama. => LOWCASE.DOC. [MS-DOS: MSC]

CUG205.34-RS.C source
By Michael Yokoyama. Filter to remove white space from end of line. =>
RS.DOC RS.EXE. [MS-DOS:]

CUG205.35-RS.DOC doc
By Michael Yokoyama. Usage description. => RS.C RS.EXE. [MS-DOS:]

CUG205.36-RS.EXE executable
By Michael Yokoyama. => RS.C RS.DOC. [MS-DOS: MSC]

CUG205.37-TEE.C source
By Michael Yokoyama. UNIX-like Tee command. Copies standard input to
the specified file without changing standard output. => TEE.DOC
TEE.EXE. [MS-DOS:]

CUG205.38-TEE.DOC doc
By Michael Yokoyama. Usage description. => TEE.C TEE.EXE. [MS-DOS:]

CUG205.39-TEE.EXE executable
By Michael Yokoyama. => TEE.C TEE.DOC. [MS-DOS: MSC]

CUG205.40-TIMEMARK.C source
By Michael Yokoyama. Prints current time and date. => TIMEMARK.EXE.
[MS-DOS:]

CUG205.41-TIMEMARK.EXE executable
By Michael Yokoyama. => TIMEMARK.C. [MS-DOS:]

CUG205.42-WHITE.C source
By Michael Yokoyama. Counts the blanks, tabs, and carraige returns in
a file. => WHITE.EXE WHITE.DOC. [MS-DOS:]

CUG205.43-WHITE.DOC doc
By Michael Yokoyama. Usage information. => WHITE.C. [MS-DOS:]

CUG205.44-WHITE.EXE executable
By Michael Yokoyama. => WHITE.C WHITE.DOC. [MS-DOS: MSC]

CUG205.45-WORDS.C source
Word Lister. By Michael Yokoyama. Places words on separate lines. =>
WORDS.DOC WORDS.EXE CUG 141.05 CUG 167.02. [MSDOS:]

CUG205.46-WORDS.DOC doc
By Michael Yokoyama. Usage information and examples. => WORDS.C.
[MS-DOS:]

CUG205.47-WORDS.EXE executable
By Michael Yokoyama. => WORDS.DOC. [MS-DOS: MSC]

CUG205.48-WSTYPE.C source
Wordstar Display. By Michael Yokoyama. Displays and/or converts
Wordstar files to viewable clean files. => WSTYPE.DOC WSTYPE.EXE.
[MS-DOS:]

CUG205.49-WSTYPE.DOC doc
By Michael Yokoyama. Usage information and examples. => WSTYPE.C.
[MS-DOS:]

CUG205.50-WSTYPE.EXE executable
By Michael Yokoyama. => WSTYPE.C WSTYPE.DOC. [MS-DOS: MSC]

==============================================================================
CUG206 -
-----------

Checkbook Register Doc and Exec. A suite of programs for maintaining a
check register under CP/M from Jim Woolley (CA) of WoolleyWare.
Contains user documentation and executable versions of the programs
configured for an Osborne I display. An installation program can be
used to reconfigure the executables for other terminals. User
interface modeled after Wordstar. [restricted]

CUG206.01-ABSTRACT.DOC 1.1 doc
Documentation Abstract. By Jim Woolley. Covers features, system
specifications, and functional description of check register program.
=> CHECKS.DOC.

CUG206.02-CHECKS.DOC doc
Complete Documentation, tutorial. By Jim Woolley. Users guide
including tutorial and commands summary. => CHECKS11.COM CG207.

CUG206.03-CHECKS.SCR data
Screen Control Data. By Jim Woolley. CHECKSIN.COM.

CUG206.04-CHECKS11.COM 1.1 executable
Updated Version of Checks. By Jim Woolley. Manages the current check
register, including reconciliation of transactions which have cleared.
=> CLEARS11.COM CHECKSIN.COM CUG207. [CP/M-80: BDSC]

CUG206.05-CHECKSIN.COM executable
Installs CHECKS.SCR file. By Jim Woolley. Adapts 'checks' and 'clears'
to your video display terminal. => CHECKS11.COM CLEARS11.COM CUG207.
[CP/M 80:]

CUG206.06-CHECKSIN.DAT 1.1 data
Installation Data. By Jim Woolley. => CHECKSIN.COM.

CUG206.07-CLEARS11.COM 1.1 executable
By Jim Woolley. Maintains and summarizes transactions after they have
cleared the bank, for historical review. => CHECKS11.COM CHECKSIN.COM
CUG207. [CP/M-80: BDSC] Requires 52.5K of TPA.

CUG206.08-DEMO.DAT 1.1 data
By Jim Woolley. Demonstration check register. => DEMO.INF.

CUG206.09-DEMO.INF 1.1 data
By Jim Woolley. Demonstration information. => DEMO.DAT.

CUG206.10-README.11 1.1 doc
Revision 1.1 Information. By Jim Woolley. Update of README.A. =>
README.A.

CUG206.11-README.A 1.1 doc
Condensed Installation Directions. By Jim Woolley. Disk contents. =>
ABSTRACT.DOC CHECKS.DOC.

==============================================================================
CUG207 -
-----------

Checkbook Register Doc and Source
The source code (BDS C v1.5) and user documentation for a suite of
programs that maintain a checkbook. The programs are user supported
software. [restricted]

CUG207.01-ABSTRACT.DOC 2.0 doc
Condensed Documentation. By Jim Woolley. Condensed documentation
includes system specifications and functional descriptions. =>
CHECKS.DOC README.11 README.A README.B CUG206.

CUG207.02-CHECK.SCR data
Screen Control Data. By Jim Woolley. => CHECKSIN.COM.

CUG207.03-CHECKA.C 1.0 source
By Jim Woolley. Contains entry editing functions. => CHECKS.H.
[CP/M-80: BDSC]

CUG207.04-CHECKD.C 1.1 source
By Jim Woolley. Data entry functions. _ CHECKS.H. [CP/M-80:]

CUG207.05-CHECKS.C 1.1 source
Main Source Code File. By Jim Woolley. Includes main and data fetching
functions. => CHECKS.H. [CP/M-80:]

CUG207.06-CHECKS.DOC doc
Complete Documentation & Tutorial. By Jim Woolley. Users guide
including tutorial and edit command summary. => CHECKS11.COM README.11
README.A README.B CUG206.

CUG207.07-CHECKS.H header
By Jim Woolley. Header file including global definitions and data
structures. [CP/M-80: BDSC]

CUG207.08-CHECKSB.C source
By Jim Woolley. Text display functions. => CHECKS.H. [CP/M-80:]

CUG207.09-CHECKSC.C 1.1 source
By Jim Woolley. Contains functions for cursor positioning, character
manipulation, money functions, saving and aborting functions. =>
CHECKS.H CUG206. [CP/M-80:]

CUG207.10-README.11 1.1 doc
Update Information. By Jim Woolley. Includes listing of disk files. =>
CHECKS.DOC.

CUG207.11-README.B doc
Condensed Installation Directions. By Jim Woolley. Includes table of
disk contents. => CHECKS.C.

CUG207.12-XIO.C 1.0 source
By Jim Woolley. I/O functions using direct BIOS. => CHECKS.H. [CP/M
80: BDSC]

==============================================================================
CUG208 -
-----------

E For CP/M 68K
A version of the 'e' full screen editor adapted for CP/M 68K by Dr.
Yoshimasa Tsuji(Japan). 'e' is a small, fast editor with complete
block and string operations, able to handle very large files. [public]

CUG208.01-CB.C source
C Program Beautifier. By Yoshimasa Tsuji, William C. Colley III.
Copies C source code to stdout adjusting spacing and indentation for
readability. Curly braces checking is included. Written in Portable C.
[MS-DOS, CP/M, UNIX:]

CUG208.02-CPM68K.C 1.48 source
'e' For 68K. By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. OS
dependent functions. => E0.C CUG:3133 CUG158. [CP/M-68K, MS-DOS: DRI,
Alcyon] Default configuration is for systems with 128K or more

CUG208.03-CRT.S 1.0 source
Assembly portion C startup module for DRI. Calls XMAIN.C to post
process command line, sets up standard VO. => XMAIN.C. [CP/M-68K: DRI,
Alcyon] 68000 assembly code

CUG208.04-E.DOC doc
By G. Nigel Gilbert. Original 'e' documentation. => CUG133.

CUG208.05-E.H 1.48 header
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. => E68K.DOC.
[CP/M68K: DRI, Alcyon]

CUG208.06-E0.C 1.48 source
Screen Editor. By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji.
Root file for editor. Includes main() and top level command processor.
=> CUG 133 CUG 158 E.H E68K.DOC. [CP/M 68K: DRI, Alcyon]

CUG208.07-E1.C source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. File maintenance
functions. Functions to control editor modes such as auto-indent, tab
settings, backup behavior, and status displays. => E.H E68K.DOC. [CP/M
68K: DRI, Alcyon]

CUG208.08-E10.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Buffered disk l/O.
Interface to the virtual memory system. => E.H E68K.DOC. [CP/M-68K:
DRI, Alcyon]

CUG208.09-E2.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Functions to
modify text buffer. => E.H E68K.DOC. [CP/M-68K: DRI]

CUG208.10-E3.C source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Text display
functions. => E.H E68K.DOC. [CP/M-68K: Alcyon]

CUG208.11-E4.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. String search and
replace functions. => E.H E68K.DOC. [CP/M-68K: DRI, Alcyon]

CUG208.12-E5.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Functions to read
and write files. => E.H E68K.DOC. [CP/M: DRI, Alcyon]

CUG208.13-E6.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Perform block com
mands. => E.H E68K.DOC. [CP/M-68K: DRI,Alcyon]

CUG208.14-E68K.DOC doc
By Yoshimasa Tsuji. History of 'e' & a discussion of BDS C
non-portability. => E0.C E.DOC.

CUG208.15-E7.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Low level terminal
l/O functions. => E.H E68K.DOC. [CP/M-68K: DRI, Alcyon]

CUG208.16-E8.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. High level
interface to virtual text buffer. => E.H E68K.DOC. [CP/M68K: DRI,
Alcyon]

CUG208.17-E9.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Memory management
functions. => E.H E68K.DOC. [CP/M-68K: DRI, Alcyon]

CUG208.18-ETERM.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Terminal specific
functions. => E.H E68K.DOC. [CP/M-68K: DRI, Alcyon]

CUG208.19-LIBC.DAT data
By Yoshimasa Tsuji. Extensive comments and tutorial information about
the functions in DRl's standard library. [CP/M 68K: DRI, Alcyon]

CUG208.20-READ.ME doc
By Yoshimasa Tsuji. Bug fixes, new features. General file description.
=> E68K.DOC E0.C.

CUG208.21-STDIO.H header
Header file fixed for DRI C. [CP/M 68K: DRI]

CUG208.22-TAB.C source
By Yoshimasa Tsuji. Tablify text. => ENTAB DETAB.

CUG208.23-XMAIN.C source
By Yoshimasa Tsuji. C portion of C startup module. Sets up channels,
expands wild cards, handles quoted strings, distinguishes between
upper and lower case on command line. Calls mai(). => CRT.S. [CP/M
68K: DRI]

==============================================================================
CUG209 -
-----------

Simplex Curve Fitting
Contributed by Dr. John A. Rupley (AZ) this package for Eco C-80,
finds a best fit between experimental data and a model supplied by the
experimenter. The programs use the Nelder - Mead algorithm for simplex
minimization, and a least
squares measure of fit quality. [public]

CUG209.01-CONTENTS.ECO 1.0 doc
By John A. Rupley. File listing. _ HEADERS.ECO.

CUG209.02-CTRLCNST.H 1.00 header
By John A. Rupley. Common system definitions, control constants.
[CP/M: ECO]

CUG209.03-HEADERS.ECO 1.00 doc
By John A. Rupley. Short descriptions of C programs and related files.

CUG209.04-LDHFITR.C 1.0 source
By John A. Rupley. Nonlinear least square fit by simplex minimization
(Nelder-Mead algorithm) of two-substrate, two-product enzyme kinetic
data. => LDHFITR.DOC LDHFITRC.COM SIMPLEXR.DOC SIMPMAIN.C LINEFITR.C.
[CP/M: ECO]

CUG209.05-LDHFITR.COM 1.0 executable
By John A. Rupley. => LDHFITR.C. [CP/M:]

CUG209.06-LDHFITR.DAT 1.0 data
By John A. Rupley. Data file. => LDHFITR.C. [CP/M:]

CUG209.07-LDHFITR.DOC 1.0 doc
By John A. Rupley. Notes on data reduction by computer. => LDHFITR.C.
[CP/M:]

CUG209.08-LINEFITR.C 1.0 source
By John A. Rupley. Test of simplex minimization by fit of linear
function (y = a + bx) to trial data. => LINEFITR.COM LINEFITR.DAT
SIMPMAIN.C. [CP/M: ECO]

CUG209.09-LINEFITR.COM executable
By John A. Rupley. => LINEFITR.C. [CP/M:]

CUG209.10-LINEFITR.DAT dah
By John A. Rupley. Data file to LINEFITR.COM. => LINEFITR.C. [CP/M:]

CUG209.11-SIMPFITR.DAT data
By John A. Rupley. Template for input of data. => SIMPFITR.DOC.
[CP/M:]

CUG209.12-SIMPFITR.DOC 1.00 doc
By John A. Rupley. Documentation for C routines. => SIMPLEXR.DOC
SIMOUTR.DOC LDBFITR.DOC.

CUG209.13-SIMPLEXR.DOC 1.00 doc
By John A. Rupley. Explanation of NelderMead algorithm. =>
SIMPLEXR.DOC.

CUG209.14-SIMPLIB0.C 1.00 source
By John A. Rupley. => SIMPLIB1.C SIMPMAIN.C. [CP/M: ECO]

CUG209.15-SIMPLIB1.C 1.0 source
By John A. Rupley. Definition of the aggregate data, with a dummy
structure declaration. => SIMPLIB0.C SIMPMAIN.C. [CP/M:]

CUG209.16-SIMPMAIN.C l.oo source
By John A. Rupley. => SIMPLIB1.C SIMPLIB0.C. [CP/M:]

CUG209.17-SIMPOUTR.DOC 1.00 doc
By John A. Rupley. Description of output from the simple fitting
program. SIMPFITR.DOC.

CUG209.18-SYSlCALR.MAC 1.00 source
By John A. Rupley. Assembly code function called by C program. =>
SIMPMAIN.C. [CP/M: M80]

==============================================================================
CUG210 -
-----------

Simulations and Loadable Bios For CP/M
A potpourri of CP/M programs: a percolative phase transition simula
tion based upon lattice statistics, agrade book manager and a logon
program for ZCPR3 (Eco-C80) all by Dr. John A. Rupley; (AZ) a set of
utilities and code fragments to support load able BIOS modules (C/80)
by Ted Carnevale (NY); an Aztec CII version of Dan Schechter's (ND)
kittyline (see description of CUG216); and a dump utility from Ken
Busch (CA), developed under Mix C (NY); an Aztec CII version of Dan
Schechter's (ND) kittylint (see description of CUG216); and a dump
utility from Ken Busch (CA), developed under Mix C [public]

CUG210.01-CONTENTS.ECO 1.0 doc
By John A. Rupley. Partial list of files with description.

CUG210.02-CTRLCNST.H 1.0 header
By J.A. Rupley. Common system definitions and control constants.
[CP/M: ECO]

CUG210.03-CXB.C 1.2 source
By N.T. Carnevale. Reports loaded BIOS extensions. => XB.H. [CP/M 2.2:
C/80]

CUG210.04-DUMP.C 1.7 source
By K.G. Busch. Displays the contents of range of memory in hexadecimal
format. => DUMP.DOC DUMP.COM DUMPS.COM. [CP/M: Mix]

CUG210.05-DUMP.COM 1.7 executable
Memory dump. By K.G. Busch. Linked with RUNTIME.OVY. => DUMP.C.
[CP/M:]

CUG210.06-DUMP.DOC doc
By K.G. Busch. Documentation of Dump C. => DUMP.COM DUMP.C. [CP/M:
MIX]

CUG210.07-DUMPS.COM 1.7 executable
Memory dump summary description of Rupley files. By K.G. Busch. Unked
with SMALLCOM.OVY. => DUMP.C. [CP/M: Mix]

CUG210.08-HEADERS doc

CUG210.09-HEADERS.ECO doc

CUG210.10-KITTYLNT.C source
By Dan Schechter. A 'tiny lint' source code analyzer. => KITTYLNT.DOC.
[CP/M: AZTEC]

CUG210.11-KlmLNT.COM executable
By Dan Schechter. => KITTYLNT.DOC. [CP/M:]

CUG210.12-KITTYLNT.DOC doc
By Dan Schechter. Documentation for KITTYLNT.C. => KITTYLNT.C
KITTYLNT.COM.

CUG210.13-LOGONR.C 3.0 source
By J.A. Rupley. Logon routine for ZCPR2. Displays time and date
information from Hayes clock and timestamps. => SYS1CALR.MAC
CTRLCNST.H. [CP/M: ECO]

CUG210.14-LXB.ASM source
By N.T. Carnevale. Installs a loadable BIOS extension. =>
NEWXBIOS.CUG. [CP/M:] Requires Digital Research's RMAC or compatible
assembler.

CUG210.15-MUXB.ASM source
By N.T. Carnevale. BIOS extension module. => NEWXBIOS.CUG. [CP/M:]
Requires Digital Research's RMAC assembler.

CUG210.16-NEWXBIOS.CUG doc
By N.T. Carnevale. Documentation for BIOS extension module and related
utilities. => CXB.C RXB.C XB.H LXB.ASM MUXB.ASM.

CUG210.17-PERCOLXR.C 1.0 source
By J.A. Rupley. Simulation of percolative phase transition in a two
dimensional square lattice. => PERCOLXR.COM. [CP/M: ECO]

CUG210.18-PERCOLXR.COM 1.0 ex-
ecutable By J.A. Rupley. => PERCOLXR.C. [CP/M:]

CUG210.19-RXB.C source
By N.T. Carnevale. Removes an installed BIOS extension. =>
NEWXBIOS.CUG. [CP/M: C/80]

CUG210.20-SUMGRADR.C 1.00 source
By John A. Rupley. System for keeping an instructor's grade book.
[CP/M: ECO]

CUG210.21-SUMGRADR.COM 1.00 ex-
ecutable By John A. Rupley. => SUMGRADR.C. [CP/M:]

CUG210.22-SUMGRADR.DAT 1.00 data
By John A. Rupley. Test file. => SUMGRADR.C.

CUG210.23-SYS1 CALR.MAC 1.00 souruce
By John A. Rupley. Assembly code function to call an absolute address
from within a C program. [CP/M: M80]

CUG210.24-XB.H header
By N.T. Carnevale. Header file for CXB.C and RXB.C. => CXB.C RXB.C
NEWXBIOS.CUG. [CP/M: Ct80]

==============================================================================
CUG211 -
-----------

Search, Sort and Merge
Utilities by Dr. John A. Rupley (AZ), to search, sort and merge files
with variable length records. These utilities expect records to be
delimited by a string, allowing multiline records. Keys may be
specfiied by strings containing whildcards and meta characters.
Programs are configured to manipulate abstracts (e.g. for online
searches of Chemical Abstracts). All for BDS v1.5 (CP/M). [public]

CUG211.01-BDSCIO.H header
By Leor Zolman. Standard header file for BDS C. [CP/M: BDSC]

CUG211.02-CHARFUN.CRL 1.0 object
=> CHARFUNR.CSM. [CP/M:l

CUG211.03-CHARFUNR.CSM 1.0 source
By M.I. Maney. Library of assembly code functions to handle character
operations. => CHMFUN.CRL. [CP/M:]

CUG211.04-CIO.CRL object
By J.A. Rupley. => DIOR.C. [CP/M:]

CUG211.05-CONTENTS.BDS doc
By John A. Rupley. => HEADERS.BDS.

CUG211.06-DIO.H 1.0 header
By Eugene H. Mallory. I/O redirection header from BDS C and Van Nuys
Toolkit. => DIOR.C CUG143 CUG144. [CP/M: BDSC]

CUG211.07-DIOR.C 1.0 source
l/O Redirection Library. By J.A. Rupley, Gene Mallory. => DIO.H.
[CP/M:]

CUG211.08-HEADERS.BDS 1.0 doc
By John A. Rupley. Short description of programs and related files.

CUG211.09-SCOPE.CRL object
By J.A. Rupley. => SCOPER.C. [CP/M: BDSC]

CUG211.10-SCOPER.C 1.0 source
By J.A. Rupley. Slightly modified "SCOPE" library of full screen input
functions. => SCOPE.CRLCUG105. [CP/M:]

CUG211.11-STDLIB3R.C 1.0 source
By John A. Rupley. Incorporate use of drive/user prefix into BDS
standard library functions. [CP/M:]

CUG211.12-STRFUN.CRL 1.0 object
By M.I. Maney, John A. Rupley. => CG106.26 STRFUNR.CSM. [CP/M:]

CUG211.13-STRFUNR.CSM source
By M.I. Maney. Library of assembly code functions to handle string
operations. => STRFUN.CRL CUG106. [CP/M:]

CUG211.14-WILDEXP.CRL object
By J.A. Rupley. => WILDEXPR.C. [CP/M:]

CUG211.15-WILDEXPR.C 1.0 source
Wildcard Utility. By J.A. Rupley. Accepts wild card on CP/M command
line. This modification of Van Nuys Toolkit original supports use of
drive/user file prefix. => WILDEXP.CRL CUG143 CUG144 DIO.H STDLIB3R.C.
[CP/M:]

CUG211.16-XMERGE1.TST 1.0 data
By J.A. Rupley. Test file for XMERGER. => XMERGER.C. [CP/M:]

CUG211.17-XMERGE2.TST data
By J.A. Rupley. Test file for XMERGER. => XMERGER.C. [CP/M:]

CUG211.18-XMERGER.C 1.0 source
By J.A. Rupley. Merge two sorted files, with output redirection. =>
XMERGER.COM XMERGE1.TST XMERGE2.TST XSORT.C XSRCHR.C. [CP/M: BDSC]

CUG211.19-XMERGER.COM executable
By J.A. Rupley. => XMERGER.C. [CP/M:]

CUG211.20-XSORT.TST 1.0 data
By J.A. Rupley. Test file for XSORTR. => XSORTR.C. [CP/M:]

CUG211.21-XSORTR.C 1.0 source
By J.A. Rupley. Sort random length text records, such as abstracts. =>
XSRCHR.C XSORT.TST XSORTR.COM XMERGER.C. [CP/M: BDSC]

CUG211.22-XSORTR.COM executable
By J.A. Rupley. => XSORTR.C. [CP/M:]

CUG211.23-XSRCH.ZIP data
By J.A. Rupley. Template file for XSRCHR. => XSRCHR.COM.

CUG211.24-XSRCHCAS.ZIP data
By J.A. Rupley. Templates for full-screen input. => XSRCHR.COM.

CUG211.25-XSRCHR.C 1.0 source
By J.A. Rupley. => XSRCHR.C XSORT.C XMERGER.C XSRCH.TST XSRCH.ZIP
XSRCHCAS.ZIP XSRCHR.COM XSRCHSTD.ZIP. [CP/M: BDSC]

CUG211.26-XSRCHR.COM executable
By J.A. Rupley. => XSRCHR.C. [CP/M:]

CUG211.27-XSRCHSTD.ZIP 1.0 data
By J.A. Rupley. Templates for full screen input. => XSRCHR.COM.

==============================================================================
CUG212 -
-----------

Simulation For BDS
A BDS C version of Dr. John A. Rupley's (AZ) percolative phase
transition simulation. An Eco C-80 version appears on CUG210. [public]

CUG212.01-BDSCIO.H header
By Leor Zolman. Standard header file for BDS C. [CP/M: BDSC]

CUG212.02-CONTENTS.BDS 1.0 doc
By J.A. Rupley. Disk table of contents with short description. =>
HEADERS.BDS.

CUG212.03-DEFF.CRL object
By Leor Zolman. Relocatable image of BDS standard library with
modifications to incorporate use of du: driver/user prefix into
standard BDS library. => STDLIB3R.CRL. [CP/M: BDSC]

CUG212.04-DEFF2.CRL object
By Leor Zolman. Part two of BDS standard library. => DEFF.CRL. [CP/M:]

CUG212.05-DIO.CRL object
By J.A. Rupley, Gene Mallory. => DIOR.C. [CP/M:]

CUG212.06-DIO.H 1.0 header
By J.A. Rupley, Gene Mallory. Includes support for redirection under
BDS. => DIOR.C. [CP/M:]

CUG212.07-DIOR.C source
VO Redirection Library. By J.A. Rupley, Gene Mallory. I/O redirection
library for BDS C. => DIO.H DIO.CRL CG143.09. [CP/M:]

CUG212.08-FLOAT.CRL object
=> FLOATR.C. [CP/M:]

CUG212.09-FLOATR.C 1.0 source
Floating Point Library. By J.A. Rupley, L.C. Calhoun, Bob Mathias.
Library of floating point functions. => CUG107. [CP/M: BDSC]

CUG212.10-HEADERS.BDS 1.00 doc
By J.A. Rupley. Summary description of each program. => CONTENTS.BDS.

CUG212.11-JARIO.H 1.0 header
By J.A. Rupley. Header file with various constants, including input
and output. => PERC3DR.C. [CP/M: BDSC]

CUG212.12-PERC3DR.C 1.00 source
By J.A. Rupley. Simulation of percolative phase transition is a
three-dimensional simple cubic lattice. => JARIO.H BDSCIO.H DIO.H
PERC3DR.COM PERCOLAR.C. [CP/M:]

CUG212.13-PERC3DR.COM executable
By J.A. Rupley. => PERC3DR.C. [CP/M:]

CUG212.14-PERCOLAR.C 1.00 source
By J.A. Rupley. Simulation of percolative phase transition in a
two-dimensional square lattice. => PERCOLAR.COM PERC3DR.C. [CP/M:]

CUG212.15-PERCOLAR.COM 1.0 ex-
ecutable By J.A. Rupley. [CP/M:]

CUG212.16-STDLIB3R.C source
By J.A. Rupley. Incorporates use of du prefix into BDS standard
library functions. => DEFF.CRL DEFF2.CRL. [CP/M:]

==============================================================================
CUG213 -
-----------

Van Nuys Enhancements
Several enhanced tools from the Van Nuys Toolkit (CUG143 and CUG144)
and UNVAN, a filter which undoes the idiosyncratic keywords used
throughout the original toolkit. Among other improvements, Rupley has
added ZCPR3 style wildcards in drive and user specifications. From Dr.
John A. Rupley (AZ), for BDS C (CP/M). [public]

CUG213.01-BATCHR.C 1.0 source
Submit (Batch) Utility from Van Nuys Toolkit.. By J.A. Rupley, Eugene
H. Mallory. Extended menu to include all BAT, ZEX and SUB files in all
user areas of current drive and of drive A. => BATCHR.COM CUG143.
[CP/M: BDSC]

CUG213.02-BATCHR.COM executable
By J.A. Rupley. => BATCHR.C. [CP/M:]

CUG213.03-BDSCIO.H header
By J.A. Rupley. Standard header file from Van Nuys Toolkit and BDS C.
[CP/M:]

CUG213.04-CBPRCPR.BAT batch
By J.A. Rupley. Submit file for filtering C code through cbprepr then
cbr. => CBPREPR.C CBR.C. [CP/M;]

CUG213.05-CBPREPR.C 1.0 source
Filter to prepare C code for formatting. By J.A. Rupley. Filter
inserts/deletes white space and newline marker to produce consist ant
text style. Then filters through CBR to indent by control level. =>
CBPREPR.COM CBPREPR.BAT CBR.C. [CP/M: BDSC]

CUG213.06-CBPREPR.COM executable
By J.A. Rupley. => CBPREPR.C. [CP/M:]

CUG213.07-CBPRETST.C 1.0 source
By J.A. Rupley. Test file for CBPREPT.C and CBR.C. => CBR.C
CBPRETST.C. [CP/M:]

CUG213.08-CBR.C 1.0 source
By J.A. Rupley. Filter to reformat C code, indented according to
control level. => CBPREPR.C CBR.COM. [CP/M:]

CUG213.09-CBR.COM executable
By J.A. Rupley. => CBR.C CBPREPR.C. [CP/M:]

CUG213.10-CONTENTS.BDS doc
By John A. Rupley. Disk contents. => HEADERS.BDS.

CUG213.11-CR.C 1.0 source
By J.A. Rupley, Eugene H. Mallory. Construct and execute submit file
from instructions in special comments within the source files. =>
CR.COM. [CP/M: BDSC]

CUG213.12-CR.COM executable
By J.A. Rupley. => CR.C. [CP/M:]

CUG213.13-DEFF.CRL object
Standard relocatable library for BDS. => STDLIB3R.CRL. [CP/M:]

CUG213.14-DEFFC.CRL object
Standard relocatable library for BDS. => STDLIB3R.C. [CP/M:]

CUG213.15-DIO.CRL object
=> DIOR.C.

CUG213.16-DIO.H header
By John A. Rupley, Eugene H. Mallory. I/O redirection header file. =>
DIOR.C. [CP/M:]

CUG213.17-DIOR.C 1.0 source
1/0 Redirection Ubrary from BDS C and Van Nuys Toolkit. By J.A.
Rupley, Gene Mallory. => DIO.CRL DIO.H STDLIB3R.C. [CP/M: BDSC]

CUG213.18-HEADERS.BDS doc
Headers of files. => CONTENTS.BDS.

CUG213.19-JARIO.H header
By J.A. Rupley. Author's personal header file.

CUG213.20-STDLIB3R.C source
File-Handling Functions. By J.A. Rupley. Functions allow the use of
du: in addition to u/d: drive/user prefix. => DEFF.CRL DEFF2.CRL.
[CP/M: BDSC]

CUG213.21-UNVANR.C 1.0 source
By J.A. Rupley. Filter to convert Van Nuys Toolkit Pascal style
delimiters and keywords back to standard C tokens. => UNVANR.COM.
[CP/M:]

CUG213.22-UNVANR.COM executable
By J.A. Rupley. => UNVANR.C. [CP/M:]

CUG213.23-WILDEXP.CRL object
By J.A. Rupley. => WILDEXPR.C.

CUG213.24-WILDEXPR.C 1.0 source
Modified Version of WILDEXP.. By J.A. Rupley. Allows use of du: and
u/d: as well as expansion of d?: and ?/d: forms. => WILDEXP.CRLCUG111
CUG121 CUG143. [CP/M: BDSC]

CUG213.25-XCR.C source
Cross-Reference Utility. By J.A. Rupley, Phillip N. Hisley. Modified
version of XC.C CUG 120.19: Added check on characters of output per
line (cbar_count) to obtain correct pagination. => XCR.COM. [CP/M:]

CUG213.26-XCR.COM executable
By J.A. Rupley, Phillip N. Hisley. => XCR.C. [CP/M:]

==============================================================================
CUG214 -
-----------

File Display Utilities
Developed under BDS v1.4, BDS C utilities for editing and browsing in
files--TYPEXXR is descended for TYPE20; XSHOWR allows rapid movement
of the display window using Wordstar-like commands; a clock support
utility. From Dr. John A. Rupley (AZ). [public]

CUG214.01-BDSCIO.H header
By Leor Zolman. Standard header file for BDS. [CP/M: BDSC]

CUG214.02-CBR.C 1.0 source
By J.A. Rupley. Filter to reformat C code, indented according to
control level. => CBR.COM CUG213. [CP/M:]

CUG214.03-CBR.COM executable
By J.A. Rupley. => CBR.C. [CP/M:]

CUG214.04-CHARFUN.CRL object
By J.A. Rupley. => CHARFUNR.CSM. [CP/M:]

CUG214.05-CHARFUNR.CSM 1.0 source
By M.I. Maney. Library of assembly code functions to handle character
operations. => CHARFUN.CRL. [CP/M:]

CUG214.06-CHRONOR.C 1.0 source
By J.A. Rupley. Reads Hayes chronograph and display time, date. =>
CHRONOR.COM. [CP/M:]

CUG214.07-CHRONOR.COM executable
By J.A. Rupley. => CHRONOR.C. [CP/M:]

CUG214.08-CONTENTS.BDS doc
By John A. Rupley. Table of contents. => HEADERS.BDS.

CUG214.09-CTRLSHOR.C 1.0 source
Show control characters. By J.A. Rupley, Eugene H. Mallory. Strips
high bits and displays control characters (not cr, If, tab) as
"^char". => CTRLSHOR.COM. [CP/M:] BDSC]

CUG214.10-CTRLSHOR.COM 1.0 ex-
ecutable By J.A. Rupley. => CTRLSHOR.C. [CP/M:]

CUG214.11-DIO.CRL obiect
By J.A. Rupley. => DIOR.C.

CUG214.12-DIO.H header
By J.A. Rupley. IO redirection header file. => DIOR.C. [CP/M: BDSC]

CUG214.13-DIOR.C 1.0 source
I/O Redirection Library. By J.A. Rupley. Modifications: avoids CR-CR
pair before LF by patch in putchar(). => DIO.CRL DIO.H STDLIB3R.C.
[CP/M:]

CUG214.14-HEADERS.BDS doc
File headers. => CONTENTS.BDS.

CUG214.15-JARIO.H 1.00 header
By J.A. Rupley. Authors personal standard header. [CP/M: BDSC]

CUG214.16-STDLIB3R.C source
Flle-Handling Functions. By J.A. Rupley. Functions allow the use of
du: in addition to u/d: drive/user prefix. => DEFF.CRL
DEFFC.CRLWILDCARD. [CP/M:]

CUG214.17-STRFUN.CRL 1.0 object
By J.A. Rupley. => STRFUNR.CSM. [CP/M:]

CUG214.18-STRFUNR.CSM 1.0 source
By J.A. Rupley. Assembly coded functions for string operations. =>
STRFUN.CRL CHARFUNR.CSM CUG106. [CP/M:]

CUG214.19-TYPER-R.C 1.0 source
Typer. By John A. Rupley, H.G. Lord. Line editor that handles typing
not suitable for a word processor (i.e. envelopes, forms, short
notes). => TYPER-R.COM. [CP/M: BDSC]

CUG214.20-TYPER-R.COM 1.0 executable
By J.A. Rupley. => TYPER-R.C. [CP/M:]

CUG214.21-TYPEXXR.C 10 source
By J.A. Rupley. Sequential display of a file, with options for
printing. A rewrite of TYPE20. => TYPEXXR.COM. [CP/M:]

CUG214.22-TYPEXXR.COM 10 executable
By J.A. Rupley. [CP/M:]

CUG214.23-WILDEXP.CRL object
By J.A. Rupley. => WILDF

CUG214.24-WILDEXPR.C
Modified Version of WILI Rupley. Allows use of du as expansion of d?:
and DEXP.CRL CUG111 CUG [CP/M: BDSC]

CUG214.25-XSHOW.H 1.00
By J.A. Rupley. Header file for XSHOWR.C. and XSHOWFNS.C. [CP/M:]

CUG214.26-XSHOWFNS.C
By J.A. Rupley. Function => XSHOWR.C. [CP/M: BDSC]

CUG214.27-XSHOWR.C 1.0 source
By J.A. Rupley. Page through a file using Wordstar-like commands.
Search for strings including wildcards and control characters. =>
XSHOW.H XSHOWFNS.C XSHOWR.COM. [CP/M:]

CUG214.28-XSHOWR.COm 1.0 executable
By J.A. Rupley. => XSHOWR.C. [CP/M:]

==============================================================================
CUG215 -
-----------

BBS For BDSC
A Bulletin Board system for BDS C under CP/M. This package is the
direct ancestor of BBS for UNIX (CUG182) and appears to be descended
for RBBS4 (CUG147). [public]

CUG215.01-BBSC.C 1.0 source
Bulletin Board System. By Mike Kelly. Main source files for running
the BBS and invoking related functions. => BBSC.DOC. [CP/M: BDSC]

CUG215.02-BBSC.DOC 1.0 doc
System Documentation. By Mike Kelly.=> BBSC.C. [CP/M:]

CUG215.03-BBSCDEF.H header
By Mike Kelly. Global defines and storage definitions for use by BBSC
system. => BBSC.C. [CP/M: BDSC]

CUG215.04-BBSCFILE.C 1.0 source
By Mike Kelly. File 1/0 support utilities. => BBSC.C. [CP/M:]

CUG215.05-BBSCLOCK.C 1.0 source
By Mike Kelly. Clock routine to access a Hayes Chronograph. => BBSC.C.
[CP/M:]

CUG215.06-BBSCMISC.C 1.0 source
By Mike Kelly. Miscellaneous functions used across the system. =>
BBSC.C. [CP/M:]

CUG215.07-BBSCPORT.C 1.0 source
By Mike Kelly. Support routines to access the modem port. => BBSC.C.
[CP/M:]

CUG215.08-BULLETIN.BBS doc
By Mike Kelly. Data file for bulletins to be shown at signon. =>
BBSC.C. [CP/M:]

CUG215.09-HEADER.BBS doc
By Mike Kelly. 7 record header files used with the messages. =>
BBSC.C. [CP/M:]

CUG215.10-HELP.BBS doc
By Mike Kelly. Short help file to explain the commands available. =>
BBSC.C. [CP/M:]

CUG215.11-MESSAGE.BBS doc
By Mike Kelly. Holds the messages left on BBS. => BBSC.C. [CP/M:]

CUG215.12-USER.BBS doc
By Mike Kelly. Maintains names, passwords, etc. of each caller. =>
BBSC.C. [CP/M:]

CUG215.13-WELCOME.BBS doc
By Mike Kelly. The signon/welcome file. => BBSC.C. [CP/M:]

==============================================================================
CUG216 -
-----------

Zmodem and Saveram
[mixed] 2 disks. Zmodem, by Chuck Forsberg (OR), is a file transfer
system designed to work efficiently in packet switched and time-shared
systems. Saveram developed under Microsoft v3.0, by Dave Madsen (IL)
and Frank H. Jeys (TX) loads a group of files to ramdisk at the
beginning of a work session and saves all modified files back to hard
disk at the end of the session. This volume also includes Kittylint, a
"tiny lint" and calc87, a calculator program for Eco C-88, both from
Dan Schechter (ND); and Anywhere, an enhanced where, by John Teichert,
Jr.

CUG216.01-ANYWHERE.C source
By John Teichert Jr., Mark S. Ackerman. Locate files on the PC hard
disk. Can be set up to search multiple hard disks. => ANYWHERE.DOC,
AW.EXE. [MS-DOS: MSC]

CUG216.02-ANYWHERE.DOC doc
By John Teichert Jr. Documentation for ANYWHERE. => ANYWHERE.C.

CUG216.03-AW.EXE executable
By John Teichert Jr., Mark S. Ackerman. WHERE.C. [MS-DOS]

CUG216.04-C-USER.TXT doc
By Frank H. Jeys. Documentation for scanfils. => SCANFILS.C.

CUG216.05-CALC87.C source
By Dan Schechter. Calculator program written to call on ECO C's 8087
emulation routines. Basic arithmetic plus sin, cos, tan, arcsin,. =>
CALC87.C. [CP/M, MS-DOS: AZTEC, ECO-C]

CUG216.06-CALC87.DOC doc
By Dan Schechter. Documentation for CALC87. => CALC87.C. [CP/M,
MS-DOS: AZTEC, ECO-C]

CUG216.07-CATALOG.216 doc
Listing of files, their authors and a short description of the file.
=> INDEX.

CUG216.08-CLL.BAT batch
By Frank H. Jeys. Example batch file that utilizes scanfils. =>
C-USER.TXT. [MS-DOS]

CUG216.09-DSZ.1 doc
UNIX style manual page for DSZ command. In Nroff format. => DSZ.EXE.

CUG216.10-DSZ.EXE executable
YMODEM, ZMODEM file transfer subprogram designed to be called from a
communications program or bulletin board. Uses. => DSZ.1. [MS-DOS]

CUG216.11-GZ doc
By Chuck Forsberg. SZ command file. SZ.C.

CUG216.12-INDEX doc
By Dan Schechter. Description of files. CATALOG.216.

CUG216.13-KITTYLNT.C source
By Dan Schechter. Kitty Lint. A mini-lint that checks delimiters, line
termination, printf statements and for loops. CP/M version.
KITTYLNT.C88, KlTTYLNT.COM. [CP/M: AZTEC]

CUG216.14-KITTYLNT.C88 source
By Dan Schechter. Kitty Lint 88. MS-DOS version of KITTYLNT.C. =>
KITTYLNT.C. [MS-DOS: ECO-C]

CUG216.15-KITTYLNT.COM executable
By Dan Schechter. => KITTYLNT.C, KITTYLNT.C88. [CP/M: AZTEC]

CUG216.16-KITTYLNT.DOC doc
By Dan Schechter. Documentation for KITTYLNT. => KITTYLNT.C,
KITTYLNT.C88.

CUG216.17-MEMO doc
By Dan Schechter. CALC87.C output file. CALC87.C.

CUG216.18-MINIRB.1 doc
By Chuck Forsberg. UNIX style manual page for MINIRB in Nroff format.
=> MINIRB.C.

CUG216.19-MINIRB.C source
By Chuck Forsberg, omen Technology Inc.. A bootstrap program for UNIX
to receive files from computers running YMODEM. MINIRB.1. [UNIX,
MS-DOS]

CUG216.20-NSWEEP.COM executable
Disk sweep utility for CP/M. [CP/M]

CUG216.21-PROGS.DOC doc
By Chuck Forsberg. Formatted pages for manual for UNDOS, RZ, SZ, DSZ.
=> UNDOS.C, RZ.C, SZ.C, DSZ.EXE. [UNIX, MS-DOS]

CUG216.22-RBSB.C source
By Chuck Forsberg. Terminal mode control from RB/SB ancestor. =>
ZMODEM.DOC. [UNIX]

CUG216.23-RZ.1 doc
By Chuck Forsberg. UNIX style manual page for RZ. => RZ.C. Nroff
format.

CUG216.24-RZ.C source
By Chuck Forsberg. UNIX ZMODEM: Receives Files.. Receives files and
commands from computers running Professional-YAM, PowerCom, YAM, IMP,
or programs supporting. => RZ.1, SZ, DSZ.EXE, MINIRB.C, PROGS.DOC.
[UNIX, MS-DOS]

CUG216.25-SAVEFILS.BAT batch
By Frank H. Jeys. output batch file generated by scanfils. =>
SCANFILS.C.

CUG216.26-SCANFIL.MAP data
By Frank H. Jeys. Map file. => SCANFILS.C. [MS-DOS: MSC]

CUG216.27-SCANFILS.C source
By Frank H. Jeys. Generates a batch file to backup only files which
have changed since an earlier scanfils execution. => C-USER.TXT,
CCL.BAT. [MS-DOS: MSC]

CUG216.28-SCANFILS.EXE executable
By Frank H. Jeys. => SCANFILS.C. [MS-DOS: MSC]

CUG216.29-SCANFILS.FOR source
By Frank H. Jeys. FORTRAN version of SCANFILS. => SCANFILS.C.

CUG216.30-SCANFILS.LST doc
By Frank H. Jeys. Compiler listing. SCANFILS.C. [MS-DOS]

CUG216.31-SCANFILS.OBJ object
By Frank H. Jeys. => SCANFILS.C. [MSC]

CUG216.32-SZ.1 doc
By Chuck Forsberg. => SZ.C. Nroff format.

CUG216.33-SZ.C source
By Chuck Forsberg. UNIX ZMODEM: Send Files. UNIX utility to send files
and commands to computers running Professional-YAM, PowerCom, YAM,
IMP, or programs supporting. => SZ.1, ZMODEM.DOC, DSZ.EXE, MINIRB.C,
PROGS.DOC. [UNIX, MS-DOS]

CUG216.34-UNDOS.1 doc
By Chuck Forsberg. UNIX style manual page for UNDOS. => UNDOS.C.

CUG216.35-UNDOS.C source
By Chuck Forsberg. Converts MS-DOS or CP/M format source files to UNIX
format. UNDOS.1, XMODEM.DOC. [UNIX, MS-DOS]

CUG216.36-ZM.C source
By Chuck Forsberg. ZMODEM protocol primitives. => ZMODEM.DOC. [UNIX,
MS-DOS]

CUG216.37-ZMODEM.DOC doc
By Chuck Forsberg, omen Technology Inc.. The ZMODEM Asynchronous Inter
Application File Transfer Protocol. Full documentation and development
history. RZ.C, SZ.C, ZM.C, RBSB.C, ZM.C. [UNIX, MS-DOS]

CUG216.38-ZMODEM.H header
By Chuck Forsberg. Manifest constants for ZMODEM. => ZMODEM.DOC, ZM.C.

==============================================================================
CUG217 -
-----------

Spell and Dictionary Part I
By Kenji Hino, Bob Denny. [public] 1 disk. Contains a spelling checker
and half the dictionary on CUG217. The rest of the dictionary is on
CUG218. Kenji Hino rewrote the package from a Software Tools version.
The disk contains three executable versions developed under Microsoft
C. SPELLC is quite portable and should compile under most compilers.
SPELLS is compiled with the small model option, SPELLC with compact
model, and SPELLH with hugh model. The nine dictionary data files will
require at least 500 Kb when concatenated. Spell copies named files to
standard output while looking up each word in a dictionary. Misspelled
words are displayed with asterisks beneath.

CUG217.01-HEADER.CUG doc
File headers. => SPELL.DOC, HY.C.

CUG217.02-HY.C source
By Bob Denny. Hyphenates words from standard input. => HY.EXE.
[MS-DOS: MSC]

CUG217.03-HY.EXE executable
By Bob Denny. => HY.C. [MS-DOS: MSC]

CUG217.04-SPELL.C source
By Kenji Hino. Spelling Checker. SPELL.DOC, CUG218. [MS-DOS: MSC]

CUG217.05-SPELL.DOC doc
By Kenji Hino. User and program documentation. => SPELL.C, SPELLS.EXE,
SPELLH.EXE, SPELLC.EXE.

CUG217.06-SPELLO.DAT data
Dictionary Part O (A - Bright). SPELL*.DAT.

CUG217.07-SPELL1.DAT data
Dictionary Part 1 (Brighten - Deduce). SPELL*.DAT.

CUG217.08-SPELL2.DAT data
Dictionary Part 2 (Deduced - Floss). => SPELL*.DAT.

CUG217.09-SPELLC.EXE executable
By Kenji Hino. Spell with Compact Model. SPELL.C, SPELL.DOC. [MS-DOS:
MSC]

CUG217.10-SPELLH.EXE executable
By Kenji Hino. Spell with Huge Model. SPELL.C, SPELL.DOC. [MS-DOS:
MSC]

CUG217.11-SPELLS.EXE executable
By Kenji Hino. Spell with Small Model. SPELL.C, SPELL.DOC. [MS-DOS:
MSC]

==============================================================================
CUG218 -
-----------

Spell and Dictionary Part 11
By Kenji Hino, Bob Denny. [public] 2 disks. See CUG217.

CUG218.01-DIGRAM.C source
By Bob Denny. Hyphenation Diagram Tables. => HYPHEN.C, SUFFIX.C.
[MS-DOS: MSC] From DECUS.

CUG218.02-HYPHEN.C source
By Bob Denny. Hyphenation Module. SUFFIX.C, DIGRAM.C. [MS-DOS: MSC]
From DECUS.

CUG218.03-SPELL3.DAT data
Dictionary Part 3 (Flotilla - Instructed). CUG217, SPELL*.DAT.

CUG218.04-SPELL4.DAT data
Dictionary Part 4 (Instructions - Ms). SPELL*.DAT.

CUG218.05-SPELL5.DAT data
Dictionary Part 5 (Msec - Prosecution).

CUG218.06-SPELL6.DAT data
Dictionary Part 6 (Prosecutions - Skipjack). => SPELL*.DAT.

CUG218.07-SPELL7.DAT data
Dictionary Part 7 (SkipI - Unasterisked). => SPELL*.DAT.

CUG218.08-SPELL8.DAT data
Dictionary Part 8 (Unattacked - Zworykin). => SPELL*.DAT.

CUG218.09-SUFFIX.C source
By Bob Denny. Suffix Table for Hyphenation. => HYPHEN.C, DIGRAM.C.
[MS-DOS: MSC] From DECUS.

==============================================================================
CUG219 -
-----------

6502 Cross Assemblers
Contains 6502 and 65C02 assemblers by William Colley 111 (OH). These
assemblers have compiled under Aztec, C86, Aztec Cll, Eco-C, HP-UX,
Microsoft C and QNIX C. Plus an 8048 cross assembler that compiles
under Eco-C88, Microsoft, DeSmet and BSD 4.2 UNIX. [public]

CUG219.01-A48.C 0.0 source
Portable 8048 Cross-Compiler. By William C. Colley III. Assemble code
for the Intel 8048 family of microprocessors. All assembler functions
supported except relocation, linkage and macros. => A48.DOC A48.H
A48EVAL.C A48UTIL.C. [CP/M-80, CP/M-86, MS-DOS, PC-DOS, QNK, HP-UX:
AZTEC, Cl 86, ECO, LC, MSC, QNK, HPUX]

CUG219.02-A48.DOC doc
Documentation. By Wlliam C. Colley III. => A48.C.

CUG219.03-A48.H header
By Wlliam C. Colley III. Header file including compile, assemble and
link instructions for compilers. => A48.C.

CUG219.04-A48EVAL.C 0.0 source
Expression Evaluator and Lexical Analyzer. By William C. Colley III.
=> A48.C.

CUG219.05-A48UTIL.C 0.0 source
By Wlliam C. Colley III. Symbol table building and searching, opcode
and operator table searching, listing file output, hex file output,
error flagging. => A48.C.

CUG219.06-A65.C 0.0 source
6502 Portable Cross-Assembler. By William C. Colley III. Assemble code
for the MOS Tech 6502 and Rockwell 65C02 microprocessor (portable). =>
A65.DOC A65.H A65EVAL.C A65UTIL.C. [CP/M, CP/M-
86, HP-UX, MS-DOS, QNIX AZTEC, CI 86, ECO, HP-UX, LC, MSC, QNIX]

CUG219.07-A65.DOC doc
6502/65C02 Cross-Assembler Documentation. By William C. Colley III. =>
A65.C A65C.C.

CUG219.08-A65.H header
By William C. Colley 111. Header file including compile, assemble and
link instructions for compilers. => A65.C.

CUG219.09-A65C.C source
65C02 Portable Cross-Assembler. By William C. Colley 111. Produces
Rockwell 65C02 microprocessor. This program is written in portable C.
All assembler functions are supported except relocation, linkage, and
macros. => A65C.H A65CEVAL.C A65CUTIL.C A65.DOC TEST65C.ASM. [CP/M,
CP/M 86, MS-DOS, QNIX, PC-DOS: AZTEC, Cl 86, ECO, HP-UX, LC, MSC, QNK]

CUG219.10-A65C.H header
By William C. Colley 111. Header file including compile, assemble and
link instructions for compilers. => A65C.C.

CUG219.11-A65CEVAL.C source
6SC02 Portable Cross-Assembler. By William C. Colley 111. Assembler's
expression evaluator and lexical analyzer. => A65C.C.

CUG219.12-A65CUTIL.C source
65C02 Portable Cross-Assembler. By Will Tam C. Colley 111. Contains
the symbol table builder and searcher, opcode and operator table,
listing file output, hex file output, and error checking. => A65C.C.

CUG219.13-A65EVAL.C source
6502 Cross-Assembler (portable). By William C. Colley 111. Assembler's
expression evaluator and lexical analyzer. => A65.C.

CUG219.14-A65UTIL.C source
6502 Cross-Assembler (portable). By William C. Colley 111. Contains
the symbol table builder and searcher, opcode and operator table,
listing file output, hex file output, and error flagging. => A65.C.

CUG219.15-READ.ME2 doc
By William C. Colley 111. Disk Summary.

CUG219.16-TEST48.ASM source
Portable 8048 Cross-Assembler Test Program. By William C. Colley 111.
=> A48.C.

CUG219.17-TEST65.ASM source
Portable 6502 Cross-Assembler Test File. By William C. Colley 111. =>
A65.C.

CUG219.18-TEST65C.ASM source
Portable 65C02 Cross-Assembler Test Program. By William C. Colley 111.
=> A65C.C.

==============================================================================
CUG220 -
-----------

Windows BOSS
By Philip A. Mongelluzzo. [share2] 3 disks. Windows BOSS is an
extensive library of C functions for the creation, management and
manipulation of text windows. The package provides basic window
functions such as open/close windows as well as pop-up windows, pull
down menus, status lines, a context sensitive on-line help system and
mouse control functions. The Data Clerk (part of the package) can
build data entry form screens in windows created by The Window BOSS.
The package includes documentation, demo programs, demo executable and
libraries for Microsoft C/Quick C, Borland Turbo C/C++, Lattice C,
Watcom C, Mix Power C, Datalight C, Aztec C and C86. Because of the
volume of programs and its MS-DOS specific nature, the distribution
disk contains MS-DOS specific archived files.

CUG220.01-AZTECS.BAT batch
Compiler driver - Aztec

CUG220.02-BOSS.MAN doc
Documentation and Registration Form.

CUG220.03-BOSS.TOC doc
Table of Contents for documentation.

CUG220.04-BOSSDEMO.C source
Extensive demonstration program, using all possible window functions.
=> BOSSDEMO.MAK, BOSSDEMO.PRT, BOSSDEMO.EXE. [MS-DOS: AZTEC, TC, MSC,
LC, MIXC, DLC, ZORTECH C/C++, C186, WATCOMC]

CUG220.05-BOSSDEMO.EXE executable
Demo Program [MS-DOS]

CUG220.06-C86.BAT batch
Compilation driver- C86

CUG220.07-DLCS.BAT batch
Compiler driver - Datalight C

CUG220.08-GENINDEX.C source
Create index from test file. [MS-DOS]

CUG220.09-HELLO.C source
Sample program. [MS-DOS]

CUG220.10-INTELC.HLP doc
Help message file. => HELP.C.

CUG220.11-INTELC.NDX doc
Index output file. => GENINDEX.C, INTELC.HLP.

CUG220.12-LCS3.BAT batch
Compiler driver - Lattice 3.4

CUG220.13-LCS6.BAT batch
Compiler driver - Lattice 6.0

CUG220.14-LOADAZ.BAT batch
Link batch file - Aztec

CUG220.15-LOADC86.BAT batch
Link batch file - C186

CUG220.16-LOADDLC.BAT batch
Link batch file - Datalight

CUG220.17-LOADLC3.BAT batch
Link batch file - Lattice 3.4

CUG220.18-LOADLC6.BAT batch
Link batch file - Lattice 6.0

CUG220.19-LOADMS5.BAT batch
Link batch file - Microsoft C 5.x

CUG220.20-LOADMS6.BAT batch
Link batch file - Microsoft C 6.x

CUG220.21-LOADPC.BAT batch
Link batch file - Mix Power C

CUG220.22-LOADQC20.BAT batch
Link batch file - Quick C 2.0

CUG220.23-LOADQC25.BAT batch
Link batch file - Quick C 2.5

CUG220.24-LOADTC.BAT batch
Link batch file - Turbo C

CUG220.25-LOADTS.BAT batch
Link batch file - TopSpeed C

CUG220.26-LOADWAT.BAT batch
Link batch file - Watcom C

CUG220.27-LOADWEC.BAT batch
Link batch file - EXPRESS C

CUG220.28-LOADZTC.BAT batch
Link batch file - Zortech C

CUG220.29-MSC5.BAT batch
Compiler driver - Microsoft C 5.x

CUG220.30-MSC6.BAT batch
Compiler driver - Microsoft C 6.x

CUG220.31-MSQC20.BAT batch
Compiler driver - Quick C 2.0

CUG220.32-MSQC25.BAT batch
Compiler driver - Quick C 2.5

CUG220.33-MWIN.MIX library
BOSS library - Mix Power C [ MIXC]

CUG220.34-PCCM.BAT batch
Compiler Driver - Mix Power C

CUG220.35-REV.HST source
Revision history.

CUG220.36-REV.LEV doc
Current version.

CUG220.37-SAMPLE.C source
Data entry sample program

CUG220.38-SAZTEC.LIB library
BOSS library - Aztec C [ AZTEC]

CUG220.39-SC86.LIB library
Small Memory Library - C186. [ C186]

CUG220.40-SDLC.LIB library
Small Memory Library - Data light. [ DLC]

CUG220.41-SLAT3.LIB library
Small Memory Library - Lattice 3.4. [LC]

CUG220.42-SLAT6.LIB library
Small Memory Library - Lattice 6.0. [LC]

CUG220.43-SMSC5.LIB library
Small Memory Library - Microsoft 5.xx. [MSC5]

CUG220.44-SMSC6.LIB library
Small Memory Library - Microsoft 6.x. [MSC6]

CUG220.45-SMSQC20.LIB library
BOSS library - QuickC 2.0 [QUICKC]

CUG220.46-SMSQC25.LIB library
BOSS library - QuickC 2.5 [QUICKC]

CUG220.47-STC.LIB library
Small C Library - Turbo C. [TC]

CUG220.48-TCS.BAT batch
Compiler driver - Turbo C

CUG220.49-TSAPP.PRJ project
Make file - TopSpeed C

CUG220.50-TSC.LIB library
BOSS library - TopSpeed C [TOPSPEED]

CUG220.51-TSS.BAT batch
Compiler Driver - TopSpeed C

CUG220.52-TSSWIN.PRJ project
Make file - TopSpeed C

CUG220.53-WATEC.LIB library
BOSS library - EXPRESS C [EXPRESSC]

CUG220.54-WATOC.LIB library
BOSS library - Watcom C [WATCOMC]

CUG220.55-WECS.BAT batch
Compiler Driver - EXPRESS C

CUG220.56-WINDOWS.EXT
Type checking include file

CUG220.57-WINDOWS.FN5 doc
Type Checking Include File. => WINDOWS.H. [MS-DOS]

CUG220.58-WINDOWS.FN6
Type checking include file

CUG220.59-WINDOWS.FNT
Type checking include file

CUG220.60-WINDOWS.FNZ
Type checking include file

CUG220.61-WINDOWS.H header
BOSS Include Files.

CUG220.62-WN_FRMGE.C source
Data entry form reader

CUG220.63-WN_GBOOL.C source
Data entry function (logical)

CUG220.64-WN_GDATE.C source
Data entry function (dates)

CUG220.65-WN_GDOUB.C source
Data entry function (double)

CUG220.66-WN_GFLOA.C source
Data entry function (floats)

CUG220.67-WN_GINT.C source
Data entry function (integer)

CUG220.68-WN_GLONG.C source
Data entry function (long)

CUG220.69-WN_GPHON.C source
Data entry function (phone)

CUG220.70-WN_GPWOR.C source
Data entry function (password)

CUG220.71-WN_GTEXT.C source
Data entry function (various text)

CUG220.72-WN_GTIME.C source
Data entry function (time)

CUG220.73-WN_GUINT.C source
Data entry function (unsigned int)

CUG220.74-WN_GULON.C source
Data entry function (unsigned long)

CUG220.75-WN_HELP.C source
Help function source

CUG220.76-WN_IEMSG.C source
Data entry error message handler

CUG220.77-WN_IHMSG.C source
Data entry help message handler

CUG220.78-WN_POPUP.C source
Popup function source

CUG220.79-WN_PUTS.C source
Source to wn_puts()

CUG220.80-WOCS.BAT batch
Compiler Driver - Watcom C

CUG220.81-ZTCS.BAT batch
Compiler Driver - Zortech C

CUG220.82-ZTECH.LIB library
BOSS library - Zortech C ] ZORTECH C/C++]

==============================================================================
CUG221 -
-----------

6809 C For Flex
A rewrite of Ron Cain's Small C targeted for 6809 processors running
under the FLEX operating System. Dieter Flunker (Italy), has expanded
slightly on the language subset implemented by Cain and includes a
peephole code optimizer. [public]

CUG221.01-ABS.ASM source

CUG221.02-ABS.C source
Return absolute value

CUG221.03-ATOI.ASM source

CUG221.04-ATOI.C source
Convert string to integer

CUG221.05-C.RTL source

CUG221.06-CC.DOC doc
By Dieter H. Flunkert.

CUG221.07-CC1 TO CC91 2.3 source
Small-C compiler for 6809 FLEX By Pieter H. Flunkert, Ron Cain.
Small-C compiler which produces 6809 assembler output. This volume
includes both C source and compiled output (as optimized assembly
source). 16809 FLEX: VAX VMS C] Requires TSC relocatable assembler,
library generator and linking loader.

CUG221.08-CCASM.COM executable
Assemble C sources

CUG221.09-CCBUILD.COM executable
Build the C run time library

CUG221.10-CCDEF.C source
Small C compiler definitions

CUG221.11-CCEQU.SYS source
Small C compiler system equates

CUG221.12-CCPOLL.ASM source

CUG221.13-CCPOLLC source
check terminal

CUG221.14-CCROOT.ASM source
root module for Small C compiler

CUG221.15-DEBUG.ASM source
Debug part of Small C. Prints the entered function name

CUG221.16-FPUTS.ASM source

CUG221.17-FPUTS.C source
put string in stream

CUG221.18-ISALPHA.C source
Check if alpha character

CUG221.19-ISDIGIT.ASM source

CUG221.20-ISDlGlT.C source
Check if digit

CUG221.21-ISLOWER.ASM source

CUG221.22-ISLOWER.C source
Check if lower case character

CUG221.23-ISPLPHA.ASM source

CUG221.24-ISSPACE.ASM source

CUG221.25-ISSPACE.C source
Check if space, newline or tab

CUG221.26-ISUPPER.C source
Check if upper case character

CUG221.27-ITOA.ASM source

CUG221.28-ITOA.C source
Convert integer to string

CUG221.29-LEFT.ASM source

CUG221.30-LEFT.C source
left adjust and null terminate a string

CUG221.31-PEEPHOLE.C source
By Dieter H. Flunkert. Peephole optimizer for 6809 code

CUG221.32-PRINTF.ASM source

CUG221.33-PRINTF.C source
printf() - formatted print

CUG221.34-README.ASM doc

CUG221.35-README.DOC doc
Documentation of the disk contents

CUG221.36-README2 doc
Warning of peephole.c

CUG221.37-REVERSE.ASM source

CUG221.38-REVERSE.C source
reverse string in place

CUG221.39-STRCAT.ASM source

CUG221.40-STRCAT.C source
concatenate two strings

CUG221.41-STRCMP.ASM source

CUG221.42-STRCMP.C source
Compare two strings

CUG221.43-STRCPY.C source
copy string

CUG221.44-STRLEN.ASM source

CUG221.45-STRLEN.C source
return string length

CUG221.46-STRNCMP.C source
compare strings

CUG221.47-TOLOWER.ASM source

CUG221.48-TOLOWER.C source
invert character to lower case

CUG221.49-TOUPPER.ASM source

CUG221.50-TOUPPER.C source
convert character to upper case

==============================================================================
CUG222 -
-----------

Small C for CP/M Doc and Exec
F.A. Scacchitti's (NY) significantly enhanced version of J.E.
Hendrix's Small C v2.1. This CP/M implementation handles global
initialization, external statics, the ternary conditional operator,
multiple levels of indirection, global multi-dimensional arrays,
arrays of pointer, hex and octal constants, and nested includes. Also
includes an expanded standard library. Contains the executable COM
file, relocatable libraries and user documentation. Source is on
CUG223. [public]

CUG222.01-CC.COM 2.7 executable
Executable Small C Compiler. By F.A. Scacchitti. => CC.DOC CUG223.
[CP/M:]

CUG222.02-CC.DOC 2.7 doc
Small C Documentation. By F.A. Scacchitti. => CC.COM CUG223- [CP/M:]

CUG222.03-CCC.SUB batch
By F.A. Scacchitti. Submit file to produce a .COM file => CC.COM.
[CP/M:]

CUG222.04-CCM.SUB batch
Submit file to produce a .MAC file. By F.A. Scacchitti. => CC.DOC.
[CP/M:]

CUG222.05-CCR.SUB batch
Submit file to produce a .REL file. By F.A. Scacchitti. => CC.DOC.
[CP/M:]

CUG222.06-CDISKS.TXT doc
By F.A. Scacchitti. Description of files => CC.DOC.

CUG222.07-CLIB.DOC doc
By F.A. Scacchitti. Documentation for library. => CC.DOC.

CUG222.08-CLIB.LST doc
By F.A. Scacchitti. Listing of library functions => CLIB.DOC.

CUG222.09-CLIB.REL object
Relocatable library. By F.A. Scacchitti.=> CLIB.DOC. [CP/M:]

CUG222.10-LCC.SUB batch
Submit file for linking multiple .REL's. By F.A. Scacchitti. =>
CC.DOC. [CP/M:]

CUG222.11-RCC.SUB batch
By F.A. Scacchitti. Like CCC but links in RDRTL first => CC.DOC
CCC.SUB. [CP/M:]

CUG222.12-RDRTLREL object
Redirectable output module. By F.A. Scacchitti. => CLIB.DOC. [CP/M:]

CUG222.13-STDIO.H header
By F.A. Scacchitti. Standard 1/0 header file => CC.COM. [CP/M:]

CUG222.14-WARNING.CUG doc
Disk contents. The source files are on disk 223.

==============================================================================
CUG223 -
-----------

Small C for CP/M Source The source code for a Small C compiler. A full
description appears with the entry for CUG222. To construct the
compiler you must have an M80 compatible assembler. [public]

CUG223.01-ABORT.MAC source
By F.A. Scacchitti. [CP/M:M80]

CUG223.02-ABS.C source
By F.A. Scacchitti. Returns the absolute value of an integer. => CUG
222. [CP/M: Small C]

CUG223.03-ARGS.C source
By F.A. Scacchitti. Standard argc function. => CUG 222. [CP/M:]

CUG223.04-ARRAY.C source
By F.A. Scacchitti. Array test program. => CUG222. [CP/M:]

CUG223.05-ATOI.C source
By F.A. Scacchitti. Converts a character to an integer. => CUG222.
[CP/M:]

CUG223.06-ATOIB.C source
By F.A. Scacchitti. Converts an unsigned integer to base b. => ATOI.C
CUG [CP/M ]

CUG223.07-AVAIL.C source
By F.A. Scacchitti. Returns the number of bytes of available memory.
=> CUG222. [CP/M:]

CUG223.08-BDOS.MAC source
By F.A. Scacchitti. Allows CP/M calls from within C. [CP/M: M80]

CUG223.09-CALL1.MAC source
By F.A. Scacchitti. Multiply routine. [CP/M:]

CUG223.10-CALL2.MAC source
By F.A. Scacchitti. Divide routine. [CP/M:]

CUG223.11-CALL3.MAC source
By F.A. Scacchitti. Switch routine. [CP/M:]

CUG223.12-CALL4.MAC source
By F.A. Scacchitti. Arithmetic shift. [CP/M:]

CUG223.13-CALL5.MAC source
By F.A. Scacchitti. Main arithmetic routine. => CALL1.MAC CALL2.MAC
CALL3.MAC CALL4.MAC. [CP/M:]

CUG223.14-CALLOC.C source
By F.A. Scacchitti. Cleared memory allocation of n items of specified
bytes. [CP/M: Small C]

CUG223.15-CC.DEF source
By F.A. Scacchitti. Listing of definitions and history of changes.
[CP/M:]

CUG223.16-CC1.C 2.7 source
Small-C Compiler Part 1. By J.E. Hendrix. => CUG 222. [CP/M: Small C]

CUG223.17-CC11.C 2.7 source
By J.E. Hendrix. Source code for Small C. => CC1.C. [CP/M:]

CUG223.18-CC12.C 2.7 source
By J.E. Hendrix. Open an include file. => CC1.C. [CP/M:]

CUG223.19-CC13.C 2.7 source
By J.E. Hendrix. Statement parser. => CC1.C. [CP/M:]

CUG223.20-CC2 source
By J.E. Hendrix. Part 2 - Small C compiler. => CC1.C. [CP/M:]

CUG223.21-CC21.C 2.7 source
By J.E. Hendrix. => CC1.C. [CP/M:]

CUG223.22-CC22.C 2.7 source
By J.E. Hendrix. => CC1.C CC2.C. [CP/M:]

CUG223.23-CC3.C 2.7 source
By J.E. Hendrix. Part 3 - Small C => CC1.C. [CP/M:]

CUG223.24-CC31.C source
By J.E. Hendrix. [CP/M:]

CUG223.25-CC32.C 2.7 source
By J.E. Hendrix. => CC1.C CC3.C.

CUG223.26-CC33.C 2.7 source
By J.E. Hendrix. => CC1.C CC3.C. [CP/M:]

CUG223.27-CC4.C 2.7 source
By J.E. Hendrix. Part 4 - Small C. [CP/M:]

CUG223.28-CC41.C 2.7 source
By J.E. Hendrix. Prints all assembler info, before any code is
generated. => CC1.C CC4.C. [CP/M:]

CUG223.29-CC42.C source
By J.E. Hendrix. [CP/M:]

CUG223.30-CCC.SUB batch
By F.A. Scacchitti. Submit file to produce a .COM file. [CP/M:]

CUG223.31-CCCC.SUB batch
By F.A. Scacchitti. Submit file for compiling the compiler. [CP/M:]

CUG223.32-CCLIST.SUB batch
By F.A. Scacchitti. Submit file for listing the compiler. [CP/M:]

CUG223.33-CCM.SUB batch
By F.A. Scacchitti. Submit file to produce .MACfile. [CP/M:]

CUG223.34-CCR.SUB batch
By F.A. Scacchitti. Submit file to produce .RELfile. [CP/M:]

CUG223.35-CLEARERR.C source
By F.A. Scacchitti. Clears errors and end of file marks in fd. [CP/M:
Small C]

CUG223.36-CLS.C source
By F.A. Scacchitti. Clear screen program. [CP/M:]

CUG223.37-CPM10.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.38-CPMDISK.MAC source
By F.A. Scacchitti. Log in disk number. [CP/M:]

CUG223.39-CSEEK.C source
By F.A. Scacchitti. Position fd to the 128 byte record indicated by
"offset" relative to the point indicated by "base". [CP/M: Small C]

CUG223.40-CTELL.C source
By F.A. Scacchitti. [CP/M:]

CUG223.41-DELAY.MAC source
By F.A. Scacchitti. Delay n milliseconds. [CP/M: M80] based on 4 MHz
clock.

CUG223.42-DOLDDR.MAC source
By F.A. Scacchitti. [CP/M:]

CUG223.43-DSLDIR.MAC source
By F.A. Scacchitti. [CP/M:]

CUG223.44-DTOI.C source
By F.A. Scacchitti. Converts signed decimal string to integer number
returns field length, else ERR on error. [CP/M: Small C]

CUG223.45-ERATOS.C source
By F.A. Scacchitti. Eratosthenes Sieve Prime Number Program. [CP/M:]

CUG223.46-EXIT.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.47-FA.C source
File Append Program. By F.A. Scacchitti. [CP/M: Small C]

CUG223.48-FB.C source
File Copy (Bin) Program. By F.A. Scacchitti. [CP/M:]

CUG223.49-FC.C source
File Copy Program. By F.A. Scacchitti. Copies file from file to file.
[CP/M:]

CUG223.50-FEOF.C source
By F.A. Scacchitti. Returns true only if end of file is reached.
[CP/M:]

CUG223.51-FERROR.C source
By F.A. Scacchitti. Returns true only if a file error has occurred.
[CP/M:]

CUG223.52-FFD.C source
Formfeed Program. By F.A. Scacchitti. [CP/M:]

CUG223.53-FFLUSH.C source
Flush. By F.A. Scacchitti. [CP/M:]

CUG223.54-FGETC.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.55-FGETS.MAC source
By F.A. Scacchitti. [CP/M:]

CUG223.56-FILELIB.MAC source
By F.A. Scacchitti. Continue the constructs necessary for handling
file I/O. [CP/M:]

CUG223.57-FM.C source
File Modification Program. By F.A. Scacchitti. Copies from source file
to new file modifying on the fly. [CP/M: Small C]

CUG223.58-FPRINTF.C source
Formatted Print Statement. By F.A. Scacchitti. Operates as per K&R.
[CP/M:]

CUG223.59-FPUTC.MAC source
By F.A. Scacchini. [CP/M: M80]

CUG223.60-FPUTS.MAC source
By F.A. Scacchitti. [CP/M:]

CUG223.61-FREAD.C source
By F.A. Scacchitti. [CP/M: Small C]

CUG223.62-FREBUF.C source
By F.A. Scacchitti. [CP/M:]

CUG223.63-FREE.C source
By F.A. Scacchitti. Free previously allocated memory block. Memory
must be freed in the reverse order from which it was allocated.
[CP/M:]

CUG223.64-FREE10.MAC source
By F.A. Scacchitti. Mark a buffer as free. [CP/M: M80]

CUG223.65-FSCANF.C source
Formatted Read. By F.A. Scacchitti. Operates as described by K&R.
[CP/M: Small C]

CUG223.66-FWRITE.C source
By F.A. Scacchitti. [CP/M:]

CUG223.67-GETCHAR.C source
By F.A. Scacchitti. Direct console input via BDOS (6). [CP/M:]

CUG223.68-GETS.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.69-GRAB10.MAC source
By F.A. Scacchitti. Find an input buffer, and return its address.
[CP/M:]

CUG223.70-GRABUF.C source
By F.A Scacchitti. [CP/M: Small C]

CUG223.71-HELLO.C source
By F.A. Scacchitti. [CP/M:]

CUG223.72-INP.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.73-ISALNUM.C source
By F.A Scacchitti. Returns 'true' if c is alphanumeric. [CP/M: Small
C]

CUG223.74-ISALPHA.C source
By F.A. Scacchitti. Return 'true' if c is alphabetic. [CP/M:]

CUG223.75-ISASCII.C source
By F.A Scacchitti. Return 'true' if c is an ASCII character. [CP/M:]

CUG223.76-ISATTY.C source
By F.A. Scacchitti. Pie turn 'true' if fd is a device, else 'false'.
[CP/M:]

CUG223.77-ISCNTRL.C source
By F.A. Scacchitti. Return 'true' if c is a control character. [CP/M:]

CUG223.78-ISDIGIT.C source
By F.A. Scacchitti. Return 'true' if c is a digit. [CP/M:]

CUG223.79-ISGRAPH.C source
By F.A Scacchitti. Return 'true' is c is a graphic character. [CP/M:]

CUG223.80-ISLOWER.C source
By F.A Scacchitti. Return 'true' if c is a lower case character.
[CP/M:]

CUG223.81-ISPRINT.C source
By F.A. Scacchitti. Return 'true' if c is a printable character.
[CP/M:]

CUG223.82-ISPUNCT.C source
By F.A Scacchitti. Return 'true' if c is a punctuation character.
[CP/M:]

CUG223.83-ISSPACE.C source
By F.A. Scacchitti. Return 'true' is c is a white-space character.
[CP/M:]

CUG223.84-ISUPPER.C source
By F.A Scacchitti. Return 'true' if c is uppercase alphabetic. [CP/M:]

CUG223.85-ISXDIGIT.C source
By F.A. Scacchitti. Return 'true' if c is a hexidecimal digit. [CP/M:]

CUG223.86-ITOA.C source
By F.A. Scacchitti. Converts number to characters in string. [CP/M:]

CUG223.87-ITOAB.C source
By F.A Scacchitti. Converts "unsigned" n to characters in S using base
b. (non-standard) [CP/M:]

CUG223.88-ITOD.C source
By F.A Scacchitti. Convert number to signed decimal string of width sz
right adjusted, blank filled; returns 'str'. [CP/M:]

CUG223.89-ITOO.C source
By F.A Scacchitti. Converts number to octal string of length sz right
adjusted and blank filled. [CP/M:]

CUG223.90-ITOU.C source
By F.A Scacchitti. Converts number to unsigned decimal string of width
sz right adjusted. [CP/M:]

CUG223.91-ITOX.C source
By F.A Scacchitti. Convert number to hex string of length sz right
adjusted and blank filled. [CP/M:]

CUG223.92-LCC.SUB batch
By F.A Scacchitti. Submit file for linking multiple.REL's. [CP/M:]

CUG223.93-LEFT.C source
By F.A Scacchitti. Left-left adjust and null terminate a string.
[CP/M: Small C]

CUG223.94-LEXCMP.C source
By F.A Scacchitti. determines the relation between two values (,, = ).
[CP/M:]

CUG223.95-LIBID.C source
By F.A Scacchitti. Credit line for author, who created this library.
[CP/M:]

CUG223.96-MALLOC.C source
By F.A. Scacchitti. Returns the address of the allocated block, else
null for failure. [CP/M:]

CUG223.97-MAX.C source
By F.A. Scacchitti. [CP/M:]

CUG223.98-MIN.C source
By F.A. Scacchitti. [CP/M:]

CUG223.99-NEWLIB.SUB batch
By F.A. Scacchitti. Submit for generating library. [CP/M:]

CUG223.100-OTOI.C source
By F.A. Scacchitti. Converts unsigned octal string to integer number.
[CP/M: Small C]

CUG223.101-OUTP.MAC source
By F.A. Scacchitti. [CP/M:M80]

CUG223.102-PAD.C source
By F.A. Scacchitti. Place n occurrences of character at destination.
[CP/M: Small C]

CUG223.103-POLL.C source
By F.A. Scacchitti. Poll for console input or interruption. [CP/M:]

CUG223.104-PRNTF.C source
By F.A. Scacchitti. Formatted print, as per K&R. [CP/M:]

CUG223.105-PUTCHAR.C source
By F.A. Scacchitti. Normal console output via BDOS(2). [CP/M:]

CUG223.106-PUTLIST.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.107-PUTS.C source
By F.A. Scacchitti. Puts (string). [CP/M: Small C]

CUG223.108-RCC.SUB batch
By F.A. Scacchitti. Like ccc but links in RDRTL first. [CP/M:]

CUG223.109-RDRTL.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.110-READ.C source
By F.A. Scacchitti. [CP/M: Small C]

CUG223.111-RENAME.C source
By F.A. Scacchitti. [CP/M:]

CUG223.112-REVERSE.C source
By F.A. Scacchitti. Reverse string in place. [CP/M:]

CUG223.113-REWIND.C source
By F.A. Scacchitti. [CP/M:]

CUG223.114-SIGN.C source
By F.A. Scacchitti. Returns the sign of number. [CP/M:]

CUG223.115-STDIO.H header
By F.A. Scacchitti. [CP/M:]

CUG223.116-STRCAT.C source
By F.A. Scacchitti. Concatenate first argument to the back of the
second argument. [CP/M: Small C]

CUG223.117-STRCHR.C source
By F.A. Scacchitti. Returns pointer to 1st occurrence of C in string,
else zero. [CP/M:]

CUG223.118-STRCMP.C source
By F.A. Scacchitti. Compares two strings. [CP/M:]

CUG223.119-STRCPY.C source
By F.A. Scacchitti. copy a string. [CP/M:]

CUG223.120-STRLEN.C source
By F.A. Scacchitti. Returns the length of a string. [CP/M:]

CUG223.121-STRNCAT.C source
By F.A. Scacchitti. Concatenates n bytes of 'x' to end of 'y'. [CP/M:]

CUG223.122-STRNCMP.C source
By F.A. Scacchitti. Compares two strings for at most n characters and
returns an integer. [CP/M:]

CUG223.123-STRNCPY.C source
By F.A. Scacchitti. Copy n characters from source to destination.
[CP/M:]

CUG223.124-STRRCHR.C source
By F.A. Scacchitti. Search S for rightmost occurrence of C. [CP/M:]

CUG223.125-TIME.C source
By F.A. Scacchitti. Time set and display program. [CP/M:] Written for
Xerox 820.

CUG223.126-TOASCII.C source
By F.A. Scacchitti. Returns ASCII equivalent of C. [CP/M:]

CUG223.127-TOLOWER.C source
By F.A. Scacchitti. Converts uppercase C to lowercase C. [CP/M:]

CUG223.128-TOPOFMEM.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.129-TOUPPER.C source
By F.A. Scacchitti. Converts lowercase C to uppercase C. [CP/M: Small
C]

CUG223.130-UALLOC.C source
Memory Allocation. By F.A. Scacchitti. Returns the address of the
allocated block of memory or null, if the request is greater than
space available. [CP/M:]

CUG223.131-UNGETC.C source
By F.A Scacchitti. [CP/M:]

CUG223.132-UNLINK.C source
By F.A. Scacchitti. unlink (name) char *name; [CP/M:]

CUG223.133-UNLINK.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.134-UTOI.C source
By F.A. Scacchitti. Converts unsigned decimal string to integer
number. [CP/M: Small C]

CUG223.135-UW.C source
By F.A. Scacchitti. Strips Wordstar control symbols from a file.
[CP/M:]

CUG223.136-WC.C source
By F.A. Scacchitti. Text analysis utility. [CP/M:]

CUG223.137-WRITE.C source
By F.A Scacchitti. [CP/M:]

CUG223.138-XTOI.C source
Converts hex string to integer value.

CUG223.139-ZZBUF.MAC source
By F.A. Scacchitti. Used to preserve standard CP/M buffer for input
arguments. [CP/M: M80]

CUG223.140-ZZFIO.MAC source
By F.A. Scacchitti. File I/O storage variables. [CP/M:]

==============================================================================
CUG224 -
-----------

UtiliX
An MS-DOS implementation of several popular UNIX utilities. The
command behavior and options are similar to System V standards. This
shareware package was written and contributed by Tom Woods (MD).
[share2]

CUG224.01-CAT.EXE 2.0 executable
By Tom Woods. Concatenate and print files. => CAT.HLP. [MS-DOS:
DESMET]

CUG224.02-CAT.HLP 2.0 doc
By Tom Woods. Usage info. => CAT.EXE.

CUG224.03-CECHO.EXE 2.0 executable
By Tom Woods. Echo arguments. => CECHO.HLP. [MS-DOS: DESMET]

CUG224.04-CECHO.HLP 2.0 doc
By Tom Woods. Usage info. => CECHO.EXE.

CUG224.05-CHMOD.EXE 2.0 executable
By Tom Woods. Change file attributes. => CHMOD.HLP. [MS-DOS: DESMET]

CUG224.06-CHMOD.HLP 2.0 doc
By Tom Woods. Usage info. => CHMOD.EXE.

CUG224.07-CMP.EXE 2.0 executable
By Tom Woods. Compare two files. => CMP.HLP. [MS-DOS: DESMET]

CUG224.08-CMP.HLP 2.0 doc
By Tom Woods. Usage info. => CMP.EXE DIFF.EXE COM.EXE. [MS-DOS:]

CUG224.09-COMM.EXE 2.0 executable
By Tom Woods. Select or reject lines common to two sorted files. =>
COMM.HLP UNIO.EXE CMP.EXE. [MS-DOS: DESMET]

CUG224.10-COMM.HLP 2.0 doc
By Tom Woods. Usage info. => COMM.EXE.

CUG224.11-CTIME.EXE 2.0 executable
By Tom Woods. Time a command. => CTIME.HLP. [MS-DOS: DESMET]

CUG224.12-CTIME.HLP 2.0 doc
By Tom Woods. Usage info. => CTIME.EXE.

CUG224.13-EXPR.EXE 2.0 executable
By Tom Woods. Evaluate simple expression (long integer). => EXPR.HLP.
[MSDOS: DESMET]

CUG224.14-EXPR.HLP 2.0 doc
By Tom Woods. Usage Tnfo. => EXPR.EXE TEST.EXE HOC.EXE.

CUG224.15-FIND.EXE 2.0 executable
By Tom Woods. Search directories for a name. => FIND.HLP. [MS-DOS:
DESMET]

CUG224.16-FIND.HLP 2.0 doc
By Tom Woods. Usage info. => FIND.EXE. [MS-DOS:]

CUG224.17-GREP.EXE 2.0 executable
By Tom Woods. Search a file for a pattern (regular expression). =>
GREP.HLP. [MS DOS:]

CUG224.18-GREP.HLP 2.0 doc
By Tom Woods. Usage info. => GREP.EXE.

CUG224.19-HEAD.EXE 2.0 executable
By Tom Woods. Print the first few lines of a file. => HEAD.HLP.
[MS-DOS: DESMET]

CUG224.20-HEAD.HLP 2.0 doc
By Tom Woods. Usage info. => HEAD.EXE TAIL.EXE.

CUG224.21-HELP.EXE 2.0 executable
By Tom Woods. Display the online help files for the UTILK commands. =>
HELP.HLP. [MS-DOS: DESMET]

CUG224.22-HELP.HLP 2.0 doc
By Tom Woods. Usage info. => HELP.EXE.

CUG224.23-HOC.EXE 2.0 executable
By Tom Woods. An interactive language for floating point arithmetic.
=> HOC.HLP. [MSDOS: DESMET]

CUG224.24-HOC.HLP 2.0 doc
By Tom Woods. Usage info.

CUG224.25-INSTALL.BAT batch
By Tom Woods. Install Utilix to target drive. [MS-DOS:]

CUG224.26-LS.EXE 2.0 executable
By Tom Woods. List contents of directory. => LS.HLP. [MS-DOS: DESMET]

CUG224.27-LS.HLP 2.0 doc
By Tom Woods. Usage info. => LS.EXE.

CUG224.28-OD.EXE 2.0 executable
By Tom Woods. Octal, decimal, hex, ASCII, or floating point dump. =>
OD.HLP. [MSDOS: DESMET]

CUG224.29-OD.HLP 2.0 doc
By Tom Woods. Usage info. => OD.EXE.

CUG224.30-PR.EXE 2.0 executable
By Tom Woods. Print file in format suitable for a printer. => PR.HLP.
[MS-DOS: DESMET]

CUG224.31-PR.HLP doc
By Tom Woods. Usage info. => PR.EXE.

CUG224.32-REV.EXE executable
By Tom Woods. reverse lines of a file. => REV.HLP. [MS-DOS: DESMET]

CUG224.33-REV.HLP 2.0 doc
By Tom Woods. Usage info. => REV.EXE.

CUG224.34-RM.EXE 2.0 executable
By Tom Woods. Remove (unlink) files. => RM.HLP. [MS-DOS: DESMET]

CUG224.35-RM.HLP doc
By Tom Woods. Usage info. => RM.EXE RMDIR.EXE.

CUG224.36-SORT.EXE 2.0 executable
By Tom Woods. Sort lines in text files merging contents if multiple
files. => SORT.HLP. [MS-DOS: DESMET]

CUG224.37-SORT.HLP 2.0 doc
By Tom Woods. Usage info. => SORT.EXE.

CUG224.38-STRINGS.EXE 2.0 executable
By Tom Woods. Search a file for character strings. => STRINGS.HLP.
[MS-DOS: DESMET]

CUG224.39-STRINGS.HLP 2.0 doc
By Tom Woods. => STRINGS.EXE.

CUG224.40-TAIL EXE 2.0 executable
By Tom Woods. Print the last few lines of strings. => TAIL.HLP.
[MS-DOS: DESMET]

CUG224.41-TAIL.HLP 2.0 doc
By Tom Woods. Usage info. => TAIL.EXE.

CUG224.42-TEE.EXE 2.0 executable
By Tom Woods. Output the input to several files. => TEE.HLP. [MS-DOS:
DESMET]

CUG224.43-TEE.HLP 2.0 doc
By Tom Woods. Usage info. => TEE.EXE.

CUG224.44-TEST.EXE 2.0 executable
By Tom Woods. Test conditions of file or strings. => TEST.HLP.
[MS-DOS: DESMET]

CUG224.45-TEST.HLP 2.0 doc
By Tom Woods. Usage info. => TEST.EXE.

CUG224.46-TR.EXE 2.0 executable
By Tom Woods. Translate characters. => TR.HLP. [MS-DOS:]

CUG224.47-TR.HLP 2.0 doc
By Tom Woods. => TR.EXE.

CUG224.48-UNIQ.EXE 2.0 executable
By Tom Woods. Report repeated lines in a file. => UNIQ.HLP. [MS-DOS:
DESMET]

CUG224.49-UNIQ.HLP 2.0 doc
By Tom Woods. Usage info. => UNIQ.EXE.

CUG224.50-UTILIX.HLP 2.0 doc
By Tom Woods. Utilix documentation. => INSTALL.BAT.

CUG224.51-WC.EXE 2.0 executable
By Tom Woods. Line, word, and character count. => WC.HLP. [MS-DOS:
DESMET]

CUG224.52-WC.HLP 2.0 doc
By Tom Woods. => INSTALL.BAT WC.EXE. [MS-DOS:]

==============================================================================
CUG225 -
-----------

Utilities and Zmath
Some disk and directory related utilities for CP/M from Phil Cogar,
Australia and routines to do double precision floating point multiply,
divide and square root from Neil R.Koozer, (OR). Includes menu
coordinated utilities which archive files, display the BIOS disk
parameter block, "repack" a directory, display raw disk sectors, un
erase files, and move files from oneuser area to another. Also
includes an executable Z80 assembler (no source code). [public]

CUG225.01-ARCHIVE.C 2.0 source
By Phil Cogar. Archive selected files to disk. => ARCHIVE.COM TM CPIO
UTIL.C. [CP/M: BDSC]

CUG225.02-ARCHIVE.COM 2.0 executable
By Phil Cogar. => ARCHIVE.C. [CP/M:]

CUG225.03-CHKDSK.C 1.1 source
By Phil Cogar. Displays the Disk Parameter Block information in the
BIOS and the allocation map for a selected disk. => CHKDSK.COM DEFF4.C
PEC.H UTILC. [CP/M 2.x:]

CUG225.04-CHKDSK.COM 1.1 executable
By Phil Cogar. => CHKDSK.C. [CP/M:]

CUG225.05-CLEANUP.C 1.1 source
By Phil Cogar. Deletes all inactive entries from a directory and
reconstructs the directory in alphabetical order. => UTIL.C. [CP/M:]

CUG225.06-CLEANUP.COM 1.1 executable
By Phil Cogar. => CLEANUP.C. [CP/M:]

CUG225.07-CNTFIL.C 1.1 source
By Phil Cogar. Counts all the active files in user areas and displays
a table of the counts. => CNTFIL.COM PEC.H UTILC. [CP/M:]

CUG225.08-CNTFIL.COM 1.1 executable
By Phil Cogar. => CNTFIL.C. [CP/M:]

CUG225.09-DEFF3.C 1.4 source
By Phil Cogar. Function library. Includes functions to count &
manipulate bits, read a character "raw" from the console, change the
user number direct interface to BDOS file operations, isprint() and
other isxxx() functions. => DEFF3.CRL DEFF3.TXT. [CP/M:]

CUG225.10-DEFF3.CRL object
By Phil Cogar. Object module. => DEFF3.C. [CP/M:]

CUG225.11-DEFF3.TXT doc
By Phil Cogar. Function descriptions of DEFF3.C.

CUG225.12-DEFF4.C 1.4 source
By Phil Cogar. Function library including terminal control functions
for a Hazeltine Esprit and direct interfaces to important BIOS
functions. => DEFF4.TXT DEFF4.CRL [CP/M: BDSC]

CUG225.13-DEFF4.CRL object
By Phil Cogar. Object module. => DEFF4.C. [CP/M:]

CUG225.14-DEFF4.TXT doc
By Phil Cogar. Function descriptions for DEFF4.C. => DEFF4.C.

CUG225.15-DIR2.C 1.2 source
By Phil Cogar. Creates a "ghost" or backup directory on the last
available track of the disk. => CLEANUP.C UTIL.C. [CP/M: BDSC]

CUG225.16-DIR2.COM 1.2 executable
By Phil Cogar. => DIR2.C. [CP/M:]

CUG225.17-LISTFILE.C 1.4 source
By Phil Cogar. Prints a file to printer with line numbers, and heading
(file name). => LISTFILE.COM UTIL.C. [CP/M:]

CUG225.18-LISTFILE.COM executable
By Phil Cogar. => LISTFILE.C. [CP/M:]

CUG225.19-NOBAD.C 1.2 source
By Phil Cogar. Finds bad sectors on a disk and puts them in a file on
user area 15. => NOBAD.COM UTIL.C. [CP/M:]

CUG225.20-NOBAD.COM executable
By Phil Cogar. => NOBAD.C. [CP/M:]

CUG225.21-PEC.H header
By Phil Cogar. Definitions for BDOS, terminal, disk parameter block,
and file control block. [CP/M:]

CUG225.22-RESTORE.C 1.0 source
By Phil Cogar. Restore a file that has been erased. => RESTORE.COM
UTILC. [CP/M:]

CUG225.23-RESTORE.COM executable
By Phil Cogar. => RESTORE.C. [CP/M:]

CUG225.24-SECREAD.C 1.1 source
By Phil Cogar. Display a disk sector in either ASCII or hex, to the
screen. => SECREAD.COM PEC.H UTIL.C. [CP/M:]

CUG225.25-SECREAD.COM executable
By Phil Cogar. => SECREAD.C. [CP/M:]

CUG225.26-USER2.C 2.0 source
By Phil Cogar. Copies a file from one user area to another. =>
USER2.COM PEC.H CLEANUP.C UTIL.C. [CP/M:]

CUG225.27-USER2.COM executable
By Phil Cogar. => USER2.C. [CP/M:]

CUG225.28-UTILC source
By Phil Cogar. Menu program for using chkdsk, dir2, secread, cleanup,
nobad, showdir, cntfil, restore, and user2. => UTILCOM. [CP/M:]

CUG225.29-UTIL.COM executable
By Phil Cogar. => UTIL.C. [CP/M:]

CUG225.30-Z1.COM executable
By Neil Koozer. A Z80 assembler. => Z1.DOC ZMATH.AZM. [CP/M:]

CUG225.31-Z1.DOC doc
By Neil Koozer. Describes Z1.COM in terms of changes to ZBOMR.COM.
[CP/M:] Describes only new features. Original Z80MR and associated
files available from Micro Cornucopia (Disk B25).

CUG225.32-ZMATH.AZM source
By Neil Koozer. Assembly coded math package. => Z1.DOC Z1.COM. [CP/M:]

==============================================================================
CUG226 -
-----------

Art-Cee
A rule-based inference engine from Dan Cheatham (KS). Developed under
MIX C on a PC clone. ARTIE represents knowledge as if-then rules with
associated weights reflecting their probable applicability. ARTIE
includes a simple query system and will make assumptions while trying
to answer questions. [public]

CUG226.01-ART-CEE.COM 1.4 executable
Small Artificial Intelligence Inference Engine. By Dan Cheatham.
Executable file with runtime support. => MANUAL.TXT. [MSDOS: MIX]
requires 128K of memory.

CUG226.02-DOGNCAT 1.4 data
Sample Grouping File. By Dan Cheatham. => MANUAL.TXT.

CUG226.03-HELP1.AIH 1.4 data
Primary Help Routine Panel. By Dan Cheatham. => MANUAL.TXT.

CUG226.04-HELP2.AIH 1.4 data
Summary of Rule Input Syntax. By Dan Cheatham. => MANUAL TXT.

CUG226.05-HELP3.AIH 1.4 data
Summary of Query Input Syntax. By Dan Cheatham. => MANUAL.W.

CUG226.06-HELP4.AIH 1.4 data
Summary of Commands. By Dan Cheatham. => MANUAL.TXT.

CUG226.07-MANUAL.TXT doc
User's Guide. By Dan Cheatham. => HELP1.AIH HELP2.AIH HELP3.AIH
HELP4.AIH.

CUG226.08-READ.ME doc
By Dan Cheatham. Brief description of ARTCEE.COM. => MANUALTXT MT
CEE.COM.

CUG226.09-SAMPLE.FIL data
Minimal Sample Data File. By Dan Cheatham. => DOGNCAT ART-CEE.COM.

CUG226.10-WORKUP0.C 1.4 source
Parser Routines. By Dan Cheatham. => WORKUP0.H WORKUP1.H. [MS-DOS: MK]

CUG226.11-WORKUP0.H 1.4 header
By Dan Cheatham. Header file containing MAX definitions. => WORKUP0.H.
[MSDOS:]

CUG226.12-WORKUP1.H 1.4 header
By Dan Cheatham. Header file for secondary source files. => WORKUP0.H.
[MSDOS:]

CUG226.13-WORKUP2.C 1.4 source
1/0 Functions. By Dan Cheatham. => WORKUP0.H WORKUP1.H. [MS-DOS:]

CUG226.14-WORKUP3.C 1.4 source
Thinking, inference-drawing routines. By Dan Cheatham. => WORKUP0.H
WORKUP1.H. [MS-DOS:]

CUG226.15-WORKUP4.C 1.4 source
Driver Routines. By Dan Cheatham. => WORKUP0.H. [MS-DOS:]

==============================================================================
CUG227 -
-----------

Portable Graphics v2.1
By Rainer Gerhards. [public] 2 disks. A library of graphics routines
for PC clones from Rainer Gerhards (West Germany). The package
implements a global coordinate system, and includes support for
manipulating IBM display modes, for drawing pixels, lines, boxes,
ellipses, and arcs, for filling boxes with color, painting regions
with color. Also includes text fonts and demonstration programs.
Compiles under Lattice C, Datalight C v2.2x, Microsoft and Borland
Turbo C. The MSC version is untested.

CUG227.01-ALLGLOB.H header
Header for using world coordinates for addressing. => GRAF.TXT.
[MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.02-BARNAMES.H header
=> GRAF.TXT. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.03-BIOS-L3D.OBJ object
Large data model BIOS module.=> BIOS.C. [MS-DOS: LC]

CUG227.04-BIOS.C source
BIOS low-level driver. => BIOS.H, GRAPHICS.H. [MS-DOS: MSC, TC1.0,
LC3, DLC2]

CUG227.05-BIOS.H header
Low-level BIOS header file. => BIOS.C. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.06-BIOS_L3L.OBJ object
Large model BIOS module.=> BIOS.C. [MS-DOS: LC]

CUG227.07-BIOS_L3P.OBJ object
Large program model BIOS module. BIOS.C. [MS-DOS: LC]

CUG227.08-BIOS_L3S.OBJ object
Small model BIOS module.=> BIOS.C. [MS-DOS: LC]

CUG227.09-BLDDSK.BAT batch
MS-DOS Library Build Routine.

CUG227.10-BTRIGTAB.C source
=> TRIGTAB.H. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.11-DOS.MAC source
Macrofile for defining system constants. => EGAA.ASM, HERCA.ASM.
[MS-DOS: MASM]

CUG227.12-EGA.C source
EGA function library. => EGA.H, GRAPHICS.H. [MS-DOS: MSC, TC1.0, LC3,
DLC2]

CUG227.13-EGA.H header
Low-level EGA device header file. => EGA.C, EGA.ASM. [MS-DOS: MSC,
TC1.0, LC3, DLC2]

CUG227.14-EGAA.ASM source
Low-level driver for EGA device. => EGA.C, EGA.H, DOS.MAC. [MASM]

CUG227.15-FRKTAL.C source
Graphics example. => GRAPHICS.L, GRAF.C. [MS-DOS: MSC, TC1.0, LC3,
DLC2]

CUG227.16-GRAF.C source
Hardware independent high-level graphics library. => GRAF.TXT.
[MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.17-GRAF.S source
User documentation written in nroff format. => GRAF.TXT. [MS-DOS: MSC,
TC1.0, LC3, DLC2]

CUG227.18-GRAF.TXT doc
Documentation for portable graphics library. GRAF.S.

CUG227.19-GRAFBL3D.OBJ object
Large data model graphics module with BIOS.=> GRAF.C. [MS-DOS: LC]

CUG227.20-GRAFBL3L.OBJ object
Large model graphics module with BIOS. GRAF.C. [MS-DOS: LC]

CUG227.21-GRAFBL3P.OBJ object
Large program model graphics module with BIOS.=> GRAF.C. [MS-DOS: LC]

CUG227.22-GRAFBL3S.OBJ object
Small model graphics module with BIOS.=> GRAF.C. I[MS-DOS: LC]

CUG227.23-GRAFHL3D.OBJ object
Large data model graphics module with Hercules.[MS-DOS: LC]

CUG227.24-GRAFHL3L.OBJ object
Large model graphics module with Hercules.=> GRAF.C. [MS-DOS: LC]

CUG227.25-GRAFHL3P.OBJ object
Large program model graphics module with Hercules.=> GRAF.C. [MS-DOS:
LC]

CUG227.26-GRAFHL3s.OBJ object
Small model graphics module with Hercules card.=> GRAF.C. [MS-DOS: LC]

CUG227.27-GRAFTEXT.C source
=> STDFONT.H. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.28-GRAFTURT.C source
=> GRAF.TXT. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.29-GRAFTURT.OBJ object
=> GRAFTURT.C. [MS-DOS: LC3]

CUG227.30-GRAPHICS.H header
=> GRAF.H, GRAF.TXT. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.31-HERC.C source
Function library for Hercules graphic card. => HERC.H, GRAPHICS.H.
[MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.32-HERC.H header
Low-level Hercules device header file. HERC.C. [MS-DOS: MSC, TC1.0,
LC3, DLC2]

CUG227.33-HERCA.ASM source
Low-level driver for Hercules monochrome graphics card. => HERC.C,
HERC.H. [MS-DOS: MASM]

CUG227.34-HERCA_D.OBJ object
Large data model Hercules module. HERCA.ASM. [MS-DOS: MASM]

CUG227.35-HERCA_L.OBJ object
Large model Hercules module.=> HERCA.ASM. [MS-DOS: MASM]

CUG227.36-HERCA_P.OBJ object
Large program model Hercules module. HERCA.ASM. [MS-DOS: LC]

CUG227.37-HERCA_S.OBJ object
=> HERCA.ASM. [MS-DOS: MASM]

CUG227.38-HERC_L3D.OBJ object
=> HERC.C. [MS-DOS: LC3]

CUG227.39-HERC_L3L.OBJ object
Large model Hercules module.=> HERC.C. [MS-DOS: LC]

CUG227.40-HERC_L3P.OBJ object
Large program model Hercules module. HERC.C. [MS-DOS: LC3]

CUG227.41-HERC_L3s.OBJ object
Small model Hercules module.=> HERC.C. [MS-DOS: LC]

CUG227.42-READ.CUG doc
Documentation for object code naming rule. [MS-DOS]

CUG227.43-README.DOC doc

CUG227.44-STDFONT.H header
Defines the standard 8 x 8 font. => GRAFTEXT.C. [MS-DOS: MSC, TC1.0,
LC3, DLC2]

CUG227.45-TRIGTAB.H header
Precomputed trigonometric tables. => BTRIBTAB.C. [MS-DOS: MSC, TC1.0,
LC3, DLC2]

CUG227.46-TURTLE.C source
=> GRAFTURT.C. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.47-TURTLE.EXE executable
=> TURTLE.C. [MS-DOS: LC]

CUG227.48-TURTLE.OBJ object
=> TURTLE.EXE, TURTLE.C. [MS-DOS: LC3]

CUG227.49-VERSION doc
GRAPHLIB Version 2.1 11/15/87.

CUG227.50-XXHR.C source
Low-level driver for the Else PC XXHR, DXHR and XXHR vector graphics
board. XXHR.H. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.51-XXHR.H header
Low-level driver for the Elsa PC XHR-DXHR and XXHR vector graphics
board. => XXHR.C. [MS-DOS: MSC, TC1.0, LC3, DLC2]

==============================================================================
CUG228 -
-----------

Miscellany IX
Contains BDSMARK, a utility which supports the adaptation of BDS C
code by identifying function calls peculiar to BDS from David D. Clark
(IN) and the following collected and contributed by Michael Yokayama
(HI): a set of ISAM routines, a windowing library, an HP Laserjet
print program, some Lattice math subroutines, a Hayes compatible modem
utility and some directory and file maintenance utilities. Many of
these programs also appear on US-Disk 1308 and US-Disk 1310. [mixed]

CUG228.01-BDSMARK.C source
By David C. Clark. Marks calls to library functions that BDS C
implements in a nonstandard fashion. Aids in porting BDS C to MS-DOS,
or updating to v1.6. => BDSMARK.DOC. [MS-DOS, CP/M:]

CUG228.02-BDSMARK.DOC doc
By David C. Clark. Documentation for BDSMARK. => BDSMARK.C.

CUG228.03-CHKMAT.C source
Matrix Mathematics Checker. => US-DISK 1308. [MS-DOS: LC]

CUG228.04-CUG228.DSK doc
Summary of C routines and functions on this disk.

CUG228.05-CWINDEMO.C source
By Glen Boyd. C windowing package, demo source. [MS-DOS: LC] US-Disk
1310

CUG228.06-CWINDEMO.DOC doc
By Glen Boyd. C-window demonstration documentation.

CUG228.07-CWINDEMO.EXE executable
By Glen Boyd. => CWINDEMO.C. [MSDOS: LC]

CUG228.08-CWINDOWS.DOC doc
By Glen Boyd. Function descriptions for window package.

CUG228.09-CWINDOWS.LIB library
By Glen Boyd. A shareware windowing for PC clones. Supports up to 255
overlapping windows. [MS-DOS: LC] Uses a custom printf that doesn't
support I/O redirection.

CUG228.10-DRAW.C source
Multiple Character Printing Program. By Jim Nech. Prints character in
multiples up, down, right or left. [MS-DOS: DESMET] UKDisk 1308

CUG228.11-ERAQ.C source
By John Welch. Like the MS-DOS erase command, except that the user is
always prompted for verification before the files are erased. [MS-DOS:
LC]

CUG228.12-ISAM.C source
ISAM. By John M. Dashner. A partially completed ISAM system. Keys are
limited to 64 bytes. => ISAM.H US-DISK 1310. [MS-DOS:]

CUG228.13-ISAM.H header
ISAM. By John M. Dashner. ISAM header file. => ISAM.C. [MS-DOS:]

CUG228.14-ISAMADD.C source
ISAM. By John M. Dashner. Add an index record. => ISAM.H. [MS-DOS:]

CUG228.15-ISAMC.DOC doc
ISAM Documentation. By John M. Dashner. => ISAM.C. Still needs to be
debugged.

CUG228.16-ISAMCLS.C source
ISAM. By John M. Dashner. Close ISAM indexing. => ISAM.H. [MS-DOS: LC]

CUG228.17-ISAMDELC source
ISAM. By John M. Dashner. Delete a record. => ISAM.H. [MS-DOS:]

CUG228.18-ISAMGET.C source
ISAM. By John M. Dashner. Get a record. => ISAM.H. [MS-DOS:1

CUG228.19-ISAMNXT.C source
ISAM. By John M. Dashner. Traverse sequential index. => ISAM.H.
[MS-DOS:]

CUG228.20-ISAMOPN.C source
ISAM. By John M. Dashner. Open ISAM index. => ISAM.H. [MS-DOS:]

CUG228.21-ISAMPRV.C source
ISAM. By John M. Dashner. Get previous record. => ISAM.H. [MS-DOS:]

CUG228.22-ISAMSIT.C source
ISAM. By John M. Dashner. Sort ISAM index. => ISAM.H. [MS-DOS:]

CUG228.23-ISAMUPD.C source
ISAM. By John M. Dashner. Update control record. => ISAM.H. [MS-DOS:]

CUG228.24-LATER.C source
File date compare utility. Sets exit code according to dates of two
files. => US-DISK 1308. [MS-DOS: DESMET] System dependent for MS-DOS
v2.0

CUG228.25-LJ.C source
HP Laserjet Printing Utility. By Joe Barnhart, Ray Duncan, Abel
DeSouza. Prints two pages of information on one page. Landscape font
at 17 cpi. => LJ.EXE US-DISK 1307. [MS-DOS: C 86]

CUG228.26-LJ.EXE executable
By Joe Barnhart, Ray Duncan, Abel DeSouza. [MS-DOS:]

CUG228.27-MAT.C source
Matrix Decomposition and Double-Back Substitution. => CHKMAT.C US-DISK
1308. [MS-DOS: DESMET]

CUG228.28-MATHMAX.C source
Mathematical Subroutines. By Max R. Dursteler. Includes sqrt, exp,
pow, mod, asin, sin, atan, log, floor, ceil. Operates on doubles. =>
MATHMAX H US-DISK 1307. [MS-DOS: LC, MSC]

CUG228.29-MATHMAX.H header
By Max R. Durshler. => MATHMAX.C.

CUG228.30-MSWEEP.C source
By Fredinand Knerlich. File utility based on CP/M nsweep. => US-DISK
1308. [MS-DOS: DESMET]

CUG228.31-PACDEC.C source
By Odis C. Wooten. Decimal string to packed decimal. => US-DISK 1308.
[MS-DOS:]

CUG228.32-PARSER.C source
Generalized, Finite-State Parser. By Uoyd Zusman. Powerful parser
allowing extraction of single tokens from character string. => US-DISK
1308. [MS-DOS:]

CUG228.33-PI.C source
Pi Calculator. By R.E. Sawyer. Computes pi to n decimal places. =>
US-DISK 1308 MIRACL. [MS-DOS:] Execution time is nearly proportional
to the square of the number of digits computed. 1000 digits takes 51
hours.

CUG228.34-SCRNMISC.C source
By Garth Kennedy. Functions to manipulate the CRT. Clear screen, set
video mode, set cursor position, position graphics cursor. => US-DISK
1310. [MS-DOS: LC2.12]

CUG228.35-SETHAYES.C source
Initializes Hayes Smart modem. By Lynn Long. => US-DISK 1310. [MS-DOS:
LC]

CUG228.36-STRMATH.C source
String to Math Functions. By Robert E. Sawyer. Performs arithmetic on
numbers stored as strings. Supports addition, subtraction,
multiplication, and division. => US DISK 1310. [MS-DOS: DESMET]

CUG228.37-SYSTEM.C source
Lattice 2.13 System Call. By Jeff Spidle. Replaces Lattice v2.13
system call which ignores SWITCHAR setting before invoking secondary
command processor. => USDISK 1310. [MS-DOS: LC2.13] For dated version
of Lattice C.

CUG228.38-SYSTMISC.C source
By Garth Kennedy. System functions to create sounds and get the system
time and date. => US-DISK 1310. [MS-DOS: LC2.12]

==============================================================================
CUG229 -
-----------

Little Smalltalk--UNIX Part 1
Part 1 of a double volume set which contains portable dialect
Smalltalk for UNIX systems by Dr. Timothy Budd (WA). In a distribu
tion suitable for installation on atrue UNIX system. See CUG231 and
CUG232 for the unbundled version. [public]

CUG229.01-INSTALL executable
Little Smalltalk Installation. By Timothy A. Budd. Installation
information. => UNBUNDLE SOURCES.BUN CUG230 CUG231 CUG232. [UNIX:]

CUG229.02-MAKEFILE make
Little Smalltalk. By Timothy A. Budd. => INSTALL

CUG229.03-SOURCES.BUN source
Little Smalltalk. By Timothy A. Budd. Bundled source files. =>
UNBUNDLE INSTALL.

CUG229.04-UNBUNDLE executable
Little Smalltalk. By Timothy A. Budd. Shell for unbundling the
Smalltalk files. => INSTALL SOURCE.BUN. [UNIX:]

==============================================================================
CUG230 -
-----------

Little Smalltalk--UNIX Part 2
Part 2 of a double volume set. See also 229. [public]

CUG230.01-DOCS.BUN source
Uttle Smalltalk. By Timothy A. Budd. Bundled documentation files. =>
CUG229. [UNIX ]

CUG230.02-PARSER.BUN source
Little Smalltalk. By Timothy A. Budd. Bundled parser source file. =>
CUG229. [UNIX ]

CUG230.03-PRELUDE.BUN source
Uttle Smalltalk. By Timothy A. Budd. Bundled prelude files. => CUG229.
[UNIX:]

CUG230.04-TEST.BUN source
Little Smalltalk. By Timothy A. Budd. Bundled test files. => CUG229.
[UNIX]

==============================================================================
CUG231 -
-----------

Lfflle Smal talk--Unbundled
Timothy Budd contributes a portable dialect Smalltalk. This volume
constitute a complete distribution with unbundled files. This double
set volume is more convenient for non-UNIX environments. [public]

CUG231.01-4QUEEN.OUT data
Output file.

CUG231.02-4QUEEN.ST data
Class description file.

CUG231.03-8QUEEN.ST data
Class description file.

CUG231.04-ARRAY.C source
By Timothy A. Budd. Array creation. [UNIX:]

CUG231.05-BASIC.OUT data
Output file.

CUG231.06-BASIC.ST data
Class description file.

CUG231.07-BLOCK.C source
By Timothy A. Budd. Block creation and block return. [UNIX]

CUG231.08-BLOCK.H header
By Timothy A. Budd. Block definitions. [UNIX:]

CUG231.09-BLOCKS.OUT data
Output file.

CUG231.10-BLOCKS.ST data
Class description file.

CUG231.11-BYTE.C source
By Timothy A. Budd. Bytearray manipulation. [UNIX:]

CUG231.12-BYTE.H header
By Timothy A. Budd. Bytearray definitions. [UNIX:]

CUG231.13-CHECK.ST data
Class description file.

CUG231.14-CLASS.C source
By Timothy A. Budd. Class instance creation and deletion. [UNIX]

CUG231.15-CLDICT.C source
By Timothy A. Budd. Internal class dictionary. [UNIX:]

CUG231.16-COLLECT.OUT data
Output file.

CUG231.17-COLLECT.ST data
Class description file.

CUG231.18-COND.ST data
Class description file.

CUG231.19-CONTROL.ST data
Class description file.

CUG231.20-COPY.OUT data
Output file.

CUG231.21-COPY.ST data
Class definition file.

CUG231.22-COURIER.C source
By Timothy A. Budd. Message passing interface. [UNIX:]

CUG231.23-DISCLAIM doc

CUG231.24-DRIVE.C source
By Timothy A. Budd. Command parser. [UNIX:]

CUG231.25-FIB.ST data
Class description file.

CUG231.26-FILE.C source
By Timothy A. Budd. Programs used by class file. [UNIX]

CUG231.27-FILE.H header
By Timothy A. Budd. Class file definitions. [UNIX:]

CUG231.28-FILE.LST doc
Ust of files.

CUG231.29-FILE.OUT data
Output file.

CUG231.30-FILE.ST data
Class description file.

CUG231.31-FORK.OUT data
Output file.

CUG231.32-FORK.ST data
Class description file.

CUG231.33-GENERATO.ST data
Class description file.

CUG231.34-IN data
Input file.

CUG231.35-INTERP.C source
By Timothy A. Budd. Byte code interpreter. [UNIX]

CUG231.36-INTERP.H header
By Timothy A. Budd. Interpreter definitions. [UNIX:]

CUG231.37-LEX.C source
By Timothy A. Budd. Lexical analyzer for driver. [UNIX]

CUG231.38-LEXCMD.C source
By Timothy A. Budd. Miscellaneous lexer related routines. [UNIX]

CUG231.39-LINE.C source
By Timothy A. Budd. Line grabber. [UNIX]

CUG231.40-MAIN.C source
Source for Creating 'st' Uttle Smalltalk Interpreter. By Timothy A
Budd. Main driver. [UNIX]

CUG231.41-MAKEFILE.SOU doc
By Timothy A Budd. Make file for 'st'. [UNIX:]

CUG231.42-MAKEFILE.TES make
Makefile for tests.

CUG231.43-NEW.OUT data
Output file.

CUG231.44-NEW.ST data
Class description file.

CUG231.45-NEWMAL.C source
By Timothy A. Budd. New malloc subroutines. [UNIX]

CUG231.46-NUM.OUT data
Output file.

CUG231.47-NUM.ST data
Class description file.

CUG231.48-NUMBER.C source
By Timothy A. Budd. Number definitions. [UNIX ]

CUG231.49-NUMBER.H header
By Timothy A. Budd. Number definitions. [UNIX ]

CUG231.50-OBJECT.C source
By Timothy A. Budd. Object memory management. [UNIX]

CUG231.51-OBJECT.H header
By Timothy A. Budd. Object definitions. [UNIX:]

CUG231.52-PENSHOW.ST data
Class description file.

CUG231.53-PHIL.OUT data
Output file.

CUG231.54-PHIL.ST data
Class description file.

CUG231.55-PLANE.ST data
Class description file.

CUG231.56-PRIME.ST data
Class description file.

CUG231.57-PRIME3.ST data
Class description file.

CUG231.58-PRIME4.ST data
Class description file.

CUG231.59-PRIMES.ST data
Class description file.

CUG231.60-PRIMITIV.C source
By Timothy A Budd. Primitive manager. [UNIX]

CUG231.61-PRIMITIV.H header
By Timothy A. Budd. Primitive definitions. [UNIX.]

CUG231.62-PROB.ST data
Class description file.

CUG231.63-PROCESS.C source
By Timothy A Budd. Process manager. [UNIX]

CUG231.64-PROCESS.H header
By Timothy A Budd. Process definitions. [UNIX]

CUG231.65-SIM1.0UT data
Output file.

CUG231.66-SIMl.ST data
Class description file.

CUG231.67-SIM2.0UT data
Output file.

CUG231.68-SIM2.ST data
Class description file.

CUG231.69-SIM3.0UT data
Output file.

CUG231.70-SIM3.ST data
Class description file.

CUG231.71-SSTR.C source
By Timothy A Budd. File and replace string occurrences. [UNIX:]

CUG231.72-STRING.C source
By Timothy A Budd. String creation and deletion. [UNIX]

CUG231.73-STRING.H header
By Timothy A. Budd. String definitions. [UNIX:]

CUG231.74-SUPER.OUT data
Output file.

CUG231.75-SUPER.ST data
Class description file.

CUG231.76-SYMBOL.C source
By Timothy A. Budd. Symbol creation. [UNIX:]

CUG231.77-SYMBOL.H header
By Timothy A. Budd. String and symbol definitions. [UNIX:]

CUG231.78-SYMBOLS doc
By Timothy A. Budd. [UNIX:]

CUG231.79-SYMS.C source
By Timothy A. Budd. Symbol definitions. [UNIX]

CUG231.80-TEMP.ST data
Class description file.

CUG231.81-TURING.ST data
Class description file.

CUG231.82-VISITOR.ST data
Class description file.

==============================================================================
CUG232 -
-----------

Little Smalltalk - Unbundled Part 2 Part 2 of a double volume set. See
also CUG231. [public]

CUG232.01-ACOLLECT.ST data
Class description file: array collection.

CUG232.02-APNDX1 doc
Object descriptions.

CUG232.03-ARRAY.ST data
Class description file: array.

CUG232.04-BAG.ST data
Class description file: bag.

CUG232.05-BLOCK.ST data
Class description file: block.

CUG232.06-BOOKS doc
Ust of books.

CUG232.07-BOOLEAN.ST data
Class description file: boo lean.

CUG232.08-BUGS doc
Known bugs.

CUG232.09-BYTEARRA.ST data
Class description file: Byte Array.

CUG232.10-CHAR.ST data
Class description file: char.

CUG232.11-CLASS.ST data
Class description file: class.

CUG232.12-CMDS.H header
By Timothy A. Budd. Source for parser. Commands definitions. [UNIX:]

CUG232.13-COLLECT1.ST data
Class description file: collection.

CUG232.14-DICTIONA.ST data
Class description file: dictionary.

CUG232.15-DISCLAIM doc

CUG232.16-DRIVE.H header
Source for parser. Parser and driver definitions. [UNIX:]

CUG232.17-ENV.H header
Source for parser. Execution environment definitions. [UNIX:]

CUG232.18-FALSE.ST data
Class description file: false.

CUG232.19-FILE.LST doc
List of files.

CUG232.20-FILE.ST data
Class description file: file.

CUG232.21-FLOAT.ST data
Class description file: float.

CUG232.22-FORM.ST data
Class description file: form.

CUG232.23-INDEX doc
Index.

CUG232.24-INIT doc

CUG232.25-INSTALL doc
Instructions for installation.

CUG232.26-INTEGER.ST data
Class description file: integer.

CUG232.27-INTERVAL.ST data
Class description file: interval.

CUG232.28-KCOLLECT.ST data
Class description file: keyed collection.

CUG232.29-LARRAY.ST data
Class description file: arrayed collection.

CUG232.30-LEXYY.C source
Source for parser. Lexical analyzer- [UN X:

CUG232.31-LIST.ST data
Class description file: list.

CUG232.32-MACROS doc
Maoros for producing description of alas

CUG232.33-MAGNITUD.ST data
Class description file: magnitude.

CUG232.34-MAKEFILE.DOC doc
Makefile for documentation.

CUG232.35-MAKEFILE.PAR make
Source for parser. Makefile for creating parser. [UNIX:]

CUG232.36-MAKEFILE.PRE make
Makefile for prelude.

CUG232.37-NIL.ST data
Class description file: undefined object.

CUG232.38-NUMBER.ST data
Class description file: number.

CUG232.39-OBJECT.ST data
Class description file: object.

CUG232.40-PARSE1.C source
Source of parse. Pass 1 of the parser. [UNIX:]

CUG232.41-PARSE2.C source
Source for parser. Pass 2 of the parser. [UNIX:]

CUG232.42-PARSER.H header
Source for parser. Parser definitions. [UNIX]

CUG232.43-PARSER.LEX source
Source for parser. Lexical analyzer.

CUG232.44-PARSER.Y source
Source for parser. Class method syntax. [UNIX:]

CUG232.45-PEN.ST data
Class description file: pen.

CUG232.46-POINT.ST data
Class description file: point.

CUG232.47-PRIMNUM.H header
Source for parser. Primitive names and numbers recognized by the
parser.

CUG232.48-PROCESS.ST data
Class description file: process.

CUG232.49-RADIAN.ST data
Class description file: radian.

CUG232.50-RANDOM.ST data
Class description file: random.

CUG232.51-READ-ME doc

CUG232.52-SAVESCRI source
Save command.

CUG232.53-SCOLLECT.ST data
Class description file: sequence able collection.

CUG232.54-SEMAPHOR.ST data
Class description file: semaphore.

CUG232.55-SET.ST data
Class description file:set.

CUG232.56-SMALLTAL.ST data
Class description file: small talk.

CUG232.57-ST.1 doc
Usage information.

CUG232.58-STRING.ST data
Class description file: string.

CUG232.59-SYMBOL.ST data
Class description file: symbol.

CUG232.60-SYNTAX doc
Language syntax documentation.

CUG232.61-TRUG.ST data
Class description file: true.

CUG232.62-UCHAR.C source
Test file.

CUG232.63-USERMAN doc
User's guide.

CUG232.64-YTAB.C source
[UNIX]

CUG232.65-YTAB.H header
Header file for lex. [UNIX:]

==============================================================================
CUG233 -
-----------

Make and Other Utilities
This volume contains a simple make utility by Allen Holub (CA)
originally for Lattice but also Microsoft compatible; two batch
utilities (push and pop) written under Microsoft v4.0 from Warren J.
Hebert (LA); a directory repack utility by Richard Karas; a pretty
printer by Andrew L. Bender; a file display utility by Vincent Bly
(VA); a backslash escape sequence from Ward Christensen (IL); and
routines to call Microsoft Fortran from Datalight C by James W.
Haefner
(UT). [mixed]

CUG233.01-COLRVIEW.C source
By Ward Christensen. Displays a text file, but interprets "\x" escapes
as color change commands. Optionally sends output to JX80 printer. =>
COLRVIEW.EXE. [MS-DOS:] File is labelled "test version".

CUG233.02-COLRVIEW.EXE executable
By Ward Christensen. => COLRVIEW.C. [MS-DOS:]

CUG233.03-COLRVIEW.OBJ object
By Ward Christensen. => COLRVIEW.C. [MS-DOS:]

CUG233.04-CPRINT.C 1.2 source
By Andrew L. Bender M.D.. Prints a C file with nesting level and
header on each page. Reports any unbalanced braces, brackets or
parentheses. => CPRINT.EXE. [MS-DOS: Cl 86]

CUG233.05-CPRINT.EXE 1.2 executable
By Andrew L. Bender M.D.. => CPRINT.C. [MS-DOS:]

CUG233.06-CPRINT.OBJ 1.2 object
By Andrew L. Bender M.D.. => CPRINT.C CPRINT.EXE. [MS-DOS:]

CUG233.07-DSKRPK.C 1.0 source
Directory Repack. By Richard A. Karar. Remove all deleted files and
move valid files together to make free space for new files. =>
DSKRPK.EXE DSKRPK.DOC. [MSDOS: Supersoft] FP arithmetic performed as
function calls, not built-ins. Uses in-line assembly.

CUG233.08-DSKRPK.DOC doc
Directory Repack. By Richard A. Karar. Documentation for DSKRPK.
Includes tutorial material on low-level MS-DOS disk operations. =>
DSKRPK.C. [MS-DOS:]

CUG233.09-DSKRPK.EXE 1.0 executable
By Richard A. Karar. => DSKRPK.C RSKRPK.DOC. [MS-DOS:]

CUG233.10-MAKE.C 1.0 source
Make. By Allen Holub, Kenji Hino. Unix-like utility which simplifies
compilations in any language. This simple version doesn't include the
macro facilities or other advanced features of the UNK original. =>
MAKE.C MAKE.H. [MS-DOS: MSC4.0, LC3.0] Lattice requires MS-DOS v3.0 +

CUG233.11-MAKE.DOC 1.0 doc
By Allen Holub, Kenji Hino. Documentation for MAKE. => MAKE.C.

CUG233.12-MAKE.EXE 1.0 executable
By Allen Holub, Kenji Hino. => MAKE.DOC. [MS-DOS: MSC4.0, LC3.0]

CUG233.13-MAKE.H 1.0 header
By Allen Holub, Kenji Hino. Header file. => MAKE.DOC. [MS-DOS: MSC4.0,
LC3.0]

CUG233.14-MAKE.OBJ object
By Allen Holub, Kenji Hino. [MS-DOS: MSC4.0, LC3.0]

CUG233.15-MKFILE 1.0 make
By Allen Holub, Kenji Hino. File dependency descriptions used by make.
=> MAKE.DOC. [MS-DOS:]

CUG233.16-MSCALLS.ASM 1.0 source
By J.W. Haefner. Macros to be used in calling Microsoft Fortran v3.2
double precision trancendentals from Data Light C compiler. [MS-DOS:
MASM]

CUG233.17-MSFTSDR.ASM source
By J.W. Haefner. Calls MSFORTRAN double precision transcendentals from
Datalight C. => MSCALLS.ASM MSFTSDR.DOC. [MS-DOS: DLC3.01]

CUG233.18-MSFTSDR.DOC 1.0 doc
By J.W. Haefner. Describes the use of MSCALLS.ASM and MSFTSDR.ASM. =>
MSCALLS.ASM MSFTSDR.ASM.

CUG233.19-MSFTSDR.OBJ object
By J.W. Haefner. => MSFTSDR.DOC. [MSDOS: DLC 3.01 ]

CUG233.20-MSTSDR.C source
By J.W. Haefner. A demonstration program that calls MS FORTRAN
transcendental functions and prints the result. [MS-DOS:]

CUG233.21-MSTSDR.EXE executable
By J.W. Haefner. [MS-DOS:]

CUG233.22-OKI.C source
By Andrew L. Bender M.D.. Okidata printer setup menu. => OKI.EXE
RITEMAN.C. [MSDOS:]

CUG233.23-OKI.EXE executable
By Andrew L. Bender M.D.. => OKI.C. [MSDOS:]

CUG233.24-POP.C source
By Warren J. Hebert. Restores working directory from last directory
stored in file CDSTACK.DAT. => PUSH.C. [MS-DOS:]

CUG233.25-PUSH.C source
By Warren J. Hebert. Saves current working directory to LIFO stack
kept in file CDSTACK.DAT. Supports complex path relative batch
operations. => POP.C WS.C. [MS-DOS:]

CUG233.26-RITEMAN.C source
By Andrew L. Bender M.D.. Riteman printer setup menu. => RITEMAN.EXE
RITEMAN.OBJ OKI.C. [MS-DOS:]

CUG233.27-RITEMAN.EXE executable
By Andrew L. Bender M.D.. => RITEMAN.C. [MS-DOS:]

CUG233.28-RITEMAN.OBJ object
By Andrew L. Bender M.D.. => RITEMAN.C. [MS-DOS:]

CUG233.29-SAVAG.C source
Savage floating point benchmark. [MSDOS:]

CUG233.30-VTYPE.C source
By Vincent Bly. Improved version of TYPE. An key will quickly stop the
display. ESC will abort. Tabs may be expanded to specified number of
spaces. => VTYPE.DOC VTYPE.EXE. [MS-DOS: DESMET]

CUG233.31-VTYPE.DOC doc
By Vincent Bly. Documentation for VTYPE. => VTYPE.C.

CUG233.32-VTYPE.EXE executable
By Vincent Bly. => VTYPE.C. [MS-DOS: DESMET]

CUG233.33-WS.BAT batch
By Warren J. Hebert. Example usage of push and pop. => PUSH.C POP.C.
[MS DOS:]

==============================================================================
CUG234 -
-----------

XDIR
A user-oriented file manipulation and disk maintenance utility
shareware package from Mike Blakley (FL). Under XDIR, users may
delete, copy or rename files, display or print text files, dump files
in ASCII and hexadecimal, change file attributes, encrypt and decrypt
files, search for files by date, at-
tribute, or name and search for words in a file or group of files.
Compiles under Eco-C88. [share1]

CUG234.01-COMPILE.BAT batch
By Mike Blakley. Batch file for compilation. [MS-DOS:]

CUG234.02-CONTENTS.DOC doc
By Mike Blakley. Table of disk contents.

CUG234.03-CTLR.C 1.0 source
Scan Files For Text. By Mike Blakley. => XDIR.DOC HDIR.DOC. [MS-DOS:
ECOC88]

CUG234.04-DISPLAY.C 1.0 source
Screen Display Module. By Mike Blakley. Display a screen and accept an
answer. => HDIR.DOC XDIR.DOC. [MS-DOS:]

CUG234.05-GETAPAGE.C 1.0 source
File Listing Routine. By Mike Blakley. => HDIR.DOCXDIR.DOC. [MS-DOS:]

CUG234.06-HDIR.DOC 1.0 doc
Subroutine Documentation. By Mike Blakley. => XDIR.DOC.

CUG234.07-MISC.C 1.0 source
By Mike Blakley. Miscellaneous routines. => HDIR.DOC XDIR.DOC.
[MS-DOS: ECOC88]

CUG234.08-README.1ST 1.0 doc
By Mike Blakley. Instructions for setup and use.

CUG234.09-SECURE.C 1.0 source
Encryption Module. By Mike Blakley. => XDIR.DOC HDIR.DOC. [MS-DOS:
ECOC88]

CUG234.10-TESTPRT.ASM 1.0 source
By Mike Blakley. Test if printer is ready. => XDIR.DOC HDIR.DOC.
[MS-DOS: MASM]

CUG234.11-UTIL.C 1.0 source
By Mike Blakley. => XDIR.DOC HDIR.DOC. [MS-DOS: ECO-C88]

CUG234.12-XDIR.C 1.0 source
By Mike Blakley. Main processing module. => XDIR.DOC HDIR.DOC.
[MS-DOS:]

CUG234.13-XDIR.DOC 1.0 doc
System Documentation. By Mike Blakley. XDIR system was developed to
simplify processing of MS-DOS commands, to provide additional system
security and provide an screen oriented presentation for beginning
users. => XDIR.C XDIR.H XDIR.EXE HDIR.DOC.

CUG234.14-XDIR.EXE 1.0 executable
By Mike Blakley. => XDIR.C XDIR.DOC HDIR.DOC. [MS-DOS: ECO-C88]

CUG234.15-XDIR.H 1.0 header
By Mike Blakley. => XDIR.DOC XDIR.C HDIR.DOC. [MS-DOS:]

CUG234.16-YDIR.C 1.0 source
File Attribute Manipulation. By Mike Blakley. => XDIR.DOC HDIR.DOC.
[MS-DOS:]

CUG234.17-ZDIR.C 1.0 source
By Mike Blakley. Search a directory, includes selection by file
attribute. => HDIR.DOC XDIR.DOC. [MS-DOS:]

==============================================================================
CUG235 -
-----------

Overview
A file maintenance utility contributed by James Mathews (MN). In
addition to the standard file maintenance abilities, Overview also al
lows access to up to fourdirectories each in a separate window,
displays directory trees, includes a function to show all files (not
just the current directory), and includes on-line help. This share
ware package was written in Microsoft C v4.0 but calls some assembly
language functions. [share1]

CUG235.01-BIOSIO.ASM 1.02 source
By James Mathews. Routine to do BIOS screen I/O. => OV.C. [MS-DOS:
MASM]

CUG235.02-CVTHLP.C 1.01 source
By James Mathews. Converts a text file to 'compiled' format used by
overview. => OV.C. [MS-DOS: MSC 4.0]

CUG235.03-DATE.ASM 1.02 source
By James Mathews. routine to work with MS-DOS date. => OV.C. [MS-DOS:
MASM]

CUG235.04-DIRECT.ASM 1.02 source
By James Mathews. routines to do direct screen I/O. => OV.C. [MS-DOS:]

CUG235.05-DOSFILE.H header
By James Mathews. => FILE.C. [MS-DOS: MSC 4.0]

CUG235.06-FARMEM.ASM source
By James Mathews. Routines to allocate and free 'FAR' memory. => OV.C.
[MSDOS: MASM]

CUG235.07-FILE.C source
By James Mathews. Functions that work on/with MS-DOS files. => OV.C.
[MS-DOS: MSC 4.0]

CUG235.08-FILEI0.ASM source
By James Mathews. Routines to do lowlevel file l/O. Includes functions
to seek, read, write, time stamp, get current directory, set
attributes, and fake error return. => OV.C. [MS-DOS: MASM]

CUG235.09-GETOPT.C source
By James Mathews. Get next command line option from argv. => OV.C.
[MS-DOS: MSC4.0]

CUG235.10-GRABBRK.ASM source
By James Mathews. Grab control-break, contro14 interrupts. => OV.C.
[MS-DOS: MASM]

CUG235.11-MAKEFILE make
By James Mathews. Make file for compiling OVERVIEW. => OV.C. [MS-DOS:]

CUG235.12-OV.C 1.02 source
Overview. By James Mathews. OVERVIEW allows the user to perform common
operations on disk files in a visual, tabular manner. => OV.DOC OV.H.
[MS-DOS: MSC4.0]

CUG235.13-OV.DOC 1.02 doc
By James Mathews. Installation and usage information. => OV.C.
[MS-DOS:]

CUG235.14-OV.EXE 1.02 executable
By James Mathews. => OV.C. [MS-DOS: MSC4.0]

CUG235.15-OV.H 1.02 header
By James Mathews. Global definitions. => OV.C. [MS-DOS:]

CUG235.16-OV.HLP 1.02 doc
By James Mathews. Compiled help file. => CVTHLP.C. [MS-DOS:]

CUG235.17-OV.LNK doc
By James Mathews. List of object files. MAKEFILE.

CUG235.18-OVATTRIB.C source
By James Mathews. File attribute functions. => OV.C. [MS-DOS: MSC4.0]

CUG235.19-OVCMD.C source
By James Mathews. Execute MS-DOS command. => OV.C. [MS-DOS:]

CUG235.20-OVDEF.C source
By James Mathews. Define screen and display parameters. => OV.C.
[MS-DOS:]

CUG235.21-OVDIR.C source
By James Mathews. Directory functions. => OV.C. [MS-DOS:]

CUG235.22-OVFDISP.C source
By James Mathews. File display functions. => OV.C. [MS-DOS:]

CUG235.23-OVFILE.C source
By James Mathews. File handling routines. => OV.C. [MS-DOS:]

CUG235.24-OVFMOVE.C source
By James Mathews. Move the file pointer for scrolling. => OV.C.
[MS-DOS:]

CUG235.25-OVHELP.C source
By James Mathews. On-line help routines. => OV.C. [MS-DOS:]

CUG235.26-OVHELP.TXT doc
By James Mathews. ASCII help file. => OV.HLP. [MS-DOS:]

CUG235.27-OVLOGO.C source
By James Mathews. Display Overview logo. => OV.C. [MS-DOS: MSC4.0]

CUG235.28-OVMENU.C source
By James Mathews. Menu system. => OV.C. [MS-DOS:]

CUG235.29-OVPROMPT.C source
By James Mathews. Prompt functions. OV.C. [MS-DOS:]

CUG235.30-OVSELECT.C source
By James Mathews. Set the selection attributes. => OV.C. [MS-DOS:]

CUG235.31-OVSORT.C source
By James Mathews. Sort routines. => OV.C. [MS-DOS:]

CUG235.32-OVSTR.C source
By James Mathews. String routines. => OV.C. [MS-DOS:]

CUG235.33-OVTAG.C source
By James Mathews. Toggle the tag. => OV.C. [MS-DOS:]

CUG235.34-OVTTY.C source
By James Mathews. Routines to set video attributes, position cursor,
save screen, and restore screen. => OV.C. [MS-DOS:]

CUG235.35-OVVBUF.C source
By James Mathews. Buffer management routines. => OV.C. [MS-DOS:]

CUG235.36-OVVIEW.C source
By James Mathews. View functions. => OV.C. [MS-DOS:]

CUG235.37-OVWIN.C source
By James Mathews. Functions to create and manage a dialog window. =>
OV.C. [MS-DOS:]

CUG235.38-PATHNAME.C source
By James Mathews. Create a fully qualified path name. => OV.C.
[MS-DOS:]

CUG235.39-PATHOPEN.C source
By James Mathews. Open a file along a given path. => OV.C. [MS-DOS:]

CUG235.40-README.OV doc
By James Mathews. Listing of files.

CUG235.41-README.SRC 1.02 doc
By James Mathews. Historical account of Overview. => OV.C.

CUG235.42-REGISTER.FRM doc
By James Mathews. Registration form.

CUG235.43-SCANTREE.C source
By James Mathews. Scan a specified directory tree. => OV.C. [MS-DOS:
MSC4.0]

CUG235.44-STRING.C source
By James Mathews. Function to copy a string with blank fill. => OV.C.
[MS-DOS:]

CUG235.45-VOLUME.C source
By James Mathews. Functions to get and set information about MS-DOS
volume label. => OV.C. [MS-DOS:]

==============================================================================

==============================================================================
CUG236 -
-----------

HIGHLY PORTABLE UTILITIES
By William C. Colley, III. [mixed] 1 disk. A collection of very
portable programs that will compile and run with minimal hassle.
William Colley III (OH) took these programs from other CUG library
volumes, edited, rewrote and tested them to make them more portable.
With a few exceptions, all programs are now known to compile and
execute correctly under Aztec C II(CP/M), Eco-C80 (CP/M), Eco-C88
(MS-DOS), Microsoft v3 small model (MS-DOS), and Microsoft v3 large
model. Utilities and tools include BAWK (an exception that doesn't run
under Eco-C or Microsoft large model), bc, cflow, sgrep, sc, tee, 2up,
RS232EXP, cb, retab, fcomp, head, and plcheck.

CUG236.01-2UP.C source
By William C. Colley, III, Eugene H. Mallory. Multi-column output
Stacker. Formats text into one or more columns. => 2UP.DOC. [CP/M,
UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.02-2UP.DOC doc
By William C. Colley, III, Eugene H. Mallory. Usage information. =>
2UP.C.

CUG236.03-BAWK.C source
By William C. Colley, III, Bob Brodt. Bawk: Text Pattern/Action Tool.
Like UNIX's AWK, BAWK scans text files for regular expression patterns
and executes a user-defined action. => BAWK.DOC. [CP/M, UNIX, MS-DOS]

CUG236.04-BAWK.DOC doc
By William C. Colley, III, Bob Brodt. Usage information. => BAWK.C.

CUG236.05-BAWK.H header
By William C. Colley, III, Bob Brodt. Global definitions. => BAWK.C.
[CP/M, UNIX, MS-DOS]

CUG236.06-BAWKACT.C source
By William C. Colley, III, Bob Brodt. BAWK: Actions Compiler. =>
BAWK.C. [CP/M, UNIX, MS-DOS]

CUG236.07-BAWKDO.C source
By William C. Colley, III, Bob Brodt. BAWK: Actions Interpreter. =>
BAWK.C. [CP/M, UNIX, MS-DOS]

CUG236.08-BAWKPAT.C source
By William C. Colley, 111, Bob Brodt. BAWK Regular Expression
Compiler/Interpreter.=> BAWK.C. [CP/M, UNIX, MS-DOS]

CUG236.09-BAWKSYS.C source
By William C. Colley, III, Bob Brodt. Built in functions, variables
declarations, and stack management routines. => BAWK.C. [CP/M, UNIX,
MS-DOS]

CUG236.10-BC.BAT batch
By William C. Colley, III, Bob Brodt. BC batch file. => PF.BC.
[MS-DOS]

CUG236.11-BC.H header
By J. McKeon. BC header file. => PF.BC. [CP/M, UNIX, MS-DOS]

CUG236.12-CB.C source
By William C. Colley, III, J.W. Kindschi Jr.. Pretty Printer. Formats
a C program with proper indents for each statement. => CB.DOC. [CP/M,
UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.13-CB.DOC doc
By William C. Colley, III, J.W. Kindschi Jr.. Usage Information. =>
CB.C.

CUG236.14-CFLOW.C source
By William C. Colley, III, Mark Ellington. Function Abstractor.
Abstacts C function calls and declarations from a C source and
produces a listing of the program's calling hierarchy. => CFLOW.DOC.
[CP/M, UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.15-CFLOW.DOC doc
By William C. Colley, III, Mark Ellington. Usage information. =>
CFLOW.C.

CUG236.16-FCOMP.C source
By Chuck Allison. Compare Text Files. [CP/M, UNIX, MS-DOS: AZTEC,
MSC3.0, ECO-C]

CUG236.17-HEAD.C source
By William C. Colley, III, Eugene H. Mallory. Utility to print the
first n lines of a list of files. [CP/M, UNIX, MS-DOS: AZTEC, MSC3.0,
ECO-C]

CUG236.18-HEADERS.CUG doc

CUG236.19-PF.BC data
By J. McKeon. Translates a BASlC-like language BC to C. => SGREP.DOC,
BC.H, BC.BAT, PROGS.BC. [CP/M, UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]
requires SGREP.EXE.

CUG236.20-PLCHECK.C source
By Richard Conn. Display the nesting level of a C program. [CP/M,
UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.21-PROGS.BC data
By J. McKeon. BC example input. => PROGS.C.

CUG236.22-PROGS.C source
By J. McKeon. BC example results. PROGS.BC. PF.BC.

CUG236.23-RETAB.C source
By William C. Colley, III. Entab/Detab/Strip Combo. Strips upper-order
bits, detabifies, then entabifies a text file. => RETABF.C. [CP/M,
UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.24-RETABF.C source
By William C. Colley, III. Entab/Detab/Strip Combo - Filter Version.
=> RETAB.C. [CP/M, UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.25-RS232EXP.C source
By William C. Colley, III, J. Kilar. RS 232 Diagnostic Helper. An
"expert system" that helps diagnose problems with the RS232 serial
port. => RS232EXP.DOC. [MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.26-RS232EXP.DOC doc
By William C. Colley, III, J. Kilar. Usage information. => RS232EXP.C.

CUG236.27-SGREP.C source
String search and replace utility. This version can handle multiple
patterns and distinguishes between upper and lower. SGREP.DOC, CUG152.
[CP/M, UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.28-SGREP.DOC doc
By J. McKeon. Usage information. SGREP.C.

CUG236.29-TEE.C source
By Michael Yokoyama. Portable Tee. Copies standard input to specified
file and to standard output. => TEE.DOC. [CP/M, UNIX, MS-DOS: AZTEC,
MSC3.0, ECO-C]

CUG236.30-TEE.DOC doc
By Michael Yokoyama. Usage information. => TEE.C.

CUG236.31-XC.C source
By William C. Colley, III, Phillip N. Hisley, W.H. Rauser. Cross
Reference Generator. => CUG126, CUG171. [CP/M, UNIX, MS-DOS: AZTEC,
ECO-C]

CUG236.32-XC2.C source
By William C. Colley, III, David N. Smith, Fred C. Smith, Phillip N.
Hisley. Cross referencer modified for Microsoft C v5.0. [MS-DOS: MSC]

CUG236.33-XC2.H header
By William C. Colley, Ill, Fred C. Smith. Cross reference header file.
[MS-DOS: MSC]

==============================================================================
CUG237 -
-----------

GRAD GRAPHICS
A shareware graphics library (object only) for PC clones which in
cludes functions for drawing dots,lines, circles, ellipses, arcs and
for filling regions, and displaying and printing characters. Support
CGA and HGA in both full and half mode. Up to nine virtual screens are
available. Supports Microsoft v4 (small model) and Turbo C compilers.
GRAD includes device drivers for a color graphics adapter, Epson
FX-80, Okidata ML192 and the JLASER laser interface. This disk holds
an extensive user's manual, the main library, one font file and
various header files. CUG238 cont [share2]

CUG237.01-AMBX7.FON data
By Conrad Kwok. Bold font file.

CUG237.02-GRADARC.H header
By Conrad Kwok. Header for ARC1 and EARC1. [MS-DOS: MSC 4.0, TC 1.0]

CUG237.03-GRADENV.H header
By Conrad Kwok. Header for using EnvSave and EnvRsto. [MS-DOS: MSC
4.0, TC 1.0]

CUG237.04-GRADFILE.DOC doc
By Conrad Kwok. Documentation for the GRAD files.

CUG237.05-GRADIO.H header
By Conrad Kwok. Header for WriteStr, ReadStr and Writec. [MS-DOS: MSC
4.0, TC 1.0]

CUG237.06-GRADUSER.DOC doc
By Conrad Kwok. GRAD graphics library user's manual. 186K.

CUG237.07-GRADVAR.H header
By Conrad Kwok. GRAD global variables. [MS-DOS: MSC 4.0, TC 1.0]

CUG237.08-INSTALL.DOC doc
By Conrad Kwok. Installation procedure and directions on using the
GRAD library.

CUG237.09-INTERP.C source
By Conrad Kwok. Interpret a GRAD command tile. This development tool
interprets graphics operations written in a C-like syntax as an
alternative to direct linkage. => GRADMC.GCM MPRINT.C. [MS-DOS: MSC
4.0, TC 1.0]

CUG237.10-JLASER.DOC doc
By Conrad Kwok. Documentation for JLASER card.

CUG237.11-MCALCADD.OBJ object
By Conrad Kwok. => CALCADDR.ASM. [MSDOS: MSC 4.0]

CUG237.12-MDISPFON.OBJ object
By Conrad Kwok. Display font object file. [MS-DOS:]

CUG237.13-MEXECFUN.OBJ object
By Conrad Kwok. GRAD library object file. => EXECFUNC.ASM. [MS-DOS:]

CUG237.14-MFTABLE.OBJ source
By Conrad Kwok. => FTABLE.C. [MS-DOS:]

CUG237.15-MGRADLIB.LIB library
By Conrad Kwok. GRAD graphics library for MSC v4. [MS-DOS:]

CUG237.16-MHCALCAD.OBJ object
By Conrad Kwok. => CALCADDR.ASM. [MSDOS:]

CUG237.17-MPFRAME.OBJ object
By Conrad Kwok. [MS-DOS:]

CUG237.18-MPLOTTYP.OBJ object
By Conrad Kwok. => PLOTTYPE.ASM. [MSDOS:]

CUG237.19-MPRTCNTL.OBJ object
By Conrad Kwok. [MS-DOS:]

CUG237.20-MPRTGC.OBJ object
By Conrad Kwok. => PRTGC.ASM. [MSDOS:]

CUG237.21-README. lST doc
By Conrad Kwok. Registration information, machine and compiler
requirements.

CUG237.22-README.DOC doc
By Conrad Kwok. GRAD description.

CUG237.23-TC-INST.DOC doc
By Conrad Kwok. Installation directions for Turbo C users.

CUG237.24-TC-USER.UPD doc
By Conrad Kwok. Turbo C users manual update

CUG237.25-TCALCADD.OBJ object
By Conrad Kwok. => CALCADDR.ASM. [MSDOS: TC]

CUG237.26-TEST.DOC doc
By Conrad Kwok. Documentation for running the test file.

CUG237.27-TFTABLE.OBJ object
By Conrad Kwok. => FTABLE.C. [MS-DOS: TC]

CUG237.28-TGRADLIB.LIB library
By Conrad Kwok. GRAD graphics library for Turbo C. [MS-DOS:]

CUG237.29-THCALCAD.OBJ object
By Conrad Kwok. => CALCADDR.ASM. [MSDOS:]

CUG237.30-THFTABLE.OBJ object
By Conrad Kwok. => FTABLE.C. [MS-DOS:]

CUG237.31-TPFRAME.OBJ object
By Conrad Kwok. [MS-DOS:]

CUG237.32-TPLOTTYP.OBJ object
By Conrad Kwok. 4 PLOTTYPE.ASM. [MSDOS:]

CUG237.33-TPRTCNTL OBJ object
By Conrad Kwok. [MS-DOS:]

CUG237.34-TPRTGC.OBJ object
By Conrad Kwok. => PRTGC.ASM. [MSDOS:]

CUG237.35-WARNING.CUG doc
By Conrad Kwok. Naming conventions.

==============================================================================
CUG238 -
-----------

GRAD GRAPHICS
A share ware graphics library (object only) for PC clones which in
cludes functions for drawing dots,lines, circles, ellipses, arcs and
for filling regions, and displaying and printing characters. Supports
Microsoft v4 (small model) and Turbo C compilers. GRAD includes device
drivers for a color graphics adapter (640 x 200), an extended graphics
adapter, Epson FX-80, Okidata ML192 and the JLASER laser interface.
This disk contains additional font files and the source code for
several demonstration programs which include utilities to print
documents sideways and to merge text and graphics. Source code for the
library routines (in C and assembly) is available from the author for
$60. [share2]

CUG238.01-AMBX7.FON data
By Conrad Kwok. Bold font.

CUG238.02-AMCSC10.FON data
By Conrad Kwok. Caps and small caps font.

CUG238.03-AMMI7.FON data
By Conrad Kwok. Mathematics and Italics font.

CUG238.04-AMR14.FON data
By Conrad Kwok. TeX font.

CUG238.05-AMR7.FON data
By Conrad Kwok. Roman.

CUG238.06-AMR7D.FON data
By Conrad Kwok. TeX font for sideway print

CUG238.07-AMSL8.FON data
By Conrad Kwok. Slant font.

CUG238.08-AMSY7.FON data
By Conrad Kwok. Slant font.

CUG238.09-AMTI7.FON data
By Conrad Kwok. Italics font.

CUG238.10-AMTT10.FON data
By Conrad Kwok. Teletype font.

CUG238.11-AMTT8.FON data
By Conrad Kwok. Teletype font.

CUG238.12-CALCADDR.ASM source
By Conrad Kwok. Hardware dependent graphic routines. IBM color
graphics card (640 x 400) mode and Hercules graphics 720 x 348) are
supported. [MS-DOS: MASM]

CUG238.13-COLOR.MAK make
By Conrad Kwok. Microsoft makefile for calcaddr, plottype, and ftable.
[MS-DOS: MSC]

CUG238.14-ERR.C source
By Conrad Kwok. Example of using error handling feature. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.15-EXECFUNC.ASM source
By Conrad Kwok. [MS-DOS: MASM]

CUG238.16-EXETIME.C source
By Conrad Kwok. Used for timing GRAD performance. [MS-DOS: MSC]

CUG238.17-EXETIME.MAK make
By Conrad Kwok. Make file for compiling EXETIME.C => EXETIME.C.
[MS-DOS:]

CUG238.18-FILE11MS.TXT doc
By Conrad Kwok. File by file description.

CUG238.19-FILEFON.TXT doc
By Conrad Kwok. Description of available fonts

CUG238.20-GRADARC.GCM data
By Conrad Kwok. Example command file for interp and mprint. [MS-DOS:]

CUG238.21-GRADARC.H header
By Conrad Kwok. Header for ARC1 and EARCL => CUG 237. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.22-GRADEPSN.C source
By Conrad Kwok. Printer control for Epson FX-80 printer. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.23-GRADEVN.H header
By Conrad Kwok. Header for using ENVSAVE and ENVRSTO. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.24-GRADIO.H header
By Conrad Kwok. Header for WriteStr, EnvSave and EnvTsto. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.25-GRADOKI.C source
By Conrad Kwok. Okidata ML192 command file. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.26-GRADVAR.H header
By Conrad Kwok. Grad global variable. [MSDOS: MSC 4.0, TC 1.0]

CUG238.27-INIT.C source
By Conrad Kwok. Source for Grad initialization and cleanup functions.
[MS-DOS: MSC 4.0, TC 1.0]

CUG238.28-INTERP.C source
By Conrad Kwok. Interpret GRAD function calls in restricted syntax. =>
INTERP.EXE GRADARC.GCM. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.29-INTERP.EXE executable
By Conrad Kwok. => INTERP.C. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.30-INTERP.MAK make
By Conrad Kwok. Make file for compiling MPRINT.C. => INTERP.C.
[MS-DOS:]

CUG238.31-MFTABLE.C source
By Conrad Kwok. Font table definition. [MSDOS: MSC 4.0]

CUG238.32-MPRINT.C source
By Conrad Kwok. Interpret GRD functions and print graphics on the
printer. => MPRINT.EXE MPRINT.MAK MPRINT.GCM MPRT.TXT. [MS-DOS: TC
1.0]

CUG238.33-MPRINT.EXE executable
By Conrad Kwok. => MPRINT.C. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.34-MPRINT.MAK make
By Conrad Kwok. Make file for compiling MPRINT.C. => MPRINT.C.

CUG238.35-MPRT.GCM data
By Conrad Kwok. Example file for MPRINT.EXE. => MPRT.EXE.

CUG238.36-MPRT.TXT doc
By Conrad Kwok. Example file for MPRINT. => MPRINT.C.

CUG238.37-OE7.FON data
By Conrad Kwok. Old English font.

CUG238.38-OKI.MAK make
By Conrad Kwok. Make file for compiling GRADOKI.C.

CUG238.39-PLOTTYPE.ASM source
By Conrad Kwok. The lowest level routines in writing and accessing the
frame memory. [MS-DOS:]

CUG238.40-PRTGC.ASM source
By Conrad Kwok. Append a character to the buffer. [MS-DOS:]

CUG238.41-README.DOC doc
By Conrad Kwok. General description of GRAD system.

CUG238.42-ROTATE.C source
By Conrad Kwok. Rotate the characters in a font file by 90 degrees in
anti-clockwise direction. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.43-S16X16.FON data
By Conrad Kwok. Font file (16x16).

CUG238.44-S5X6.FON data
By Conrad Kwok. Font file (5x6).

CUG238.45-S6X8.FON data
By Conrad Kwok. Font file (6x8).

CUG238.46-S6X8D.FON data
By Conrad Kwok. Font file for swprt (6x8).

CUG238.47-S8X8.FON data
By Conrad Kwok. Font file (8x8).

CUG238.48-S9X14.FON data
By Conrad Kwok. Font file (9x14).

CUG238.49-SIZE.C source
By Conrad Kwok. Change font size. [MS DOS: MSC 4.0, TC 1.0]

CUG238.50-SPECIAL1.C source
By Conrad Kwok. Example of using SPACING_FUNC. [MS-DOS: MSC 4.0, TC
1.0]

CUG238.51-SWPRT.C source
By Conrad Kwok. Sideways printing program. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.52-SWPRT.EXE executable
By Conrad Kwok. => SWPRT.C. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.53-TEX2GRAD.C source
By Conrad Kwok. Convert a TeX pixel file to a GRAD font file. [MS-DOS:
MSC 4.0, TC 1.0]

CUG238.54-TFTABLE.C source
By Conrad Kwok. Font table for Turbo C. [MS-DOS:]

CUG238.55-TIME.MAK make
By Conrad Kwok. Make file for TIME.C.

CUG238.56-WARNING.CUG doc
Naming conventions.

==============================================================================
CUG239 -
-----------

PC GAMMON For MSC4
An attractive backgammon game for PC clones contributed by David Oshel
(IA). The board Ts drawn with graphic characters and supports color.
This game (complete with sound effects) sports three styles of play
(not levels). It also allows real dice throws to be entered if you
like. Its subsystems may be interesting to those not necessarily
interested in backgammon. Includes a fast I/O library (which writes
directly to the screen memory) and a function which scrolls a file
through a screen window. See CUG240 for a Turbo C version. [public]

CUG239.01-BACKGMMN.DOC 6.0 doc
By David C. Oshel. Revision history, introduction to the game.

CUG239.02-BACKGMMN.EXE 6.0 executable
By David C. Oshel. => BACKGMMN.DOC. [MS-DOS: MSC]

CUG239.03-BACKGMMN.H 6.0 header
By David C. Oshel. Private declarations. => CIAO.H. [MS-DOS:]

CUG239.04-BACKGMMN.MAK 6.0 make
By David C. Oshel. Make file for compiling BACKGMMN.

CUG239.05-BG0.C 6.0 source
By David C. Oshel. Contains main() and global data. => BACKGMMN.H.
[MS-DOS: MSC]

CUG239.06-BG1.C 6.0 source
By David C. Oshel. Globals and utilities BACKGMMN.H. [MS-DOS:]

CUG239.07-BG2.C 6.0 source
By David C. Oshel. Board and dice manager. => BACKGAMMN.H. [MS-DOS:]

CUG239.08-BG3.C 6.0 source
By David C. Oshel. Gameplan and strategy manager. => BACKGMMN.H.
[MS-DOS:]

CUG239.09-CIAO.C 6.0 source
By David C. Oshel. Console 1/0 for IBM clone. These are fast
primitives to read and with to the IBM video RAM. Routines to position
the cursor, fill an area, scroll windows, and draw boxes. => CIAO.LIB.
[MSDOS:]

CUG239.10-CIAO.H 6.0 header
By David C. Oshel. Declaration for all global data and functions in
CIAO.LIB. => CIAO.C. [MS-DOS:]

CUG239.11-CIAO.LIB 6.0 library
By David C. Oshel. Library for console input and output. => CIAO.C.
[MS-DOS:]

CUG239.12-CIAO.XRF 6.0 data
By David C. Oshel. Cross reference of functions. => CIAO.C.

CUG239.13-CIAOLIB.MAK 6.0 make
By David C. Oshel. Make file for CIAO.LIB. => CIAO.LIB.

CUG239.14-CLAIROL.C 6.0 source
By David C. Oshel. Modify screen colors or monochrome attributes. =>
CIAO.LIB. [MSDOS: MSC]

CUG239.15-GETMS.C 6.0 source
By David C. Oshel. Simple setline function. CIAO.LIB. [MS-DOS:]

CUG239.16-KEYDEFS.C 6.0 source
By David C. Oshel. Displays a popout window with the ten function
keys. CIAO.LIB. [MS-DOS:]

CUG239.17-KEYIN.C 6.0 source
By David C. Oshel. Extended ASCII characters are returned. =>
CIAO.LIB. [MS-DOS:]

CUG239.18-MONEY.C 6.0 source
By David C. Oshel. Edit dollar & cents string. => CIAO.LlB. [MS-DOS:]

CUG239.19-NOOP.C 6.0 source
By David C. Oshel. Noop definitions for #defines in debugging test
files. => CIAO.LIB. [MS-DOS:]

CUG239.20-PC-GAMN6.DOC doc
PC-Gammon Version 6.0 w/ Color. By David C. Oshel. User's manual.

CUG239.21-README doc
By David C. Oshel. Author's message.

CUG239.22-SOUND.C 6.0 source
By David C. Oshel. Sound generation primitives. => CIAO.LIB. [MS-DOS:
MSC]

CUG239.23-TYPEAFIL.C 6.0 source
By David C. Oshel. Type a file with optional word wrap in a window
box. => CIAO.LIB. [MS-DOS:]

CUG239.24-WPRINTF.C 6.0 source
By David C. Oshel. Printf formatted string into a window. => CIAO.LIB.
[MS-DOS:]

CUG239.25-XEQ.C 6.0 source
By David C. Oshel. Run a file in a directory. => CIAO.LIB. [MS-DOS:]

==============================================================================
CUG240 -
-----------

PC GAMMON For TURBO
An attractive backgammon game for PC clones contributed by David Oshel
(IA). The board is drawn with graphic characters and supports color.
This game (complete with sound effects) sports three styles of play
(not levels). It also allows real dice throws to be entered if you
like. Its subsystems may be interesting to those not necessarily
interested in backgammon. Includes a fast I/O library (which writes
directly to the screen memory) and a function which scrolls a file
through a screen window. See CUG239 for a Microsoft C version-
[public]

CUG240.01-BACKGMMN.DOC 7.0 doc
By David C. Oshel. Revision history, introduction to the game.

CUG240.02-BACKGMMN.EXE 7.0 executable
By David C. Oshel. => BACKGMMN.DOC BGO.C. [MS-DOS: TC 1.0]

CUG240.03-BACKGMMN.H 7.0 header
By David C. Oshel. Global definitions. => CIAO.H. [MS-DOS:]

CUG240.04-BACKGMMN.PRJ 7.0 make
By David C. Oshel. Turbo project file. [MSDOS:]

CUG240.05-BG0.C 7.0 source
By David C. Oshel. Contains main() and globals. => BACKGMMN.H.
[MS-DOS:]

CUG240.06-BG1.C 7.0 source
By David C. Oshel. Globals and utilities. BACKGMMN.H. [MS-DOS:]

CUG240.07-BG2.C 7.0 source
By David C. Oshel. Board and dice manager. => BACKGMMN.H. [MS-DOS:]

CUG240.08-BG3.C 7.0 source
By David C. Oshel. Gameplan and strategy manager. => BACKGMMN.H.
[MS-DOS:]

CUG240.09-CIAO.C 7.0 source
By David C. Oshel. Console 1/0 for IBM clone. These are fast
primitives to read and write to the IBM video RAM. Routines to
position the cursor, fill an area, scroll windows, and draw boxes. =>
CLAO.H. [MSDOS:]

CUG240.10-CIAO.H 7.0 header
By David C. Oshel. Declaration for all global data & functions in
CIAO.LIB. CIAO.C. [MS-DOS:]

CUG240.11-CLAIROLC 7.0 source
By David C. Oshel. Modify screen colors or monochrome attributes. =>
CIAO.C. [MSDOS:]

CUG240.12-GETMS.C 7.0 source
By David C. Oshel. Simple getline function. => CIAO.C. [MS-DOS:]

CUG240.13-KEYIN.C 7.0 source
By David C. Oshel. Extended ASCII characters are returned. => CIAO.C.
[MS-DOS:]

CUG240.14-NOOP.C 7.0 source
By David C. Oshel. Noop definitions for # defines in debugging test
files. => CIAO.C. [MS-DOS:]

CUG240.15-PC-GAMN.DOC 7.0 doc
By David C. Oshel. User's manual. [MSDOS:]

CUG240.16-SOUND.C 7.0 source
By David C. Oshel. => CIAO.C. [MS-DOS:]

CUG240.17-TYPEAFIL.C 7.0 source
By David C. Oshel. Type a file with optional word wrap in a window
box. => CIAO.C. [MS-DOS:]

CUG240.18-WPRINTF.C 7.0 source
By David C. Oshel. Printf formatted string into a window. => CIAO.C.
[MS-DOS:]

==============================================================================
CUG241 -
-----------

INFERENCE ENGINE & RULE BASED COMPILER
By George Hageman. [share1] 1 disk. This backward chaining inference
engine allows rules to be written with variations of "and," "not," and
"if" keywords and allows rules to invoke separate user-supplied
programs. Unlike ART-CEE (CUG226), this is not a probabilistic system;
each relation must be either true or false. This shareware package
includes all the source code to recompile under Microsoft v3.0 or UNIX
System V. Packaged for CUG by Michael Yokoyama (HI).

CUG241.01-ANIMALS data
Knowledge base for the animal classification expert.

CUG241.02-DISKFILE.DOC doc
File by file description.

CUG241.03-EDIR.CS source
Simple weather predictor expert system. EDIR.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.04-EDIR.EXE executable
=> EDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.05-EXPERT.H header
Structures of the rulebase. => GETKEYWO.CR. [UNIX, MS-DOS: MSC3.0]

CUG241.06-GETKEYWO.CR source
Rule-based compiler source. [UNIX, MS-DOS: MSC3.0]

CUG241.07-GT_301.CS source
Storm prediction system source. => GT_301.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.08-GT_301.EXE executable
=> GT_301.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.09-GT_302.CS source
Storm prediction system. => GT_302.EXE, GT_301.CS. [UNIX, MS-DOS:
MSC3.0]

CUG241.10-GT_302.EXE executable
=> GT_302.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.11-INFER.H header
Define global variables used in the inference engine. [UNIX, MS-DOS:
MSC3.0]

CUG241.12-INFERENC.CI source
Inference engine main routine. => INFERENC.EXE, INFERENC.H. [UNIX,
MS-DOS: MSC3.0]

CUG241.13-INFERENC.DOC doc
Introduction to expert systems and user's guide.

CUG241.14-INFERENC.EXE executable
=> INFERENC.CI. [UNIX, MS-DOS: MSC3.0]

CUG241.15-INFERENC.H header
INFERENC.CI. [UNIX, MS-DOS: MSC3.0]

CUG241.16-INFERENC.STR doc
Inference engine program structure (pseudocode). => INFERENC.CI.

CUG241.17-KEYWORDS.H header
Keywords definition. [UNIX, MS-DOS: MSC3.0]

CUG241.18-LT_298.CS source
Storm prediction system source. => ROUTINE.H, WEATHER.H, LT_298.EXE.
[UNIX, MS-DOS: MSC3.0]

CUG241.19-LT_298.EXE executable
=> LT_298.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.20-LT_301.CS source
Storm prediction system source. => LT_301.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.21-LT_301.EXE executable
=> LT_301.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.22-MAKEFILE.II make
Makefile for inference engine. [UNIX, MS-DOS: MSC3.0]

CUG241.23-MAKEFILE.RR make
Makefile for rule-based compiler.

CUG241.24-MAKEFILE.SS make
Makefile for storm prediction system.

CUG241.25-MESSAGE1.CS source
Storm prediction system source. => MESSAGE1.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.26-MESSAGE1.EXE executable
=> MESSAGE1.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.27-NDIR.CS source
Storm prediction system source. => ROUTINE.H, WEATHER.H, NDIR.EXE.
[UNIX, MS-DOS: MSC3.0]

CUG241.28-NDIR.EXE executable
=> NDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.29-NEDIR.CS source
=> NEDIR.EXE, ROUTINE.H, WEATHER.H. [UNIX, MS-DOS: MSC3.0]

CUG241.30-NEDIR.EXE executable
=> NEDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.31-NWDIR.CS source
Storm prediction system source. NWDIR.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.32-NWDIR.EXE executable
=> NWDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.33-PUTSTRIN.CR source
Rule-based compiler source. [UNIX, MS-DOS: MSC3.0]

CUG241.34-REMANTE.CI source
Inference engine source. [UNIX, MS-DOS: MSC3.0]

CUG241.35-ROUTINE.H header
Include file for both rule-based compiler and inference engine. [UNIX,
MS-DOS: MSC3.0]

CUG241.36-ROUTINE.HS header
Storm prediction system source. [UNIX, MS-DOS: MSC3.0]

CUG241.37-RPD_FALL.CS source
Storm prediction system source. => RPD FALL.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.38-RPD_FALL.EXE executable
=> RPD_FALL.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.39-RPD_RISE.CS source
Storm prediction system source. => RPD_RISE.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.40-RPD_RISE.EXE executable
=> RPD_RISE.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.41-RULECOMP.CR source
Rule-based compiler source. => RULECOMP.EXE, RULECOMP.STR. [UNIX,
MS-DOS: MSC3.0]

CUG241.42-RULECOMP.EXE executable
=> RULECOMP.STR, RULECOMP.CR. [UNIX, MS-DOS: MSC3.0]

CUG241.43-RULECOMP.STR doc
Rule-based compiler, program structure pseudocode. => RULECOMP.EXE.
[UNIX, MS-DOS: MSC3.0]

CUG241.44-RUNROUTl.CI source
Inference engine source. => GETTRUTH.CI. [ UNIX, MS-DOS: MSC3.0]

CUG241.45-SDIR.CS source
Storm prediction system. => EDIR.CS, SDIR.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.46-SDIR.EXE executable
=> SDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.47-SEDIR.CS source
Storm prediction system source. => SEDIR.EXE, EDIR.CS. [UNIX, MS-DOS:
MSC3.0]

CUG241.48-SEDIR.EXE executable
=> SEDIR.CS, EDIR.CS. [ UNIX, MS-DOS: MSC3.0]

CUG241.49-SLO_FALL.CS source
Storm prediction system source. => SLO_FALL.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.50-SLO_FALL.EXE executable
=> SLO_FALL.CS. [ UNIX, MS-DOS: MSC3.0]

CUG241.51-SLO_RISE.CS source
Storm prediction system source. => SLO_RISE.EXE, EDIR.CS. [UNIX,
MS-DOS: MSC3.0]

CUG241.52-SLO_RISE.EXE executable
=> SLO_RlSE.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.53-STEADY.CS source
Storm prediction system source. => STEADY.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.54-STEADY.EXE executable
=> STEADY.CS, EDIR.CS. [ UNIX, MS-DOS: MSC3.0]

CUG241.55-SWDIR.CS source
Storm prediction system source. => SWDIR.EXE, EDIR.CS. [UNIX, MS-DOS:
MSC3.0]

CUG241.56-SWDIR.EXE executable
=> SWDIR.CS. [ UNIX, MS-DOS: MSC3.0]

CUG241.57-VERIFY.CI source
Inference engine source. => VERIFYTR.CI, GETTRUTH.CI. [UNIX, MS-DOS:
MSC3.0]

CUG241.58-VERIFYTR.CI source
Inference engine source. => VERIFY.CI, GETTRUTH.CI. [UNIX, MS-DOS:
MSC3.0]

CUG241.59-WDIR.CS source
Storm prediction system source. => WDIR.EXE, EDIR.CS. [UNIX, MS-DOS:
MSC3.0p]

CUG241.60-WDIR.EXE executable
=> WDIR.CSHUNIX, MS-DOS: MSC3.0]

CUG241.61-WEATH ER data
Weather predictor. => WEATHER.HS. [ UNIX, MS-DOS: MSC3.0]

CUG241.62-WEATHER.HS header
Storm prediction system source. => EDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.63-WEKNOW.CI source
Inference engine source. [UNIX, MS-DOS: MSC3.0]

==============================================================================
CUG242 -
-----------

STILL MORE CROSS ASSEMBLERS
A version of William Colley III's (OH) cross assembler that generates
code for the Intel 8051 and the 68HC11. Portably coded, these
assemblers will compile correctly under a variety of UNIX, MSDOS, and
CP/M compilers. [public]

CUG242.01-8052BITS.LIB 0.1 Library
By William C. Colley III. Defines names for the additional special
function registers (SFRs) of the Intel 8052.

CUG242.02-A51.C 0.1 source
By William C. Colley III. Assembles code for the Intel 8051
microprocessor. => A51.DOC. [CP/M, MS-DOS, UNIX:]

CUG242.03-A51.DOC 0.1 doc
By William C. Colley III. User manual. => A51.C.

CUG242.04-A51.H 0.1 header
By William C. Colley III. Contains compile, assemble, and link
instructions. => A51.C. [CP/M, MS-DOS, UNIX]

CUG242.05-A51EVALC 0.1 source
By William C. Colley III. Assembler's expression evaluator and lexical
analyzer. => A51.C. [CP/M, MS-DOS, UNIX:]

CUG242.06-A51UTIL.C 0.1 source
By William C. Colley III. Contains the symbol table, table searching
functions, file output and error flagging. => A51.C. [CP/M, MS-DOS,
UNIX:]

CUG242.07-A611.C 0.0 source
By William C. Colley III. Assembles code for the Motorola 68HC11
microprocessor. AB11.DOC. [CP/M, MS-DOS, UNIX:]

CUG242.08-A611.DOC 0.0 doc
By William C. Colley III. User's manual. => A611.C.

CUG242.09-A611.H header
By Wlliam C. Colley III. Contains compile, assemble, and link
instructions. => A611.C. [CP/M, MS-DOS, UNIX:]

CUG242.10-A611EVAL.C 0.0 source
By Wlliam C. Colley III. Contains the assembler's expression evaluator
and lexical analyzer. => A611.C. [CP/M, MS-DOS, UNIX:]

CUG242.11-A611UTIL.C 0.0 source
By Wlliam C. Colley III. Contains symbol table building and searching,
file output, and error flagging. => A611C. [CP/M, MSDOS, UNIX:]

CUG242.12-A63.C 0.0 source
By William C. Colley III. Assembles code for the Hitachi HD6301 family
microprocessor. => A63.DOC. [CP/M, MS-DOS, UNIX:]

CUG242.13-A63.DOC doc
By William C. Colley III. User's manual. => A63.C.

CUG242.14-A63.H 0.0 header
By Wlliam C. Colley III. Contains compile, assemble, and link
instructions. => A63.C. [CP/M, MS-DOS, UNIX:]

CUG242.15-A63EVAL.C O.O source
By Wlliam C. Colley III. Contains the assembler's expression evaluator
and lexical analyzer. => A63.C. [CP/M, MS-DOS, UNIX:]

CUG242.16-A63UTILC 0.0 source
By William C. Colley III. Contains the symbol table building and
searching, file output routines, error flagging. => A63.C. [CP/M,
MS-DOS, UNIX:]

CUG242.17-READ.ME3 doc
By William C. Colley III. The disk contents.

CUG242.18-TEST51.ASM source
By William C. Colley III. The entire instruction set of the 8051
processor to use in testing the 8051 cross-assembler. => A51.C.

CUG242.19-TEST611.ASM 0.0 source
By William C. Colley III. The entire instruction set of the 68HC11 CPU
to use in testing the 68HC11 cross-assembler. => A611.C.

CUG242.20-TEST63.ASM source
By Willaim C. Colley III. The entire instruction set of the 63701 CPU
to use in testing the 63701 cross-assembler. => A63.C.

==============================================================================
CUG243 -
-----------

DECUS C PREPROCESSORS
A complete C pre-processor that implements some ANSI-like features.
Based on a DECUS release, this port compiles under Microsoft v3.0 and
Lattice v2.0. This implementation supports #elif constructs,
hexadecimal constants, #if defined, #if size of, unsigned ints and
longs, long double, and token concatenation among other more common
features. Compiles under four different Lattice memory models and two
Microsoft memory models. Originally released to DECUS by Martin Minow
and adapted to MS-DOS by Ted Lemon and Jym Dyer. Packaged for CUG by
Michael Yokoyama (HI). [public]

CUG243.01-CCP. 1 doc
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Documentation for CCP.
=> CCP1.C. [MS-DOS:]

CUG243.02-CCP.EXE executable
Decus C Preprocessor. By Ted Lemon, Jym Dyer, Martin Minow. => CCP.1.
[MS-DOS: MSC3.0, LC2.0]

CUG243.03-CCP.H header
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Internal definitions. =>
CCP1.C. [MSDOS: MSC3.0, LC2.0]

CUG243.04-CCP1.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. C Preprocessor
implemented by Martin Minow - main program. => CPP.1. [MSDOS: MSC3.0.
LC2.0]

CUG243.05-CCP3.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. File open and command
line options. => CCP1.C. [MS-DOS: MSC3.0, LC2.0]

CUG243.06-CCP4.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Macro definitions. =>
CCP1.C. [MSDOS: MSC3.0, LC2.0]

CUG243.07-CCP5.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Expression evaluation.
=> CCP1.C. [MS-DOS: MSC3.0, LC2.0

CUG243.08-CCP6.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Support routine. =>
CCP1.C. [MSDOS: MSC3.0. LC2.0]

CUG243.09-CPP.LNK source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. tinker file. => CCP1.C.

CUG243.10-CPP1.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. # control line
processor. => CPP1.C. [MS-DOS: MSC3.0, LC2.0]

CUG243.11-CPPDEF.H header
Decus C Preprocessor. By Ted Lemon, Jym Dyer. System dependent
definitions. => CCP.1. [MS-DOS: MSC3.0, LC2.0]

CUG243.12-DISK.DOC doc
By Michael Yokoyama. Disk contents.

CUG243.13-FLOATCPP.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Expression evaluator. =>
CCP1.C. [MS-DOS: MSC3.0, LC2.0]

CUG243.14-MAKEFILE make
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Compiler makefile. =>
CPP.1.

CUG243.15-READ.ME doc
By Ted Lemon, Jym Dyer. MS-DOS specific implementation information for
Decus C Preprocessor.

CUG243.16-TEST.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Memory model and MS-DOS
test file for C Preprocessor. => CPP.1. [MS-DOS: MSC3.0, LC2.0]

==============================================================================
CUG244 -
-----------

deBRUIN
All programs relate to cellular automata and were contributed by
Harold V. McIntosh and Gerardo Cisneros, Mexico. This disk contains
materials illustrating the concepts presented in the article "Abstract
Mathematical Art" by Kenneth E. Perry (Byte, Dec. 1986). The automata
programs were developed with Wizard C under MSDOS 2.11. This disk is
an analytic tool and has no special display requirements. Disk
contains both source and executable. [public]

CUG244.01-FOUR31.C source
By Harold V. McIntosh. Analyze the de Brujn diagram of a cellular
automaton and report all the periodic states. Version for totalistic
(3.1), fourth generation. [MS-DOS: wizard C]

CUG244.02-FOUR31.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.03-ONE31.C source
By Harold V. McIntosh. States with period 1 and displacements
zero(1.0) or one (1.1) are analyzed for a four-state, nearest neigh
bor (3.1) automaton. [MS-DOS: Wizard C]

CUG244.04-ONE31.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.05-ONE32.C source
By Harold V. McIntosh. Version for totalistic (3.2), first generation.
[MS-DOS: Wizard C]

CUG244.06-ONE32.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.07-ONE41.C source
By Harold V. McIntosh. States with period 1 and displacements zero
(1.0) or one (1.1) are analyzed for a four-stab, nearest neighbor
(4.1) automaton. [MS-DOS: wizard C]

CUG244.08-ONE41.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.09-ONE42.C source
By Harold V. McIntosh. Version for totalistic (4.2), first generation.
[MS-DOS: Wzard C]

CUG244.10-ONE42.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.11-THREE31.C source
By Harold V. McIntosh. Version for totalistic (3.1), third generation.
[MS-DOS: Weard C]

CUG244.12-THREE31.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.13-THREE41.C source
By Harold V. McIntosh. Version for totalistic (4.1), third generation.
[MS-DOS: Wzard C]

CUG244.14-THREE41.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.15-TWO31.C source
By Harold V. McIntosh. Version for totalistic (3.1), second
generation. [MS-DOS: Wizard C]

CUG244.16-TWO31.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.17-TWO41.C source
By Harold V. McIntosh. Version for totalistic (4.1), second
generation. [MS-DOS: Wzard C]

CUG244.18-TWO41.EXE executable
By Harold V. McIntosh. [MS-DOS:]

==============================================================================
CUG245 -
-----------

LINEAR CELLULAR AUTOMATA
All programs relate to cellular automata and were contributed by
Harold V. McIntosh and Gerardo Cisneros, Mexico. This disk contains
materials illustrating the concepts presented in the article "Abstract
Mathematical Art" by Kenneth E. Perry (Byte, Dec. 1986). The automata
programs were developed with Wizard C under MSDOS 2.11. This disk
displays evolving automata and requires a PC-type color graphics
adapter. Contains both source and executable. [public]

CUG245.01-LCA.DOC doc
By Harold V. McIntosh. Historical view of cellular automaton and
program descriptions.

CUG245.02-LCA21.C source
By Harold V. McIntosh, Gerardo Cisneros. (2,1) linear cellular
automaton. => LCA21.EXE. [MS-DOS: WIZMD]

CUG245.03-LCA21.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. => LCA21.C. [MS-DOS:]

CUG245.04-LCA22.C source
(2,2) Linear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA22.EXE. [MS-DOS:]

CUG245.05-LCA22.EXE executable
By Harold V. McIntosh. => LCA22.C. [MSDOS:]

CUG245.06-LCA23.C source
(2,3) Linear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA23.EXE. [MS-DOS:]

CUG245.07-LCA23.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. => LCA23.C. [MS-DOS:]

CUG245.08-LCA31.C source
(3,1) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA31.EXE. [MS-DOS:]

CUG245.09-LCA32.C source
(3,2) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA32.EXE. [MS-DOS:]

CUG245.10-LCA32.EXE executable
By Harold V. McIntosh, Gerardo Cisneros, Harold V. McIntosh, Gerardo
Cisneros. => LCA31.C LCA32.C. [MS-DOS, MS-DOS:]

CUG245.11-LCA33.C source
(3,3) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA33.EXE. [MS-DOS:]

CUG245.12-LCA33.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. LCA33.C. [MS-DOS:]

CUG245.13-LCA41.C source
(4,1) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA41.EXE. [MS-DOS:]

CUG245.14-LCA41.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. LCA41.C. [MS-DOS:]

CUG245.15-LCA42.C source
(4,2) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. LCA42.EXE. [MS-DOS:]

CUG245.16-LCA42.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. => LCM2.C. [MS-DOS:]

CUG245.17-LCA43.C source
(4,3) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA43.EXE. [MS-DOS:]

CUG245.18-LCA43.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. => LCA43.C. [MS-DOS: WIZARD]

==============================================================================
CUG246 -
-----------

CYCLES MANDELBROT GRAPHICS
Contributed by Harold V. McIntosh and Gerardo Cisneros, Mexico. The
majority of this volume are materials illustrating the concepts
presented in the article "Abstract Mathmatical Art" by Kenneth E.
Perry (Byte, Dec. 1986). The automata programs were developed with
Wizard C under MSDOS 2.11. This volume is an analytical tool and no
special display requirements. This volume also contains a program by
E.H. Ramm which plots portions of the Mandelbrot set. Contains both
source and executable. [public]

CUG246.01-CYCLE21.C source
By Harold V. McIntosh. Analyze the cycles of a cellular automaton and
report all the periodic states. Periods of (2, 1) rings. CYCLE21.EXE.
[MS-DOS: WIZMD]

CUG246.02-CYCLE21.EXE executable
By Harold V. McIntosh. => CYCLE21.C. [MSDOS:]

CUG246.03-CYCLE22.C source
By Harold V. McIntosh. Periods of (2,2) rings. => CYCLE22.EXE.
[MS-DOS:]

CUG246.04-CYCLE22.EXE executable
By Harold V. McIntosh. => CYCLE22.C. [MSDOS:]

CUG246.05-CYCLE23.C source
By Harold V. McIntosh. Periods of (2,3) rings. => CYCLE23. EXE.
[MS-DOS:]

CUG246.06-CYCLE23.EXE executable
By Harold V. McIntosh. => CYCLE23.C. [MSDOS:]

CUG246.07-CYCLE31.C source
By Harold Y. McIntosh. Periods of (3,1) rings. => CYCLE31.EXE.
[MS-DOS:]

CUG246.08-CYCLE31.EXE executable
By Harold V. McIntosh. => CYCLE31.C. [MSDOS:]

CUG246.09-CYCLE32.C source
By Harold V. McIntosh. Periods of (3,2) rings. => CYCLE32.EXE.
[MS-DOS:]

CUG246.10-CYCLE32.EXE executable
By Harold V. McIntosh. => CYCLE32.C. [MS DOS:]

CUG246.11-CYCLE41.C source
By Harold V. McIntosh. Periods of (4,1) rings. => CYCLE41.EXE.
[MSDOS:]

CUG246.12-CYCLE41.EXE executable
By Harold V. McIntosh. => CYCLE41.C. [MSDOS:]

CUG246.13-CYCLE42.C source
By Harold V. McIntosh. Periods of (4,2) rings. => CYCLE42.EXE.
[MS-DOS:]

CUG246.14-CYCLE42.EXE executable
By Harold V. McIntosh. => CYCLE42.C. [MSDOS:]

CUG246.15-GRAPHDRI.S source
By E.H. Ramm. Graphic support routine. [MS-DOS: Assembly]

CUG246.16-MANDEL.C source
Mandelbrot Set Plotter. By E.H. Ramm. Plots images from the Mandelbrot
set, on an Epson MX 80 printer. [CP/M-68K: DRI, (Alcyon)]

CUG246.17-PLOTTF.C source
By E.H. Ramm. Test file for graphics function. => GRAPHDRI.S.
[CP/M-68K: DRIC]

==============================================================================
CUG247 -
-----------

MIRACL A Multi-precision Integer and Rational Arithmetic C Library
released as shareware by Michael Scott of Ireland. Includes complete
source
code for the library and several example programs. Known to compile
under MS-DOS with Aztec v3.4, Microsoft v3.0, Mark Williams v2.0,
Turbo v1.0 and Zorland v1.1. [share1 ]

CUG247.01-AZDOIT.BAT 1.32 batch
By Michael Scott. Creates the MIRACLLIB from its components. =>
BNCORE.C. [MS DOS:]

CUG247.02-BNARTH0.C 1.32 source
By Michael Scott. Add and subtract routines => MIRACL.H BNCORE.C. [MS
DOS: MSC 3.0, TC 1.0, MWC]

CUG247.03-BNARTH1.C 1.32 source
By Michael Scott. Multiplying and dividing BIG NUMBERS by integer
numbers. => MIRACL.H BNCORE.C. [MS-DOS:]

CUG247.04-BNARTH2.C 1.32 source
By Michael Scott. Multiplying and dividing BIG NUMBERS. => BNCORE.C.
[MS-DOS:]

CUG247.05-BNARTH3.C 1.32 source
By Michael Scott. Powers and roots function. => BNCORE.C. [MS-DOS:]

CUG247.06-BNBUILD.C 1.32 source
By Michael Scott. 'Rash' number builder. Uses generator of regular
continued fraction expansion to create a flash number, rounded if
necessary. => BNCORE.C. [MS DOS:]

CUG247.07-BNCORE.C 1.32 source
By Michael Scott. Core module - contains initialization code and
general purpose utilities. [MS-DOS:]

CUG247.08-BNDOUBLE.C 1.32 source
By Michael Scott. Double to flash conversion routines. => BNCORE.C.
[MS-DOS:]

CUG247.09-BNFLASH.C 1.32 source
By Michael Scott. Floating-slash arithmetic. => BNCORE.C. [MSDOS:]

CUG247.10-BNFLASH1.C 1.32 source
By Michael Scott. Rash roots and power functions. => BNCORE.C.
[MS-DOS:]

CUG247.11-BNFLASH2.C 1.32 source
By Michael Scott. Flash exponential and logs.=> BNCORE.C. [MS-DOS:]

CUG247.12-BNFLASH3.C 1.32 source
By Michael Scott. Trig functions. => BNCORE.C. [MS-DOS:]

CUG247.13-BNFLASH4.C 1.32 source
By Michael Scott. Flash hyperbolic trig. => BNCORE.C. [MS-DOS:]

CUG247.14-BNGCD.C 1.32 source
By Michael Scott. Greatest common divisor module. => BNCORE.C.
[MS-DOS:]

CUG247.15-BNIOl.C 1.32 source
By Michael Scott. I/O routines 1. BNCORE.C. [MS-DOS:]

CUG247.16-BNI02.C 1.32 source
By Michael Scott. I/O routines 2. => BNCORE.C. [MS-DOS:]

CUG247.17-BNMULDV.ANY 1.32 source
By Michael Scott. Routine muldiv calculates (a*b+c)/m and (a*b+c)%m as
quickly as possible. => BNCORE.C. [MS-DOS:]

CUG247.18-BNMULDV.C 1.32 source
By Michael Scott. Turbo C muldiv function using in line assembly
functions. BNCORE.C. [MS-DOS:]

CUG247.19-BNPI.C 1.32 source
By Michael Scott. Calculate pi by GaussLegendre method. => BNCORE.C.
[MSDOS:]

CUG247.20-BNPRIME.C 1.32 source
By Michael Scott. Test for and generate prime numbers. => BNCORE.C.
[MS-DOS:]

CUG247.21-BNRAND.C 1.32 source
By Michael Scott. Random number routine. => BNCORE.C. [MS-DOS:]

CUG247.22-BNROUND.C 1.32 source
By Michael Scott. Euclidean mediant rounding routine. => BNCORE.C.
[MS-DOS:]

CUG247.23-BNXGCD.C 1.32 source
By Michael Scott. Extended greatest common divisor module. =>
BNCORE.C. [MSDOS:]

CUG247.24-BRENT.C 1.32 source
By Michael Scott. Example program to factor big numbers using
Brent-Pollard method. => BNCORE.C. [MS-DOS:]

CUG247.25-BRUTE.C 1.32 source
By Michael Scott. Example program to factor numbers using brute force.
=> BNCORE.C. [MS-DOS:]

CUG247.26-BUGS.DOC 1.32 doc
By Michael Scott.

CUG247.27-CALC.C 1.32 source
By Michael Scott. Miracl - rational calculator. => CALC.EXE BNCORE.C.
[MSDOS:]

CUG247.28-CALC.EXE 1.32 executable
By Michael Scott. => CALC.C. [MS-DOS:]

CUG247.29-CRACKER.C 1.32 source
By Michael Scott. Factor big numbers using Brillhart-Morrison method
with Pomerance/Wagestaff early abort technique. => BNCORE.C. [MS-DOS:]

CUG247.30-DECIPH.C 1.32 source
By Michael Scott. Decipher messages using Okamoto private key. =>
ENCIPH.C BNCORE.C. [MS-DOS:]

CUG247.31-DECODE.C 1.32 source
By Michael Scott. Decode a message using RSA private key. => ENCODE.C
BNCORE.C. [MS-DOS:]

CUG247.32-ENCIPH.C 1.32 source
By Michael Scott. Encipher text using OKAMOTO public key. => BNCORE.C.
[MSDOS:]

CUG247.33-ENCODE.C 1.32 source
By Michael Scott. Encode using RSA public key. => BNCORE.C. [MS-DOS:]

CUG247.34-FACT.C 1.32 source
By Michael Scott. Example program to calculate factorials. =>
BNCORE.C. [MS-DOS:]

CUG247.35-HAILC 1.32 source
By Michael Scott. Program to investigate hailstone numbers =>
BNCORE.C. [MSDOS:]

CUG247.36-HILBERT.C 1.32 source
By Michael Scott. Solve set of linear equations involving a Hilbert
matrix. => BNCORE.C. [MS-DOS:]

CUG247.37-MANUAL1.DOC 1.32 doc
By Michael Scott. User's Guide. => MANUAL2.DOC.

CUG247.38-MANUAL2.DOC 1.32 doc
By Michael Scott. Function descriptions.

CUG247.39-MERSENNE.C 1.32 source
By Michael Scott. Calculate mersenne primes using Lucas-Lehmer test.
=> BNCORE.C. [MS-DOS:]

CUG247.40-MIRACL.H 1.32 header
By Michael Scott. Main header file. => MIRACL.HXX BNCORE.C. [MS-DOS:]

CUG247.41-MIRACLHXX 1.32 header
By Michael Scott. Main header file if using ANSI enhanced type C
compiler. => MIRACL.H BNCORE.C. [MS-DOS:]

CUG247.42-MIRDEFF.H 1.32 header
By Michael Scott. MIRACL definitions. => BNCORE.C. [MS-DOS:]

CUG247.43-MSDOIT.BAT 1.32 batch
By Michael Scott. Creates MIRACL.LIB from component parts, using
Microsoft C compiler v3.00+. => BNCORE.C. [MS-DOS:]

CUG247.44-MWDOIT.BAT 1.32 batch
By Michael Scott. Creates MIRACL.LIB from its component parts, using
Mark Williams C compiler v2.00. [MS-DOS:]

CUG247.45-OKOKEY.C 1.32 source
By Michael Scott. Generates Okamoto keys. => BNCORE.C. [MS-DOS:]

CUG247.46-PALIN.C 1.32 source
By Michael Scott. Investigates palindromic reversals. => BNCORE.C.
[MS-DOS:]

CUG247.47-PI.C 1.32 source
By Michael Scott. Calculate pi. => BNCORE.C. [MS-DOS:]

CUG247.48-PRIVATE.KEY 1.32 source
By Michael Scott. [MS-DOS:]

CUG247.49-PUBLIC.KEY 1.32 source
By Michael Scott. [MS-DOS:]

CUG247.50-README.DOC doc
By Michael Scott. Overview of MIRACL.

CUG247.51-ROOTS.C 1.32 source
By Michael Scott. Program to calculate roots. => BNCORE.C. [MS-DOS:]

CUG247.52-RSAKEY.C 1.32 source
By Michael Scott. Program to generate RSA keys. => BNCORE.C. [MS-DOS:]

CUG247.53-SAMPLE.C 1.32 source
By Michael Scott. Example program. => BNCORE.C. [MS-DOS:]

CUG247.54-SHARE.DOC 1.32 doc
By Michael Scott. Share ware statement for end-users.

CUG247.55-START.DOC 1.32 doc
By Michael Scott. Introduction to MIRACL. => SHARE.DOC MANUAL1.DOC.

CUG247.56-TCDOIT.BAT 1.32 batch
By Michael Scott. Creates MIRACL.LIB using Turbo C v1.0 [MS-DOS:]

CUG247.57-UPDATE.DOC doc
By Michael Scott. Revision history.

CUG247.58-ZRDOIT.BAT 1.32 batch
By Michael Scott. Creates MIRACL.LIB using Zorland v1.1. [MS-DOS:
ZORLAND 1.]

==============================================================================
CUG248 -
-----------

MlCROSPELL
By Daniel M. Lawrence. [restricted] 1 disk. This stand-alone spelling
checker features a 1000 word common word list and 43,000 word main
dictionary. Includes an executable module for MSDOS and source code
which can be recompiled to run on the AMIGA 1000, Atari ST, several
different flavors of UNIX and the IBM 370 series under CMS. MicroSPELL
is known to compile with MWC86, Lattice, Aztec, Microsoft and Turbo
running under MSDOS. MicroEMACS 3.9 (CUG197 & CUG 198) can be used
with MicroSPELL to create a system which scans through a file,
displaying each questionable word as part of an edit screen.

CUG248.01-CDICT.C source
Dictionary compression utility. => CDICT.EXE. [UNIX, MS-DOS: AZTEC,
TC, MSC, LC, MWC]

CUG248.02-CDICT.EXE executable
=> CDICT.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.03-CHECK.C source
Check source words against dictionary. => MAIN.C. [UNIX, MS-DOS:
AZTEC, TC, MSC, LC, MWC]

CUG248.04-COMMON.C source
Most common word list routine. => MAIN.C, COMMON.TXT. [UNIX, MS-DOS:
AZTEC, TC, MSC, LC, MWC]

CUG248.05-CoMMoN.TXT doc
Listing of common words. => CoMMoN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.06-DDEF.H header
Global variable definitions. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.07-DICT.DCT data
Compressed main dictionary. => MAIN.C.

CUG248.08-DMERGE.C source
Dictionary merge utility. => DMERGE.EXE. [UNIX, MS-DOS: AZTEC, TC,
MSC, LC, MWC]

CUG248.09-DMERGE.EXE executable
=> DMERGE.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.10-DOPT.H header
Compile options settings. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.11-DPATH.H header
Path list to find dictionary files. => MAIN.C. [UNIX, MS-DOS: AZTEC,
TC, MSC, LC, MWC]

CUG248.12-DSFX.H header
Suffix list. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.13-DSTRUCT.H header
Structure declarations. => MAIN.H. [UNIX, MS-DOS: AZTEC, TC, MSC, LC,
MWC]

CUG248.14-FILE.C source
File I/O => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.15-IBMPC.C source
Prototype screen driver. => MAIN.C. IMS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.16-MAIN.C source
A stand alone spelling checker with 1000 word common usage list (for
speed) and 43,000 word main dictionary. Spell has. => MICRO EMACS.
[UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.17-MDICT.C source
Main dictionary functions. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.18-QUICK.C source
Quick sort function. => MICRO EMACS. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.19-README doc
Support information, program description, installation requirements
and file descriptions.

CUG248.20-SCAN.CMD data
MicroEmacs 3.9 command file used to scan spelled documents. => MICRO
EMACS. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.21-SOURCE.C source
Source file parsing routine. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.22-SPELL.EXE executable
=> MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.23-SPELL.LST doc
=> MAIN.C, SPELL.EXE.

CUG248.24-SPELL.MSS doc
Preliminary documentation in Micro-SCRlBE form.

CUG248.25-SPELL.TXT doc
Preliminary documentation in standard text form.

CUG248.26-USER.C source
User word list file functions. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC,
MSC, LC, MWC]

==============================================================================
CUG249 -
-----------

C SPOT RUN (CSR) LIBRARY
An add-on library by Bob Pritchett (NJ), Philip Mongelluzzo (CT), and
George Roukas including more than 200 functions for PC-clones. This
shareware package includes functions to perform text windowing, cursor
control, printer output, time and date manipulation, video output,
simple graphics, advanced field and free-form data input, sound,
MS-DOS and BIOS access, and menu support. Includes only object modules
for Microsoft and Turbo C compilers. Source code is available from the
authors for $50. [share2]

CUG249.01-CCDEMOMS.BAT batch
By Bob Pritchett. Compile and link demo for Microsoft C. [MS-DOS: MSC]

CUG249.02-CCDEMOTC.BAT batch
By Bob Pritchett. Compile and link demo under Turbo C v1.0 [MS-DOS: TC
1.0]

CUG249.03-CHECKC.EXE 2.1 executable
By Bob Pritchett. A small C code checker [MS-DOS: MSC, DLC]

CUG249.04-COLOR.H 2.1 header
By Bob Pritchett. Color related manifests. [MS-DOS: MSC, DLC, TC]

CUG249.05-CSR201.NWS 2.1 doc
By Bob Pritchett. Volume 2 of newsletter.

CUG249.06-CSRDEMO.C 2.1 source
By Bob Pritchett. Demo program => CSRDEMO.EXE. [MS-DOS: MSC, DLC, TC
1.0]

CUG249.07-CSRDEMO.EXE 2.1 executable
By Bob Pritchett. => CSRDEMO.C. [MSDOS:]

CUG249.08-CSRDEMO.PRJ 2.1 make
By Bob Pritchett. Project file to make CSR in Turbo C. => CSRDEMO.C.
[MS-DOS: TC 1.0]

CUG249.09-CSRDOS.H 2.1 header
By Bob Pritchett. Include file for directory searching. [MS-DOS: MSC,
DLC, TC]

CUG249.10-CSRMENU.H 2.1 header
By Bob Pritchett. Include file for menu routines. [MS-DOS: MSC, DLC,
TC]

CUG249.11-CSRMISC.H 2.1 header
By Bob Pritchett. Assorted definitions for CSR. [MS-DOS: MSC, DLC, TC]

CUG249.12-CSRMODES.H 2.1 header
By Bob Pritchett. Include file with set mode() options. [MS-DOS: MSC,
DLC, TC]

CUG249.13-CSRMSC.LIB 2.1 library
By Bob Pritchett. Link able version of the library for Microsoft.
[MS-DOS: MSC] TSCSR.LIB

CUG249.14-CSRSHELL.ASM 2.1 source
By Bob Pritchett. Skeletal assembly language interface to Microsoft C.
[MS-DOS: MASM]

CUG249.15-CSRSOUND.H header
By Bob Pritchett. Some musical note values and declarations. [MS-DOS:
MSC, DLC, TC]

CUG249.16-CSRTIME.H 2.1 header
By Bob Pritchett. Text arrays for week and names. [MS-DOS: MSC, DLC,
TC]

CUG249.17-CSRUPDT.DOC 2.1 doc
By Bob Pritchett. Update information. => CSRWHOLE.DOC.

CUG249.18-CSRWHOLE.DOC doc
By Bob Pritchett. Complete documentation.

CUG249.19-ERRORS.H 2.1 header
By Bob Pritchett. Text for critical MS-DOS errors. [MS-DOS: MSC, DLC,
TC]

CUG249.20-FLINE.EXE 2.1 executable
By Bob Pritchett. Program to print out lines in a source file.
[MS-DOS: MSC, DLC]

CUG249.21-README.C source
By Bob Pritchett. Program to allow quick and easy viewing of a
README.DAT text file. => README.EXE README.DAT. [MSDOS: MSC]

CUG249.22-README.DAT data
By Bob Pritchett. Program description and author's comments. =>
README.C. [MSDOS:]

CUG249.23-README.EXE executable
By Bob Pritchett. => README.C. [MS-DOS: MSC]

CUG249.24-SKEY.H 2.1 header
By Bob Pritchett. Special extended key functions. [MS-DOS: DLC, TC]

CUG249.25-TIMERS.C source
By Bob Pritchett, D. Perras. Code for timing functions. [MS-DOS: MSC,
DLC]

CUG249.26-TSCSR.LIB library
By Bob Pritchett. Linkable version of the library for Turbo C.
[MS-DOS: TC]

==============================================================================
CUG250 -
-----------

68K FP LIBRARY & MANDELBROT GRAPHICS
By Edmund Ramm. [public] 1 disk. Contributed by Edmund Ramm, West
Germany, this volume for MC68020 machines running CP/M 68K replaces
floating point modules in Dri-C with modules which take advantage of
an MC68881 chip. Ramm has also provided a fractals program which
generates Mandelbrot graphics.

CUG250.01-ACOS.O object
[CP/M-68K]

CUG250.02-ACOS.S source
IEEE format single precision arc cosine function. [CP/M-68K] assembly
source.

CUG250.03-ASIN.O object
[CP/M-68K]

CUG250.04-ASIN.S source
IEEE format single precision arc tangent function. [CP/M-68K] assembly
source.

CUG250.05-ATAN.O object
[CP/M-68K]

CUG250.06-ATAN.S source
[CP/M-68K] assembly source.

CUG250.07-CEIL.O object
[CP/M-68K]

CUG250.08-CEI L.S source
IEEE format single precision ceil functions. [CP/M-68K] assembly
source.

CUG250.09-COS.O object
[CP/M-68K]

CUG250.10-COS.S source
IEEE format single precision cosine function. [CP/M-68K] assembly
source.

CUG250.11-COSH.O object
[CP/M-68K]

CUG250.12-COSH.S source
IEEE format single precision hyperbolic cosine function. [CP/M-68K]
assembly source.

CUG250.13-EXP.O object
[CP/M-68K]

CUG250.14-EXP.S source
IEEE format single precision exponential function. [CP/M-68K] assembly
source.

CUG250.15-FABS.O object
[CP/M-68K]

CUG250.16-FABS.S source
IEEE format single precision absolute function. [CP/M-68K] assembly
source.

CUG250.17-FLOOR.0 object
[CP/M-68K]

CUG250.18-FLOOR.S source
IEEE format single precision floor function. [CP/M-68K] assembly
source.

CUG250.19-FMOD.O object
[CP/M-68K]

CUG250.20-FMOD.S source
IEEE format single precision modulo function. [CP/M-68K] assembly
source.

CUG250.21-FPADD.O object
[CP/M-68K]

CUG250.22-FPADD.S source
IEEE format single precision addition function. [CP/M-68K] assembly
source.

CUG250.23-FPCMP.O object
[CP/M-68K]

CUG250.24-FPCMP.S source
IEEE format single precision two-numbers comparison function.
[CP/M-68K] assembly source.

CUG250.25-FPDIV.O object
[CP/M-68K]

CUG250.26-FPDIV.S source
IEEE format single precision division function. [CP/M-68K] assembly
source.

CUG250.27-FPMUL.O object
[CP/M-68K]

CUG250.28-FPMUL.S source
IEEE format single precision multiplication function. [CP/M-68K]
assembly source.

CUG250.29-FPN EG.O object
[CP/M-68K]

CUG250.30-FPNEG.S source
IEEE format single precision negation function. [CP/M-68K] assembly
source.

CUG250.31-FPSUB.O object
[CP/M-68K]

CUG250.32-FPSUB.S source
IEEE format single precision subtraction function. [CP/M-68K] assembly
source.

CUG250.33-FSQR.O object
[CP/M-68K]

CUG250.34-FSQR.S source
IEEE format single precision square function. [CP/M-68K] assembly
source.

CUG250.35-GRAPHDRI.S source
Graphic Support Routines. bit map display functions. => MANDEL.C.
[CP/M-68K] assembly source.

CUG250.36-LIB68881.DOC doc
Procedures to replace DRI-C IEEE floating point library with a new
library.

CUG250.37-LOG.O object
[CP/M-68K]

CUG250.38-LOG.S source
IEEE format single precision logarithm function. [CP/M-68K] assembly
source.

CUG250.39-LOG10.0 object
[CP/M-68K]

CUG250.40-LOG10.S source
IEEE format single precision decimal logarithm function. [CP/M-68K]
assembly source.

CUG250.41-MANDEL.C source
plots fractals, using the Mandelbrot set on EPSON MX-80 matrix
printer. => GRAPHDRI.S. [CP/M-68K: DRIC] Change the printer control
sequences if not using EPSON MX-80.

CUG250.42-PLOTF.C source
bit image file point. => MANDEL.C. [CP/M-68K]

CUG250.43-POW.O object
[CP/M-68K]

CUG250.44-POW.S source
IEEE format single precision power x ^ y function. [CP/M-68K] assembly
source.

CUG250.45-SIN.O object
[CP/M-68K]

CUG250.46-SIN.S source
IEEE format single precision sine function. [CP/M-68K] assembly
source.

CUG250.47-SINH.0 object
[CP/M-68K]

CUG250.48-SINH.S source
IEEE format single precision hyperbolic function. [CP/M-68K] assembly
source.

CUG250.49-SQRT.O object
[CP/M-68K]

CUG250.50-SQRT.S source
IEEE format single precision square root function. [CP/M-68K] assembly
source.

CUG250.51-TAN.O object
[CP/M-68K]

CUG250.52-TAN.S source
IEEE format single precision tangent function. [CP/M-68K] assembly
source.

CUG250.53-TANH.O object
[CP/M-68K]

CUG250.54-TAN H.S source
IEEE format single precision hyperbolic tangent function. [CP/M-68K]
assembly source.

==============================================================================
CUG251 -
-----------

PULL DOWN MENUS & ADVENTURE SYSTEM
[restricted] 1 disk. Pull Down Menus by James Pinson is a
general-purpose menu system for any PC application. The screen
handling is performed by using BIOS interrupts. The program was
developed under Lattice C v2.4. An article about pull down menus
appeared in the May 1987 BYTE. The adventure authoring system for
writing text adventure games by David Betz has three essential
features: a parser to handle commands typed by the player, an
object-description facility, and a language for specifying the events
that take place in response to the player's commands. The program was
developed under Aztec C.

CUG251.01-ADVAVL.C source
By David Michael Betz. AVL tree manipulation routine. [Macintosh,
MS-DOS: AZTEC]

CUG251.02-ADVAVL.H header
By David Michael Betz. AVL tree definitions. [Macintosh, MS-DOS:
AZTEC]

CUG251.03-ADVCOM.C source
By David Michael Betz. A compiler for adventure games. [Macintosh,
MS-DOS: AZTEC]

CUG251.04-ADVCOM.H header
By David Michael Betz. adventure compiler definitions. [Macintosh,
MS-DOS: AZTEC]

CUG251.05-ADVDBS.C source
By David Michael Betz. adventure database access routines. [Macintosh,
MS-DOS: AZTEC]

CUG251.06-ADVDBS.H header
By David Michael Betz. adventure database definitions. [Macintosh,
MS-DOS: AZTEC]

CUG251.07-ADVEXE.C source
By David Michael Betz. execute adventure code. [Macintosh, MS-DOS:
AZTEC]

CUG251.08-ADVEXP.C source
By David Michael Betz. expression compiler for adventure games.
[Macintosh, MS-DOS: AZTEC]

CUG251.09-ADVFCN.C source
By David Michael Betz. functions for adventure game. [Macintosh,
MS-DOS: AZTEC]

CUG251.10-ADVFIO.C source
By David Michael Betz. file l/O routines for the adventure compiler.
[Macintosh, MS-DOS: AZTEC]

CUG251.11-ADVINT.C source
By David Michael Betz. an interpreter for adventure games. [Macintosh,
MS-DOS: AZTEC]

CUG251.12-ADVINT.H header
By David Michael Betz. adventure interpreter definitions. [Macintosh,
MS-DOS: AZTEC]

CUG251.13-ADVJUNK.C source
By David Michael Betz. functions for the adventure interpreter.
[Macintosh, MS-DOS: AZTEC]

CUG251.14-ADVMSG.C source
By David Michael Betz. adventure interpreter message routine.
[Macintosh, MS-DOS: AZTEC]

CUG251.15-ADVPRS.C source
By David Michael Betz. adventure parser. [Macintosh MS-DOS:AZTEC]

CUG251.16-ADVSCN.C source
By David Michael Betz. A lexical scanner for the adventure compiler.
[Macintosh MS-DOS: AZTEC]

CUG251.17-ADVSYS.DOC doc
By David Michael Bek. A users guide explaining the adventure language
syntax.

CUG251.18-ADVTRM.C source
By David Michael Betz. terminal I/O routines for adventure game.
[Macintosh, MS-DOS: AZTEC]

CUG251.19-CONTENTS.MAY doc
Disk contents descriptions.

CUG251.20-LIST1.PS source
By Denis G. Pelli. From article"Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.21-LIST2.PS source
By Denis G. Pelli. From article "Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.22-LIST3.PS source
By Denis G. Pelli. From article"Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.23-LIST4.PS source
By Denis G. Pelli. From article "Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.24-LIST5.PS source
By Denis G. Pelli. From article"Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.25-LISTINGS.DOC doc
By Chris Crawford, Eva White. A benchmark run on Machintosh SCSI
external hard disk. [Macintosh] BASIC source.

CUG251.26-OBJECTS.ADI source
By David Michael Betz. An object-oriented runtime package including
object definitions.

CUG251.27-OSAMPLE.ADV source
By David Michael Betz. A sample adventure code.

CUG251.28-PULLDOWN.C source
By James L. Pinson. A pulldown menu program under MSDOS. [MS-DOS: LC2]

CUG251.29-READ.ME doc
By James L. Pinson. Changes to pulldown menu

CUG251.30-README.1 ST doc
list of files for the adventure game.

CUG251.31-README.NOW doc
Non commercial use documentation.

CUG251.32-WARNING.CUG doc
Warning for users who try to compile the adventure program under
MSDOS.

==============================================================================
CUG252 -
-----------

C TUTOR text
By Gordon Dodrill. [share1] 1 disk. This extensive C tutorial was
contributed by the author Gordon Dodrill, Coronado Enterprises,
Albuquerque, NM. C Tutor begins with the most basic concepts of the C
programming language and takes you up to the highest level of C
programming; including concepts of pointers, structures, and dynamic
allocation. This tutorial is not for a beginning programmer, however
you do not have to know anything of the C programming language. CUG252
contains the text, about 100 pages, including numerous examples.
CUG253 contains the source for each of the text examples and the
source to construct a visual calculator program. This version (v2.4)
of C Tutor has been updated to include the ANSI standard. Dodrill's
tutorial for older versions of Turbo C has been retained in the CUG
Library as volumes 257 and 258. We also distribute Dodrill's C++ Tutor
as CUG353.

CUG252.01-CHAP01.TXT doc
Getting Started. The first example program of the Turbo C tutorial. =>
CUG253.

CUG252.02-CHAP02.TXT doc
Program Structure. Discussion of program structure, commenting and
good program style.

CUG252.03-CHAP03.TXT doc
Program control. Explanation of program control, including loops, the
switch construct, the goto, break and continue, if and if-else.

CUG252.04-CHAP04.TXT doc
Assignment and logical compare. Discussion of assignment and logical
compares, explaining various data types and the cryptic constructs.

CUG252.05-CHAP05.TXT doc
Functions, variables & prototyping. Discussion of functions, variables
and prototyping, including recursion, floating returns and variable
scope.

CUG252.06-CHAP06.TXT doc
Defines & Macros. Defines and Macros explained, including the enum
type variable.

CUG252.07-CHAP07.TXT doc
Strings and Arrays. Strings and Arrays explained, including
multidimensional arrays and passing data from functions.

CUG252.08-CHAP08.TXT doc
Pointers. Pointers explained, including two way function data.

CUG252.09-CHAP09.TXT doc
Standard Input/Output. Explanation of standard input/output, including
in memory I/O conversion and error output.

CUG252.10-CHAP10.TXT doc
File Input/Output. Explanation of file I/O including formatted and
single character output; word, line, single character and file, reads,
and printer output.

CUG252.11-CHAP11.TXT doc
Structures. Structures explained including structures with pointers,
arrays of structures, unions, nested structures and a bit field
example.

CUG252.12-CHAP12.TXT doc
Dynamic allocation. Discussion of dynamic memory allocation, including
both simple and large dynamic allocation and linked lists.

CUG252.13-CHAP13.TXT doc
Character and bit manipulation. Character and bit manipulation
explained, including upper/lower case, character classification,
logical bit operations and bit shifting.

CUG252.14-CHAP14.TXT doc
Example Programs. Example programs, including DOS call examples, batch
file processes, a source code lister, and a visual calculator.

CUG252.15-INTRO.TXT doc
Introduction. Introduction to Turbo C tutorial. => CUG253.

CUG252.16-PRINTEXT.BAT batch
A batchfile to print text files. [MS-DOS]

CUG252.17-PRINTEXT.EXE executable
Executable version to print text files.

CUG252.18-READ.ME doc
A users guide. => CUG253.

CUG252.19-TABCONT.TXT doc
Table of contents.

==============================================================================
CUG253 -
-----------

C TUTOR source
By Gordon Dodrill [share1] 1 disk. See CUG252

CUG253.01-AMORT data
the loan amortization equations. => VC.DOC.

CUG253.02-ANYFILE.C source
Chapter 10 - program 7. read in any file. => CHAP10.TXT CUG252.

CUG253.03-BACKWARD.C source
Chapter 05 - Program 6. recursion program. => CHAP05.TXT CUG252.

CUG253.04-BETTERIN.C source
Chapter 09 - Program 3. Better form of single I/O. => CHAP09.TXT
CUG252.

CUG253.05-BIGARRAY.C source
Chapter 07 - Program 4. many arrays. => CHAP07.TXT CUG252.

CUG253.06-BIGDYNL.C source
Chapter 12 - Program 2. large dynamic allocation. => CHAP12.TXT
CUG252.

CUG253.07-BITFIELD.C source
Chapter 11 - Program 7. bitfield examples. => CHAP11.TXT CUG252.

CUG253.08-BITOPS.C source
Chapter 13 - Program 3. logical bit operations. => CHAP13.TXT CUG252.

CUG253.09-BREAKCON.C source
Chapter 03 - Program 5. the break and continue. => CHAP03.TXT CUG252.

CUG253.10-CHARCLAS.C source
Chapter 13 - Program 2. character classification. => CHAP13.TXT
CUG252.

CUG253.11-CHAROUT.C source
Chapter 1 0 - Program 2. single character output. => CHAP10.TXT
CUG252.

CUG253.12-CHRSTRG.C source
Chapter 07 - Program 1. character strings. => CHAP07.TXT CUG252.

CUG253.13-COMBINE.C source
Chapter 04 - Program 4. => CHAP04.TXT CUG252. There is no output from
this program.

CUG253.14-COMMENTS.C source
Chapter 02 - Program 5. comments in C. => CHAP05.TXT CUG252.

CUG253.15-COMPARES.C source
Chapter 04 - Program 5. logical compares. => CHAP04.TXT CUG252.

CUG253.16-CRYPTIC.C source
Chapter 04 - Program 6. the cryptic constructs. => CHAP04.TXT CUG252.

CUG253.17-DATA.C source
data initialize and calculate. => CUG252, VC.C.

CUG253.18-DEFIN.H header
definitions for a visual calculator program. => CUG252, VC.C.

CUG253.19-DEFINE.C source
Chapter 06 - Program 1. defines. => CHAP06.TXT CUG252.

CUG253.20-DOSEX.C source
Chapter 14 - Program 1. DOS Call examples. => CHAP14.TXT CUG252.
[MS-DOS]

CUG253.21-DOWHILE.C source
Chapter 03 - Program 2. the do-while loop. => CHAP03.TXT CUG252.

CUG253.22-DUMBCONV.C source
Chapter 03 - Program 9. Poor program style temperature conversion. =>
CHAP03.TXT CUG252.

CUG253.23-DUMBCONV.V source
Chapter 3 - Program 9. poor program style temperature conversion. =>
CUG252, CHAP3.TXT.

CUG253.24-DYNLINK.C source
Chapter 12 - Program 3. dynamic linked list program. => CHAP12.TXT
CUG252.

CUG253.25-DYNLIST.C source
Chapter 1 2 - Program 1. simple dynamic allocation. => CHAP12.TXT
CUG252.

CUG253.26-ENUM.C source
Chapter 06 - Program 3. enumerated type. => CHAP06.TXT CUG252.

CUG253.27-FILE.C source
file input and output routines. => VC.DOC, CUG252.

CUG253.28-FIRSTEX.C source
Chapter 1 - Program 1. The first example program. => CUG252,
CHAP1.TXT.

CUG253.29-FLOATSQ.C source
Chapter 05 - Program 3. floating returns. => CHAP05.TXT CUG252.

CUG253.30-FLOATSQ2.C source
Chapter 05 - Program 7. floating returns with prototypes. =>
CHAP05.TXT CUG252.

CUG253.31-FORLOOP.C source
Chapter 03 - Program 3. the for loop. => CHAP03.TXT CUG252.

CUG253.32-FORMOUT.C source
Chapter 10 - Program 1. formatted output. => CHAP10.TXT CUG252.

CUG253.33-FUNCPNT.C source
Chapter 08 - Program 4. This is the print stuff function. =>
CHAP08.TXT CUG252.

CUG253.34-GOODFORM.C source
Chapter 02 - Program 6. good program style. => CHAP02.TXT CUG252.

CUG253.35-GOTOEX.C source
Chapter 03 - Program 7. the goto statement. => CHAP03.TXT CUG252.

CUG253.36-HELP data
the users index of files. => CUG252, VC.DOC.

CUG253.37-IFELSE.C source
Chapter 03 - Program 4. the if & if-else construct. => CHAP03.TXT
CUG252.

CUG253.38-INMEM.C source
Chapter 09 - Program 6. in memory I/O conversion. => CHAP09.TXT
CUG252.

CUG253.39-INTARRAY.C source
Chapter 07 - Program 3. integer array. => CHAP07.TXT CUG252.

CUG253.40-INTASIGN.C source
Chapter 04 - Program 1. integer assignment. => CHAP04.TXT CUG252.

CUG253.41-INTIN.C source
Chapter 09 - Program 4. integer input. => CHAP09.TXT CUG252.

CUG253.42-LIST.C source
Chapter 1 4 - Program 3. read in any text file and list it on the
monitor with line numbers and with page numbers. => LISTF.C,
CHAP14.TXT CUG252.

CUG253.43-LIST.EXE executable
source code lister. => LIST.C, CHAP14.TXT CUG252.

CUG253.44-LISTF.C source
Chapter 14 - Program 3. contains functions called by LIST.C. =>
LIST.C, CHAP14.TXT CUG252.

CUG253.45-LOTTYPES.C source
Chapter 04 - Program 3. lots of data types. => CHAP04.TXT CUG252.

CUG253.46-MACRO.C source
Chapter 06 - Program 2. macros. => CHAP06.TXT CUG252.

CUG253.47-MORTYPES.C source
Chapter 04 - Program 2. more data types. => CHAP04.TXT CUG252.

CUG253.48-MULTIARY.C source
Chapter 07 - Program 6. multidimensional array. => CHAP07.TXT CUG252.

CUG253.49-NESTED.C source
Chapter 11 - Program 4. nested structures. => CHAP11.TXT CUG252.

CUG253.50-ONEINT.C source
Chapter 02 - Program 4. one integer variable. => CHAP02.TXT CUG252.

CUG253.51-PASSBACK.C source
Chapter 07 - Program 5. getting data from functions. => CHAP07.TXT
CUG252.

CUG253.52-PAYMENT data
the monthly payment calculation. => VC.DOC., CUG252.

CUG253.53-POINTER.C source
Chapter 08 - Program 1. illustration of pointer use. => CHAP08.TXT
CUG252.

CUG253.54-POINTER2.C source
Chapter 08 - Program 2. an example using pointers. => CHAP08.TXT
CUG252.

CUG253.55-PRINTALL.BAT batch
a batch file to print out all source code listings.

CUG253.56-PRINTDAT.C source
Chapter 10 - Program 8. output to the printer. => CHAP10.TXT CUG252.

CUG253.57-READ.ME doc
users guide to C tutorial example programs. => CUG252.

CUG253.58-READCHAR.C source
Chapter 10 - Program 3. read single characters. => CHAP10.TXT CUG252.

CUG253.59-READGOOD.C source
Chapter 10 - Program 5. better read and display. => CHAP10.TXT CUG252.

CUG253.60-READLINE.C source
Chapter 10 - Program 6. read a full line. => CHAP10.TXT CUG252.

CUG253.61-READTEXT.C source
Chapter 10 - Program 4. read single words. => CHAP10.TXT CUG252.

CUG253.62-RECURSON.C source
Chapter 05 - Program 5. simple recursion program. => CHAP05.TXT
CUG252.

CUG253.63-SCOPE.C source
Chapter 05 - Program 4. scope of variables. => CHAP05.TXT CUG252.

CUG253.64-SHIFTER.C source
Chapter 13 - Program 4. bit shifting operations. => CHAP13.TXT CUG252.

CUG253.65-SIMPLEIO.C source
Chapter 09 - Program 1. => CHAPO9.TXT CUG252.

CUG253.66-SINGLEIO.C source
Chapter 09 - Program 2. single character I/O. => CHAPO9.TXT CUG252.

CUG253.67-SPECIAL.C source
Chapter 09 - Program 7. standard error output. => CHAPO9.TXT CUG252.

CUG253.68-SQUARES.C source
Chapter 05 - Program 2. return a value in function. => CHAP05.TXT
CUG252.

CUG253.69-STRINGIN.C source
Chapter 09 - Program 5. string input. => CHAPO9.TXT CUG252.

CUG253.70-STRINGS.C source
Chapter 07 - Program 2. character string manipulation. => CHAP07.TXT
CUG252.

CUG253.71-STRUCT.DEF source
structure definition. => CUG252, VC.C.

CUG253.72-STRUCT1.C source
Chapter 11 - Program 1. minimum structure example. => CHAP11.TXT
CUG252.

CUG253.73-STRUCT2.C source
Chapter 11 - Program 2. array of structures. => CHAP11.TXT CUG252.

CUG253.74-STRUCT3.C source
Chapter 11 - Program 3. structures with pointers. => CHAP11.TXT
CUG252.

CUG253.75-SUMSQRES.C source
Chapter 05 - Program 1. square function. CHAP05.TXT CUG252.

CUG253.76-SWITCH.C source
Chapter 03 - Program 6. the switch construct. => CHAP03.TXT CUG252.

CUG253.77-TEMPCONV.C source
Chapter 03 - Program 8. the temperature conversion. => CHAP03.TXT
CUG252.

CUG253.78-TEST data
a group of 50 nonsense equations. => VC.C, CUG252.

CUG253.79-TEST.BAT batch
=> WHATNEXT.C.

CUG253.80-TRIVIAL.C source
Chapter 02 - Program 1. the minimal program. => CHAP02.TXT CUG252.

CUG253.81-TWOWAY.C source
Chapter 08 - Program 3. two way function data. => CHAP08.TXT CUG252.

CUG253.82-UGLYFORM.C source
Chapter 02 - Program 7. bad program style. => CHAP02.TXT CUG252.

CUG253.83-UNION1.C source
Chapter 11 - Program 5. a union example. => CHAP11.TXT CUG252.

CUG253.84-UNION2.C source
a union example. => CHAP11.TXT CUG252.

CUG253.85-UPLOW.C source
Chapter 13 - Program 1. upper/lower case text. => CHAP13.TXT CUG252.

CUG253.86-VC.C source
Chapter 14 - Program 4. visual calculator. => VC.DOC, CHAP14.TXT
CUG252. [MS-DOS]

CUG253.87-VC.DOC doc
visual calculator tutorial. => CHAP14.TXT CUG252.

CUG253.88-VC.EXE executable
Visual Calculator. => VC.C, CHAP14.TXT CUG252. [MS-DOS]

CUG253.89-VIDEO.C source
Chapter 14 - Program 4. video output routines. => VC.C, STRUCT.DEF,
DEFIN.H. [MS-DOS]

CUG253.90-WHATNEXT.C source
Chapter 14 - Program 2. ask question in batch file. => CHAP14.TXT
CUG252.

CUG253.91-WHILE.C source
Chapter 03 - Program 1. while loop. => CHAP03.TXT CUG252.

CUG253.92-WRTMORE.C source
Chapter 02 - Program 3. write more output. => CHAP02.TXT CUG252.

CUG253.93-WRTSOME.C source
Chapter 02 - Program 2. write some output. => CHAP02.TXT CUG252

==============================================================================
CUG254 -
-----------

Withdrawn from CUG Library
[public] 0 disks. Withdrawn to avoid potential copywrite infringement.

==============================================================================
CUG255 -
-----------

EGA GRAPHICS LIBRARY
By Kent Cedola. [restricted] 1 disk. This graphics library is written
entirely in assembly language and executes quickly. The routines are
callable from Turbo C, and are
well-documented. See the Narrative Descriptions section of this
directory for a complete listing of the graphics functions in the
package and examples of Cedola's coding style for these routines. For
more details see the narrative description of this package in Section
2.

CUG255.01-CEGA_IO.ASM source
EGA I/O routines. [MS-DOS] assembly code.

CUG255.02-COLORS.C source
Displays over a hundred colors by a bit color map. Only the standard
palette setting are used, if changed, more colors could be produced.
[MS-DOS: MSC3.0]

CUG255.03-DEMO.C source
Demonstrates some of the EGA graphic routines. [MS-DOS: MSC3.0]

CUG255.04-DEMO.EXE executable
=> DEMO.C. [MS-DOS]

CUG255.05-EGA.DOC doc
EGA graphic function description.

CUG255.06-EGA.LIB library
EGA graphic function library. [MS-DOS]

CUG255.07-FARDEMO.C source
Demonstrates calling by EGA routines using FAR calls. [MS-DOS: MSC4]

CUG255.08-FARDEMO.EXE executable
=> FARDEMO.C, FARJUMP.C. [MS-DOS]

CUG255.09-FARJUMP.C source
Demonstrates calling by EGA routines using FAR calls. => FARDEMO.C.
[MS-DOS: MSC4]

CUG255.10-GIOINIT.ASM source
Check EGA ROM for VEGA BIOS version string and 24 MH2 feature. Set
VEGA HIRES (600x480) mode. [MS-DOS] assembly code.

CUG255.11-GIOINIT.OBJ object
[MS-DOS]

CUG255.12-GOTOXY.ASM source
gotoxy function. [MS-DOS] assembly code.

CUG255.13-GPAMTGD.C source
[MS-DOS: MSC3.0]

CUG255.14-GPBALL.ASM source
EGA Graphic Primitive, drawing a circle. [MS-DOS] assembly code.

CUG255.15-GPBITBLT.ASM source
EGA Graphic Primitives. [MS-DOS: MSC3.0] assembly code.

CUG255.16-GPBOX.ASM source
box-drawing function. [MS-DOS] assembly code.

CUG255.17-GPCIR.ASM source
Circle-drawing function. This routine will plot a solid color or
pattern and automatically clip for the current viewport. [MS-DOS]
assembly code.

CUG255.18-GPCLIP1.ASM source
clip line in current window. [MS-DOS] assembly code.

CUG255.19-GPCLIP2.ASM source
clip line in current window. [MS-DOS] assembly code.

CUG255.20-GPCOLOR.ASM source
Set current color. [MS-DOS]

CUG255.21-GPFILL.C source
Set the current style for line drawing primitives. [MS-DOS: MSC3.0]

CUG255.22-GPFLOOD.ASM source
Complex object fill, color/shading. [MS-DOS] assembly code.

CUG255.23-GPINIT.ASM source
initialize graphic display. [MS-DOS] assembly code.

CUG255.24-GPINITRD.ASM source
EGA Graphic Primitive. [MS-DOS] assembly code.

CUG255.25-GPINITWT.ASM source
EGA Graphic Primitive. [MS-DOS]

CUG255.26-GPLDPAL.ASM source
Load all palette registers. [MS-DOS] assembly code.

CUG255.27-GPLINE.ASM source
Draw a line. [MS-DOS] assembly code.

CUG255.28-GPMERGE.ASM source
Set current merge mode. [MS-DOS] assembly code.

CUG255.29-GPMOVE.ASM source
Set current graphic position. [MS-DOS] assembly code.

CUG255.30-GPMOVGTM.ASM source
[MS-DOS] assembly code.

CUG255.31-GPMOVMTG.ASM source
Initialize graphic software for 640x350 color/monographics. [MS-DOS]
assembly code.

CUG255.32-GPPAL.ASM source
Set a palette register. [MS-DOS] assembly code.

CUG255.33-GPPARMS.ASM source
Set up graphic adapter parameters. [MS-DOS] assembly code.

CUG255.34-GPPLOT.ASM source
Plot a point at X,Y. [MS-DOS] assembly code.

CUG255.35-GPRDCLR.C source
Read the current color to be used by other graphic primitives.
[MS-DOS: MSC3.0]

CUG255.36-GPRDCOL.ASM source
Read a column of pixels. [MS-DOS] assembly code.

CUG255.37-GPRDDOT.ASM source
Read pixel at coordinate (X,Y). [MS-DOS] assembly code.

CUG255.38-GPRDPAL.ASM source
Read current palette setting. [MS-DOS] assembly code.

CUG255.39-GPRDROW.ASM source
Read a row of pixels. [MS-DOS] assembly code.

CUG255.40-GPREADRW.ASM source
[MS-DOS] assembly code.

CUG255.41-GPRECT.C source
Draw a rectangle between CP and (X,Y). [MS-DOS]

CUG255.42-GPRINTF.ASM source
[MS-DOS] assembly code.

CUG255.43-GPSCALE.ASM source
Scale from world to device. [MS-DOS] assembly code.

CUG255.44-GPSHAD1.ASM source
Set pattern for shading. [MS-DOS] assembly code.

CUG255.45-GPSHADE.C source
Set pattern for shading area. [MS-DOS]

CUG255.46-GPSLOPE.ASM source
[MS-DOS] assembly code.

CUG255.47-GPSlYLE.C source
Set the current style for line drawing primitives. [MS-DOS]

CUG255.48-GPTERM.ASM source
terminate graphic display. [MS-DOS] assembly code.

CUG255.49-GPTERMRD.ASM source
[MS-DOS] assembly code.

CUG255.50-GPTERMWT.ASM source
[MS-DOS] assembly code.

CUG255.51-GPVIEWPO.ASM source
Set current view port. [MS-DOS] assembly code.

CUG255.52-GPWAREA.C source
initialize work area. [MS-DOS]

CUG255.53-GPWINDOW.C source
see the current window coordinates. [MS-DOS]

CUG255.54-GPWRITRW.ASM source
[MS-DOS] assembly code.

CUG255.55-GPWSPACE.C source
[MS-DOS]

CUG255.56-GPWTCOL.ASM source
write a column of pixels. [MS-DOS] assembly code.

CUG255.57-GPWTROW.ASM source
write a row of pixels. [MS-DOS] assembly code.

CUG255.58-KC_PAL.C source
[MS-DOS]

CUG255.59-MAKE make
make file for FARDEMO. => FARDEMO.C. [MS-DOS]

CUG255.60-MCEGA.H header
defines all global variable.

CUG255.61-POPUP.C source
open & close a pop up window. [MS-DOS]

CUG255.62-README.DOC doc
a list of files.

CUG255.63-SHADE.ASM source
shading function. [MS-DOS]

CUG255.64-TURBOC.DOC doc
[MS-DOS: TC]

CUG255.65-VPMODULE.ASM source
[MS-DOS] assembly code.

CUG255.66-WORLD.C source
an example of how graphic primitives can be put together to form "HIGH
LEVEL" graphic routines. [MS-DOS]

==============================================================================
CUG256 -
-----------

DeSMET CARRY FIAG ROUTINES
By Phil E. Cogar. [public] 2 disks.
This package consists of some 65 functions (in both source code and
object form) which give DeSmet C programmers access to MS-DOS system
calls and return more error information than the standard intdos()
type call. These functions make use of the DeSmet externally declared
register variables, especially the _carryf variable. The functions are
written in assembly language. An article in The C User's Journal, vol.
6.2 details one of the functions, providing some tutorial insight into
how to create a hardware interface that will give C programs access to
low-level hardware resources like registers and status flags.

CUG256.01-ABSREAD.A source
absolute disk read. [MS-DOS: DESMETC] Assembly code.

CUG256.02-ABSREAD.O object
[MS-DOS]

CUG256.03-ABSWRITE.A source
absolute disk write. [MS-DOS: DESMETC] Assembly code.

CUG256.04-ABSWRITE.O object
[MS-DOS]

CUG256.05-BLKGET.A source
Get control data to block. [MS-DOS: DESMETC] assembly code.

CUG256.06-BLKGET.O object
[MS-DOS]

CUG256.07-BLKSEND.A source
send control data to block. [MS-DOS: DESMETC] Assembly code.

CUG256.08-BLKSEND.O object
[MS-DOS]

CUG256.09-CARRYF.TXT doc
carry flag, DOS interrupt documentation.

CUG256.10-CHKHNDL.A source
Check whether handle refers to a file or a device on a Microsoft
network station (Local) or is redirected to a server (remote.).
[MS-DOS: DESMETC] assembly code.

CUG256.11-CHKHNDL.O object
[MS-DOS]

CUG256.12-CHKREM.A source
Check whether drive is a local drive on Microsoft Networks or is
redirected to a server (remote). [MS-DOS: DESMETC] Assembly code.

CUG256.13-CHKREM.O object
[MS-DOS]

CUG256.14-ENDPROC.A source
end process. [MS-DOS: DESMETC] Assemble code.

CUG256.15-ENDPROC.O object
[MS-DOS]

CUG256.16-ERRLIST.C source
array of pointers to error messages. Should be used with PRINTER.
[MS-DOS: DESMETC]

CUG256.17-FNDFIRST.A source
Find first matching file. [MS-DOS: DESMETC] Assemble code.

CUG256.18-FNDFIRST.O object
[MS-DOS]

CUG256.19-FNDNEXT.A source
Find next matching file .... use only after FINDFIRST function.
[MS-DOS: DESMETC] Assembly code.

CUG256.20-FNDNEXT.O object
[MS-DOS]

CUG256.21-FUNOFH.A source
open file. [MS-DOS: DESMETC] Assemble code.

CUG256.22-FUNOFH.O object
[MS-DOS]

CUG256.23-FUN10H.A source
close file. [MS-DOS: DESMETC] Assemble code.

CUG256.24-FUN10H.O object
[MS-DOS]

CUG256.25-FUN11H.A source
search for first matching entry. [MS-DOS: DESMETC] Assemble code.

CUG256.26-FUN11H.O object
[MS-DOS]

CUG256.27-FUN12H.A source
search for next matching entry. [MS-DOS: DESMETC] Assemble code.

CUG256.28-FUN12H.O object
[MS-DOS]

CUG256.29-FUN13H.A source
delete file. [MS-DOS: DESMETC] Assemble code.

CUG256.30-FUN13H.O object
[MS-DOS]

CUG256.31-FUN17H.A source
rename file. [MS-DOS: DESMETC] Assemble code.

CUG256.32-FUN17H.O object
[MS-DOS]

CUG256.33-FUN1CH.A source
get drive data. [MS-DOS: DESMETC] Assembly code.

CUG256.34-FUN1CH.O object
[MS-DOS]

CUG256.35-FUN23H.A source
get file size (in records). [MS-DOS: DESMETC] Assembly code.

CUG256.36-FUN23H.O object
[MS-DOS]

CUG256.37-FUN38H.A source
get country data. [MS-DOS: DESMETC] Assembly code.

CUG256.38-FUN38H.O object
[MS-DOS]

CUG256.39-FUN39H.A source
create directory. [MS-DOS: DESMETC] Assemble code.

CUG256.40-FUN39H.O object
[MS-DOS]

CUG256.41-FUN3AH.A source
remove directory. [MS-DOS: DESMETC] Assemble code.

CUG256.42-FUN3AH.O object
[MS-DOS]

CUG256.43-FUN3BH.A source
change current directory. [MS-DOS: DESMETC] assemble code.

CUG256.44-FUN3BH.O object
[MS-DOS]

CUG256.45-FUN3CH.A source
create handle. [MS-DOS: DESMETC] Assemble code.

CUG256.46-FUN3CH.O object
[MS-DOS]

CUG256.47-FUN3DH.A source
open handle. [MS-DOS: DESMETC] Assemble code.

CUG256.48-FUN3DH.O object
[MS-DOS]

CUG256.49-FUN3EH.A source
close handle. [MS-DOS: DESMETC] assemble code.

CUG256.50-FUN3EH.O object
[MS-DOS]

CUG256.51-FUN3FH.A source
read handle. [MS-DOS: DESMETC] assembly code.

CUG256.52-FUN3FH.O object
[MS-DOS]

CUG256.53-FUN40H.A source
write handle. [MS-DOS: DESMETC] Assemble code.

CUG256.54-FUN40H.O object
[MS-DOS]

CUG256.55-FUN41H.A source
delete file. [MS-DOS: DESMETC] assemble code.

CUG256.56-FUN41H.O object
[MS-DOS]

CUG256.57-FUN42H.A source
move file pointer. [MS-DOS: DESMETC] Assemble code.

CUG256.58-FUN42H.O object
[MS-DOS]

CUG256.59-FUN45H.A source
duplicate file handle. [MS-DOS: DESMETC] assembly code.

CUG256.60-FUN45H.O object
[MS-DOS]

CUG256.61-FUN46H.A source
force duplicate file handle. [MS-DOS: DESMETC] Assemble code.

CUG256.62-FUN46H.O object
[MS-DOS]

CUG256.63-FUN47H.A source
get current directory. [MS-DOS: DESMETC] assemble code.

CUG256.64-FUN47H.O object
[MS-DOS]

CUG256.65-FUN48H.A source
allocate memory. [MS-DOS: DESMETC] Assemble code.

CUG256.66-FUN48H.O object
[MS-DOS]

CUG256.67-FUN49H.A source
free allocated memory. [MS-DOS: DESMETC] Assemble code.

CUG256.68-FUN49H.O object
[MS-DOS]

CUG256.69-FUN4AH.A source
set block size (paragraphs). [MS-DOS: DESMETC] assembly code.

CUG256.70-FUN4AH.O object
[MS-DOS]

CUG256.71-FUN56H.A source
change directory entry. [MS-DOS: DESMETC] Assemble code.

CUG256.72-FUN56H.O object
[MS-DOS]

CUG256.73-FUN5AH.A source
create unique temporary file. [MS-DOS: DESMETC] Assemble code.

CUG256.74-FUN5AH.O object
[MS-DOS]

CUG256.75-FUN5BH.A source
create new file. [MS-DOS: DESMETC] Assembly code.

CUG256.76-FUN5BH.O object
[MS-DOS]

CUG256.77-FUN6H.A object
direct console I/O. [MS-DOS: DESMETC] Assemble code.

CUG256.78-FUN6H.O object
[MS-DOS]

CUG256.79-GDATIME.A source
get date and time. [MS-DOS: DESMETC] Assembly code.

CUG256.80-GDATIME.O object
[MS-DOS]

CUG256.81-GETATTR.A source
get file attributes. [MS-DOS: DESMETC] Assemble code.

CUG256.82-GETATTR.O object
[MS-DOS]

CUG256.83-GETDATA.A source
Get data from IOCTL device. [MS-DOS: DESMETC] Assembly code.

CUG256.84-GETDATA.O object
[MS-DOS]

CUG256.85-GETDEV.A source
Get IOCTL device. [MS-DOS: DESMETC] Assemble code.

CUG256.86-GETDEV.O object
[MS-DOS]

CUG256.87-GETPSP.A source
Get PSP address at active process. [MS-DOS: DESMETC] Assemble code.

CUG256.88-GETPSP.O object
[MS-DOS]

CUG256.89-GETRET.A source
get return code from child process. [MS-DOS: DESMETC] Assembly code.

CUG256.90-GETRET.O object
[MS-DOS]

CUG256.91-GETSTATE.A source
get verify state. [MS-DOS: DESMETC] Assemble code.

CUG256.92-GETSTATE.O object
[MS-DOS]

CUG256.93-GETSTRAT.A source
get memory allocation strategy. [MS-DOS: DESMETC] Assemble code.

CUG256.94-GETSTRAT.O object
[MS-DOS]

CUG256.95-INSTAT.A source
get IOCTL device input status. [MS-DOS: DESMETC] Asesmbly code.

CUG256.96-INSTAT.O object
[MS-DOS]

CUG256.97-LABEL.EXE executable
give a disk VOLUME LABEL or change the existing Volume label. [MS-DOS]

CUG256.98-LEXE.A source
load and execute a program. [MS-DOS: DESMETC] Assemble code.

CUG256.99-LEXE.O object
[MS-DOS]

CUG256.100-LISTFILE.EXE executable
listing a file. [MS-DOS]

CUG256.101-LOCKFIL.A source
lock the file. [MS-DOS: DESMETC] Assemble code.

CUG256.102-LOCKFIL.O object
[MS-DOS]

CUG256.103-LOVLAY.A source
load overlay. [MS-DOS: DESMETC] Assemble code.

CUG256.104-LOVLAY.O object
[MS-DOS]

CUG256.105-MEDTYPE.A source
Check media type (fixed or removable.). [MS-DOS: DESMETC] Assemble
code.

CUG256.106-MEDTYPE.O object
[MS-DOS]

CUG256.107-NETNAME.A source
Get machine name. [MS-DOS: DESMETC] Assemble code.

CUG256.108-NETNAME.O object
[MS-DOS]

CUG256.109-OUTSTAT.A source
Get IOCTL device output status. [MS-DOS: DESMETC] Assembly code.

CUG256.110-OUTSTAT.O object
[MS-DOS]

CUG256.111-PRINTERR.C source
prints the message corresponding to the error code returned by a
function. [MS-DOS: DESMETC]

CUG256.112-PRINTERR.O object
[MS-DOS]

CUG256.113-READ.ME doc
file list.

CUG256.114-RETRY.A source
Set how many times MS-DOS should retry a disk operation which fails
because of file-sharing violation. [MS-DOS: DESMETC]

CUG256.115-RETRY.O object
[MS-DOS]

CUG256.116-SDATIME.A source
Set date and time. [MS-DOS: DESMETC] assembly code.

CUG256.117-SDATIME.O object
[MS-DOS]

CUG256.118-SENDDATA.A source
Send data to IOCTL device. [MS-DOS: DESMETC] Assemble code.

CUG256.119-SENDDATA.O object
[MS-DOS]

CUG256.120-SETATTR.A source
Set file attributes. [MS-DOS: DESMETC] Assemble code.

CUG256.121-SETATTR.O object
[MS-DOS]

CUG256.122-SETCTRY.A source
Set country data. [MS-DOS: DESMETC] Assembly code.

CUG256.123-SETCTRY.O object
[MS-DOS]

CUG256.124-SETDEV.A source
Set IOCTL devices. [MS-DOS: DESMETC] Assembly code.

CUG256.125-SETDEV.O object
[MS-DOS]

CUG256.126-SETSTRAT.A source
Set memory allocation strategy. [MS-DOS: DESMETC] Assemble code.

CUG256.127-SETSTRAT.O object
[MS-DOS]

CUG256.128-UNLOCK.A source
Unlock the file. [MS-DOS: DESMETC] Assembly code.

CUG256.129-UNLOCK.O object
[MS-DOS]

CUG256.130-USAGE.DOC doc
Usage of carry flag functions.

==============================================================================
CUG257 -
-----------

C TUTOR FOR TURBO C executable
By Gordon Dodrill. [sharel] 1 disk. This shareware tutorial from
Coronado Enterprises, Albuquerque, NM, includes specific support for
Turbo-C, both in the code and in tutorial notes built into the lesson
text. The tutorial is released on two volumes. CUG257 is the text of
the tutorial package. CUG258 is the source code. The original C tutor
(CUG252 and CUG253) has been upgraded to conform to the ANSI Standard
however we retain CUG257 and CUG258 for programmers working with older
versions of Turbo C.

CUG257.01-CHAP1.TXT doc
Getting Started. The first example program of the Turbo C tutorial.

CUG257.02-CHAP10.TXT doc
File Input/Output. Explanation of file I/O including formatted and
single character output; word, line, single character and file reads,
and printer output.

CUG257.03-CHAP11.TXT doc
Structures. Structures explained including structures with pointers,
arrays of structures, unions, nested structures and a bit field
example.

CUG257.04-CHAP12.TXT doc
Dynamic Allocation. Discussion of dynamic memory allocation, including
both simple and large dynamic allocation and linked lists.

CUG257.05-CHAP13.TXT doc
Character and Bit Manipulation. Character and bit manipulation
explained, including upper/lower case, character classification,
logical bit operations and bit shifting.

CUG257.06-CHAP14.TXT doc
Example Programs. Example programs including DOS call examples, batch
file processes, a source code lister, and a visual calculator.

CUG257.07-CHAP2.TXT doc
Program Structure. Discussion of program structure, commenting and
good program style.

CUG257.08-CHAP3.TXT doc
Program Control. Explanation of program control, including loops, the
switch construct, the goto, break and continue, if and if-else.

CUG257.09-CHAP4.TXT doc
Assignment and Logical Compare. Discussion of assignment and logical
compares, explaining various data types and the cryptic constructs.

CUG257.10-CHAP5.TXT doc
Functions, Variables, Prototyping. Discussion of functions, variables
and prototyping, including recursion, floating returns and variable
scope.

CUG257.11-CHAP6.TXT doc
Defines and Macros. Defines and Macros explained, including the enum
type variable.

CUG257.12-CHAP7.TXT doc
Strings and Arrays. Strings and Arrays explained, including
multidimensional arrays and passing data from functions.

CUG257.13-CHAP8.TXT doc
Pointers. Pointers explained, including two way function data.

CUG257.14-CHAP9.TXT doc
Standard Input/Output. Explanation of standard input/output, including
in memory I/O conversion and error output.

CUG257.15-INTRO.TXT doc
Introduction. Introduction to Turbo C tutorial.

CUG257.16-LIST.COM executable
File listing utility.

CUG257.17-PRINTEXT.BAT batch
A batch file to print text files.

CUG257.18-READ.ME doc
A users guide.

CUG257.19-TABCONT.TXT doc
Table of contents.

==============================================================================
CUG258 -
-----------

C TUTOR FOR TURBO C source
By Gordon Dodrill. [share1] 1 disk. See CUG257.

CUG258.01-AMORT data
the loan amortization equations. VC.DOC.

CUG258.02-ANYFILE.C source
Chapter 10 - Program 7. Read in any file. => CUG257, CHAP10.TXT.

CUG258.03-BACKWARD.C source
Chapter 5 - Program 6. recursion program. => CUG257, CHAP5.TXT.

CUG258.04-BETTERIN.C source
Chapter 9 - Program 3. better form of single I/O. => CUG257,
CHAP9.TXT.

CUG258.05-BIGARRAY.C source
Chapter 7 - Program 4. many arrays. CUG257, CHAP7.TXT.

CUG258.06-BIGDYNL.C source
Chapter 12 - Program 2. large dynamic allocation. => CUG257,
CHAP12.TXT.

CUG258.07-BITFIELD.C source
Chapter 11 - Program 7. bitfield examples. => CUG257, CHAP11.TXT.

CUG258.08-BITOPS.C source
Chapter 13 - Program 3. logical bit operations. => CUG257, CHAP13.TXT.

CUG258.09-BREAKCON.C source
Chapter 3 - Program 5. the break and continue. => CUG257, CHAP3.TXT.

CUG258.10-CHARCLAS.C source
Chapter 13 - Program 2. character classification. => CUG257,
CHAP13.TXT.

CUG258.11-CHAROUT.C source
Chapter 10 - Program 2. single character output. => CUG257,
CHAP10.TXT.

CUG258.12-CHRSTRG.C source
Chapter 7 - Program 1. character strings. => CUG257, CHAP7.TXT.

CUG258.13-COMMENTS.C source
Chapter 2 - Program 5. Comments in C. => CUG257, CHAP5.TXT.

CUG258.14-COMPARES.C source
Chapter 4 - Program 4. logical compares. => CUG257, CHAP4.TXT.

CUG258.15-COMPILER.C doc
Notes on Turbo C compiler. => CUG257.

CUG258.16-COMPILER.DOC doc
Notes on Turbo C compiler. => CUG257.

CUG258.17-CRYPTIC.C source
Chapter 4 - Program 5. the cryptic constructs. => CUG257, CHAP4.TXT.

CUG258.18-DATA.C source
data initialize and calculate. => VC.C.

CUG258.19-DEFIN.H header
definitions for a visual calculator program. => VC.C.

CUG258.20-DEFINE.C source
defines. => CUG257, CHAP6.TXT.

CUG258.21-DOSEX.C source
Chapter 14 - Program 1. DOS call examples. => CUG257, CHAP14.TXT.
[MS-DOS]

CUG258.22-DOWHILE.C source
Chapter 3 - Program 2. the do-while loop. => CUG257, CHAP3.TXT.

CUG258.23-DUMBCONV.C source
Chapter 3 - Program 9. poor program style, temperature conversion. =>
CUG257, CHAP3.TXT.

CUG258.24-DYNLINK.C source
Chapter 12 - Program 3. dynamic linked list program. => CUG257,
CHAP12.TXT.

CUG258.25-DYNLIST.C source
Chapter 12 - Program 1. simple dynamic allocation. => CUG257,
CHAP12.TXT.

CUG258.26-ENUM.C source
Chapter 6 - Program 3. Enumerated type. => CUG257, CHAP6.TXT.

CUG258.27-FILE.C source
file input and output routines. => VC.DOC.

CUG258.28-FIRSTEX.C source
Chapter 1 - Program 1. The first example program. => CHAP1.TXT CUG257.

CUG258.29-FLOATSQ.C source
Chapter 5 - Program 3. floating returns. => CUG257, CHAP5.TXT.

CUG258.30-FLOATSQ2.C source
Chapter 5 - Program 7. floating returns with prototype. => CUG257,
CHAP5.TXT.

CUG258.31-FORLOOP.C source
Chapter 3 - Program 3. the for loop. => CUG257, CHAP3.TXT.

CUG258.32-FORMOUT.C source
Chapter 10 - Program 1. formatted output. => CUG257, CHAP10.TXT.

CUG258.33-GOODFORM.C source
Chapter 2 - Program 6. good program style. => CUG257, CHAP2.TXT.

CUG258.34-GOTOEX.C source
Chapter 3 - Program 7. the goto statement. => CUG257, CHAP3.TXT.

CUG258.35-HELP data
the users index of files. => VC.DOC.

CUG258.36-IFELSE.C source
Chapter 3 - Program 4. the if & if-else construct. => CUG257,
CHAP3.TXT.

CUG258.37-INMEM.C source
Chapter 9 - Program 6. in memory I/O conversion. => CUG257, CHAP9.TXT.

CUG258.38-INTARRAY.C source
Chapter 7 - Program 3. integer array. => CUG257, CHAP7.TXT.

CUG258.39-INTASIGN.C source
Chapter 4 - Program 1. integer assignment. => CUG257, CHAP4.TXT.

CUG258.40-INTIN.C source
Chapter 9 - Program 4. integer input. => CUG257, CHAP9.TXT.

CUG258.41-LIST.C source
Chapter 14 - Program 3. read in any text file and list it on the
monitor with line numbers and with page numbers. => CHAP14.TXT CUG257,
LISTF.C.

CUG258.42-LIST.EXE executable
source code lister. => CHAP14.TXT CUG257, LIST.C.

CUG258.43-LIST.PRJ make
A project file for list program. => CHAP14.TXT CUG257, LIST.C.

CUG258.44-LISTF.C source
Chapter 14 - Program 3. contains functions called by list.c. =>
CHAP14.TXT CUG257, LIST.C.

CUG258.45-LOTTYPES.C source
Chapter 4 - Program 3. lots of data types. => CHAP4.TXT CUG257.

CUG258.46-MACRO.C source
Chapter 6 - Program 2. macros. => CHAP6.TXT CUG257.

CUG258.47-MORTYPES.C source
Chapter 4 - Program 2. more data types. => CHAP4.TXT CUG257.

CUG258.48-MULTIARY.C source
Chapter 7 - Program 6. multidimensional array. => CHAP7.TXT CUG257.

CUG258.49-NESTED.C source
Chapter 11 - Program 4. nested structures. => CHAP11.TXT CUG257.

CUG258.50-ONEINT.C source
Chapter 2 - Program 4. one integer variable. => CHAP2.TXT CUG257.

CUG258.51-PASSBACK.C source
Chapter 7 - Program 5. Getting data from functions. => CHAP7.TXT
CUG257.

CUG258.52-PAYMENT data
The monthly payment calculation. => VC.DOC.

CUG258.53-POINTER.C source
Chapter 8 - Program 1. illustration of pointer use. => CHAP8.TXT
CUG257.

CUG258.54-POINTER2.C source
Chapter 8 - Program 2. an example using pointers. => CHAP8.TXT CUG257.

CUG258.55-PRINTALL.BAT batch
a batch file to print out all source code listings.

CUG258.56-PRINTDAT.C source
Chapter 10 - Program 8. output to the printer. => CHAP10.TXT CUG257.

CUG258.57-READ.ME doc
users guide.

CUG258.58-READCHAR.C source
Chapter 10 - Program 3. read single characters. => CHAP10.TXT CUG257.

CUG258.59-READGOOD.C source
Chapter 10 - Program 5. better read and display. => CHAP10.TXT CUG257.

CUG258.60-READLINE.C source
Chapter 10 - Program 6. read a full line. CHAP10.TXT CUG257.

CUG258.61-READTEXT.C source
Chapter 10 - Program 4. read single words. => CHAP10.TXT CUG257.

CUG258.62-RECURSON.C source
Chapter 5 - Program 5. simple recursion program. => CHAP5.TXT CUG257.

CUG258.63-SCOPE.C source
Chapter 5 - Program 4. scope of variable. => CHAP5.TXT CUG257.

CUG258.64-SHIFTER.C source
Chapter 13 - Program 4. bit shifting operations. => CHAP13.TXT CUG257.

CUG258.65-SIMPLEIO.C source
Chapter 9 - Program 1. simplest standard I/O. => CHAP9.TXT CUG257.

CUG258.66-SINGLEIO.C source
Chapter 9 - Program 2. single character l/O. => CHAP9.TXT CUG257.

CUG258.67-SPECIAL.C source
Chapter 9 - Program 7. standard error output. => CHAP9.TXT CUG257.

CUG258.68-SQUARES.C source
Chapter 5 - Program 2. return a value in function. => CHAP5.TXT
CUG257.

CUG258.69-STRINGIN.C source
Chapter 9 - Program 5. string input. => CHAP9.TXT CUG257.

CUG258.70-STRINGS.C source
Chapter 7 - Program 2. character string manipulation. => CHAP7.TXT
CUG257.

CUG258.71-STRUCT.DEF source
structure definition. => VC.C.

CUG258.72-STRUCTl.C source
Chapter 11 - Program 1. minimum structure example. => CHAP11.TXT
CUG257.

CUG258.73-STRUCT2.C source
Chapter 11 - Program 2. array of structures. =:> CHAP11.TXT CUG257.

CUG258.74-STRUCT3.C source
Chapter 11 - Program 3. structures with pointers. => CHAP11.TXT
CUG257.

CUG258.75-SUMSQRES.C source
Chapter 5 - Program 1. square function. => CHAP5.TXT CUG257.

CUG258.76-SWITCH.C source
Chapter 3 - Program 6. the switch construct. CHAP3.TXT CUG257.

CUG258.77-TEMPCONV.C source
Chapter 3 - Program 8. the temperature conversion. => CHAP3.TXT
CUG257.

CUG258.78-TEST data
A group of 50 nonsense equations. => VC.C.

CUG258.79-TEST.BAT batch
Batch for ask question in batch file. => WHATNEXT.C.

CUG258.80-TRIVIAL.C source
Chapter 2 - Program 1. the minimal program. :> CHAP2.TXT CUG257.

CUG258.81-TWOWAY.C source
Chapter 8 - Program 3. two way function data. => CHAP8.TXT CUG257.

CUG258.82-UGLYFORM.C source
Chapter 2 - Program 7. bad program style. => CHAP2.TXT CUG257.

CUG258.83-UNION1.C source
Chapter 11 - Programs. a union example. => CHAP11.TXT CUG257.

CUG258.84-UNION2.C source
Chapter 11 - Program 6. a union example. => CHAP11.TXT CUG257.

CUG258.85-UPLOW.C source
Chapter 13 - Program 1. upper/lower case text. => CHAP13.TXT CUG257.

CUG258.86-VC.C source
Chapter 14 - Program 4. visual calculator. => VC.DOC, CHAP14.TXT
CUG257. [MS-DOS: TC]

CUG258.87-VC.DOC doc
visual calculator tutorial. => CHAP14.TXT CUG257.

CUG258.88-VC.EXE executable
Visual Calculator. visual calculator. => VC.C. [MS-DOS]

CUG258.89-VC.PRJ make

CUG258.90-VIDEO.C source
Chapter 14 - Program 4. video output routines. => VC.C, STRUCT.DEF,
DEFIN.H.

CUG258.91-WHATNEXT.C source
Chapter 14 - Program 2. ask question in batch file. => CHAP14.TXT
CUG257.

CUG258.92-WHILE.C source
Chapter 3 - Program 1. while loop. => CHAP3.TXT CUG257.

CUG258.93-WRTMORE.C source
Chapter 2 - Program 3. write more output. => CHAP2.TXT CUG257.

CUG258.94-WRTSOME.C source
Chapter 2 - Program 2. write some output. => CHAP2.TXT CUG257.

==============================================================================
CUG259 -
-----------

CONSOLE I/O & WITHERS TOOLS
[public] 1 disk. This volume contains contributions from Bob Withers,
Allen, TX, and Jeff D. Pipkins of Quality Micro Systems, Inc., Mobile,
AL. Withers contributed the complete source code for a windowing
system and an execution time profiler. Both were developed under
MS-DOS and are compatible with Turbo C v1.0 and Microsoft C (v4.0 and
v5.0). The windowing package will work with both monochrome and CGA
adapters. Withers' code will overlay windows (with options to save or
discard the overlaid area), move windows, scroll within a window, and
draw exploding windows. Pipkins has contributed a library of routines
to perform direct console I/O under MS-DOS. Pipkins supplies routines
that are non-redirectable, routines that handle PC type extended
keycodes, and a keyboard status polling routine that checks for
Ctrl-C. These assembly language functions are packaged as replacements
for Microsoft's kbhit(), getch(), getche(), ungetch(), and putch().
For more details see the narrative description of this package in
Section 2.

CUG259.01-APROFILE.ASM source
By Bob Withers. Low level application profile generator. [MS-DOS]
Requires assembler.

CUG259.02-APROFILE.OBJ object
By Bob Withers. => APROFILE.ASM. [MS-DOS]

CUG259.03-CONIO.ASM source
By Jeff D. Pipkins. Source code for putch(), getch(), getche(),
ungetch(), and kbhit(). I/O routines as replacements for the
corresponding routines in Microsoft C libraries. [MS-DOS]

CUG259.04-CONIO.BAT batch
By Jeff D. Pipkins. Batch file for installing CONIO into MSC
libraries. [MS-DOS]

CUG259.05-CONIO.DOC doc
By Jeff D. Pipkins. CONIO function description.

CUG259.06-CONIO.FAR object
By Jeff D. Pipkins. Object code for medium large and huge memory
models.

CUG259.07-CONIO.NER object
By Jeff D. Pipkins. Object code for small and compact memory models.
[MS-DOS]

CUG259.08-CPROFILE.C source
By Bob Withers. Utility routines which are static linked to an
application program to allow access to the features provided by the
program profile package. => APROFILE.ASM. [MS-DOS: TC, MSC]

CUG259.09-MAKEPRF.C source
By Bob Withers. A utility to build a PRF symbol file from the
information contained in a MAP file created by your linker. [MS-DOS:
TC, MSC]

CUG259.10-MAKEPRF.EXE executable
By Bob Withers. => MAKEPRF.C. [MS-DOS]

CUG259.11-PRFRPT.C source
By Bob Withers. A utility to generate a profile report showing the
areas where an application program is spending its time. [MS-DOS: TC,
MSC]

CUG259.12-PRFRPT.EXE executable
By Bob Withers. => PRFRPT.C. [MS-DOS]

CUG259.13-PROFILE.DOC doc
By Bob Withers. Documentation for PRF. An application profile package.

CUG259.14-PROFILE.H header
By Bob Withers. Header file for profile.

CUG259.15-SCRIO.C source
By Bob Withers. The low level screen access routines. [MS-DOS: TC,
MSC]

CUG259.16-TIMER.C source
By Bob Withers. A general purpose program timer. [MS-DOS: TC, MSC]

CUG259.17-TIMER.EXE executable
By Bob Withers. => TIMER.C. [MS-DOS]

CUG259.18-WIN.C source
By Bob Withers. The high level windowing functions. Machine
independent. => WIN.H. [MS-DOS: TC, MSC]

CUG259.19-WIN.DOC doc
By Bob Withers. Documentation for C-WIN, a public-domain C windowing
system.

CUG259.20-WIN.H header
By Bob Withers. The header file for use by the application code as
well as the windowing library code.

CUG259.21-WINDEMO.C source
By Bob Withers. A short demo program that shows some of the windowing
functions in action. [MS-DOS: TC, MSC]

CUG259.22-WINDEMO.EXE executable
By Bob Withers. => WINDEMO.C. [MS-DOS]

==============================================================================
CUG260 -
-----------

ZMODEM CU AND TTY LIBRARY
By Francois Bergeon. [public] 1 disk. Francois Bergeon of Charleval,
France, contributed this adaptation of ZMODEM, an MS-DOS
implementation of the UNIX file transfer and terminal utility cu, and
a library of routines to manage a PC-clone's serial port. ZMODEM, an
elaborate communications package that supports several file transfer
protocols, was originally contributed by Chuck Forsberg. This version
(and the rest of this volume) compiles under MS-DOS, using MSC v4.0.
The cu utility is documented in a UNIX-style manual page. Functional
descriptions are included for each of the routines in the tty library.
ZMODEM is documented on an earlier release, CUG216.

CUG260.01-CU.C source
CU calls up a UNIX system, a terminal, or possibly a non-UNIX system.
It manages an interactive conversation with possible transfer of text
files. [MS-DOS: MSC4]

CUG260.02-CU.DOC doc
A UNIX-style manual for CV.

CUG260.03-CU.EXE executable
[MS-DOS]

CUG260.04-FILES doc
The contents of the volume.

CUG260.05-GZ
Receive file shell script.

CUG260.06-LTTY.LIB library
Serial port manager library (large model). [MS-DOS: MSC]

CUG260.07-RBSB.C source
By Chuck Forsberg, Francois Bergeon. C functions used by RZ.C & SZ.C:
setting terminal modes, CRC routines. [UNIX, MS-DOS]

CUG260.08-RZ.1 doc
RZ nroff documentation.

CUG260.09-RZ.C source
By Chuck Forsberg, Francois Bergeon. RZ uses error correcting protocol
to receive files over a serial port from a variety of programs running
under UNIX, PC-DOS,CP/M and others. [MS-DOS]

CUG260.10-RZ.DOC doc
A UNIX-style manual for RZ.

CUG260.11-RZ.EXE executable
By Chuck Forsberg, Francois Bergeon. [MS-DOS]

CUG260.12-STTY.LIB library
Serial port manager library (small model). [MS-DOS: MSC]

CUG260.13-SZ.1 doc
SZ nroff documentation.

CUG260.14-SZ.C source
By Chuck Forsberg, Francois Bergeon. SZ uses the ZMODEM, YMODEM, or
XMODEM error correcting protocol to send one or more files over a
serial port to a variety of programs running under PC-DOS, CP/M, UNIX,
VMS and others. [MS-DOS]

CUG260.15-SZ.DOC doc
A UNIX-style manual for SZ.

CUG260.16-SZ.EXE executable
[MS-DOS]

CUG260.17-TTY.DOC doc
Functional descriptions for TTY: General Serial Port Management
Library. => STTY.LIB, LTTY.LIB.

CUG260.18-TTY.H header

CUG260.19-ZM.C source
By Chuck Forsberg. ZMODEM protocol C sources.

CUG260.20-ZMODEM.DOC doc
By Chuck Forsberg. ZMODEM protocol documentation.

CUG260.21-ZMODEM.H header
By Chuck Forsberg. Header file. => SZ.C, RZ.C.

==============================================================================
CUG261 -
-----------

68K CROSS ASSEMBLER, MS-DOS
By Stuart Dole. [public] 1 disk. Stuart Dole has adapted Steve Passe's
68000 cross-assembler to compile with MSC v4.0 under MS-DOS and with
Whitesmith's RT-11 compiler on a PDP-11. Dole has also fixed several
bugs and portability problems. We have included Steve Passe's original
documentation on the disk.

CUG261.01-AS68.C source
By Stuart Dole, Steve Passe. The source of a 68000 assembler. The
directives and mnemonic set closely follow that of the Motorola
Residency Structured Assembler. Bugs are fixed and the program breaks
into overlays for small machines such as PDP-11. [PDP-11, MS-DOS:
MSC4]

CUG261.02-AS68.DOC doc
By Steve Passe. A 24-page users manual.

CUG261.03-AS68.EXE executable
By Stuart Dole, Steve Passe. [MS-DOS]

CUG261.04-AS68.FCH doc
AS68 function chart.

CUG261.05-AS68.H header
By Steve Passe. Definitions for AS68.

CUG261.06-AS68.MAK make
By Stuart Dole. make file for AS68. [MS-DOS: MSC4]

CUG261.07-ASERR.C source
By Stuart Dole, Steve Passe. Reports the error to all open error
channels. [MS-DOS: MSC4]

CUG261.08-ASETC.C source
By Stuart Dole, Steve Passe. Miscellaneous routines. Parse statement
for label and instruction, find operand field. [MS-DOS: MSC4]

CUG261.09-ASINIT.C source
By Stuart Dole, Steve Passe. initialization. overlay for PDP-11.
[PDP-11, MS-DOS: MSC4]

CUG261.10-ASMT.C source
By Stuart Dole, Steve Passe. mnemonic tables for AS68. [MS-DOS: MSC4]

CUG261.11-BC.C source
By Stuart Dole, Steve Passe. code building function of AS 68. split
into root, pass 1 and pass 2 for overlay on PDP-11. [PDP-11, MS-DOS:
MSC4]

CUG261.12-BC1.C source
By Stuart Dole, Steve Passe. code building function of AS68 (pass 7).
[MS-DOS: MSC4]

CUG261.13-BC2.C source
By Stuart Dole, Steve Passe. code building function of AS68 (pass 2).
[MS-DOS: MSC4]

CUG261.14-LIB68.C source
By Stuart Dole, Steve Passe. The library of misc. functions used by
AS68. [MS-DOS: MSC4]

CUG261.15-POP.C source
By Stuart Dole, Steve Passe. The operand field parser. [MS-DOS: MSC4]

CUG261.16-PROTOTYP.H header
By Stuart Dole. prototype external function declarations.

CUG261.17-PSDO.C source
By Stuart Dole, Steve Passe. The pseudo op code for AS68 (root).
[MS-DOS: MSC4]

CUG261.18-PSDO1.C source
By Stuart Dole, Steve Passe. The pseudo op code for AS68. [MS-DOS:
MSC4]

CUG261.19-PSDO2.C source
By Stuart Dole, Steve Passe. The pseudo op code for AS68. [MS-DOS:
MSC4]

CUG261.20-SYMTBL.C source
By Stuart Dole, Steve Passe. The symbol table code for AS68. [MS-DOS:
MSC4]

CUG261.21-TEST.BAT batch
A test batch file.

CUG261.22-TEST.SA source
By Stuart Dole. test file for AS68. Bubble sort.

==============================================================================
CUG262 -
-----------

RAMEY TOOLS
By Robert Ramey. [public] 1 disk. This volume contains the complete
source code for a source level debugger, an execution time profiler, a
general purpose symbol table function library, and a menuing system.
Each of these programs is accompanied by a tutorial article explaining
both the code and the design objectives. The symbol table functions
are similar to some published by Allen Holub in Dr. Dobbs Journal. The
library provides functions to maintain a hashed symbol table, such as
one might use when constructing an assembler or other translator. The
symbol table functions are used by the debugger. The debugger works
without any special compiler generated information. It requires only
that a "hook" be
Librar
inserted in the start-up code, and that the program be able to modify
code space. Thus it should be readily adaptable to many single-user
environments. All of the code is for the Q/C compiler running under
CP/M.

CUG262.01-CMENU.C source
Compiler for menu driven program. This reads a menu test file and
generates Z80 assembly code. => MENU.C, CMENUC.C, SLPTRM.MNU,
SLPTRM.EXM. [CP/M: Q/C]

CUG262.02-CMENU.FMT doc
Nroff style listing commands. => FMT.COM.

CUG262.03-CMENU.TXT doc
Documentation for the menu programs. => CMENU.C, CMENUC.C, MENU.C.

CUG262.04-CMENUC.C source
Compiler for menu driven programs. This reads a menu text file and
generates a C source code. => CMENU.C, MENU.C. [CP/M: Q/C]

CUG262.05-DEBUG.C source
Source level debugger. The debugger doesn't require a target program
to be recompiled. It has features: trace break points at any function
entry, display function arguments and global variables. [CP/M: Q/C]

CUG262.06-DEBUG.F3 doc
Figure of memory segments. => DEBUG.F3.

CUG262.07-DEBUG.FMT doc
Nroff style listing commands. => FMT.COM.

CUG262.08-DEBUG.TXT doc
Documentation for the source level debugger.

CUG262.09-FMT.COM executable
Text format program. [CP/M]

CUG262.10-LJSTUP data
Laser set up data. => FMT.COM.

CUG262.11-LJTBL data
Laser set up data. => FMT.COM.

CUG262.12-MENU.C source
Function which manages dialog according to a hierarchy of menus. The
address of the root menu must be passed as the only parameter. [CP/M:
Q/C]

CUG262.13-MENU.H header
Definitions for menu manager.

CUG262.14-PROFILE.C source
Execution time profiler for Z80 type machine. [CP/M: Q/C]

CUG262.15-PROFILE.FMT doc
Nroff style listing commands. => FMT.COM.

CUG262.16-PROFILE.TXT doc
Documentation for the execution time profiler.

CUG262.17-READ.ME doc
Brief summary of programs.

CUG262.18-SLPTR.C source
Sets up Hewlett Packard laser printer. => SLPTR.EXM. [CP/M:]

CUG262.19-SLPTR.EXM data
Example of the laser printer program in action. => SLPTRM.C.

CUG262.20-SLPTRM.C source
Menu data structures generated by CMENUC. => CMENU.C, SLPTRM.MNU.
[CP/M: Q/C]

CUG262.21-SLPTRM.MNU data
Data file that contains menu test. => SLPTRM.C.

CUG262.22-SYMDEF.H header
Definitions for symbol table manipulation package.

CUG262.23-SYMTBL.C source
General purpose symbol table function library. => SYMTBL.C.

CUG262.24-SYMTBL.FMT doc
Nroff style listing commands. => FMT.COM.

CUG262.25-SYMTBL.TXT doc
Documentation for a general purpose symbol table function library.

CUG262.26-WFC.C source
Word Frequency Analyzer. This demonstrates use of symbol table
library. => SYMTBL.C. [CP/M: Q/C]

==============================================================================
CUG263 -
-----------

c wndw and c ndx
By Roger Stringer. [share2] 2 disks. This windowing library provides
pull-down and pop-up menus and
color and cursor control within multi-layered windows. It includes
input and output functions and file access functions which can manage
ASCII, dBase III Plus and hashed random and relational files. Our
volume is the shareware release of this package. It requires Quick C
2.0, or Microsoft C 5.x, or Turbo C 2.0. The shareware diskette
includes documentation, 10 sample programs and a medium-model library
of 114 functions. The complete source code is available from the
author for a registration fee. The current version 2.02 includes the
c_ndx library that supports multifile and multi-index relational
database access to dBase files and B-tree indexes.

CUG263.01-COMPILE.MSC batch
By Roger Stringer. Compiles, links and runs chosen program from the
c_wndw or c_ndx libraries. [MS-DOS: MSC5, QUICKC]

CUG263.02-COMPILE.TBC batch
By Roger Stringer. Compiles, links and runs chosen program from the
c_wndw or c_ndx libraries. [MS-DOS: TC2.0]

CUG263.03-C_NDX.H header
By Roger Stringer. Definitions and global variables for c_ndx library.
=> MC_NDX.MSC, MC_NDX.TBC. [MS-DOS]

CUG263.04-C_WNDW.H header
By Roger Stringer. Definitions and global variables for c_wndw
library. => MC_WNDW.MSC, MC_WNDW.TBC. [MS-DOS]

CUG263.05-DATETEST.C source
By Roger Stringer. Demonstrates use of date facilities. System date is
read and can be subsequently modified through the keyboard by the
accept() function. Also shows the use of the set_keys() function to
activate the "Esc" key. [MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.06-DATETEST.MAK make
By Roger Stringer. Make file for DATETEST.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.07-DATETEST.PRJ project
By Roger Stringer. Project file for DATETEST.C. [MS-DOS: TC2.0]

CUG263.08-DBREAD.C source
By Roger Stringer. The program reads sequentially through an indexed
dBASE file and displays a field from the file. The data file is opened
with the fileopen() function, and the index file with the ndxopen()
function. The records are read with the ndxread() function, and the
field displayed with the dispdbf() function. [MS-DOS: MSC5, QUICKC2.0,
TC2.0]

CUG263.09-DBREAD.MAK make
By Roger Stringer. Make file for DBREAD.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.10-DBREAD.PRJ project
By Roger Stringer. Project file for DBREAD.C. [MS-DOS: TC2.0]

CUG263.11-DBUPDATE.C source
By Roger Stringer. The program opens an indexed dBASE file and allows
you to read forwards and backwards through it to view and modify the
records. A further option is to add new records to the file. [MS-DOS:
MSC5, QUICKC2.0, TC2.0]

CUG263.12-DBUPDATE.MAK make
By Roger Stringer. Make file for DBUPDATE.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.13-DBUPDATE.PRJ project
By Roger Stringer. Project file for DBUPDATE.C. [MS-DOS: TC2.0]

CUG263.14-HELLO.C source
By Roger Stringer. The classic understanding of a C language
environment is a small program to display the message "hello world" to
the screen. The HELLO.C program is this small program. It opens a
window on the screen and displays the "hello world" message. [MS-DOS:
MSC5, QUICKC2.0, TC2.0]

CUG263.15-HELLO.MAK make
By Roger Stringer. Make file for HELLO.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.16-HELLO.PRJ project
By Roger Stringer. Project file for HELLO.C. [MS-DOS: TC2.0]

CUG263.17-MANUAL doc
By Roger Stringer. Summary manual for the c_wndw and c_ndx libraries
in three parts: an alphabetical list of the functions in the
libraries, a list of the structs and enums defined in the libraries,
and a list of the configuration constants and variables. => MC
WNDW.MSC, MC WNDW.TBC, MC_NDX.MSC, MC_NDX.TBC, C-WNDW.H, C_NDX.H.
[MS-DOS]

CUG263.18-MC_NDX.MSC library
By Roger Stringer. Library of indexed file functions for dBASE type
hashed files and B-tree indexes for Quick C or Microsoft C. => MANUAL.
[MS-DOS: MSC5, QUICKC2.0]

CUG263.19-MC_NDX.TBC library
By Roger Stringer. Library of indexed file functions for dBASE type
hashed files and B-tree indexes for Turbo C. => MANUAL. [MS-DOS:
TC2.0]

CUG263.20-MC_WNDW.MSC library
By Roger Stringer. Windowing library functions for medium memory model
Quick C or Microsoft C. => MANUAL. [MS-DOS: MSC5, QUICKC2.0]

CUG263.21-MC_WNDW.TBC library
By Roger Stringer. Windowing library functions for medium memory model
Turbo C. => MANUAL. [MS-DOS: TC2.0]

CUG263.22-MENU.C source
By Roger Stringer. The program shows the use of the menu() function
with a simple menu in a floating window. It also shows the use of the
flt_wndw() function. [MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.23-MENU.MAK make
By Roger Stringer. Make file for MENU.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.24-MENU.PRJ project
By Roger Stringer. Project file for MENU.C. [MS-DOS: TC2.0]

CUG263.25-MESSAGE.C source
By Roger Stringer. The program shows the use of message and query
windows with the err_wndw() and qry_wndw() functions. It also shows
the use of the acptint() function to enter an integer value from the
keyboard. [MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.26-MESSAGE.MAK make
By Roger Stringer. Make file for MESSAGE.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.27-MESSAGE.PRJ project
By Roger Stringer. Project file for MESSAGE.C. [MS-DOS: TC2.0]

CUG263.28-MONY.C source
By Roger Stringer. The program shows the use of the mony functions.
The mony type is a variable with two implied decimal places that can
contain any value in the range 9,999,999.99- to 9,999,999.99. This
allows most monetary values (ex: prices, financial computations) to be
figured without the performance and rounding problems of doubles.
[MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.29-MONY.MAK make
By Roger Stringer. Make file for MONY.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.30-MONY.PRJ project
By Roger Stringer. Project file for MONY.C. [MS-DOS: TC2.0]

CUG263.31-QUICKC.BAT batch
By Roger Stringer. Installation batch file for Quick C or Microsoft C.
[MS-DOS: MSC5, QUICKC]

CUG263.32-READFILE.C source
By Roger Stringer. The program reads the file created by the
WRITFILE.C program. The file is read by record number. [MS-DOS: MSC5,
QUICKC2.0, TC2.0]

CUG263.33-READFILE.MAK make
By Roger Stringer. Make file for READFILE.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.34-READFILE.PRJ project
By Roger Stringer. Project file for READFILE.C. [MS-DOS: TC2.0]

CUG263.35-README doc
By Roger Stringer. Registration information, installation
instructions, hints and recommendations, and explanations of the 10
sample programs. The libraries require QuickC version 2.0 or
equivalent Microsoft C 5.x. The libraries do not work with Microsoft C
4.x or earlier versions. The sample programs will probably compile and
work with Quick C 1.0, but with linker errors. The libraries require
Turbo C 2.0. If you have 1.0 or 1.5, the sample programs will probably
work with linker errors, but 2.0 is strongly recommended. The sample
programs should be compiled under the medium memory model. [MS-DOS]

CUG263.36-TURBOC.BAT batch
By Roger Stringer. Installation batch file for Turbo C. [MS-DOS:
TC2.0]

CUG263.37-WINDOW.C source
By Roger Stringer. The program shows the creation and removal of
overlapping windows. If you have a color screen notice the automatic
change of colors between windows. The "c_wndw'' library makes and
removes windows quickly, and a half second delay is built into the
program between each window. [MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.38-WINDOW.MAK make
By Roger Stringer. Make file for WINDOW.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.39-WINDOW.PRJ project
By Roger Stringer. Project file for WINDOW.C. [MS-DOS: TC2.0]

CUG263.40-WRITFILE.C source
By Roger Stringer. The program shows the use of file access functions
to create a file with a record size of 61 bytes. You are prompted to
enter the records which are written to the end of the field. [MS-DOS:
MSC5, QUICKC2.0, TC2.0]

CUG263.41-WRITFILE.MAK make
By Roger Stringer. Make file for WRITFILE.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.42-WRITFILE.PRJ project
By Roger Stringer. Project file for WRITFILE.C. [MS-DOS: TC2.0]

==============================================================================
CUG264 -
-----------

NRO & OTHER PC TOOLS
[public] 1 disk. This disk contains contributions from Pat Villani and
David MacKenzie. Pat Villani of Woodhaven, NY has ported NRO
(originally for BDS C) to MS-DOS under Microsoft v4.0. NRO is a
nroff-like text formatter with credible macro definition facilities.
Villani claims he has attempted to code the adaptation "as portably as
possible," but hasn't tested it in any other environments. David
MacKenzie of Bethesda, MD has submitted a suite of filters and other
utilities for Aztec C under MS-DOS.
Included are cat, cp, du, fmt, Is, mv, rm, touch, tr, wc, and several
others. Each program is accompanied by a very brief manual page and
full source. In an update of the package, MacKenzie added a number of
tools, including chmod (changes a file attribute) and df (reports
freedisk space). Enhancements include the use of wildcards on the
command line for all programs except tr, a larger copy buffer for cp
and mv, and new flags for cp, mv, and rm, and more.

CUG264.01-AN
NRO macro file. => NRO.DOC.

CUG264.02-BYTEFREE.ASM source
By David MacKenzie. Returns the number of bytes free on drive. =>
DF.C. [MS-DOS: AZTEC]

CUG264.03-CAT.C source
By David MacKenzie. Contents of argument files are written to standard
output. => NRO.DOC. [MS-DOS: AZTEC]

CUG264.04-CAT.COM executable
By David MacKenzie. => CAT.C. [MS-DOS]

CUG264.05-CAT.DOC doc
By David MacKenzie. Description of CAT.

CUG264.06-CHMOD.C source
By David MacKenzie. Change file modes. a: archive, h: hidden, r: read
only, s: system. [MS-DOS: AZTEC]

CUG264.07-CHMOD.COM executable
[MS-DOS]

CUG264.08-CHMOD.DOC doc
By David MacKenzie. Description of CHMOD.

CUG264.09-CP.C source
By David MacKenzie. Copy files and directories. [MS-DOS: AZTEC]

CUG264.10-CP.COM executable
[MS-DOS]

CUG264.11-CP.DOC doc
By David MacKenzie. Description of CP. => CP.C.

CUG264.12-DF.C source
By David MacKenzie. Display bytes free on disk. => BYTEFREE.ASM.
[MS-DOS: AZTEC]

CUG264.13-DF.COM executable
[MS-DOS]

CUG264.14-DF.DOC doc
By David MacKenzie. Description of DF. => DF.C.

CUG264.15-DU.C source
By David MacKenzie. Summarize disk usage. [MS-DOS: AZTEC]

CUG264.16-DU.COM executable
[MS-DOS]

CUG264.17-DU.DOC doc
By David MacKenzie. Description of DU.

CUG264.18-FMT.C source
By David MacKenzie. Simple text formatter. It is useful for formatting
mail messages, and can be used to justify a paragraph from within vi
with the key sequence s!3fmt. [MS-DOS: AZTEC]

CUG264.19-FMT.COM executable
[MS-DOS]

CUG264.20-FMT.DOC doc
By David MacKenzie. Description of FMT. => FMT.C.

CUG264.21-GETDIR.ASM source
By David MacKenzie. Call MSDOS to search a file. => GLOBARGS.C.
[MS-DOS: AZTEC]

CUG264.22-GETDIR.H header
By David MacKenzie. Definitions helpful for use with getdir.asm (find
first and next match). => GETDIR.ASM. [MS-DOS: AZTEC]

CUG264.23-GLOBARGS.C source
By David MacKenzie. Link with getdir.asm to form a command line
argument wildcard expander. => GETDIR.ASM, GETDIR.H. [MS-DOS: AZTEC]

CUG264.24-LS.C source
By David MacKenzie. List contents of directory. => GETDIR.H. [MS-DOS:
AZTEC]

CUG264.25-LS.COM executable
[MS-DOS]

CUG264.26-LS.DOC doc
By David MacKenzie. Description of LS. => LS.C.

CUG264.27-MAKEFILE make
By David MacKenzie. make. cat. cp chmod, df, du, fmt, Is, mv, rm,
strings, touch, tr, vis, wc. [MS-DOS: AZTEC]

CUG264.28-MAN.DOC doc
By Pat Villani. Output file after processed by NRO. => MAN.NRO.

CUG264.29-MAN.NRO doc
By Pat Villani. Text file with NRO commands. => MAN.DOC.

CUG264.30-MV.C source
By David MacKenzie. Move files and directories -f:force,
-i:interactive, -v:verbose. [MS-DOS: AZTEC]

CUG264.31-MV.COM executable
[MS-DOS]

CUG264.32-MV.DOC doc
By David MacKenzie. Description of MV. => MV.C.

CUG264.33-NRO make
By Pat Villani. Makefile to create NRO executable image. => NRO.C.
[MS-DOS: MSC5, MSC4]

CUG264.34-NRO.C source
By Pat Villani, Stephen L. Browning. A text processor and formatter
based on the design provided in "Softwvare Tools" by Kernighan and
Plauger. It uses dot commands. => NRO.H. [MS-DOS: MSC5, MSC4]

CUG264.35-NRO.DOC doc
By Pat Villani, Stephen L. Browning. Documentation for NRO.C providing
a synposis and descriptions of the text processing dot commands. =>
NRO.H, AN. [MS-DOS: MSCS, MSC4]

CUG264.36-NRO.E,YE executable
[MS-DOS]

CUG264.37-NRO.H header
By Pat Villani, Stephen L. Browning. Definitions for NRO program.
[MS-DOS: MSC5, MSC4]

CUG264.38-NRO.NRO doc
NRO documentation with NRO commands.

CUG264.39-NROCMD.C source
By Pat Villani, Stephen L. Browning. Command processor for NRO. =>
NRO.H. [MS-DOS: MSC5, MSC4]

CUG264.40-NROCOM.C source
By Pat Villani, Stephen L. Browning. External common for NRO. [MS-DOS:
MSC5, MSC4]

CUG264.41-NRODEF.C source
By Pat Villani, Stephen L. Browning. External common for NRO. [MS-DOS:
MSC5, MSC4]

CUG264.42-NROTXT.C source
By Pat Villani, Stephen L. Browning. Text processing portion of NRO.
[MS-DOS: MSC5, MSC4]

CUG264.43-READ.ME doc
By Pat Villani. Brief users guide for NRO.

CUG264.44-READ ME doc
By David MacKenzie. Modification history for PC UNIX Tools.

CUG264.45-RM.C source
By David MacKenzie. Remove files and directories -f:force, -i:
interactive, -r: recursively, -v:verbose. [MS-DOS: AZTEC]

CUG264.46-RM.COM executable
[MS-DOS]

CUG264.47-RM.DOC doc
By David MacKenzie. Description of RM. => RM.C.

CUG264.48-SKELETON.DOC doc
Sample output after processed by NRO. => SKELETON.NRO.

CUG264.49-SKELETON.NRO doc
Sample text file with NRO commands. => SKELETON.DOC.

CUG264.50-STRINGS.C source
By David MacKenzie. Find printable strings in binary files. [MS-DOS:
AZTEC]

CUG264.51-STRINGS.COM executable
[MS-DOS]

CUG264.52-STRINGS.DOC doc
By David MacKenzie. Description of STRINGS.

CUG264.53-TOUCH.C source
By David MacKenzie. Set time of files to current time. [MS-DOS: AZTEC]

CUG264.54-TOUCH.COM executable
[MS-DOS]

CUG264.55-TOUCH.DOC doc
By David MacKenzie. Description of TOUCH. => TOUCH.C.

CUG264.56-TR.C source
By David MacKenzie. Transliterate characters. [MS-DOS: AZTEC]

CUG264.57-TR.COM executable
[MS-DOS]

CUG264.58-TR.DOC doc
By David MacKenzie. Description of TR.

CUG264.59-VIS.C source
By David MacKenzie. Visual display of files -e: show the end of lines
as '$', -t: show tabs as ' ^ 1'. [MS-DOS: AZTEC]

CUG264.60-VIS.COM executable
[MS-DOS]

CUG264.61-VIS.DOC doc
By David MacKenzie. Description of VIS.

CUG264.62-WC.C source
By David MacKenzie. Word count; -1: number of lines, -w: number of
words, -c: number of characters. [MS-DOS: AZTEC]

CUG264.63-WC.COM executable
[MS-DOS]

CUG264.64-WC.DOC doc
By David MacKenzie. Description of WC.

==============================================================================
CUG265 -
-----------

cpio Installation Kit [public] 2 disks. The kit includes two public
domain versions of the UNIX archive utility cpio, several sample "raw"
loaders, a test pattern disk and instructions for installation. This
kit will greatly facilitate the exchange of source code between
dissimilar systems. The files to be transferred are concatenated into
a single file called an archive. The resulting archive file is a
normal file to the native operating system, just as cpio is a normal
executable program. A blank disk is formatted using the native format
facilities. The archive file is "dumped" to the disk using a special
"raw" write facility. This facility bypasses the operating system and
writes the archive file on consecutive sectors of the disk, beginning
with the first writable sector. Because the operating system is
bypassed, there is no directory on the disk. The dump utility must
report how many sectors were required by the archive file. T.W.
Kalebaugh (KS) has created a loader and dump utility for AT&T 3B1
(UNIX PC, 7300 and Convergent Technologies S-50) so that 3B1 users can
read our disks and write disks that we can read. The updated disk
includes his new subroutines and makefiles. For more details see the
narrative description of this package in Section 2.

CUG265.01-BIORDSCT.C source
By Rainer Gerhards. Sector read routine for MS-DOS. [MS-DOS: MSC] Only
works IBM 360 kb format.

CUG265.02-BIOWRSCT.C source
By Rainer Gerhards. Sector write routine for MS-DOS. [MS-DOS: MSC]

CUG265.03-CCPIO.C source
By John Snaider. Public domain CPIO program. CPIO is a UNIX file
archive command. It is used for backup or data exchange using disk
media. [MS-DOS: TC ECO-C, MSC5, LC3, MSC4]

CUG265.04-CP3SCTRD.C source
By Tim Prince. Sector read routine for CP/M T.3.X. [CP/M3 x: ECO-C22]

CUG265.05-CP3SCTWR.C source
By Tim Prince. Sector write routine for CP/M V.3.X. [CP/M3 x: ECO-C22]

CUG265.06-CUGCPIO.C source
By Rainer Gerhards. Public domain CPIO program. CPIO does file archive
and file extraction. Low-level disk read/write utilities are used for
the specified system. => SECTRD.C, SECTWR.C. [STARSYS, UNIX MS-DOS:
TC, MSC, DLC] Only works IBM 360 kb format.

CUG265.07-CUGREAD.C source
By Rainer Gerhards. List utility of archive file. => CUGCPIO.C.

CUG265.08-ENVIRON.H header
By Rainer Gerhards. Header file for cpio program. => CUGCPIO.C.

CUG265.09-FILE.DOC doc
A brief description of files.

CUG265.10-FORMAT.DOC doc
By Rainer Gerhards. Documentation about exchange media.

CUG265.11-FORMDRAF.DOC doc
By Rainer Gerhards. Format draft.

CUG265.12-LETTER.DOC doc
By Rainer Gerhards.

CUG265.13-LETTER.TXT doc
By Rainer Gerhards.

CUG265.14-LOAD.C source
By Robert Ward. Loader for MSDOS customizes defines for drive
selection, sectors, blocks, characters, and sector map, to make high
level functions conform to the disk format. [MS-DOS: MSC]

CUG265.15-MAKEFILE make
By Rainer Gerhards. Makefile for CUGCPIO. => CUGCPIO.C. [MS-DOS: MSC]

CUG265.16-MAKEFILE.BIO make
By Rainer Gerhards. Makefile for BIOS version of CUGCPIO. =>
CUGCPIO.C. [MS-DOS: MSC]

CUG265.17-MAKEFILE.DOS make
By Rainer Gerhards. Makefile for DOS version of CUGCPIO. [MS-DOS: MSC]
Uses MASM.

CUG265.18-MAKEFILE.OS2 make
By Rainer Gerhards. Makefile for OS/2 version of CUGCPIO. =>
CUGCPIO.C. [OS/2: MSC]

CUG265.19-NUMBER.C source
Generates test input file for cpio.

CUG265.20-NUMBER.EXE executable

CUG265.21-NUMBER.OBJ object

CUG265.22-OS2RDSCT.C source
By Rainer Gerhards. Sector read routine for OS/2. => CUGCPIO.C. [OS/2:
MSC]

CUG265.23-OS2WRSCT.C source
By Rainer Gerhards. Sector write routine for OS/2. => CUGCPIO.C.
[OS/2]

CUG265.24-PORTABLE.DOC doc
By Kenji Hino. Portability note describing the compilation of CUGCPIO
by Gerhards and CPIO by Snaider.

CUG265.25-RDFD525.C source
By John E. Van Deusen 111. Loader for UNIX. [UNIX: UNIX Cl

CUG265.26-RDSCT.ASM source
By Rainer Gerhards. Sector read routine for MSDOS. => CUGCPIO.C. I
MASM Assembly source.

CUG265.27-RDSCT3B1.C source
By T. W. Kalebaugh. Sector read routine for AT&T 3Bl drive..

CUG265.28-SECTRD.C source
By Rainer Gerhards. High level sector loader.

CUG265.29-SECTWR.C source
By Rainer Gerhards. High level sector write utility.

CUG265.30-UNXRDSCT.C source
By Rainer Gerhards. Sector read routine for UNIX/XENIX. [UNIX/XENIX]

CUG265.31-UNXWRSCT.C source
By Rainer Gerhards. Sector write routine for UNIX/XENIX.

CUG265.32-WRSCT.ASM source
By Rainer Gerhards. Sector write routine for MSDOS. [MS-DOS: MASM]
Assembly source.

CUG265.33-WRSCT3B1.C source
By T. W. Kalebaugh. Sector write routine for AT&T 3B1 drive.

==============================================================================
CUG266 -
-----------

microPLOX
By Robert L. Patton, Jr.. [public] 1 disk. MicroPLOX is an
English-like, interpreted chart description language for Epson
compatible dot matrix printers. MicroPLOX allows any user to create a
variety of chart specifications, change and redraw each at any time.
MicroPLOX will produce line, dot, and bar charts in two fonts, draw
reference lines and handle numeric and date data (in yymmdd form). It
will allow many plots on one chart either overlaid on each other or in
separate areas. Originally for CP/M, this version has been converted
to compile under MS-DOS with Microsoft C v4.0 and v5.0 and with Mix
Power C. The current version 5.0 includes multi-color support for CGA,
EGA, and VGA monitors, and allows multiple data file use from one
command file.
For more details see the narrative description of this package in
Section 2.

CUG266.01-BIKE.DAT data
Bar Chart example values for PLOX. => BIKE.PIC.

CUG266.02-BIKE.PIC data
Bicycle mileage Bar Chart example statement for PLOX. => BIKE.DAT,
PLOX.C.

CUG266.03-BIKE88.DAT data
Bicycle miles ridden bar chart example values for PLOX, illustrating
two separate exes for multiple plots in one area. => BIKE88.PIC.

CUG266.04-BIKE88.PIC data
Bicycle mileage bar chart example statements illustrates plots to
separate Y axes (left and right), a word axis, and labeling of plot
points. => PLOX.C, BIKE88.DAT.

CUG266.05-CONLIB.C source
Plox keyword handling modules. => DATLIB.C, DRAWLIB.C, PXLIB.C,
WORDLIB.C, PLOX.C.

CUG266.06-DATLIB.C source
PLOX Data Handling Package, handles conversion of dates and
coordinates for file pointers. => PLOX.C, CONLIB.C.

CUG266.07-DRAWLIB.C source
Front end plotting utilities for PLOX. => PLOX.C, CONLIB.C, MATHLIB.C.

CUG266.08-GROWHIST.DAT data
PLOX data values example of many small, single plots in one picture.
=> GROWHIST.PIC.

CUG266.09-GROWHIST.PIC data
PLOX data statements example of many small, single plots in one
picture. => GROWHIST.DAT, PLOX.C.

CUG266.10-LINES.DAT data
Data for Micro PLOX line types test. PLOX data value sample of line
and point types. => LINES.PIC.

CUG266.11-LINES.PIC data
Display Micro PLOX line and point types. PLOX data statements. Sample
of line and point types. => LINES.DAT, PLOX.C.

CUG266.12-LPTR.C source
Line printer control routines for Epsch ESC* 5 (plotter mode). =>
PLOX.C.

CUG266.13-LPTR2.C source
Line printer control routines for Epson ESC K (60 x 72). => PLOX.C.

CUG266.14-MATHLIB.C source
General math functions library for PLOX. => PLOX.C, CONLIB.C.

CUG266.15-MILEFORM.PIC data
PLOX data statements example of a simple form. => PLOX.C.

CUG266.16-NEINVEST.DAT data
PLOX data value example of two line plots in one area with a legend.
=> NEINVEST.PIC.

CUG266.17-NEINVEST.PIC data
PLOX data valve example of two line plots in one area with a legend.
NEINVEST.DAT, PLOX.C.

CUG266.18-PLOTCGA.C source
A Quality-Deferred device driver for CGA graphics using the Epson
driver as a base, for quick preview image of PLOX charts with
unadjusted aspect ratio. => PLOTLIB.C PLOX.C. Uses MIX graphics calls.

CUG266.19-PLOTCGA.EXE executable
=> PLOTCGA.C.

CUG266.20-PLOTEGA.C source
A Quality-Deferred device driver for EGA graphics using the Epson
driver as a base, for quick preview image of PLOX charts with
unadjusted aspect ratio. => PLOTLIBE.C, PLOX.C. Uses MIX graphics
calls.

CUG266.21-PLOTEGA.EXE executable
=> PLOTEGA.C.

CUG266.22-PLOTEPS.C source
Reads a file of binary encoded plot commands, creates a memory image
of them and then sends the image to the printer. => LPTR.C, PLOTLIB.C,
PLOX.C. Requires Epson Esc $5 (plotter mode).

CUG266.23-PLOTEPS.EXE executable

CUG266.24-PLOTEPS2.C source
Reads a file on binary encoded plot commands, creates a memory image
of them and then sends the image to the printer. => LPTR2.C,
PLOTLIB.C, PLOX.C. Requires Esc K mode with 72 bits per inch vertical
and 60 bits per inch horizontal.

CUG266.25-PLOTEPS2.EXE executable

CUG266.26-PLOTHERC.C source
A Quality-Deferred device driver for Hercules graphics using the Epson
driver as a base, for quick preview image of PLOX charts with
unadjusted aspect ratio. => PLOTLIBH.C, PLOX.C.

CUG266.27-PLOTHERC.EXE executable
=> PLOTHERC.C.

CUG266.28-PLOTLIB.C source
PLOX library of basic plotting routines for dot-matrix printer. =>
PLOX.C.

CUG266.29-PLOTLIBC.C source
PLOX library of basic plotting routines for CGA graphics. =>
PLOTCGA.C, PLOX.C.

CUG266.30-PLOTLIBE.C source
PLOX library of basic plotting routines for EGA graphics. =>
PLOTEGA.C, PLOX.C.

CUG266.31-PLOTLIBH.C source
PLOX Library of basic plotting routines for Hercules graphics. =>
PLOTHERC.C, PLOX.C.

CUG266.32-PLOX.C source
MICRO PLOX. Reads a file of PLOX chart specification statements and
executes them as encountered to produce a binary file of plot
commands. => CONLIB.C, DATLIB.C, DRAWLIB.C, MATHLIB.C, PXLIB.C,
WORDLIB.C, PLOX.H, PLOX.MK, LPTR.C, LPTR2.C, PLOTEPS.C, PLOTEPS2.C,
PLOTLIB.C, PLOTLIBH.C, PLOTHERC.C, PLOTLIBE.C, PLOTEGA.C, PLOTLIBC.C,
PLOTCGA.C. [CP/M, UNIX, MS-DOS] Requires EPSON FX-80 compatible
printer.

CUG266.33-PLOX.DOC doc
MICRO PLOX. Tutorial on PLOX usage. => PLOX.REF, PLOX.C. Requires
EPSON FX-80 compatible printer.

CUG266.34-PLOX.EXE executable
=> PLOX.C.

CUG266.35-PLOX.H header
Micro PLOX standard header file, global constants and data type
definitions. => PLOX.C.

CUG266.36-PLOX.MK make
Make file for compiling micro PLOX. PLOX.C.

CUG266.37-PLOX.REF doc
PLOX Specification Outline. => PLOX.DOC, PLOX.C.

CUG266.38-PLOXHIST.DOC doc
The History and Rationale of micro PLOX. Description of original
purpose of PLOX, its evolution and flaws. => PLOX.C. Describes
desireable improvements which have not been implemented, application
is still limited to EPSON FX-80 compatible printers.

CUG266.39-PXLIB.C source
front end plot drawing routines for PLOX. => MATHLIB.C, PLOX.C.

CUG266.40-READ.ME doc
Introduction to PLOX and its available documentation. => READ.ME2,
PLOX.C.

CUG266.41-READ.ME2 doc
Documentation of PLOX enhancements and Quality-Deferred screen
graphics drivers. => READ.ME, PLOX.C.

CUG266.42-SCATTER.DAT data
PLOX data values example of scatter diagram. => SCATTER.PIC.

CUG266.43-SCATTER.PIC data
PLOX example of scatter diagram data statements. => SCATTER.DAT,
PLOX.C.

CUG266.44-STAR.DAT data
Data for a five pointed star with a 1 inch radius. PLOX example of
simple line drawing data values. => STAR.PIC.

CUG266.45-STAR.PIC data
Draws a five pointed star of 1 inch radius. PLOX example of simple
line drawing data statements. => STAR.DAT, PLOX.C.

CUG266.46-SUMMARY.DOC doc
Micro PLOX summary description. PLOX.C.

CUG266.47-UPDATE.TXT doc
Porting Microplox to XENIX. Source code segments and extensive
documentation of adjustments and difficulties involved in porting
Microplox to XENIX, this text is extracted from The C Users Journal
volume 7.4 and analyzes implementation methods used in PLOX. =>
PLOX.C.

CUG266.48-WORDAXIS.DAT data
PLOX example of data values used to build a word axis. =>
WORDAXIS.PIC.

CUG266.49-WORDAXIS.PIC data
PLOX example of data statements used to build a word axis. =>
WORDAXIS.DAT PLOX.C.

CUG266.50-WORDLIB.C source
Keyword-value Text Handling Routines. PLOX module for locating
keyword-value pairs in PLOX specification statements. => PLOX.C.

==============================================================================
CUG267 -
-----------

8085, 2650 & S6 Cross Assemblers
By William C. Colley, III. [public] 1 disk. This volume contains cross
assemblers for Intel 8080 and 8085, Signetics 2650, and SGS S6 micro
processors. The program is written in portable C. All assembler
features are supported except relocation, linkage, and macros. The
program has compiled successfully on two UNIX compilers, five MSDOS
compilers, and two CP/M compilers.

CUG267.01-A26.C source
2650 Cross-Assembler (Portable). Main program and line assembly
routines for the assembler. Assembles code for Signetics 2650
microprocessor. Written in Portable C. => A26.H, A26.DOC, A26EVAL.C
A26UTIL.C, TEST26.ASM, READ.ME4. [QNIX, PCDOS, HP-UX, CP/M-86,
CP/M-80, MS-DOS: AZTEC Cll, AZTEC C86, MSC, ECO-C, LC, QNIX C, C186] A
port to BDS C would be extremely difficult. A port to Toolworks C is
untried. All assembler features are supported except relocation,
linkage, and macros.

CUG267.02-A26.DOC doc
Simple header document for A26. => A26.H.

CUG267.03-A26.H header
This header file contains the global constants and data type
definitions for all modules of the A26 cross-assembler, as well as
compilation and linkage instructions. => A26.C.

CUG267.04-A26EVAL.C source
This file contains the A26 assembler's expression evaluator and
lexical analyzer. => A26.C.

CUG267.05-A26UTIL.C source
Contains utility packages for symbol table building and searching,
opcode and operator table searching, listing file output, hex file
output, and error flagging for the A26 cross-assembler. => A26.C.
MSDOS far pointer is NOT compatible with the int type, must use char
type. Fatal error occurs if memory cannot hold new symbol for symbol
table, if the disk fills up, or if a file opens improperly.

CUG267.06-A85.C source
8085 Cross-Assembler (Portable). This program lets you use your
computer to assemble code for the Intel 8080 and 8085 microprocessors.
The program is written in portable C rather than BDS C. Main program
and line assembly routines. => A85.H, A85.DOC, A85UTIL.C, A85EVAL.C,
TEST85.ASM, READ.ME4. [PCDOS, HP-UX CP/M-86, CP/M-80, UNIX, MS-DOS:
AZTEC CII, AZTEC C86, MSC, ECO-C, LC, QNIX C, C186] All assembler
features are supported except relocation, linkage, and macros. A port
to BPS would be extremely difficult. A port to Toolworks C is untried.

CUG267.07-A85.DOC doc
A simple Header document for A85. => A85.C.

CUG267.08-A85.H header
Header file containing global constants and data type definitions for
all modules of the cross-assembler A85. Also compilation and linkage
instructions. => A85.C.

CUG267.09-A85EVAL.C source
Contains the A85 assembler's expression evaluator and lexical
analyzer. => A85.C.

CUG267.10-A85UTIL.C source
Module containing utility packages for symbol table building and
searching, opcode and operator table searching, listing file output,
hex file output, and error flagging for the A85 cross-assembler.
A85.C. MSDOS far pointer is NOT compatible with the INT type, must use
CHAR type. Fatal error occurs if memory cannot hold new symbol for
symbol table, if disk fills up, or if a file opens improperly.

CUG267.11-AS6.C source
S6 Cross-Assembler (Portable). Assembles code for the SGS S6 family of
microprocessors. The Program is written in Portable C rather than BDS
C. => AS6.DOC, AS6.H, AS6EVAL.C, AS6UTIL.C, TESTS6.ASM, READ.ME4.
IQNIX, PCDOS, HP-UX, CP/M-86, CP/M-80, MS-DOS: AZTEC Cll, AZTEC C86,
MSC, ECO-C, LC, QNIX C, C186] All assembler features are supported
except relocation, linkage, and macros. A port to BDS C would be
extremely difficult. A port to Toolworks C is untried.

CUG267.12-AS6.DOC doc
Simple header documentation for AS6 cross-assembler. => AS6.C.

CUG267.13-AS6.H header
Header file containing the global constants and data type definitions
for all modules of the AS6 cross-assembler. Also compilation and
linkage instructions. => AS6.C.

CUG267.14-AS6EVAL.C source
AS6 assembler's expression evaluator and lexical analyzer. => AS6.C.

CUG267.15-AS6UTIL.C source
Module containing utility packages for symbol table building and
searching, opcode and operator table searching, listing file output,
key file output, and error flagging for the AS6 cross-assembler. =>
AS6.C. MSDOS far pointer is NOT compatible with the INT type, must use
CHAR type. Fatal error occurs if memory cannot hold new symbol for
symbol table, if disk fills up, or if a file opens improperly.

CUG267.16-READ.ME4 doc
Can't Stop Cross-Assembling (Portably). General introduction for the
8085, 2650, and S6 cross-assemblers. => AS6.C, A26.C, A85.C.

CUG267.17-TEST26.ASM source
2650 Cross-Assembler Test Source File.

CUG267.18-TEST85.ASM source
8085 Cross-Assembler Test Source File. => A85.C.

CUG267.19-TESTS6.ASM source
S6 Opcodes Numerical Order to Test S6 Cross-Asmblr. => AS6.C.

==============================================================================
CUG268 -
-----------

Unicorn Library for Microsoft C
By David A. Miller. [public] 2 disks. The Unicorn Library (v4.0),
contains over 200 functions written in C and assembly (source code is
not provided). The library includes various functions: windows,
graphics (points, lines, circles, ellipses, rotations, etc.), turtle
(penup, pendown, turnright, etc.), sound, pallette, mouse, joystick,
printer controls. Some functions are specific to the Tandy 1000. The
manual on the disk describes each function and gives a sample program
illustrating its use. CUG268 provides the library for Microsoft C
v4.0, CUG269 is for Turbo C.

CUG268.01-BORDER.H header
Defines several border types that may be used in building window
programs. => UCTURBO.LIB.

CUG268.02-DEMOIBM.C source
Demonstration of some of the features contained in the UC4 library. It
uses the 4-color medium resolution mode of the IBM PC and compatibles.
=> DEMOIBM.EXE, UCTURBO.LIB. [MS-DOS: TC]

CUG268.03-DEMOIBM.EXE executable
=> DEMOIBM.C.

CUG268.04-DEMOTDY.C source
Demonstrates features contained in the Unicorn Library. It uses the 1
6-color medium resolution mode of the Tandy 1000 computer. =>
DEMOTDY.EXE, UCTUR_TD.LIB. [MS-DOS: TC]

CUG268.05-DEMOTDY.EXE executable
=> DEMOTDY.C.

CUG268.06-DOSLIB.H header
Global constants. => UCTURBO.LIB.

CUG268.07-EQUIP.H header
This header defines a structure to hold equipment installed data. =>
UCTURBO.LIB.

CUG268.08-KEYDEF.H header
Defines internal key codes for special extended keys on IBM and clone
computers. => UCTURBO.LIB.

CUG268.09-LABEL.C source
Prints disk label set for Unicorn Library disks on standard mailing
label forms using the IBM graphics printer. => UCTURBO.LIB.

CUG268.10-LABEL.EXE executable
=> LABEL.C.

CUG268.11-LABEL.PRJ batch
Runs LABEL.C and UCTURBO.LIB. => LABEL.C, UCTURBO.LIB.

CUG268.12-MANUAL1.DOC doc
Unicorn Library Documentation 3.1. Contains registration information,
operating instructions, and function references with sample programs.
Part 1 of 3 for Unicorn Library 4.0. => UCTURBO.LIB, MANUAL2.DOC. [TC]

CUG268.13-MANUAL2.DOC doc
Unicorn Library Documentation 3.1. Continuation of MANUAL1.DOC, Part 2
of 3. => UCTURBO.LIB, MANUAL3.DOC.

CUG268.14-MANUAL3.DOC doc
Unicorn Library Documentation 3.1. Continuation of MANUAL2.DOC, Part 3
of 3. => UCTURBO.LIB.

CUG268.15-READ.ME doc
General description of the Unicorn Library package and its
requirements. => README.1ST, UCTURBO.LIB.

CUG268.16-README.1ST doc
Change of Author's address. => UCTURBO.LIB, READ.ME.

CUG268.17-REF.DOC doc
Quick Reference in function Prototype Format. => UCTURBO.LIB. [MS-DOS:
TC]

CUG268.18-TESTDX.C source
A test of the Unicorn #1 Library with a daisy wheel printer. =>
UCTURBO.LIB, TESTDX.EXE. [MS-DOS: TC]

CUG268.19-TESTDX.EXE executable
=> TESTDX.C.

CUG268.20-TESTEQP.C source
Reads and displays computer status information (equipment status in
decimal and hex, kilobytes of memory installed, model code number in
decimal and hex), using functions from the Unicorn #1 Library. =>
TESTEQP.EXE, UCTURBO.LIB.

CUG268.21-TESTEQP.EXE executable
=> TESTEQP.C.

CUG268.22-TESTGRPR.C source
Test program for IBM Graphics printer and Unicorn #1 Library. =>
TESTGRPR.EXE UCTURBO.LIB.

CUG268.23-TESTGRPR.EXE executable
=> TESTGRPR.C.

CUG268.24-TESTSND.C source
Sound Testing Program. => TESTSND.EXE, UCTURBO.LIB.

CUG268.25-TESTSND.EXE executable
=> TESTSND.C.

CUG268.26-UC.H header
Unicorn Library Header for Version 4.0. Global constants and data type
definitions. => UCTURBO.LIB.

CUG268.27-UCBIOS.H header
Defines BIOS interrupts and routines and disk routines. =>
UCTURBO.LIB.

CUG268.28-UCLIB4.TXT doc
Description of Unicorn Library, its purpose and adaptability. =>
UCTURBO.LIB UCTUR_TD.LIB.

CUG268.29-UCTURBO.LIB library
A library of over 200 graphics, sound, screen handling, window,
printer, joystick, and mouse functions for IBM PC. => UCLIB4.TXT.
[MS-DOS: TC] Source code available to those who register with author.

CUG268.30-UCTUR_TD.LIB library
A library of over 200 graphics, sound, screen handling, window,
printer, joystick, and mouse functions for Tandy 1000. => DEMOTDY.C,
UCTURBO.LIB. [MS-DOS: TC] Source code available to those who register
with author.

CUG268.31-UCVIDEO.H header
Supplies all definitions required to deal with the video state of the
machine. => UCTURBO.LIB.

CUG268.32-VERSION.DOC doc
Header information for the Unicorn Library 4.00. => UCTURBO.LIB.

CUG268.33-WINDOW.H header
Definitions required for all window functions and programs using
window functions. => UCTURBO.LIB.

CUG268.34-WTEST.C source
Test of Unicorn Library window functions. => UCTURBO.LIB, WTEST.EXE.
[MS-DOS: TC, MSC]

CUG268.35-WTEST.EXE executable
WTEST.C.

==============================================================================
CUG269 -
-----------

Unicorn Library for Turbo C
By David A. Miller. [public] 1 disk. See CUG268 for description.
CUG269 is for Turbo C. CUG268 provides the library for Microsoft C
v4.0.

CUG269.01-BORDER.H header
Defines several border types that may be used in building window
programs. => UNICORN.LIB.

CUG269.02-DEMOIBM.C source
A graphics demo program for IBM PC and compatibles with a CGA or
equivalent. This uses mode 4 (4-color medium resolution graphics). =>
UNICORN.LIB.

CUG269.03-DEMOIBM.EXE executable
=> DEMOIBM.C.

CUG269.04-DOSLIB.H header
doslib header. Global definitions. => UNICORN.LIB.

CUG269.05-EQUIP.H header
Defines a structure to hold equipment installed data. => UNICORN.LIB.

CUG269.06-KEYDEF.H header
Defines internal key codes for special extended keys on IBM and clone
computers. => UNICORN.LIB.

CUG269.07-MANUAL1.DOC doc
Unicorn Library Documentation 3.1. Contains registration information,
operating instructions, and function references with sample programs.
Part 1 of 3 for Unicorn Library 4.0. => UNICORN.LIB, MANUAL2.DOC.

CUG269.08-MANUAL2.DOC doc
Unicorn Library Documentation 3.1. Continuation of MANUAL3.DOC, Part 2
of 3. => UNICORN.LIB, MANUAL3.DOC.

CUG269.09-MANUAL3.DOC doc
Unicorn 1 Documentation 3.1. Continuation of MANUAL2.DOC, Part 3 of 3.
=> UNICORN.LIB.

CUG269.10-READ.ME doc
Unicorn Library Documentation 4.0. Contains registration information
and description of Demo-related files. UNICORN.LIB.

CUG269.11-TESTDX.C source
Test of Unicorn #1 Library with a daisy-wheel printer. => UNICORN.LIB.

CUG269.12-TESTDX.EXE executable
=> DEMOIBM.C.

CUG269.13-TESTEQP.C source
Displays information on equipment status in decimal and hex, kilobytes
of memory installed, the model code number in decimal and hex, using
Unicorn #1 Library functions. => UNICORN.LIB.

CUG269.14-TESTEQP.EXE executable
TESTEQP.C.

CUG269.15-TESTGRPR.C source
Test program to check the IBM graphics printer and the Unicorn #1
Library. => UNICORN.LIB.

CUG269.16-TESTGRPR.EXE executable
=> TESTGRPR.C.

CUG269.17-TESTSND.C source
Sound Testing Program!. => UNICORN.LIB.

CUG269.18-TESTSND.EXE executable
=> TESTSND.C.

CUG269.19-UC.H header
Global constants and data type definitions. => UNICORN.LIB.

CUG269.20-UCBIOS.H header
Defines BIOS interrupts, routines and disk routines. => UNICORN.LIB.

CUG269.21-UCLIB4.TXT doc
Description of Unicorn Library, its purpose and adaptability. =>
UNICORN.LIB, UCTANDY.LIB. Tandy demo programs (DEMOTDY.C, DEMOTDY.EXE)
are not on distribution disk for UCTANDY.LIB.

CUG269.22-UCTANDY.LIB library
A library of over 200 graphics, sound, screen handling, window,
printer, joystick and mouse functions for Tandy 1000. => UNICORN.LIB,
UCLIB4.TXT. [MS-DOS: MSC4] Source code is available only to users who
register with the author. Tandy Demo programs for Unicorn Library
(DEMOTDY.C, DEMOTDY.EXE) are no on distribution disk (see UCL1
B4.TXT).

CUG269.23-UCVIDEO.H header
Supplies all definitions required to deal with the video state of the
machine. => UNICORN.LIB.

CUG269.24-UNICORN.LIB library
A library of over 200 graphics, sound, screen handling, window,
printer, joystick and mouse functions for IBM PC and compatibles. =>
UCLIB4.TXT. [MS-DOS: MSC4] Source code is available only to users who
register with the author.

CUG269.25-UNICORN.LST doc
A list of functions, associated categories, and associated offset,
code and data size. UNICORN.LIB.

CUG269.26-WINDOW.H header
This header is to be used for all window functions and programs using
window functions. => UNICORN.LIB.

CUG269.27-WTEST.C source
Test of Unicorn Library Window functions. => UNICORN.LIB.

CUG269.28-WTEST.EXE executable
=> WTEST.C.

==============================================================================
CUG270 -
-----------

Miscellany X
[public] 1 disk. This volume is a collection of small programs
submitted by five programmers. Marc Bosser, NY has contributed four
video routines: cursoroff(), exwriteM(), fill(), and xy(). These are
implemented by using IBM video ROM BIOS calls.
Les Aldridge from NJ has submitted EST, a program that searches for
the largEST, smallEST, oldEST, or newEST files. This program is
specific to MS-DOS and exploits the Microdoft C v5.x run-time library.
Scott Holland from NJ has submitted a three dimensional tic-tac-toe
player. The human player enters moves as three digit numbers which
represent the level, row and column. For portability, the display is
generated using standard I/O routines. Code for several additional
strategy levels are supplied, allowing the human to play against
different machine strategies. Ralf E. Brendler has contributed
UNIX-like utilities: diff, delta, and apply. Although they were
developed under Microsoft OS/2 v1.0 and v1.1 using MSC v5.1, they use
no OS/2 specific calls and should be portable to any ANSI Standard C
compiler. Finally, ATOF.C contributed by Dan Schechter is a set of
functions including atof() and strod(). Schechter implemented these
functions for Aztec C v4.1, which has a bug in atof() (scheduled to be
fixed in the next release) and has no strod().

CUG270.01-APPLY.C source
By Ralf E. Brendler. Apply a delta script to a text file. A utility
which will apply a delta created using DELTA.EXE to a source file.
This effectively mimics the operation of UNIX ed's script editing. =>
DELTA.C APPLY.H, DIFF.DOC. [OS/2: MSC5] Uses only family API calls
therefore can be bound to run under MS-DOS 3.X as well as MS-OS/2v1.X.
Uses no OS/2 specific calls therefore should be portable to any ANSI
standard compiler.

CUG270.02-APPLY.EXE executable
By Ralf E. Brendler. => APPLY.C.

CUG270.03-APPLY.H header
By Ralf E. Brendler. Global Constants, Type Definitions, and Function
Declarations. => APPLY.C.

CUG270.04-ATOF.C source
By Dan Schechter. ATOF. A temporary set of functions atof() and
strtod() for Aztec CV4.1, which has a bug in atof() (scheduled to be
fixed in the next release) and has no strtod(). [MS-DOS: AZTEC C86]
Probably causes rounding errors.

CUG270.05-AUTOEXEC.BAT batch
Introductory batch file displaying README.TXT and running VID_DEMO.

CUG270.06-DELTA.C source
By Ralf E. Brendler. Delta file creation program. A variation of the
DIFF utility which generates files suitable for passing to the UNIX
editor ed to generate a new file based on an existing file and a delta
file. It can be used to effect a very primitive Source Code Control
System, or as a basis for developing a full-featured SCCS. => DIFF.C,
APPLY.C, DIFF.DOC. [OS/2: MSC5] Uses only family API calls therefore
can be bound to run under MS-DOS 3.X as well as MS-OS/2v1.X. Uses no
OS/2 specific calls therefore should be portable to any ANSI standard
compiler.

CUG270.07-DELTA.EXE executable
By Ralf E. Brendler. => DELTA.C.

CUG270.08-DIFF.C source
By Ralf E. Brendler. File differencing program. Roughly patterned
after the UNIX utility of the same name. It has UNIX-style output, and
uses the "recursive longest matching sequence" differencing algorithm.
=> DIFF.DOC, DIFF.H. [OS/2: MSC5] Uses only family API calls therefore
can be bound to run under MS-DOS 3.X as well as MS-OS/2v1.X. Uses no
OS/2 specific calls therefore should be portable to any ANSI standard
compiler.

CUG270.09-DIFF.DOC doc
By Ralf E. Brendler. File Difference Utilities. Purpose, development,
and reference documentation for utilities DIFF, DELTA, and APPLY. =>
DIFF.C, DELTA.C, APPLY.C.

CUG270.10-DIFF.EXE executable
By Ralf E. Brendler. => DIFF.C.

CUG270.11-DIFF.H header
By Ralf E. Brendler. Global constants, data type definitions, and
function prototypes. => DIFF.C.

CUG270.12-EST.C source
By Les Aldridge. Find largest, smallest, oldest, newest files. Lists a
largest, smallest, oldest, newest files from a given path
specification under MS-DOS. Illustrates use of _makepath,_splitpath,
_dos_findfirst and _dos_findnext. => EST.DOC, EST.MK. [MS-DOS: MSC5]
Uses library functions specific to Microsoft C5.0.

CUG270.13-EST.DOC doc
By Les Aldridge. EST: finding the ..est file(s) on your disk.
Background on development of EST functions, and their uses of
functions from the MSCF run-time library. => EST.C.

CUG270.14-EST.EXE executable
By Les Aldridge. => EST.C.

CUG270.15-EST.MK make
By Les Aldridge. => EST.C.

CUG270.16-README doc
By Dan Schechter. Letter to Robert.

CUG270.17-README.TXT doc
By Marc Bosser. Description of Submitted Materials. Brief summary of
VID_DEMO functions. => VID_DEMO.C.

CUG270.18-SUMMARY.TXT doc
By Ralf E. Brendler. Brief summary of UNIX-like functions, DIFF,
DELTA, and APPLY, and notes on adaptability. => DIFF.C, DELTA.C,
APPLY.C.

CUG270.19-T3.DOC doc
By Scott Holland. Three dimensional tic-tac-toe. Summary description
of T3 function modules, background, and adaptibility. => T3MAIN.C.

CUG270.20-T3COMP.C source
By Scott Holland. TTT3D computer move subroutine. => T3MAIN.C.

CUG270.21-T3CONV.C source
By Scott Holland. TTT3D move conversion subroutines. Two subroutines
which converts moves between an external 3-digit coordinate and an
internal representation. => T3MAIN.C.

CUG270.22-T3DISP.C source
By Scott Holland. TTT3D display subroutine. => T3MAIN.C.

CUG270.23-T3GLOBAL.H header
By Scott Holland. TTT3D Include file. Global type definitions and
explanations. => T3MAIN.C.

CUG270.24-T31NIT.C source
By Scott Holland. TTT3D initialization subroutine. Initializes
variables and turns on diagnostics. => T3MAIN.C.

CUG270.25-T31NTRO.C source
By Scott Holland. TTT3D Introduction Subroutine. Presents game rules
and entry syntax. => T3MAIN.C.

CUG270.26-T3MAIN.C source
By Scott Holland. TTT3D Main Program. Coordinates order of play and
display. T3.DOC, T3INIT.C, T3INTRO.C, T3PLAYER.C, T3COMP.C, T3DISP.C,
T3CONV.C, T3GLOBAL.H. [MS-DOS3: VANILLA, UNIX/5, MSC4]

CUG270.27-T3PLAYER.C source
By Scott Holland. TTT3D Player Move Subroutine. Gets the players move
and verifies that it is valid. => T3MAIN.C.

CUG270.28-VIDEO.H header
By Marc Bosser. Video Header File. Global definitions and
initialization. => VID_DEMO.C. [MS-DOS] Dependant on ROM BIOS.

CUG270.29-VID_DEMO.C source
By Marc Bosser. Video Demonstration. Demonstration of various video
routines, curseroff(), ewriteM(), fill(), and xy(). => VIDEO.H.
[MS-DOS: TC, MSC4] Dependent on ROM BIOS.

CUG270.30-VID_DEMO.EXE executable
By Marc Bosser. => VID_DEMO.C.

CUG270.31-VID_DEMO.OBJ object
By Marc Bosser. => VID_DEMO.C.

==============================================================================
CUG271 -
-----------

Steven's Library for Turbo C v1.5
By Steven E. Margison. [share2] 2 disks. This volume contains the
lastest version of Steven's Library, a shareware package. CUG271 is
for Turbo C v1.5 and CUG272 is for Datalight C. Each volume contains
the small model library (over 100 functions), some sample utilities,
and all documentation. The library includes functions for handling
communication ports, printer, CRC, video, time, date, sound, error
interrupt, keyboard, etc. The library source code plus the other four
memory model libraries are available from the author.

CUG271.01-AABORT.DOC doc
MBORT -- Terminate a program. Describes a function to abort the
program after sending the BELL character to stderr. => SMTCS.LIB.

CUG271.02-ARGVAL.DOC doc
convert an ASCII numerical string from an argument. Describes a
function to parse command line arguments containing numerical values
into an integer. => SMTCS.LIB. Numeric values cannot exceed four
characters without causing potential damage to the program by
overrunning the character storage area.

CUG271.03-ASYNC.DOC doc
readchar, ready_rev, ready_xmt, setport, writechar. Describes very low
level (direct port access) subroutines to enable 1/0 through COM1
through COM4. Only setport() uses BIOS int 14H. => SMTCS.LIB,
SMDEFS.H.

CUG271.04-BADEXT.DOC doc
Describes a function which reports invalid filename extension and
exits program. => SMTCS.LIB.

CUG271.05-BASENAME.DOC doc
Split a string into path and/or filename. Describes a function which
splits a string into path and/or filename. => SMTCS.LIB.

CUG271.06-BLPR.DOC doc
Describes two assembly language routines: blpr--write a character to
LPT? through BIOS 17H, and blprstat--get LPT? status through BIOS 17H.
=> SMTCS.LIB. Because of this dependency upon the ROM-BIOS Interrupt
17H, these routines may not work on all compatibles.

CUG271.07-CANT.DOC doc
report inability to open a file and exit. Describes function which
reports inability to open a file and exits program. => SMTCS.LIB.

CUG271.08-CENTER.DOC doc
Describes function which centers a string. => SMTCS.LIB. The string
MUST NOT BE longer than the size specified, since there is no error
checking for this condition and an unusable result will be returned.

CUG271.09-CHKASYNC.DOC doc
chkded, chkdsr, chkcts, chkring. Describes assembly language functions
which provide direct access to the serial communications chips. =>
SMTCS.LIB, SMDEFS.H.

CUG271.10-CLRFIELD.DOC doc
Describes functions which handle the problem of clearing a section of
a line on the screen without clearing to the end of the line. =>
SMTCS.LIB.

CUG271.11-CLS.DOC doc
Describes a function which clears the screen and homes the cursor. =>
SMTCS.LIB.

CUG271.12-CRC.DOC doc
CRC functions--CRC misc. functions. Describes functions used in CRC
calculations mainly for modem programs: crc_clear(), clear crc value;
crc update (crc, chr), update crc value; crc finish (crc), finish crc
calculation. => SMTCS.LIB. As supplied, the CCITT calculation
polynomial is used. The source can be easily changed to CRC 16 if
desired.

CUG271.13-CURSOR.DOC doc
Cursor Style--alter the cursor style. Describes function which allows
selection of several predefined cursor styles, or user-specified
cursor size. => SMTCS.LIB.

CUG271.14-DAYNUM.DOC doc
Describes a function which finds the number of a date within a year.
=> SMTCS.LIB. Years below 1980 are ignored.

CUG271.15-DISPBOX.DOC doc
dvid_box. Describes a function which displays a box on the screen. =>
SMTCS.LIB. Functions may fail if the target system is not a very close
compatible since direct memory writing is being used. No error check
is done on any value.

CUG271.16-DISPLAY.DOC doc
direct video functions. Describes functions which use direct video
access functions. => SMTCS.LIB. Functions may fail if the target
system is not a very close compatible since direct memory writing is
being used.

CUG271.17-DSTR_I.DOC doc
Describes a function which makes an ASCII decimal string into an
integer. => SMTCS.LIB.

CUG271.18-DUMP.C source
Hex File Dump Utility. Displays a file in hex and character
representation in color or monochrome, depending upon type of video
card installed. Displays 20 lines per screen and waits for keypress.
=> SMTCS.LIB. [MS-DOS: TC] As distributed, this program requires (for
compilation): "Steve's Turbo-C Library" version 1.30 or later.

CUG271.19-DUMP.EXE executable
=> DUMP.C.

CUG271.20-DVID.DOC doc
Direct Video Access Routines. Documentation for routines in DUMP.C and
SMTCS.LIB. => DUMP.C, SMTCS.LIB.

CUG271.21-D_CLS.DOC doc
Describes function which clears current screen. => SMTCS.LIB.

CUG271.22-D_POS.DOC doc
Describes function which positions the cursor on a video page. =>
SMTCS.LIB.

CUG271.23-D_SAY.DOC doc
Describes two functions: d_say--display a string at a specific
position, and d saypag--same, with page specification. => SMTCS.LIB.

CUG271.24-ENTERDAT.DOC doc
Describes two functions: enterdata--enter a string of data from
keyboard, and dvid_enterdata--same, use direct video access. =>
SMTCS.LIB.

CUG271.25-ENTERFN.DOC doc
Describes two functions: enterfn--enter a filename from keyboard, and
dvid_enterfin--same, use direct video access. => SMTCS.LIB.

CUG271.26-ERAOK.DOC doc
Describes a function which asks permission before overwriting an
existing file. => SMTCS.LIB.

CUG271.27-ERROR.DOC doc
Describes a function which reports a fatal error and exits program. =>
SMTCS.LIB.

CUG271.28-EXISTS.DOC doc
Describes a function which sees if a file exists. => SMTCS.LIB.

CUG271.29-EXIT2DOS.DOC doc
Describes a function which asks for permission to exit a program. =>
SMTCS.LIB.

CUG271.30-EXPARG.DOC doc
expand_arg. Describes a function which expands command line wildcard
filenames. => SMTCS.LIB.

CUG271.31-EXTTYP.DOC doc
Describes a function which checks a filename for a particular
extension. => SMTCS.LIB.

CUG271.32-FILLCH.DOC doc
Describes a function which fills a string with a character. =>
SMTCS.LIB.

CUG271.33-FLYER.TXT doc
Descriptions of SEM software, its availability and background. =>
SMTCS.LIB, ORDER.FRM.

CUG271.34-FOPENX.DOC doc
Describes three functions (fopenp, fopend, fopeng) which allow the
opening of a file in other than just the current directory. These
functions use file descriptor structures. => SMTCS.LIB, OPENX.DOC.
These functions cannot be used to create new files.

CUG271.35-GAMEPORT.DOC doc
Describes functions which manipulate the game port. => SMTCS.LIB.

CUG271.36-GETCODE.DOC doc
get_code_adr--get a function address. Describes a function used to get
the absolute segment and offset values for the address of a function
within a program. It is useful for installing interrupt handlers and
interfacing to assembly language modules. => SMTCS.LIB.

CUG271.37-GETDATA.DOC doc
get_data_adr--get a data item address. Describes a function used to
get the absolute segment and offset values for the address of a data
item within a program. It is useful for installing interrupt handlers
and interfacing to assembly language modules. => SMTCS.LIB.

CUG271.38-GETKEY.DOC doc
Describes an extended keyboard fetch. => SMTCS.LIB.

CUG271.39-GETPATH.DOC doc
Describes a function which retrieves the PATH variable and parses it.
=> SMTCS.LIB.

CUG271.40-GETPOS.DOC doc
Describes function which gets current cursor position. => SMTCS.LIB.
Values are in binary.

CUG271.41-GTOD.C source
Get time of day utility. Various date, time formatting functions. =>
SMTCS.LIB. [MS-DOS: TC] As distributed, this program requires (for
compilation): "Steve's Turbo-C Library' version 1.30 or later.

CUG271.42-GTOD.EXE source
=> GTOD.C.

CUG271.43-GTODFUNC.DOC doc
Describes two functions: gtodsub--get time of day to file pointer and,
gtodstr--get time of day to a string. => SMTCS.LIB.

CUG271.44-HSTR_I.DOC doc
Describes function which makes an ASCII hexadecimal string into an
integer. => SMTCS.LIB.

CUG271.45-IBMTYPE.DOC doc
Describes function which finds out the type of IBM computer in use. =>
SMTCS.LIB. Inconsistencies in the byte in ROM at F000:FFFEh reduce the
accuracy of this function.

CUG271.46-INPATH.C source
Inpath Utility. This is a program similar to many "filefind" programs,
except that it works like the UNIX "whereis" command. => SMTCS.LIB.
[MS-DOS: TC] As distributed this program requires (for compilation):
"Steve's Turbo-C Library" version 1.30 or later.

CUG271.47-INPATH.EXE executable
=> INPATH.C.

CUG271.48-ISCONS.DOC doc
Describe function which checks to see if file descriptor is the
console. => SMTCS.LIB.

CUG271.49-ISLEAP.DOC doc
Describe function which checks if year is leap year. => SMTCS.LIB.

CUG271.50-I_ISTR.DOC doc
Describes function which makes an integer from an ASCII decimal
string. => SMTCS.LIB.

CUG271.51-KEYBOARD.DOC doc
keyboard functions. Describes functions which manipulate the keyboard
status flags at 0000:417 and 0000:418. => SMTCS.LIB.

CUG271.52-KEYS.H header
Extra defines for keyboard operations. => SMTCS.LIB.

CUG271.53-LEXCMP.DOC doc
Describes function which compares two strings, case independent. =>
SMTCS.LIB.

CUG271.54-LISTALL data
List of files, used by PMAN.COM to generate manual to be printed to
PRN. => SMTCS.LIB, PMAN.COM.

CUG271.55-LOADSTR.DOC doc
Describes function which loads a string with padding. => SMTCS.LIB.

CUG271.56-MKBOX.DOC doc
Describes function which makes a box on the screen. => SMTCS.LIB.

CUG271.57-MKTONE.DOC doc
Describes function which makes a tone to the speaker. => SMTCS.LIB.

CUG271.58-MODS.131 doc
List of modifications made for version 1.31. => SMTCS.LIB.

CUG271.59-MONTHIS.DOC doc
Describes function which returns a string pointer to name of month. =>
SMTCS.LIB.

CUG271.60-NEWEXT.DOC doc
Describes a function which changes a filename extension. => SMTCS.LIB.

CUG271.61-OKISET.C source
Okidata Printer Setup Utility. => SMTCS.LIB. [MS-DOS: TC] As
distributed, this program requires (for compilation): "Steve's Turbo-C
Library", version 1.30 or later.

CUG271.62-OKISET.EXE executable
=> OKISET.C.

CUG271.63-OPENX.DOC doc
Describes three functions (openp, opend openg) which allow the opening
of a file in other than just the current library. => SMTCS.LIB,
FOPENX.DOC. These functions cannot be used to create new files.

CUG271.64-ORDER.FRM doc
Software Registration and Order Form. => SMTCS.LIB, FLYER.TXT.

CUG271.65-PMAN.COM executable
Utility program provided to print all files specified in LISTALL to
PRN: for binding into a manual. => SMTCS.LIB, LISTALL. [MS-DOS: TC]

CUG271.66-PRSERIES.DOC doc
Describes a series of routines which use the low level functions
blpr() and blprstat() to access the LPT? ROM-BIOS drivers directly. =>
SMTCS.LIB.

CUG271.67-README doc
Justification and description of distribution disk general contents
for"Steve's Library for Turbo-C' version 1.31. => SMTCS.LIB.

CUG271.68-RELINK.DOC doc
Instructions on how to use batch files and library response files to
remake libraries. => SMTCS.LIB. Batch files and librarian response
files are only supplied with full registration.

CUG271.69-REPCHAR.DOC doc
repchar--repeat a character n times to fd. Describes function which
repeats a character n times to fd. => SMTCS.LIB.

CUG271.70-RMWHITE.DOC doc
rmlead, rmtrail, rmallws. Describes functions for removing whitespace
from the specified string in place. => SMTCS.LIB.

CUG271.71-SCREEN.H header
Extra defines for screen handling operations. => SMTCS.LIB.

CUG271.72-SETASYNC.DOC doc
Serial comm. direct access assembly functions. Describes assembly
language functions which provide direct access to the serial
communications chips. => SMTCS.LIB.

CUG271.73-SMDEFS.H header
Extra defines for compiling programs by S. Margison. => SMTCS.LIB.

CUG271.74-SMGRAPH.H header
FUNCTION: smgraph.h (formerly graphics.h). Extra defines for IBM
Graphics Characters. => SMTCS.LIB.

CUG271.75-SMLIBTC.DOC doc
Information for "Steve's Library for Turbo C" version 1.30 regarding
documentation, installation, linking, real time interrupt handler,
buffering STDOUT, utilities, shareware, warranty and registration. =>
SMTCS.LIB.

CUG271.76-SMTC.ORD doc
Software Registration Form and Order. => SMTCS.LIB.

CUG271.77-SMTC.TOC doc
Steve's Turbo-C Library List of Functions. List of functions and
one-line descriptions. SMTCS.LIB.

CUG271.78-SMTCS.LIB library
Steve's Library for Turbo-C. Small memory model library of over 100
functions for Turbo-C (extensively documented - see PMAN.COM).
Includes functions for handling direct video access, communications
parts, printer, CRC, time, date, sound, error interrupt, keyboard,
etc. => DUMP.C, FLYER.TXT, GTOD.C, INPATH.C, OKISET.C, PMAN.COM,
SMLIBTC.DOC, SMTC.TOC, TESTEXP.C, TESTINTS.C, WC.C, KEYS.H, SCREEN.H,
SMDEFS.H, SMGRAPH.H, SOUND.H, TEXTCOMP.C. [MS-DOS: TC1.5] Compiled for
Turbo-C 1.5 only.

CUG271.79-SOUND.DOC doc
Soundon-turn on speaker; soundoff-turn off speaker. Describes very low
level functions to manipulate the speaker port control. => SMTCS.LIB.

CUG271.80-SOUND.H header
Defines for IBM speaker control. => SMTCS.LIB.

CUG271.81-STRIP.DOC doc
Strip a new line from a string. Describes function which strips a new
line from a string. => SMTCS.LIB.

CUG271.82-STUFF.DOC doc
Describes function which gets equipment report (high level). =>
SMTCS.LIB, _STUFF.DOC.

CUG271.83-TCSERIAL.NUM doc
Serial Number for Steve's Turbo-C Library Version 1.31. => SMTCS.LIB.

CUG271.84-TESTEXP.C source
FUNCTION: expand_args function demonstration. This fire will
demonstrate the use of the expand args() function. It does nothing
more than report all the expanded functions. => SMTCS.LIB. [MS-DOS:
TC]

CUG271.85-TESTINTS.C source
Test Program for Interrupt Handler Functions. This program
demonstrates the installable interrupt service routines contained in
the ticker functions. => SMTCS.LIB, TICKER.DOC. [MS-DOS: TC]

CUG271.86-TEXTCOMP.C source
Text Compare Utility. This short utility compares two text files and
shows any line differences. => SMTCS.LIB. [MS-DOS: TC] As distributed,
this program requires (for compilation): "Steve's Turbo-C Library"
version 1.30 or later.

CUG271.87-TEXTCOMP.EXE executable
=> TEXTCOMP.C.

CUG271.88-TICKER.DOC doc
Describes the timer interrupt service routine package. => SMTCS.LIB,
TESTINTS.C.

CUG271.89-UNTAB.DOC doc
Describes function which expands the horizontal tabs to spaces. =>
SMTCS.LIB.

CUG271.90-VIDCOLOR.DOC doc
vid_border-set color; vid_palette-set color palett. Describes
functions which manipulate the CGA card, or EGA card in CGA color
mode. => SMTCS.LIB.

CUG271.91-VIDPAGE.DOC doc
Describes a function which sets a video page as active page. =>
SMTCS.LIB. This function will have no effect on the monochrome card.

CUG271.92-VIDPIXEL.DOC doc
vid_wrpix-write to screen; vid_rdpix-read from scr. Describes two
functions which manipulate the CGA card, or EGA card in CGA graphics
mode. => SMTCS.LIB. These functions do not support the extra modes of
the EGA or PGA adapters.

CUG271.93-VMODE.DOC doc
Describes a function which sets video mode. => SMTCS.LIB, SCREEN.H.

CUG271.94-WC.C source
Word Count Utility. => SMTCS.LIB. MS-DOS: TCI As distributed, this
program requires (for compilation): "Steve's Turbo-C Library" version
1.31 or later.

CUG271.95-WC.EXE executable
=> WC.C.

CUG271.96-WEEKDAY.DOC doc
Describes function which determines the day of the week from the date.
=> SMTCS.LIB.

CUG271.97-WKDAYNM.DOC doc
Describes a function which returns a pointer to name of day string. =>
SMTCS.LIB.

CUG271.98- GETDI.DOC doc
Describes function which gets device information for a file handle. =>
SMTCS.LIB. File handle, NOT file descriptor is required.

CUG271.99- STUFF.DOC doc
stuff--get equipment report (low level). Describes function which gets
equipment report (low level). => SMTCS.LIB STUFF.DOC.

==============================================================================
CUG272 -
-----------

Steven's Library for Datalight C By Steven E. Margison. [share2] 1
disk. See CUG271.

CUG272.01-AABORT.DOC doc
Describes function which terminates program. => SMDLS.LIB.

CUG272.02-ARGVAL.DOC doc
Argval--convert an ASCII numerical string from an. Describes a
function primarily intended to parse command line arguments containing
numerical values into an integer. => SMDLS.LIB. Numeric values cannot
exceed four characters without causing potential damage to the program
by overrunning the character storage area.

CUG272.03-ASYNC.DOC doc
Readchar, ready_rev, ready_xmt, setport, writechar. Describes very low
level (direct port access) subroutines to enable I/O through COM1
through COM4. Only setport () uses BIOS int 14H. => SMDLS.LIB
SMDEFS.H.

CUG272.04-BADEXT.DOC doc
Describes a function which reports invalid filename extension and
exits program. => SMTCS.LIB.

CUG272.05-BASENAME.DOC doc
Basename--split a string into path and/or filename. Describes a
function which splits a string into path and/or filename. =>
SMDLS.LIB.

CUG272.06-BLPR.DOC doc
Describes two assembly language routines,: blpr--write a character to
LPT? through BIOS 17H, blpstat--get LPT? status through BIOS
17H. => SMDLS.LIB. Because of this dependency upon the RAM-BIOS
internpt 17H, these routines may not work on all compatibles.

CUG272.07-CANT.DOC doc
Describes function which reports inability to open a file and exits
program. => SMDLS.LIB.

CUG272.08-CENTER.DOC doc
Describes function which centers a string. => SMDLS.LIB. The string
MUST NOT BE longer than the size specified, since there is no error
checking for this condition and an unusable result will be returned.

CUG272.09-CHKASYNC.DOC doc
chkded, chkdsr, chkcts, chkring. Describes assembly language functions
which provide direct access to the serial communications chips. =>
SMDLS.LIB, SMDEFS.H.

CUG272.10-CLRFIELD.DOC doc
clrfield--clear a screen field through BIOSdisp. Synopsis, description
and example of Functions which handle the problem of clearing a
section of a line on the screen without clearing to the end of the
line. Describes function which reports inability to open a file and
exits program. => SMDLS.LIB.

CUG272.11-CLS.DOC doc
Describes function which clears the screen and homes the cursor. =>
SMDLS.LIB.

CUG272.12-COMEXIT.DOX doc
common exit. Describes a function which terminates a program. =>
SMDLS.LIB.

CUG272.13-CRC.DOC doc
crc functions--crc misc. functions. Synopsis, description and example
of functions used in crc calculations mainly for modem programs: crc
clear(), clear crc value; crc update (crc,chr), update crc value; crc
finish (crc), finish crc calculation. => SMDLS.LIB. As supplied, the
CCITT calculation polynomial is used. The source can be easily changed
to CRC16 if desired.

CUG272.14-CRITERR.DOC doc
Describes a critical error handler installer. 4 SMDLS.LIB.

CUG272.15-CTLBRK.DOC doc
Describes a control break ( ^ C) interrupt handle. => SMDLS.LIB.

CUG272.16-CURSOR.DOC doc
cursor style--alter the cursor style. Synopsis, description and
example of function which allows selection of several pre-defined
cursor styles, or user-specified cursor size. => SMDLS.LIB.

CUG272.17-DAYNUM.DOC doc
Describes a function which finds the number of a date with a year. =>
SMDLS.LIB. Years below 1980 are ignored.

CUG272.18-DISPBOX.DOC doc
Describes a function used to display a box on the screen. =>
SMDLS.LIB. Functions may fail if the target system is not a very close
compatible since direct memory writing is being used. No error
checking is done on any value.

CUG272.19-DISPLAY.DOC doc
direct video functions. Synopsis, description and example of functions
using the features of Datalight's display package functions. =>
SMDLS.LIB. Functions may fail if the target system is not a very close
compatible since direct memory writing is being used. No error
checking is done on any value.

CUG272.20-DLSERIAL.NUM doc
Serial number for Steve's Datalight C Library version 1.30. =>
SMDLS.LIB.

CUG272.21-DSTR_I.DOC doc
Describes function which makes an ASCII decimal string into an
integer.

CUG272.22-DUMP.C source
Hex File Dump Utility. Displays any file in hex and character
representation in color or monochrome depending upon type of video
card installed. Displays 20 lines per screen and waits for a keypress.
=> SMDLS.LIB. [MS-DOS: DLC] As distributed, this program requires (for
compilation): "Steve's Datalight Library" version 1.10 later.

CUG272.23-DUMP.COM executable
=> DUMP.C.

CUG272.24-DUP.DOC doc
Describes function which duplicates a fine handle. => SMDLS.LIB.

CUG272.25-D_CLS.DOC doc
Describes function which clears current screen. => SMDLS.LIB.

CUG272.26-D_POS.DOC doc
Describes function which positions the cursor on a video page. =>
SMDLS.LIB.

CUG272.27-D_SAY.DOC doc
Describes two functions: d say--display a string at a specific
position, d_saypag--same, with page specification. => SMDLS.LIB.

CUG272.28-ENTERDAT.DOC doc
Describes two functions: enterdata--enter a string of data from
keyboard; disp_enterdata--same, use direct video access. => SMDLS.LIB.

CUG272.29-ENTERFN.DOC doc
Describes two functions: enterfn--enter a filename from keyboard;
disp_enterfn--same, use direct video access. => SMDLS.LIB.

CUG272.30-ERAOK.DOC doc
Describes function which asks permission before overwriting an
existing file. => SMDLS.LIB.

CUG272.31-ERROR.DOC doc
Describes function which reports a fatal error and exits. =>
SMDLS.LIB.

CUG272.32-EXISTS.DOC doc
Describes a function which checks to see if a specified file exists.
=> SMDLS.LIB.

CUG272.33-EXIT2DOS.DOC doc
Describes a function which asks permission to exit program. =>
SMDLS.LIB.

CUG272.34-EXTTYP.DOC doc
Describes function which checks a filename for a particular extension.
=> SMDLS.LIB.

CUG272.35-FILLCH.DOC doc
Describes a function which fills a string with a chosen character. =>
SMDLS.LIB.

CUG272.36-FLYER.TXT doc
Descriptions of SEM software, its availability and background. =>
SMDLS.LIB, ORDER.FRM.

CUG272.37-FOPENX.DOC doc
fopenp, fopend, fopeng. Synposis, description and example of functions
which allow the opening of a file in other than just the current
directory. These functions use file descripter structures. =>
SMDLS.LIB, OPENX.DOC. These functions cannot be used to create new
files.

CUG272.38-GAMEPORT.DOC doc
describes functions which manipulate gameport. => SMDLS.LIB.

CUG272.39-GETCODE.DOC doc
Synopsis, description and example of a function used to get the
absolute segment and offset values for the address of a function
within a program. It is useful for installing interrupt handlers and
interfacing to assembly language modules. => SMDLS.LIB.

CUG272.40-GETDATA.DOC doc
get data adr--get a data item address. Synopsis, description and
example of a function used to get the absolute segment and offset
values for the address of a data item within a program. It is useful
for installing interrupt handlers and interfacing to assembly language
modules. => SMDLS.LIB.

CUG272.41-GETFT.DOC doc
Describes function which gets file date/time stamp. => SMDLS.LIB.

CUG272.42-GETKEY.DOC doc
Description of extended keyboard fetch. => SMDLS.LIB.

CUG272.43-GETPATH.DOC doc
Describes function which retrieves PATH variable and parses it.
Description of extended keyboard fetch. => SMDLS.LIB.

CUG272.44-GETPOS.DOC doc
Describes function which gets current cursor position. => SMDLS.LIB.
Values are in binary.

CUG272.45-GRAPHICS.H header
extra defines for IBM Graphics Characters. => SMDLS.LIB.

CUG272.46-GTOD.C source
Get Time of Day Utility. Various date, time formatting functions. =>
SMDLS.LIB. [MS-DOS: DLC] As distributed, this program requires (for
compilation): "Steve's Datalight Library' version 1.10 or later.

CUG272.47-GTOD.COM executable
=> GTOD.C.

CUG272.48-GTODFUNC.DOC doc
Describes two functions: gtodsub--get time of day to file pointer;
gtodstr--get time of day to a string. => SMDLS.LIB.

CUG272.49-HBIT.DOC doc
Describes function which checks keyboard (stdin) for character
available. => SMDLS.LIB.

CUG272.50-HSTR_I.DOC doc
Describes function which makes an ASCI hexadecimal string into an
integer. SMDLS.LIB.

CUG272.51-IBMTYPE.DOC doc
Describes function which determines type of computer in use. =>
SMDLS.LIB. Inconsistencies in the byte in ROM at F000:FFFEh reduce the
accuracy of this function.

CUG272.52-INPATH.C doc
Inpath Utility. This is a program similar to many "filefind" programs,
except that it works like UNIX "whereis" command. => SMDLS.LIB.
[MS-DOS: DLC] As distributed, this program requires (for compilation):
"Steve's Datalight Library" version 1.10 or later.

CUG272.53-INPATH.COM executable
=> INPATH.C.

CUG272.54-IOBNBF.C source
Input/Output?.

CUG272.55-ISCONS.DOC doc
Describes function which checks if file description is the console. =>
SMDLS.LIB.

CUG272.56-ISLEAP.DOC doc
Describes function which checks if year is a leap year. => SMDLS.LIB.

CUG272.57-I_DSTR.DOC doc
Describes function which makes an integer from a decimal ASCII string.
=> SMDLS.LIB.

CUG272.58-KEYBOARD.DOC doc
Keyboard functions. Synopsis, description and example of functions
which manipulate the keyboard status flags at 0000:417 and 0000:418.
=> SMDLS.LIB.

CUG272.59-KEYS.H header
extra defines for keyboard operations. => SMDLS.LIB

CUG272.60-LEXCMP.DOC doc
Describes function which performs comparison on two strings, case
independent. => SMDLS.LIB.

CUG272.61-LISTALL data
List of files, used by PMAN.COM to generate manual to be printed to
PRN:. SMDLS.LIB, PMAN.COM.

CUG272.62-LOADSTR.DOC doc
Describes function which loads a string with padding. => SMDLS.LIB.

CUG272.63-MKBOX.DOC doc
Describes function which makes a box on the screen. => SMDLS.LIB.

CUG272.64-MKTONE.DOC doc
Describes a function which makes a tone to the speaker. => SMDLS.LIB.

CUG272.65-MONTHIS.DOC doc
Describes a function which returns a string pointer to name of month.
=> SMDLS.LIB.

CUG272.66-NEWEXT.DOC doc
Describes function which changes a filename extension. => SMDLS.LIB.

CUG272.67-OKISET.C source
Okidata Printer Set up Utility. => SMDLS.LIB. [MS-DOS: DLC] As
distributed, this program requires (for compilation): "Steve's
Datalight Library" version 1.10 or later.

CUG272.68-OKISET.COM executable

CUG272.69-ONEXIT.DOC doc
Describes a function which installs a common exit routine. =>
SMDLS.LIB.

CUG272.70-OPENS.DOC doc
openp,opend,openg. Synopsis, description and example of functions
which allow the opening of a file in other than just the current
directory. => SMDLS.LIB, FOPENX.DOC. These files cannot be used to
create new files.

CUG272.71-ORDER.FRM doc
Software Registration and Order Form. => SMDLS.LIB, FLYER.TXT.

CUG272.72-PMAN.COM executable
utility program provided to print all files specified in LISTALL to
PRN: for binding into a manual. => SMDLS.LIB, LISTALL. [MS-DOS: DLC]

CUG272.73-PRSERIES.DOC doc
Synopsis, description and example for a series of routines which use
the low level functions blpr() and blprstat() to access the LPT?
ROM-BIOS drives directly. SMDLS.LIB.

CUG272.74-README doc
Notes on differences and preliminary printouts for "Steve's Library
for Datalight C" version 1.30. => SMDLS.LIB.

CUG272.75-RELINK.DOC doc
Instructions on how to use batch files and library response files to
remake libraries. => SMDLS.LIB. Batch files and librarian response
files are only supplied with full registration.

CUG272.76-REPCHAR.DOC doc
Describes function which repeats a character n times to fd. =>
SMDLS.LIB.

CUG272.77-RMWHITE.DOC doc
rmlead, rmtrail, rmallws. Synopsis, description and example of
functions for removing whitespace from the specified string in place.
=> SMDLS.LIB.

CUG272.78-SCREEN.H header
Extra defines for screen handling operations. => SMDLS.LIB.

CUG272.79-SETASYNC.DOC doc
setdtr--set state of data terminal ready flag-. Synopsis, description
and example of assembly language functions which provide direct access
to the serial communications chips. => SMDLS.LIB.

CUG272.80-SMDEFS.H header
Extra defines for compiling programs by S. Margison. => SMDLS.LIB.

CUG272.81-SMDL.DOC doc
Steve's Datalight Library List of Functions. List of functions and
one-line descriptions. => SMDLS.LIB.

CUG272.82-SMDL.ORD doc
Software Registration Form and Order. => SMDLS.LIB.

CUG272.83-SMDLS.LIB library
Steve's Library for Datalight C. Small memory model library of over
100 functions for handling communication ports, printer, CRC, video,
time, date, sound, error interrupt, keyboard, etc. in Datalight C
(Extensively documented--see PMAN.COM). => DUMP.C, FLYER.TXT,
GRAPHICS.H, GTOD.C, INPATH.C, IOBNBF.C, KEYS.H, OKISET.C, PMAN.COM,
SCREEN.H, SMDEFS.H, SMDL.TOC, SOUND.H, TC.C TESTINTS.C, WC.C. [MS-DOS:
DLC]

CUG272.84-SMLIBDL.DOC doc
Information for "Steve's Library for Datalight" regarding
documentation, installation linking, real time interrupt handler,
video functions, utilities, shareware, warranty and registration. =>
SMDLS.LIB.

CUG272.85-SOUND.DOC doc
soundon--turn on the speaker; soundoff--turn off. Synopsis and
description of very low level functions to manipulate the speaker port
control. => SMDLS.LIB.

CUG272.86-SOUND.H header
defines for IBM speaker control. => SMDLS.LIB.

CUG272.87-STRIP.DOC doc
describes a function which strips a newline from a string. =>
SMDLS.LIB.

CUG272.88-STUFF.DOC doc
Describes function which gets equipment report (high level). =>
SMDLS.LIB.

CUG272.89-TC.C source
Text Compare Utility. This short utility compares two text files and
shows any line differences. => SMDLS.LIB. [MS-DOS: DLC] As
distributed, this program requires (for compilation): "Steve's
Datalight Library' version 1.10 or later.

CUG272.90-TC.COM executable
=> TC.C.

CUG272.91-TESTINTS.C source
Test Program for Interrupt Handler Functions. This program
demonstrates the installable interrupt service routines contained in
the ticker functions. => SMDLS.LIB. [MS-DOS: DLC]

CUG272.92-TICKER.DOC doc
Describes timer interrupt service routine package. => SMDLS.LIB,
TESTINTS.C.

CUG272.93-VIDCOLOR.DOC doc
vid_border--set border color; vid_palette-set. Synopsis, description
and example of functions which manipulate the CGA card, or EGA card in
CGA color mode. =>SMDLS.LIB.

CUG272.94-VIDPAGE.DOC doc
describes function which sets a video page as active page. =>
SMDLS.LIB. This function will have no effect on the monochrome card.

CUG272.95-VIDPIXEL.DOC doc
vid_wrpix--write a pixel to the screen;vid_rdply a. Synopsis,
description and example of functions which manipulate the CGA card, or
EGA card in CGA graphics mode. => SMDLS.LIB. These functions do not
support the extra modes of the EGA or PGA adapters.

CUG272.96-VMODE.DOC doc
Describes function which sets video mode. => SMDLS.LIB, SCREEN.H.

CUG272.97-WC.C source
Word Count Utility. => SMDLS.LIB. [MS-DOS: DLC] As distributed, this
program requires (for compilation): "Steve's Datalight Library'
version 1.10 later.

CUG272.98-WC.COM executable
=> WC.C.

CUG272.99-WEEKDAY.DOC doc
Describes function which determines the day of the week from the date.
=> SMDLS.LIB.

CUG272.100-WKDAYNM.DOC doc
Describes a function which returns a pointer to name of day string. =>
SMDLS.LIB.

CUG272.101- GETDI.DOC doc
Describes function which gets device information for file handle. =>
SMDLS.LIB. file handle, NOT file descriptor is required.

CUG272.102- STUFF.DOC doc
Describes function which gets equipment report (low level). =>
SMDLS.LIB.

==============================================================================
CUG273 -
-----------

Turbo C Utilities
By James Derr. [share1] 1 disk. This collection of Turbo C Utilities
includes 75 functions for generating sound, drawing boxes,
manipulating windows, making shadows, controlling video I/O, etc. This
volume is a shareware distribution, including all source code as well
as the small model
library. Inline assembly code is used in some functions.

CUG273.01-BEEP.CC source
Sounds the speaker using specified pitch and number of ticks. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.02-BOX.CC source
Draws a specified box with center and border attributes specified. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.03-CALCTOT.CC source
Accepts a valid pathname and returns the total number of bytes
occupied by all files in the specified directory. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.04-CCOLOR.CC source
This routine will change the color attributes of a column of
characters. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.05-CHGTO.CC source
Change_to. Changes the current disk drive and directory with one cell.
=> TCUTILS.LIB. [MS-DOS: TC]

CUG273.06-CLR.CC source
Clear the screen using the attribute passed. => TCUTILS.LIB. [MS-DOS:
TC]

CUG273.07-CLRAREA.CC source
Clears a portion of the screen using the passed attribute. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.08-CLRBOX.CC source
Clears the area inside the box built by the BOX function to the
specified attribute. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.09-CLREOL.CC source
This will clear from the current cursor location the end of the line.
=> TCUTILS.LIB. [MS-DOS: TC]

CUG273.10-COMPALL.BAT batch
Batch file to compile all source code for Turbo C utilities. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.11-CURDN.CC source
Moves the cursor down one run. This will wrap the cursor to the top of
the screen if the cursor is on the last row. TCUTILS.LIB. [MS-DOS: TC]

CUG273.12-CURLF.CC source
Move the cursor one col to the left. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.13-CURNL.CC source
Moves the cursor to the beginning of the next row. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.14-CURRT.CC source
Moves the cursor one column to the right. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.15-CURUP.CC source
Move the cursor one row up. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.16-FILEXIST.CC source
Checks to see if a file exists. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.17-FINDFILE.CC source
Searches a disk for a specified file. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.18-FLUSHKEY.CC source
Flushes the keyboard buffer. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.19-GETAKEY.CC source
Waits until a character in a specified list is pressed. Sets a
variable to the upper case value of the key pressed. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.20-GETATTR.CC source
Gets the attribute at a specified row and column. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.21-GETCA.CC source
get_ca (char *ch, char *scan). Reads a keystroke. ch = character code
or zero if extended code, scan = extended code or scan code. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.22-GETCHARS.CC source
leng character screen placement. Reads n-length characters from the
screen at the location specified by row, col and will place the
characters (not the attr bytes) into the string pointed to by *string.
=> TCUTILS.LIB. [MS-DOS: TC]

CUG273.23-GETCUR.CC source
get_cur (int *row, int *col). Returns the current cursor location into
row, col. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.24-GETFIELD.CC source
Provides for formatted field input capability. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.25-GETFSIZE.CC source
Returns the filesize of a file. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.26-GETLDATE.CC source
get long date. Gets the current date. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.27-GETLINE.CC source
Reads a string from the screen starting at the current cursor position
with specified string length, display area length, and display
attribute. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.28-GETLINEX.CC source
Reads a string from the screen with specified starting location,
string length, display area length, destination string, and display
attribute. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.29-GETXA.CC source
Reads a keystroke. Returns int value of ASCII code or scan code +256
for extended key. => TCUTILS.LIB, TCUTILS.H. [MS-DOS: TC]

CUG273.30-HIDECUR.CC source
Turns the cursor off. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.31-INDEX.CC source
Returns a pointer to the first occurrence of c in a specified string,
or NULL for no occurence. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.32-LEFTSTR.CC source
Places a specified number of leftmost characters from one string into
another. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.33-LOCATE.CC source
Positions the cursor at a specified location. => TCUTILS.LIB. [MS-DOS:
TC]

CUG273.34-MAKEWIND.CC source
Makes a window of specified upper left and lower right coordinates,
window and border attributes, title, and footer. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.35-MELT.CC source
Clears the screen in one of various predefined styles and sets new
specified attributes. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.36-MIDSTR.CC source
Extracts a specified number of characters from a specified string at a
specified starting point and places them in another string.
TCUTILS.LIB. [MS-DOS: TC]

CUG273.37-PARSEFN.CC source
Parses and breaks apart a chosen filespec. => TCUTILS.LIB. [MS-DOS:
TC]

CUG273.38-PRINTER.CC source
Initializes the printer identified by Iptnum. => TCUTILS.LIB. [MS-DOS:
TC]

CUG273.39-PUTCA.CC source
Puts the specified character and attribute on the screen at the
current cursor location. TCUTILS.LIB. [MS-DOS: TC]

CUG273.40-PUTSA.CC source
put_sa (char *ch, int attr). This will put the character string
pointer to by *ch on the screen at the current cursor location using
attribute attr. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.41-RCOLOR.CC source
Changes the color attribute of a row of characters. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.42-RESTSCR.CA source
Restores an area of the current screen that was saved via save_scr. =>
TCUTILS.LIB. [MS-DOS: TC] Uses inline Assembly code.

CUG273.43-RIGHTSTR.CC source
Places a specified number of rightmost character from one string into
another. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.44-SAVESCR.CA source
Saves an area the current screen into a character array. =>
TCUTILS.LIB. [MS-DOS: TC] Uses inline Assembly code.

CUG273.45-SCROLLDN.CC source
Scrolls a defined window down x number of lines. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.46-SCROLLLF.CC source
Scrolls a defined window left x number of columns. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.47-SCROLLRT.CC source
Scrolls a defined window right x number of columns. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.48-SCROLLUP.CC source
Scrolls a defined window up x lines. TCUTILS.LIB. [MS-DOS: TC]

CUG273.49-SETMODE.CC source
This will set the video mode to the mode passed. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.50-SHADOW.CC source
Creates the illusion of shadow under a specified window. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.51-SHOWCUR.CC source
Makes the cursor visible. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.52-SOUNDX.CC source
Calculates the soundx code of a string. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.53-SREADA.CA source
Reads the attribute at a specified location and applies it to another.
=> TCUTILS.LIB. [MS-DOS: TC] Includes inline Assembly code.

CUG273.54-SREADC.CA source
Takes a character at a specified location and places it into a
specified area. => TCUTILS.LIB. [MS-DOS: TC] Includes inline Assembly
code.

CUG273.55-SREADCA.CA source
Reads the character and attribute at a specified location and places
them into a specified string. => TCUTILS.LIB. [MS-DOS: TC] Includes
inline Assembly code.

CUG273.56-SSTRLF.CC source
Shifts a string left x characters. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.57-SSTRRT.CC source
Shifts a string right x characters. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.58-STRIDEL.CC source
Deletes a sub string from a string, ignoring case. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.59-STRIP.CC source
Strip (char *str, char c). This will string all occurences of char c
out of string pointed to by *str. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.60-STRIPRNG.CC source
Strip range (char *str, char clo, char chi). This will strip all
occurances of the characters that fall between char clo and chi out of
the string pointed to by *str. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.61-STRXFORM.CC source
Transforms all occurances of a specified character within a string to
a chosen replacement character. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.62-SWRITEA.CA source
Writes an attribute at a chosen location. => TCUTILS.LIB. [MS-DOS: TC]
Includes inline assembly code.

CUG273.63-SWRITEC.CA source
Does a direct video write of a character at a chosen location with a
chosen attribute. => TCUTILS.LIB. [MS-DOS: TC] Includes inline
assembly code.

CUG273.64-SWRITECA.CA source
Does a direct video write at a chosen location of the character *area.
=> TCUTILS.LIB. [MS-DOS: TC] Includes inline assembly code.

CUG273.65-TCMENU.CC source
Displays a menu bar at the top of the screen. => TCUTILS.LIB,
TCMENU.H. [MS-DOS: TC]

CUG273.66-TCMENU.H header
Two menu structure definitions requiring setup for TCMENU. =>
TCUTILS.LIB, TCMENU.CC.

CUG273.67-TCUTIL.DOC doc
Background information and brief descriptions of functions and disk
contents for Turbo C Utilities. => TCUTILS.LIB.

CUG273.68-TCUTIL.H header
Header file definitions required by TCUTIL routines. => TCUTILS.LIB.

CUG273.69-TCUTILS.LIB library
Turbo C Utilities. Small model library of 75 functions for generating
sound, drawing boxes, manipulating windows, making shadows,
controlling video 1/0, etc. => COMPALL.BAT, TCMENU.H, TCUTIL.DOC
TCUTIL.H, *.CA, *.CC. [MS-DOS: TC] Inline assembly code is used in
some functions.

CUG273.70-TESTNUM.CC source
test_numeric (char *str). Tests character string for numeric. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.71-TRIML.CC source
Trims all blanks from the left side of a string. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.72-TRIMR.CC source
Trims all blanks from the right side of a string. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.73-UPCASE.CC source
Converts a string to uppercase. TCUTILS.LIB. [MS-DOS: TC]

CUG273.74-VALIDATE.CC source
This function will validate a character field for valid values. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.75-VIDEOTYP.CC source
Determines the video type of the display. TCUTILS.LIB. [MS-DOS: TC]

CUG273.76-WRITEF.CA source
Does a direct video write at a chosen location with specified
attributes. => TCUTILS.LIB. [MS-DOS: TC] Includes inline assembly
code.

CUG273.77-WRITEFC.CA source
Writes a character with chosen attribute. TCUTILS.LIB. [MS-DOS: TC]
Includes inline assembly code.

CUG273.78-WRITEFN.CA source
Writes a string of characters with count character control. =>
TCUTILS.LIB. [MS-DOS: TC] Includes inline assembly code.

CUG273.79-WRITETTY.CC source
write_tty (char _ch). This will put the character string pointer to by
*ch on the screen at the current cursor location using attribute attr.
=> TCUTILS.LIB. [MS-DOS: TC]

CUG273.80-XPRINTF.CC source
Provides for fast formatted output to video screen. => TCUTILS.LIB.
[MS-DOS: TC]

==============================================================================
CUG274 -
-----------

Arrays for C
By James P. Cruse. [share1] 1 disk. Arrays for C is a shareware
package that facilitates the handling of arrays in C. The package
includes a wide variety of routines: filling, adding, subtracting,
calling functions on each element, scaling by constants, etc. All are
implemented as code macros (#defines), and use a uniform naming
convention. The routines are very portable and have been tested with
several compilers including Microsoft C v5.0, Turbo C v1.5 and Aztec
v3.40b.
The disk contains source code, documentation, and sample programs. For
more details see the narrative description of this package in Section
2.

CUG274.01-ARRAY.ART doc
Article on Arrays for C. Introduction, overview, usage, and quick
summary of "Arrays for C" functions. Also describes example routines
and customization options provided. => ARRAY.H.

CUG274.02-ARRAY.DOC doc
Background, registration information, planned development, breakdown
and description of functions in Arrays for C. ARRAY.H.

CUG274.03-ARRAY.H header
Includes details on compiler dependent options, customization as well
as header defines for such. => A_INFO.H, A_BINOP.H, A_FILL.H,
A_UNOP.H, A_TESTAL.C, A_TESTF.C, A_TESTI.C. [MS-DOS: MSC5, TC1.5]

CUG274.04-ARRAY.SUM doc
Summary of Arrays for C. General description of array handling
package. => ARRAY.H.

CUG274.05-A_BINOP.H header
Declares all binary operations. => ARRAY.H.

CUG274.06-A_FILL. H header
Declares all the various fill operations. ARRAY.H.

CUG274.07-A_INFO. H header
Declares all information operations: sum, product, minimum, maximum,
and minimax. => ARRAY.H.

CUG274.08-A_TESTAL.C source
Tests all array functions. => ARRAY.H. [MS-DOS: MSC5, TC1.5]

CUG274.09-A_TESTF.C source
Tests using floating point operations. ARRAY.H. [MS-DOS: MSC5, TC1.5]

CUG274.10-A_TESTI.C source
Tests using integer operations. => ARRAY.H. [MS-DOS: MSC5, TC1.5]

CUG274.11-A_UNOP.H header
Declares all unary operations. => ARRAY.H.

==============================================================================
CUG275 -
-----------

Linear Cellular Automata 11
By Harold Mclntosh, Gerardo Cisneros. [public] 2 disks. This volume is
a sequel to CUG244 deBruijn, CUG245 Linear Cellular Automata, and
CUG246 Cycles. Harold V. McIntosh and Geraldo Cisneros of Puebla,
Mexico, continue to explore linear cellular automata building upon
ideas from the article "Abstract Mathematical Art" by Kenneth E. Perry
(December, '86 Byte). New features include general (not just
totalistic) rules, probabilities of groups of cells and graphical
presentation of deBruijn diagrams. The disk contains source code for
Wizard C, documentation, and executable code.

CUG275.01-LCA22.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (2,2) Linear Cellular Automaton.
Demonstrates two states second neighbors two on each side, five
altogether. LCAU.DOC. [MS-DOS]

CUG275.02-LCA23.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (2,3) Linear Cellular Automaton.
Demonstrates two states third neighbors three on each side, seven
altogether. => LCAU.DOC. [MS-DOS]

CUG275.03-LCA32.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (3,2) Linear Cellular Automaton.
Demonstrates three states second neighbors - two on each side, five
altogether. => LCAU.DOC. [MS-DOS]

CUG275.04-LCA33.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (3,3) Linear Cellular Automaton.
Demonstrates three states third neighbors three on each side, seven
altogether. => LCAU.DOC. [MS-DOS]

CUG275.05-LCA42.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (4,2) Linear Cellular Automaton.
Demonstrates four states second neighbors two on each side, five
altogether. => LCAU.DOC. [MS-DOS]

CUG275.06-LCA43.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (4,3) Linear Cellular Automaton.
Demonstrates four states third neighbors three on each side, seven
altogether. => LCAU.DOC. [MS-DOS]

CUG275.07-LCAU.DOC doc
By Harold McIntosh. Describes this disk supplement to "LCA.C" which
was released in 1987. Describes extensive additions and
demonstrations, menu options. New features include general (not just
totalistic) rules to analyze, cell densities and block probabilities,
and graphical presentation of de Bruijn diagrams. => LCAXX.EXE,
LCAUXX.C, LCAUXX.EXE, PROBXX.C, RIJNXX.C. [MS-DOS]

CUG275.08-LCAU.TEX doc
By Harold McIntosh. Essentially same as LCAU.DOC but with additional
enumeration. Contains TEX formatting instructions. => LCAU.DOC.

CUG275.09-LCAU21.C source
By Harold Mclntosh, Gerardo Cisneros. (2,1 ) Linear Cellular
Automaton. Demonstrates two states first neighbors one on each side,
three altogether. => LCAU.DOC. [MS-DOS: WIZARDC]

CUG275.10-LCAU21.EXE executable
By Harold Mclntosh, Gerardo Cisneros. => LCAU21.C.

CUG275.11-LCAU22.C source
By Harold Mclntosh, Gerardo Cisneros. (2,2) Linear Cellular Automaton.
Demonstrates two states; second neighbors two on each side, five
altogether; with many memo/editing options. => LCAU.DOC. [MS-DOS:
WIZARDC]

CUG275.12-LCAU22.EXE executable
By Harold Mclntosh, Gerardo Cisneros. => LCAU22.C.

CUG275.13-LCAU31.C source
By Harold Mclntosh, Gerardo Cisneros. (3,1) Linear Cellular Automaton.
Demonstrates three states; first neighbors one on each side, three
altogether; with many memo/editing options. => LCAU.DOC. [MS-DOS:
WIZARDC]

CUG275.14-LCAU31.EXE executable
By Harold McIntosh, Gerardo Cisneros. => LCAU31.C.

CUG275.15-LCAU41.C source
By Harold McIntosh, Gerardo Cisneros. (4,1) Linear Cellular Automaton.
Demonstrates four states; first neighbors one on each side, three
altogether; with many menu/edit options. => LCAU.DOC. [MS-DOS:
WIZARDC]

CUG275.16-LCAU41.EXE executable
By Harold McIntosh, Gerardo Cisneros. => LCAU41.C.

CUG275.17-PROB21.C source
By Harold McIntosh, Gerardo Cisneros. Program for LCAU21 option t.
Calculates probabilities related to evolution. => LCAU.DOC, LCAU21.C.
[MS-DOS: WIZARDC]

CUG275.18-PROB22.C source
By Harold McIntosh, Gerardo Cisneros. Program for LCA22 option 6.
Calculates probabilities related to evolution. LCAU.DOC, LCA22.EXE.
[MS-DOS: WIZARDC]

CUG275.19-PROB31.C source
By Harold McIntosh, Gerardo Cisneros. Program for LCA31 option t.
Calculates probabilities related to evolution. => LCAU.DOC, LCAU31.C.
[MS-DOS: WIZARDC]

CUG275.20-PROB41.C source
By Harold McIntosh, Gerardo Cisneros. Program for LCAU41 option t.
Calculates probabilities related to evolution. => LCAU.DOC, LCAU41.C.
[MS-DOS: WIZARDC]

CUG275.21-READ.ME doc
By Harold McIntosh, Gerardo Cisneros. Cover page. => LCAU.DOC.

CUG275.22-RIJN21.C source
By Harold Mclntosh, Gerardo Cisneros. Program for LCAU21 option d.
displays de Bruijn diagrams -1st, 2nd & 3rd generation. => LCAU.DOC,
LCAU21.C. [MS-DOS: WIZARDC]

CUG275.23-RIJN22.C source
By Harold Mclntosh, Gerardo Cisneros. Program for LCAU22 option d.
displays de Bruijn diagrams -1st, 2nd & 3rd generation. => LCAU.DOC,
LCAU22.C. [MS-DOS: WIZARDC]

CUG275.24-RIJN31.C source
By Harold Mclntosh, Gerardo Cisneros. Program for LCA31 option d.
displays de Bruijn diagrams -1st, 2nd & 3rd generation. => LCAU.DOC,
LCAU31.C. [MS-DOS: WIZARDC]

CUG275.25-RIJN41.C source
By Harold Mclntosh, Gerardo Cisneros. Program for LCA41 option d.
displays de Bruijn diagrams- 1st, 2nd & 3rd generation. => LCAU.DOC,
LCAU41.C. [MS-DOS: WIZARDC]

==============================================================================
CUG276 -
-----------

Z80 and 6804 cross assemblers
By William C. Colley, III. [public] 1 disk. Will Colley can't stop
cross-assembling portably. He has now submitted cross-assemblers for
Zilog Z80 and Motorola 6804 processors. The new disk contains the
source code as well as very well-written manuals. The assemblers are
written in portable C and will compile under any full-featured C
compiler including Aztec C86, Aztec II, CI-C86, Ec0-C88, HP-UX,
Lattice C, Microsoft C, and QNIX C. Subset compilers such as Toolworks
C and BDS C pose a problem. For reference, here's a list of various
cross-assemblers Colley has contributed.
| CUG149      Motorola     6800, 6801 |             RCA          1802,
1805A |             Motorola     6805 Family | CUG219      Intel      
8048, 8049 |             Rockwell     6502 |             Rockwell    
65C02 | CUG242      Motorola     68HC11 Family |             Hitachi  
6301 Family |             Intel        8051 | CUG267      Intel       
8080, 8085 |             Signetics    2650 |             STM
Microelectronics S6 Family | CUG276      Zilog        Z-80 |          
Motorola     6804 Family.

CUG276.01-A16.C source
PIC1650 Cross-Assembler (Portable). Assembles code for the General
Instruments PIC1650 family microprocessors. => A16.H, A16EVAL.C,
A16UTIL.C, TEST16A.ASM. [QNIX, PCDOS, HP-UX, CP/M-86, CP/M-80, MS-DOS:
AZTEC Cll, AZTEC C86, MSC, ECO-C, LC, QNIX C, C186] All assembler
features are supported except relocation, linkage, and macros. A port
to 13PS C would be extremely difficult. A port to Toolworks C is
untried.

CUG276.02-A16.DOC doc
PIC1650 Cross-Assembler (Portable). Simple header documentation. =>
A16.C.

CUG276.03-A16.H header
PIC1650 Cross-Assembler (Portable). Contains global constants and data
type definitions for all modules of the cross-assembler. Also
compilation and linkage instructions. => A16.C.

CUG276.04-A16EVAL.C source
PIC1650 Cross-Assembler (Portable). Contains the assembler's
expression evaluator and lexical analyzer. => A16.C.

CUG276.05-A16UTIL.C source
PIC1650 Cross-Assembler (Portable). This module contains utility
packages for symbol table building and searching, opcode and operator
table searching, listing file output, hex file output, and error
flagging. => A16.C.

CUG276.06-A684.C source
6804 Cross-Assemble (Portable). Assembles code for the Motorola 6804
family microprocessors. => A684.H, A684UTIL.C, TEST684.ASM,
A684EVAL.C. [QNIX, PCDOS, HP-UX, CP/M-86, CP/M-80, MS-DOS: AZTEC Cll,
AZTEC C86, MSC, ECO-C, LC, QNIX C, CI86] All assembler features are
supported except relocation, linkage, and macros. Subset compilers
such as Toolworks C and BDS C will present substantial difficulties.

CUG276.07-A684.DOC doc
6804 Cross-Assembler (Portable). Header documentation. => A684.C.

CUG276.08-A684.H header
6804 Cross-Assembler (Portable). Contains global constants and data
type definitions for all modules of the cross-assembler. Also
compilation and linkage instructions. => A684.C.

CUG276.09-A684EVAL.C source
6804 Cross-Assembler (Portable). Contains the assembler's expression
evaluator and lexical analyzer. => A684.C.

CUG276.10-A684UTIL.C source
6804 Cross-Assembler (Portable). This module contains utility packages
for symbol table building and searching, opcode and operator table
searching, listing file output, hex file output, and error flagging.
=> A684.C.

CUG276.11-AZ80.C source
Z-80 Cross-Assembler (Portable). Assembles code for the Z-80 and
NSC800 families if microprocessors. => AZ80.H, AZ80EVAL.C, AZ80UTIL.C,
TESTZ80.ASM. [QNIX, PCDOS, HP-UX, CP/M-86, CP/M-80, MS-DOS: AZTEC Cll,
AZTEC C86, MSC, ECO-C, LC, QNIX C, CI86] All assembly features are
supported except relocation, linkage, and macros. A port to BDS C
would be extremely difficult. A port to Toolworks C is untried.

CUG276.12-AZ80.DOC doc
Z-80 Cross-Assembler (Portable). Simple header documentation. =>
AZ80.C.

CUG276.13-AZ80.H header
Z-80 Cross-Assembler (Portable). Contains global constants and data
type definitions for all modules of the cross-assembler. Also
compilation and linkage instructions. => AZ80.C.

CUG276.14-AZ80EVAL.C source
Z-80 Cross-Assembler (Portable). Contains the assembler's expression
evaluator and lexical analyzer. => AZ80.C.

CUG276.15-AZ80UTIL.C source
Z-80 Cross-Assembler (Portable). This module contains utility packages
for symbol table building and searching, opcode and operator table
searching, listing file output, hex file output, and error flagging.
=> AZ80.C.

CUG276.16-READ.ME5 doc
Can't Stop Cross-Assembling Portably. General introduction for the
6804, PIC1650, and Z-80 cross-assemblers. => AZ80.C, A684.C, A16.C.

CUG276.17-TEST16A.ASM source
This file contains the opcodes of the PIC16C52 CPU in numerical order
for testing the portable PIC1650 cross-assember. Part 1 of 3. => A16.C
TEST16B.ASM, TEST16C.ASM.

CUG276.18-TEST16B.ASM source
Continuation of TEST16A.ASM. Part 2 of 3. => A16.C, TEST16A.ASM,
TEST16C.ASM.

CUG276.19-TEST16C.ASM source
Continuation of TEST16A.ASM. Part 3 of 3. => A16.C, TEST16A.ASM,
TEST16B.ASM.

CUG276.20-TEST684.ASM source
Test file containing the MC68HC04's Opcodes in numerical order. =>
A684.C.

CUG276.21-TESTZ80.ASM source
Z-80 Opcodes in Alphabetical order. This file is used to test the Z-80
cross-assembler. => AZ80.C.

==============================================================================
CUG277 -
-----------

HP Plotter Library and Xmodem
[mixed] 1 disk. Ronald Florence (CT) has contributed a plotter program
and Xmodem program. The plotter program, hp (for Hewlett-Packard),
includes features to read and decode Tektronics format files and
Accu-Weather maps, as well as the ability to read HPGL files or files
of integer or floating point data. The program is written for
UNIX/XENIX systems, and includes checks for locks on the serial line,
code to lock and condition the serial line, and signal control. The
Xmodem program can be compiled as either a standalone
program to allow a UNIX/XENIX system to send and receive files using
the Xmodem protocol, or as a modification to the cu program for users
who have source code licenses. This volume also includes the HPGL-Clib
library, a shareware package (source code is included) submitted by
TerrAqueous Software. This Libras of C functions for the HPGL Plotter
includes support for the IO_tech MICRO488 Bus Controller. Source code
included.

CUG277.01-BIO doc
By Ronald Florence. Capsule biography of author.

CUG277.02-DEMO.C source
By TerrAqueous Software. Demo for HPGL-Clib. => HPGL.C, DEMO.OBJ,
DEMO.EXE.

CUG277.03-DEMO.EXE executable
By TerrAqueous Software. => DEMO.C.

CUG277.04-DEMO.OBJ object
By TerrAqueous Software. => DEMO.C.

CUG277.05-HP.C source
By Ronald Florence. Output driver for HP7470A plotter. Plotter
program, including features to read and decode tektronics format files
and Accu-weather maps, as well as to read HPGL files or files of
integer or floating point data points. => HP.MK. [UNIX/XENIX]

CUG277.06-HP.MK make
By Ronald Florence. Make file or compiling HP.C. => HP.C.

CUG277.07-HPGL.C source
By TerrAqueous Software. Hewlett-Packard Graphics Language C Library.
Sharewave package including support for the IO-tech MICRO488 Bus
Controller. => HPGL.H, DEMO.C, RSIH.COM. [UNIX/XENIX]

CUG277.08-HPGL.H header
By TerrAqueous Software. defines for HPGL-Clib. => HPGL.C.

CUG277.09-MAKEFILE make
By Ronald Florence. For compiling XMODEM. => XMODEM.C.

CUG277.10-README doc
By TerrAqueous Software. Brief explanations of HPGL package files.
HPGL.C.

CUG277.11-RSIH.COM executable
By TerrAqueous Software. A Resident Serial Input Handler for using
fgets on the COM1 port. => HPGL.C.

CUG277.12-TEK4.H header
By Ronald Florence. Global constants and type definitions to used with
TEKDECOD.C. => TEKDECOD.C.

CUG277.13-TEKDECOD.C source
By Ronald Florence. converts TEK 4014 picture files. => TEK.H, HP.C.
[UNIX/XENIX]

CUG277.14-XMODEM.C source
By Ronald Florence. Module written to be compiled with a modified
version of CU.C and/or with XR.C, providing XMODEM protocol
capabilities to XENIX[UNIX machines. => XMODEM.DOC, XR.C MAKEFILE.
[UNIX/XENIX]

CUG277.15-XMODEM.DOC doc
By Ronald Florence. XMODEM under XENIX[UNIX. Options, instructions and
descriptions of XMODEM operations. => XMODEM.C.

CUG277.16-XR.C source
By Ronald Florence. Remote XMODEM functions for XENIX[UNIX. =>
XMODEM.C.

==============================================================================
CUG278 -
-----------

CXL v5.1
By Mike Smedley. [share2] 3 disks. The CXL (C extended function
Library) is a shareware package. Our distribution consists of the
documentation, demo, header files, and the small model libraries for
Turbo C, Microsoft C/Quick C and Zortec C/C++. CXL provides over 260
functions including: multiple and overlapping windows; pop-up,
pull-down, and Lotus-style menus; multi-field and formatted data
entry; EGA 43 and VGA 50-line modes; DESQview compatibility, mouse
functions, EMS functions, keyboard handling, advanced string
manipulation, context sensitive help and error handling, date and time
formatting, equipment detection, pattern matching, data encryption,
printing functions, and sound functions.

CUG278.01-CXL.DOC doc
By Mike Smedley. The C Programmers Extended Function Library. Info for
CXL supplement to standard run-time library. => CXLMSS.LIB,
CXLTCS.LIB, CXLZTS.LIB, CXLDEF.H, CXLEMS.H, CXLKEY.H CXLMOU.H,
CXLPRN.H, CXKSTR.H CXLUID.H, CXLWIN.H, SFD.EXE, KEYCODE.COM,
MAKINDX.COM, CXLQREF.DOC, CXLDEMO.C. [MS-DOS: TC, MSC, QUICKC, ZORTECH
C/C++]

CUG278.02-CXLDEF.H header
By Mike Smedley. Miscellaneous function prototypes and definitions. =>
CXL.DOC.

CUG278.03-CXLDEMO.ASC doc
By Mike Smedley. CXLDEMO - ASCII source help file. This file contains
all the help text used in the CXL demonstration program. => CXL.DOC,
CXLDEMO.C.

CUG278.04-CXLDEMO.C source
By Mike Smedley. CXL Demonstration Program. => CXL.DOC, CXLDEMO.ASC,
CXLDEMO.ESE, CXLDEMO.HLP.

CUG278.05-CXLDEMO.EXE executable
By Mike Smedley. => CXLDEMO.C.

CUG278.06-CXLDEMO.HLP data
By Mike Smedley. CXLDEMO indexed help file. This file contains all the
help text used in the CXL demonstration program. CXLDEMO.C.

CUG278.07-CXLEMS.H header
By Mike Smedley. Contains prototypes of CXL's Expanded Memory
Specification (EMS) functions. => CXL.DOC.

CUG278.08-CXLKEY.H header
By Mike Smedley. Contains function prototypes and definitions for
keyboard functions. => CXL.DOC, CXLWIN.H.

CUG278.09-CXLMOU.H header
By Mike Smedley. Contains function prototypes and definitions for
Microsoft compatible mouse functions. => CXL.DOC.

CUG278.10-CXLMSS.LIB library
By Mike Smedley. Small MEMORY Model C extended function Library. =>
CXL.DOC. [MSC5, QUICKC]

CUG278.11-CXLPRN.H header
By Mike Smedley. Contains function prototypes and definitions for
printer functions. => CXL.DOC.

CUG278.12-CXLQREF.DOC doc
By Mike Smedley. CXL Quick Reference. Two-line synopsis/descriptions
of each function, grouped by respective header file. => CXL.DOC.

CUG278.13-CXLSTR.H header
By Mike Smedley. Contains function prototypes and definitions for
string manipulating functions. => CXL.DOC.

CUG278.14-CXLTCS.LIB library
By Mike Smedley. Small MEMORY Model C extended function Library. =>
CXL.DOC. [TC2.0]

CUG278.15-CXLVID.H header
By Mike Smedley. Contains function prototypes and definitions for
screen/video functions. => CXL.DOC.

CUG278.16-CXLWIN.H header
By Mike Smedley. Contains function prototypes and definitions for
windowing functions. => CXL.DOC.

CUG278.17-CXLZTS.LIB library
By Mike Smedley. Small memory Model C extended function Library. =>
CXL.DOC. [ ZORTECHC]

CUG278.18-HISTORY.DOC doc
By Mike Smedley. CXL Revision History. Extensive revision
documentation dating back to July 27, 1988 (Initial release of CXL).
=> CXL.DOC.

CUG278.19-KEYCODE.COM executable
By Mike Smedley. Utility that gets the keycode of a keypress. =>
CXL.DOC.

CUG278.20-MAKEINDX.COM executable
By Mike Smedley. Program used to create indexed help files. =>
CXL.DOC.

CUG278.21-READ.CXL doc
By Mike Smedley. Information on two distribution archive files,
including detailed breakdown of these archives, compilers used, &
systems from which current version of CXL can be downloaded. =>
CXL.DOC.

CUG278.22-READ.SFD doc
By Kamran Bayegan. Screen and Form Designer. Manual for SFD, including
switches, menu hierarchy & notes, and registration form. => SFD.EXE.

CUG278.23-REGISTER.DOC doc
By Mike Smedley. CXL Registration Form. => CXL.DOC.

CUG278.24-SFD.EXE executable
By Kamran Bayegan. Screen and Form Designer. Supplement to CXL to help
design compatible screens and forms. Generates C code and ENVironment
file. => CXL.DOC, READ.SFD.

CUG278.25-UPGRADE.DOC doc
By Mike Smedley. CXL Upgrade Form. => CXL.DOC

==============================================================================
CUG279 -
-----------

CROBOTS
By Tom Poindexter. [share2] 1 disk. CROBOTS ("see-robots") is a game
based on C language. Unlike arcade games, CROBOTS requires the user to
write all game strategy in C language beforehand. The C program
controls a robot whose mission is to seek out, track, and destroy
other robots, each running different programs. CROBOTS compiles the C
program into memory and displays the battle of the robots. Each robot
is equally equipped, and up to four robots may compete at once.
CROBOTS is best played among several people, each refining their own
robot program, then matching program against program. This volume is
distributed as shareware and works only under MSDOS. See the Narrative
Descriptions section of this directory for more detail. For more
details see the narrative description of this package in Section 2.

CUG279.01-COUNTER.R source
sample CROBOTS program. Strategy: scans in a counter-clockwise
direction, moves when hit. => CROBOTS.EXE. [MS-DOS: CROBOTS]

CUG279.02-CR-PRINT.BAT batch
Prints documentation on printer. => CROBOTS.EXE.

CUG279.03-CR-READ.ME doc
Introduction to CROBOTS and breakdown of shareware distribution
package. => CROBOTS.EXE.

CUG279.04-CROBOTS.DOC doc
=> CROBOTS.EXE.

CUG279.05-CROBOTS.EXE executable
CROBOTS ("see-robots") is a game based on computer programming. Unlike
arcade games, CROBOTS requires the user to write all game strategy in
C language beforehand. That program controls a robot whose mission is
to seek out, track, and destroy other robots, each running different
programs. Up to four may play. => CROBOTS.DOC, COUNTER.R, RABBIT.R,
ROOK.R, SNIPER.R. [MS-DOS: LC2]

CUG279.06-RABBIT.R source
sample CROBOTS program. Strategy: rabbit runs around the field,
randomly, and never fires; use as target. => CROBOTS.EXE. [MS-DOS:
CROBOTS]

CUG279.07-README.1ST doc
Author's address. => CROBOTS.EXE.

CUG279.08-ROOK.R source
sample CROBOTS program. Strategy: scans the battlefield like a rook,
i.e., only 0, 90, 180, 270. Move horizontally only, but looks
horizontally and vertically. => CROBOTS.EXE. [MS-DOS: CROBOTS]

CUG279.09-SNIPER.R source
sample CROBOTS program. Strategy: since a scan of the entire
battlefield can be done in 90 degrees from a corner, sniper can scan
the field quickly. => CROBOTS.EXE. [MS-DOS: CROBOTS]

==============================================================================
CUG280 -
-----------

Software Tools Source
By Toshiya Ohta, Hakuo Katayose. [public] 1 disk. Toshiya Ohta from
Tokyo, Japan has ported the BDS C version of Software Tools (CUG194 -
CUG196) to Lattice C v3.1. This package is based upon a book,
"Software Tools" written by Kernighan and Plauger and includes a
collection of utilities such as sort, search, archive, text
formatters, filters, macro processors, etc. This new version converts
from BDS to standard I/O routines, fixes some bugs and enhances the
error reporting system.

CUG280.01-ADDSET.C source
By Hakuo Katayose, Toshiya Ohta. Adds a character at a time to a
specified position of an array and increments the index. It also
checks that there's room enough to do so. => TOOLSLBN.LIB, TRANSLIT.C.
[MS-DOS: LC3.1J]

CUG280.02-ARCHIVE.C source
By Hakuo Katayose, Toshiya Ohta. ARCHIVE is a library maintainer whose
purpose is to collect sets of arbitrary files into one big file and to
maintain that file as an "archive". => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.03-ATOI.C source
By Hakuo Katayose, Toshiya Ohta. atoi.c of JUGPDS vol.17. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.04-CHANGE.C source
By Hakuo Katayose, Toshiya Ohta. Changes text. Converts target
substring into specified modification string. => TOOLSLBN.LIB.
[MS-DOS: LC3.1J]

CUG280.05-CINDEX.C source
By Hakuo Katayose, Toshiya Ohta. Finds character c in string str. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.06-CMPMAIN.BAT batch
By Toshiya Ohta. Main Function archive compile instructions for
Software Tools Source. => TOOLSLBN.LIB. [MS-DOS]

CUG280.07-CMPSUBS.BAT batch
By Toshiya Ohta. Sub Function Archive compile instructions for
Software Tools Source. => TOOLSLBN.LIB. [MS-DOS]

CUG280.08-COMPARE.C source
By Hakuo Katayose, Toshiya Ohta. Compares two files. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.09-COMPRESS.C source
By Toshiya Ohta. Compresses standard input text. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.10-CONCAT0.L source
By Toshiya Ohta. Concatenates named files onto standard input. =>
TOOLSLBN.LIB. [MS-DOS]

CUG280.11-CONCAT1.C source
By Toshiya Ohta. Concatenates named files onto standard input. =>
TOOLSLBN.LIB. [MS-DOS]

CUG280.12-COUNT.C source
By Toshiya Ohta. Counts characters, lines and words of a file. =>
TOOLSLBN.LIB. [MS-DOS]

CUG280.13-CPYMAINS.BAT batch
By Toshiya Ohta. Copies main archive functions to chosen destination.
=> TOOLSLBN.LIB. [MS-DOS]

CUG280.14-CPYSUBS.BAT batch
By Toshiya Ohta. Copies sub archive functions to chosen destination.
=> TOOLSLBN.LIB. [MS-DOS]

CUG280.15-CRYPT1.C source
By Toshiya Ohta. Encrypts/decrypts a textfile. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.16-CRYPTO.C source
By Toshiya Ohta. Encrypts/decrypts a textfile. => TOOLSLBN.LIB.
[MS-DOS] Encrypted file may contain EOF marks. CRYPT1 is recommended
as more reliable. CRYPT1 handles binary files and lacks the pipe and
I/O redirection facilities of CRYPTO.

CUG280.17-DELSUBO.BAT batch
By Toshiya Ohta. Deletes Sub Archive object files no longer needed
after library is compiled. => TOOLSLBN.LIB. [MS-DOS]

CUG280.18-DELSUBS.BAT batch
By Toshiya Ohta. Deletes Sub Archive object files no longer needed
after library is compiled. => TOOLSLBN.LIB. [MS-DOS]

CUG280.19-DETAB.C source
By Toshiya Ohta. Converts tabs to equivalent number of blanks. =>
TOOLSLBN.LIB. [MS-DOS]

CUG280.20-DODASH.C source
By Toshiya Ohta. Locates dash used as possible shorthand notation
between two range delimiters and expands that notation. =>
TOOLSLBN.LIB, TRANSLIT.C, FILSET.C. [MS-DOS]

CUG280.21-ENTAB.C source
By Toshiya Ohta. Replaces blanks by tabs and blanks. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.22-ERROR.C source
By Toshiya Ohta. Prints call-specified fatal error message and stops.
=> TOOLSLBN.LIB. [MS-DOS]

CUG280.23-ERRTOOL.DOC doc
By Toshiya Ohta. Error messages for Software Tools. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.24-ESC.C source
By Toshiya Ohta. Checks for an escape in command line and returns the
appropriate character and the proper index. => TOOLSLBN.LIB. [MS-DOS]

CUG280.25-EXPAND.C source
By Toshiya Ohta. Uncompresses standard input. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.26-FGETLIN.C source
By Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.27-FILES.LST doc
By Toshiya Ohta. Lists of files contained in archives for Software
Tools Source. => TOOLSLBN.LIB.

CUG280.28-FILSET.C source
By Toshiya Ohta. Builds a translation set, expanding short hand as
necessary, out of a TRANSLIT command line. => TOOLSLBN.LIB,
TRANSLIT.C. [MS-DOS]

CUG280.29-FIND1.C source
By Toshiya Ohta. Finds patterns in text. => TOOLSLBN.LIB. [MS-DOS]

CUG280.30-FINDO.C source
By Toshiya Ohta. Finds patterns in text. => TOOLSLBN.LIB. [MS-DOS]

CUG280.31-FORMAT.C source
By Toshiya Ohta. Text formatter. TOOLSLBN.LIB. [MS-DOS]

CUG280.32-FRQNCY.C source
By Hakuo Katayose, Toshiya Ohta. Produces a word frequency list for a
text, sorted into order of decreasing frequency. => TOOLSLBN.LIB.
[MS-DOS: LC3.1J]

CUG280.33-GETCCL.C source
By Hakuo Katayose, Toshiya Ohta. Encodes character classes for
TRANSLIT. => TOOLSLBN.LIB, TRANSLIT.C. [MS-DOS: LC3.1J]

CUG280.34-GETLIN.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS]

CUG280.35-GETPAT.C source
By Hakuo Katayose, Toshiya Ohta. Converts arguments into patterns. =>
TOOLSLBN.LIB, TRANSLIT.C. [MS-DOS: LC3.1J]

CUG280.36-GETWORD.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.37-GETWRD.C source
By Hakuo Katayose, Toshiya Ohta. Isolates the next word on the input
line, skipping any leading blanks and tabs and returns the word, it's
length, and an index to just past the end of the word. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.38-ITOA.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.39-ITOD.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.40-JUGPDS.FRM doc
Contribution Form for JUG-CP/M Public Domain.

CUG280.41-KWIC.C source
By Hakuo Katayose, Toshiya Ohta. Makes KeyWord In Context index. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.42-LNKMAIN.BAT batch
By Toshiya Ohta. Compiler linkage for main archive. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.43-LOCATE.C source
By Hakuo Katayose, Toshiya Ohta. Looks for a specified character in a
chosen character class. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.44-MACRO.C source
By Hakuo Katayose, Toshiya Ohta. Expands macros with arguments. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.45-MAKPAT.C source
By Hakuo Katayose, Toshiya Ohta. Converts a patterned argument into
its encoded form in the array pat. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.46-MISC.C source
By Hakuo Katayose, Toshiya Ohta. Miscellaneous functions. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J] All functions do not use Lattice C
V3.1J.

CUG280.47-MSORT.C source
By Hakuo Katayose, Toshiya Ohta. Sorts ASCII text file in memory. Can
handle up to about 2000 lines or 30K bytes. => TOOLSLBN.LIB. [MS-DOS:
LC3.1J] Stack size must be specified upon invocation of this command.

CUG280.48-OVERSTRK.C source
By Hakuo Katayose, Toshiya Ohta. Converts backspaces into multiple
lines. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.49-QUICK.C source
By Hakuo Katayose, Toshiya Ohta. Quicksort for character lines. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.50-SORT.C source
By Hakuo Katayose, Toshiya Ohta. Sorts & merges text. => TOOLSLBN.LIB.
[MS-DOS: LC3.1J]

CUG280.51-STCLOS.C source
By Hakuo Katayose, Toshiya Ohta. Inserts closure entries in patterns.
=> TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.52-STRDCMP.C source
By Hakuo Katayose, Toshiya Ohta. TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.53-STRDFCMP.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.54-STRFCMP.C source
By Hakuo Katayose, Toshiya Ohta. TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.55-STRSAVE.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.56-SWAP.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.57-SWTOOLS.DOC doc
By Toshiya Ohta. Outlines what's included in this modification of
Software Tools for Lattice C, and includes page reference numbers to
the text "Software Tools" (Kernighan & Plauger), compilation and
linkage instructions, and notes on translating from Ratfor to Lattice
C. => TOOLSLBN.LIB.

CUG280.58-TEST.ANS doc
By Toshiya Ohta. Appropriate results for comparison against results of
TEST.M4 of MACRO.C. => TOOLSLBN.LIB, MACRO.C, TEST.M4.

CUG280.59-TOOLFUNC.H header
By Hakuo Katayose, Toshiya Ohta. Header files for Software Tools main
routine. => TOOLSLBN.LIB.

CUG280.60-TOOLLINK.BAT batch
By Toshiya Ohta. Linkage settings for Software Tools. => TOOLSLBN.LIB.

CUG280.61-TOOLS.H header
By Hakuo Katayose, Toshiya Ohta. stdio.h-Standard I/O Header for
Software Tools. Definitions for MS-DOS. => TOOLSLBN.LIB.

CUG280.62-TOOLSLBN.LIB library
By Hakuo Katayose, Toshiya Ohta. Contains the Software Tools library,
ported from BDS C. It converts from BDS C to standard l/O routines,
fixes some bugs and enhances the error reporting system. =>
TOOLSLBV.LIB. [MS-DOS: LC3.1J]

CUG280.63-TOOLSLBV.LIB library
By Hakuo Katayose, Toshiya Ohta. Same as TOOLSLBN.LIB, but the author
feels that 80/86 mode generates object code more efficiently (in terms
of memory and speed.). => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.64-TRANSLIT.C source
By Hakuo Katayose, Toshiya Ohta. Maps standard input characters and
transliterates them according to command arguments provided. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.65-TYPE.C source
By Hakuo Katayose, Toshiya Ohta. Determines whether a particular
character is a letter, a digit, or something else; it returns LETTER,
DIGIT or the character itself. => TOOLSLBN.LIB.

CUG280.66-UNIQUE.C source
By Hakuo Katayose, Toshiya Ohta. Strips adjacent duplicate lines. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.67-UNROT.C source
By Hakuo Katayose, Toshiya Ohta. Unrotates lines rotated by KWIC. =>
TOOLSLBN.LIB, KWIC.C. [MS-DOS: LC3.1J]

CUG280.68-XINDEX.C source
By Hakuo Katayose, Toshiya Ohta. Inverts condition returned by INDEX.
=> TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.69- COPY.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.70-_ITOA.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

==============================================================================
CUG281 -
-----------

Unicorn Library v5.1
By David A. Miller. [share2] 2 disks. David A. Miller (WA) has
submitted a new Unicorn Library. The earlier Unicorn Library v4.0
(available on CUG268 and CUG269) is graphics oriented. Unlike the
earlier product, this shareware release is oriented toward
screen-layout and design, windows and data entry forms, and contains
over 300 functions. The disk includes header files, a reference guide,
demonstration programs, and a linkable small model library compiled
under Microsoft C v5.1.

CUG281.01-DEM MENU.C source
Demo program for menu functions, also spawns the window, data entry
and general library demo programs from a menu. => UCLIB.LIB,
DEM_MENU.MK. [MS-DOS: MSC5]

CUG281.02-DEM_MENU.EXE executable
=> DEM_MENU.C.

CUG281.03-DEM_MENU.MK make
=> DEM_MENU.C.

CUG281.04-LIB_DEMO.C source
Unicorn Library 5.00 Demo Program. => UCLIB.LIB, DEM_MENU.MK. [MS-DOS:
MSC5]

CUG281.05-LIB_DEMO.EXE executable
=> LIB_DEMO.C.

CUG281.06-LIB_DEMO.MK make
=> LIB_DEMO.C.

CUG281.07-MN_DEFS.H header
Menu type definitions. => UCLIB.LIB, MN GLOB.H, MN_XTRN.H.

CUG281.08-MN GLOB.H header
Menu function global variables. => UCLIB.LIB, MN DEFS.H.

CUG281.09-MN XTRN.H header
Menu function global external variables. UCLIB.LIB, MN DEFS.H.

CUG281.10-READ.ME doc
Unicorn Software. Outline of Unicorn Library's current update status
and anticipated development and availability. UCLIB.LIB.

CUG281.11-REF_GUID.TXT doc
Unicorn Library Reference Guide (UCLIB 5.00). List of overview
comments for each function. => UCLIB.LIB.

CUG281.12-REGISTER.DOC doc
Registration Information. => UCLIB.LIB.

CUG281.13-TDATA.C source
Test program for data entry functions. Demonstrates some of the data
entry functions contained in the Unicorn Library. => UCLIB.LIB,
TDATA.MK. [MS-DOS: MSC5]

CUG281.14-TDATA.EXE executable
=> TDATA.C.

CUG281.15-TDATA.MK make
=> TDATA.C.

CUG281.16-UCLIB.LIB library
Unicorn Library v 5.1 contains over 300 functions oriented toward
screen-layout and design, windows and data entry forms. Includes video
control functions, keyboard functions, data entry functions, character
control functions, windowing functions, menu functions, timer
functions, printer control functions, mathematical functions
(including geometric functions and metric-english conversions. This is
the linkable small model library. => DEM_MENU.C, LIB_DEMO.C, TDATA.C,
WINDOW.C, MN_DEFS.H UC_DEFS.H, WN_DEFS.H, UCLIB.MK. [MS-DOS: MSC5]

CUG281.17-UCLIB.MK make
=> UCLIB.LIB.

CUG281.18-UC_CHK.EXE executable

CUG281.19-UC_DEFS.H header
Provides the defines required for Unicorn functions. => UCLIB.LIB,
UC_GLOB.H, UC_KEY.H, UC_PROTO.H, UC_XTRN.H.

CUG281.20-UC_GLOB.H header
Globals for Unicorn Library. => UCLIB.LIB, UC DEFS.H.

CUG281.21-UC_KEY.H header
Defines internal key codes for special extended keys on IBM and clone
computers. => UCLIB.LIB, UC DEFS.H.

CUG281.22-UC_PROTO.H header
Function prototypes for UCLIB.LIB. => UCLIB.LIB, UC_DEFS.H.

CUG281.23-UC_XTRN.H header
Contains external definitions required for UCLIB.LIB. => UCLIB.LIB, UC
DEFS.H.

CUG281.24-VERSION.TXT doc
Version information for this disk's UCLIB.LIB. => UCLIB.LIB.

CUG281.25-WINDOW.C source
Demo program for UCLIB.LIB version 5.10 window functions. =>
UCLIB.LIB, WINDOW.MK. [MS-DOS: MSC5]

CUG281.26-WINDOW.EXE executable
=> WINDOW.C.

CUG281.27-WINDOW.MK make
=> WINDOW.C.

CUG281.28-WN_DEFS.H header
Definitions for the Unicorn Window Systems, U.2.0. => UCLIB.LIB WN
GLOB.H, WN PROTO.H, WN XTRN H

CUG281.29-WN GLOB.H header
Globals for Unicorn Windows version 3.0. => UCLIB.LIB, WN DEFS.H.

CUG281.30-WN_PROTO.H header
Function prototypes for the Unicorn Software window system version
2.0. UCLIB.LIB, WN_DEFS.H.

CUG281.31-WN XTRN.H header
External header for Unicorn Windows 3.0. => UCLIB.LIB, WN_DEFS.H.

==============================================================================
CUG282 -
-----------

Quip and Graphics [public] 1 disk. This volume contains a modified
QUIP (fortune cookie program) and some graphics programs for the
Hercules graphics card. David Bryant (MA) has reworked the QUIP
program from CUG182, fixing a number of problems, including partially
implemented features (no seeding of the random number generator),
incompatibilities with MS-DOS, and non-portable file structures. The
resulting version will compile under both MS-DOS and UNIX. The source
code and an executable image (compiled under Quick C) are included on
the disk. Dan Schecter (ND) has contributed three programs: WALCLOCK,
HOD and GEARS. WALCLOCK produces an analog clock face in Hercules
graphics. HOD implements the Hodgepodge machine as decribed in
Scientific American, also using Hercules graphics. GEARS is a bicycle
gear chart calculator in the form of a mini-spreadsheet. All programs
include source code and excecutable code compiled under Aztec C.

CUG282.01-GEARS.C source
By Dan Schechter. Bicycle gear chart calculator. Calculates gears in
gear inches, shows percentage change between adjacent chain rings and
between adjacent freewheels, and amount of chain slack. Works like a
mini-spreadsheet, recalculating entire chart each time an entry is
altered. => GEARS.EXE, GEARS.DOC. [MS-DOS: AZTEC] Uses Aztec
scr-functions.

CUG282.02-GEARS.DOC doc
By Dan Schechter. Operating instructions. => GEARS.C.

CUG282.03-GEARS.EXE executable
By Dan Schechter. => GEARS.C.

CUG282.04-HOD.C source
By Dan Schechter. Hodgepodge. Makes waves. => HOD.DOC. [MS-DOS: AZTEC]
Requires Hercules monochrome graphics. Hard disk recommended.

CUG282.05-HOD.DOC doc
By Dan Schechter. Operating instructions. => HOD.C.

CUG282.06-HOD.EXE executable
By Dan Schechter.

CUG282.07-INDEX doc
By Dan Schechter. Header IDs and brief descriptions for executable
files respective to GEARS, HOD and WALCLOCK. => GEARS.C, HOD.C,
WALCLOCK.C.

CUG282.08-QUIP.C source
By David Bryant. Part of a fortune cookie system, this program
displays the actual fortune. An optional command line paramenter
determines the number of quips displayed. => QUIP.H, QUIPUPDT.C,
QUIPADD.C, QUIP.DAT, QUIP.KEY. [UNIX, MS-DOS: QUICKC]

CUG282.09-QUIP.DAT data
By David Bryant. Fortune text data. => QUIP.C.

CUG282.10-QUIP.DOC doc
By David Bryant. Operating instructions. => QUIP.C.

CUG282.11-QUIP.EXE executable
By David Bryant. => GEARS.C.

CUG282.12-QUIP.H header
By David Bryant. Defines the files for use by the QUIP programs. =>
QUIP.C.

CUG282.13-QUIP.KEY data
By David Bryant. Indexes the start of each quip in QUIP.DAT. =>
QUIP.C, QUIP.DAT.

CUG282.14-QUIPADD.C source
By David Bryant. This program appends new quips to the end of the quip
file QUIP.DAT and updates the index file QUIP.KEY. => QUIP.C. [UNIX,
MS-DOS: QUICKC]

CUG282.15-QUIPADD.EXE executable
By David Bryant. => QUIPADD.C.

CUG282.16-QUIPUPDT.C source
By David Bryant. This program takes the quip file QUIP.DAT and creates
a new index file QUIP.KEY from it. => QUIP.C. [UNIX, MS-DOS: QUICKC]

CUG282.17-QUIPUPDT.EXE executable
By David Bryant. => QUIPUPDT.C.

CUG282.18-README doc
By Dan Schechter. Explains that INDEX is the table of contents for Dan
Schechter's submissions.

CUG282.19-SUBMIT.TXT doc
By David Bryant. Letter explaining modifications in QUIP programs
submitted. => QUIP.C.

CUG282.20-WALCLOCK.C source
By Dan Schechter. WALL CLOCK. Presents an animated analog clock face
with sweep second hand and audible ticking. Includes 12-hour or
24-hour format and options to local time (Australian, Chinese and
Reagan) intended for amusement. => WALCLOCK.DAT, WALCLOCK.EXE.
[MS-DOS: AZTEC] Requires Hercules monochrome graphics.

CUG282.21-WALCLOCK.DAT data
By Dan Schechter. Look-up table for WALCLOCK. => WALCLOCK.C.

CUG282.22-WALCLOCK.EXE executable
By Dan Schechter. => WALCLOCK.C.

==============================================================================
CUG283 -
-----------

FAFNIR
By David C. Oshel. [public] 3 disks. David C. Oshel (IA), the author
of CUG239 & CUG240 (P.C. Gammon) has contributed Fafnir, a
general-purpose, table-driven forms engine. Fafnir includes support
for about a dozen pre-defined field types, including dollar, date, and
variable-width text. A Library of screen management functions support
one and two page screen forms. An accompanying screen editor (for
PC-clones) facilitates screen design. An elaborate set of macro
definitions simplify table specification. Source is included for an
IBM PC screen driver which writes directly to screen RAM.
Demonstration programs exhibit most of the possible tricks and graces.
For more details see the narrative description of this package in
Section 2.

CUG283.01-BURLAP make

CUG283.02-BURLAP.C source
This is a mailing list maintenance program featuring Faircom's c-tree
(TM) ISAM file management for speed & convenience. => BURLAP,
BURLAP.EXE, BURLAP.H, MACROS.C, PRINTER.C, SELECT.C. [MS-DOS2: MSC5]

CUG283.03-BURLAP.CFG data
Screen colors and snow flag save/restore file. => BURLAP.C.

CUG283.04-BURLAP.DT data
Default c-tree (TM) ISAM data, binary file. => BURLAP.C.

CUG283.05-BURLAP.EXE executable
=> BURLAP.C.

CUG283.06-BURLAP.H header
Global data and function prototypes for BURLAP. => BURLAP.C.

CUG283.07-BURLAP.IX data
Default c-tree (TM) ISAM index, binary file. => BURLAP.C.

CUG283.08-BURLAP.P data
Default c-tree (TM) ISAM parameters, text file. => BURLAP.C.

CUG283.09-BURLAP.S data
default screen image file. => BURLAP.C.

CUG283.10-CIAO.H header
Declarations for all global data & functions for screen and keyboard
1/0, utilities, Macros. => FAFNIR.C, VIDINIT.H.

CUG283.11-CLAIROL.H header
Module lets users decide screen colors. CIAO.H, KEYS.H.

CUG283.12-COUNTIES.C source
Scrollbar menu returns IOWA D.O.T. county codes from list. =>
FAFNIR.C. [MS-DOS2: MSC5, MASM5]

CUG283.13-CRC.DOC doc
Description of CRC background, function, capabilities, commands, &
algorithm notes. CRC.EXE.

CUG283.14-CRC.EXE executable
CRC for MSDOS & concurrent PC-DOS. This is a disk file CRC checking
and generating utility originally written for CP/M-80, CP/M-86,
MP/M-86 and Concurrent PC-DOS, now available for MSDOS. CRC will run
on systems with as little as 25K of RAM. It may be used to verify the
integrity of PC-Blue or SIG/M public domain distribution disks. =>
CRC.EXE, CRCKLIST.CRC. [MS-DOS2] MSDOS 2.0 or higher required for
operation.

CUG283.15-CRCKLIST.CRC data
Used as look-up table, listing the CRC's of serial files, for
integrity checks. => CRC.EXE.

CUG283.16-CRYPT.C source
Hogg's Code encryption, decryption.

CUG283.17-CVIDEO.C source
Low-level screen I/O. => VIDEO.H.

CUG283.18-DEMO.C source
Demonstrates some of the Fafnir library's forms editing routines. =>
FAFNIR.H, CIAO.H.

CUG283.19-DEMO41.EXE executable
Demonstrates Fafnir forms I/O, large model. => FAFNIR4L.LIB.

CUG283.20-DEMO4S.EXE executable
Demonstrates Fafnir forms I/O, small model. => FAFNIR4S.LIB.

CUG283.21-DLRCVT.C source
Converts dollar long int to dollar formatted string. => CIAO.H.

CUG283.22-ES.C source
Displays/edits program screens, saves as compilable C source text. =>
CIAO.H, KEYS.H, FAFNIR.C, BURLAP.C, ES.DOC, ES.EXE.

CUG283.23-ES.DOC doc
Brief introduction ES.EXE. => ES.EXE.

CUG283.24-ES.EXE executable
Screen file editor, small model. [MS-DOS2]

CUG283.25-FAF1.S data
Screen file for DEMO.C - demo, page 1 of 2. => DEMO.C.

CUG283.26-FAF2.S data
Screen file for DEMO.C - demo, page 2 of 2. => DEMO.C.

CUG283.27-FAFNIR make
Makes script for compiling Fafnir libraries & programs. => FAFNIR.C.

CUG283.28-FAFNIR.C source
A general-purpose, table-driven forms engine for data entry, with
unlimited data types, but standard field types are predefined as
Macros: i.e. Text, Dollar, Date, Phone, SSN, Display, Virtual, etc.
Source code for Elysian Fields and page editors. => CIAO.H, KEYS.H,
FAFNIR.H, CLAIROL.C, COUNTIES.C, CRYPT.C, CVIDEO.C, DEMO.C, DLRCUT.C,
ES.C, FAFNIR, FSTATS.C, GOTOXY.C, JULIAN.C, KEYDEFS.C, KEYIN.C,
KEYS.ASM, LVIDEO.ASM, JULDAY.C. [MS-DOS2: MSC5, MASM5]

CUG283.29-FAFNIR.DOC doc
Description, history, improvements, & bugs remaining. => FAFNIR.C.

CUG283.30-FAFNIR.H header
Magic macros for Forms Nivana, plus globals, etc. => FAFNIR.C.

CUG283.31-FAFNIR4L.LIB library
Large model forms engine library, containing all object code for
Fafnir files listed on distribution package. => FAFNIR.C,
FAFNIR4L.XRF, DEMO4L.EXE, JDEMO4L.EXE.

CUG283.32-FAFNIR4L.XRF doc
Cross-reference listing of functions and associated source files for
FAFNIR4L.LIB. => FAFNIR4L.LIB, FAFNIR.C.

CUG283.33-FAFNIR4S.LIB library
Small model forms engine library, containing all object code for
Fafnir files listed on distribution package. => FAFNIR.C,
FAFNIR4S.LIB, DEMO4S.EXE, JDEMO4S.EXE.

CUG283.34-FAFNIR4S.XRF doc
Cross-reference listing of functions and associated source files for
FAFNIR4S.LIB. => FAFNIR4S.LIB, FAFNIR.C.

CUG283.35-FSTATS.C source
Routine finds MS-DOS file size. => FAFNIR.C.

CUG283.36-GOTOXY.C source
These are functions that directly affect the machine curser, and
CIAO's soft curser screen write location. => FAFNIR.C, VIDINIT.H.

CUG283.37-JDEMO4L.EXE executable
Demonstrates MSJ direct video routines, large model. => FAFNIR4L.LIB,
FAFNIR.C.

CUG283.38-JDEMO4S.EXE executable
Demonstrate direct video routines, small model. => FAFNIR4S.LIB,
FAFNIR.C.

CUG283.39-JULDAY.C source
Converts a Julian day number to mm, dd, yyyy, & v.v. => FAFNIR.C.

CUG283.40-JULIAN.C source
Julian Day Number routine. Astronomical version, returns double float,
not long. FAFNIR.C.

CUG283.41-KEYDEFS.C source
Displays a popout window with the ten Fn keys drawn down the middle.
The function names are listed in 21 character fields to left and
right. Sample arrays of menu strings are shown below, all 10 must be
defined even if the string is null. => FAFNIR.C, CIAO.H, KEYS.H.

CUG283.42-KEYIN.C source
Waits for a keypress, blanks screen after 8 minutes of inactivity. =>
FAFNIR.C, CIAO.H.

CUG283.43-KEYS.ASM source
ROM-BIOS keyboard services for small-model C programs. Assembler keyin
routine for ES.EXE screen editor (small). => ES.C.

CUG283.44-KEYS.H header
Defines IBM PC extended key codes. => FAFNIR.C, CIAO.H. These
definitions require keyin O from the CIAO library, or another of my
own functions.

CUG283.45-LVIDEO.ASM source
This program handles direct writes to the IBM PC video screen buffer
located in RAM. => FAFNIR.C, FAFNIR4L.LIB.

CUG283.46-MACROS.C source
Macro definitions. => BURLAP.C.

CUG283.47-MAKEIT.BAT batch
Make file for FAFNIR4x.LlB. => FAFNIR4L.LIB, FAFNIR4S.LIB, FAFNIR.C.
Requires installed MSC5.0 (and utils) and MASM 5.0 to start.

CUG283.48-MSJDEMO.C source
Demo from MicroSoft Systems Journal, Nov. 88 (modified). => FAFNIR.C,
VIDEO.H.

CUG283.49-OLDEDITS.C source
Obsolete line editing functions. => FAFNIR.C, CIAO.H, KEYS.H.

CUG283.50-PRINTER.C source
Printer control routines. => BURLAP.C.

CUG283.51-README.DOC doc
Description of package, starting it up, its requirements and
assumptions, files produced after compilation, and files submitted on
the distribution disk. => FAFNIR.C.

CUG283.52-README2.DOC doc
Description of BURLAP, distributed files, created files, data files,
file structure, background, operations, and non-disclosure notes. =>
BURLAP.C.

CUG283.53-SAVESCRN.C source
Saves all aspects of the current window and cursor environment, not
screen contents. Returns the value of the save/restored synchronized
flag. => FAFNIR.C, VIDINIT.H.

CUG283.54-SCROLL.C source
Direct video, scrolls region up or down one line. => FAFNIR.C,
VIDINIT.H.

CUG283.55-SELECT.C source
This exhibits the relationships between a form and the actual storage
location(s) of the data collected into the form. => BURLAP.C,
FAFNIR.C.

CUG283.56-SOUND.C source
Standard sound effects and IBM PC tone generation primitives. =>
FAFNIR.C, CIAO.H.

CUG283.57-SVIDEO.ASM source
This program handles direct writes to the IBM PC video screen buffer
located in RAM. => FAFNIR.C, FAFNIR4S.LIB. Small model stack bias.
Requires MASM 5.0 or MASM 5.1 per documentation.

CUG283.58-SWAPSCRN.C source
Swaps visible with hidden screen buffer. FAFNIR.C, VIDINIT.H.

CUG283.59-TM.C source
Time and date routines, cf-time () and cf-date (), corresponding to C
Food Smorgasboard functions with same arguments. => FAFNIR.C.

CUG283.60-TYPEAFIL.C source
Reads a text file and displays it with optional word wrap in a window
box. PgUp reviewing included. => FAFNIR.C, CIAO.H, KEYS.H.

CUG283.61-USSTATES.C source
Scrollbar menu returns Z-letter U.S. State abbrv. from list. =>
FAFNIR.C.

CUG283.62-VERSION.INF doc
Explanations of modifications which resulted in Burlap v 2.1 and
Burlap v 2.3. => BURLAP.C.

CUG283.63-VIDEO.H header
Global data and C function prototypes for LVIDEO and CVIDEO routines.
Also macro assembler functions and documentation regarding FAFNIR
library's current aspects and the direction of its development.
FAFNIR.C.

CUG283.64-VIDINIT.C source
This is the part of CIAO that contains initialization and
deinitialization, plus all global and external data. There are no
references to functions other that the C library and the MST low-level
I/O functions in here. => FAFNIR.C, VIDINIT.H.

CUG283.65-VIDINIT.H header
=> FAFNIR.C, VIDEO.H.

CUG283.66-WBOX.C source
Draws a box and establishes a window inside it. => FAFNIR.C,
VIDINIT.H.

CUG283.67-WINDOW.C source
Window dimension routines. => FAFNIR.C, VIDINIT.H.

CUG283.68-WINK.C source
Window character out, obeys backspace and new line inside window
routine. => FAFNIR.C, VIDINIT.H.

CUG283.69-WPRINTF.C source
printf formatted string into window, honors all the wputs attribute
escape commands. => FAFNIR.C, CIAO.H.

CUG283.70-WPUTS.C source
Puts string inside a window, uses wink, interprets video attribute
escape codes. => FAFNIR.C, VIDINIT.H.

==============================================================================
CUG284 -
-----------

Portable 8080 System (JUG070)
By M. Sekiguchi. [public] 1 disk. M. Sekiguchi, Tokyo, has submitted
an 8080 interpreter in C. This interpreter (with a user-supplied
object image of CP/M-80) will execute CP/M-80 on non-8080 systems. The
interpreter could also be used as a simulator by programmers
developing firmware for an embedded 8080 of 8085 processor. The disk
includes the 8080 machine code interpreter, written in portable C, and
several other utilities. CP/M is not included on the disk, by some
tools for porting CP/M to the simulated environment are provided,
including a C version of the BIOS routines required by CP/M. (The
provided BIOS is for an NEC running MS-DOS and would require
adaptation to work in other environments.) The disk also contains some
stand-alone programs including Palo Alto Tiny BASIC. The stand-alone
programs can be executed under the portable 8080 system without CP/M.
Sekiguchi has tested the program on several machines including an
MS-DOS PC-clone and UNIX workstation. The program was developed under
Turbo C v1.5j (a Japanese variant).

CUG284.01-BASIC.ASM source
Palo Alto Tiny BASIC. CP/M assembly code for a stand-alone BASIC
ported to 18080. Intended for demonstration, emphasizing the speed and
memory size of an actual 8080 processor. => BASIC.DOC, BASIC.HEX,
18080.EXE. [CP/M-80: TC1.5] You cannot save a file including BASIC
code. The only available memory is 3 K bytes.

CUG284.02-BASIC.DOC doc
Synopsis & description of Palo Alto Tiny BASIC. => BASIC.ASM,
BASIC.HEX.

CUG284.03-BASIC.HEX executable
=> BASIC.DOC, BASIC.ASM.

CUG284.04-BIOS.C source
CP/M BIOS simulator. This module logically consists of 5 parts:
physical dish I/O, direct I/O port simulation, normal (simulated) disk
I/O, character I/O, and common initialization routines. => 18080.EXE.
[MS-DOS: TC1.5] Physical disk support routine calls NEC disk BIOS and
cannot run on other hardware.

CUG284.05-BIOS.H header
BIOS configuration (must match with CP/M).

CUG284.06-BIOS20.ASM source
fake bios for Portable CP/M system. => 18080.EXE, BIOS20.HEX. [MS-DOS:
TC1.5]

CUG284.07-BIOS20.HEX executable
assembled 20KB BIOS. => BIOS20.ASM.

CUG284.08-CATALOG.070 doc
Disk volume catalog of contents.

CUG284.09-COMPILE.H header
defines for compiler and/or CPU dependent conditions. Offers choices
for MSCv3 (8086), Turbo C 1.5 (8086), Lattice Cv2 (8086), Digital
Research C (68000), AT&T's 3B2 with UNIX system V. => 18080.EXE. Not
all options have been tested.

CUG284.10-CONFIG.H header
System Configuration. Defines some constants to configure the system.
Modifications can be made for work space, file names, and/or operation
mode options. => 18080.EXE.

CUG284.11-COPYALL.ASM source
Stand alone utility to copy virtual CP/M disks. Can copy between
virtual and physical disks. => 18080.EXE, COPYALL.DOC, COPYALL.HEX.
[MS-DOS: TC1.5] This program does not use SECTRAN function and is
intended for standard CP/M format (8"1 s) only. No error checking is
performed during execution and program cannot be terminated until it
finishes.

CUG284.12-COPYALL.DOC doc
Virtual disk copy utility manual page. => COPYALL.ASM, COPYALL.HEX.

CUG284.13-COPYALL.HEX executable
COPYALL.ASM, COPYALL.DOC.

CUG284.14-CPM.DOC doc
Porting of CP/M for the portable 8080 system. Explains porting
procedures centered on copying the real CP/M to the simulated
environment. => 18080.EXE.

CUG284.15-CPMFILE.C source
Virtual disk access utility. => 18080.EXE, CPMFILE.EXE, CPMFILE.DOC.
[MS-DOS: TC1.5] Numerous bugs (see CPMFILE.DOC).

CUG284.16-CPMFILE.DOC doc
Virtual disk access utility manual pages. => CPMFILE.C, CPMFILE.EXE.
Numerous bugs listed.

CUG284.17-CPMFILE.EXE executable
=> CPMFILE.C, CPMFILE.DOC.

CUG284.18-CRC.EXE executable
Checksum program (ver 6.71). => CRCKLIST.070.

CUG284.19-CRCKLIST.070 data
CRC values of files on this disk. => CRC.EXE.

CUG284.20-DEFS.H header
Commom definitions. => 18080.EXE.

CUG284.21-GETSYS.ASM source
Stand-alone utility to extract CP/M operating system from a standard
CP/M master floppy disk. => GETSYS.DOC, GETSYS.HEX. [MS-DOS: TC1.5] No
error checking during execution. Utility for standard CP/M format
(8"1s) only. Other bugs (see GETSYS.DOC).

CUG284.22-GETSYS.DOC doc
Manual page for utility to extract CP/M system. => GETSYS.ASM,
GETSYS.HEX. Bugs listed.

CUG284.23-GETSYS.H EX executable
=> GETSYS.ASM, GETSYS.DOC.

CUG284.24-HALT.ASM source
A CP/M program to stop 18080 source. => HALT.COM. [MS-DOS: TC1.5]

CUG284.25-HALT.COM executable
=> HALT.ASM.

CUG284.26-18080.DOC doc
Manual pages for 8080 simulator. => 18080.EXE, 18080.PRJ.

CUG284.27-18080.EXE executable
Intel 8080 simulator. Includes machine code interpreter. Designed to
run a CP/M-80 system under NCH-8080 micros. Tested on MS-DOS PC and
UNIX. Written in Potable C. => 18080.DOC, 18080.PRJ, BASIC.ASM,
BIOS.C, BIOS20.ASM, COMPILE.H, CONFIG.H, COPYALL.ASM, CPMFILE.C,
DEFS.H, GETSYS.ASM, MAIN.C, MAKEFILE.MAK, MKHEX.C, MONITOR.C,
NEWDSK.C, TRACE.C, HALT.ASM, MACHINE.C. [MS-DOS: TC1.5]

CUG284.28-18080.PRJ make
Project file of 8080 for Turbo C. 18080.EXE.

CUG284.29-JUGPDS.FRM doc
Contribution form for JUG-CP/M Public Domain Library.

CUG284.30-MACHINE.C source
An 8080 machine instruction interpreter. => 18080.EXE. [MS-DOS: TC1.5]

CUG284.31-MAIN.C source
Main program for virtual CP/M simulator. 18080.EXE. [MS-DOS: TC1.5]

CUG284.32-MAKEFILE.MAK make
Make file for. portable 8080 engine and virtual CP/M-80 system. =>
18080.EXE.

CUG284.33-MKHEX.C source
Utility to create CP/M boot image file (CPMxx.HEX--xx stands for
system size.). 18080.EXE, MKHEX.DOC, MKHEX.EXE. [MS-DOS: TC1.5] No
error checking is performed.

CUG284.34-MKHEX.DOC doc
Manual pages for CP/M boot image file creation utility. => MKHEX.EXE,
MKHEX.C.

CUG284.35-MKHEX.EXE executable
=> MKHEX.C, MKHEX.DOC.

CUG284.36-MON.H header
Configuration constants for MONITOR.C virtual environment manager. =>
MONITOR.C.

CUG284.37-MONITOR.C source
Virtual Environment Manager. => 18080.EXE, MON.H. [MS-DOS: TC1.5]

CUG284.38-NEWDSK.C source
Creates and initializes a virtual disk file for 18080. => 18080.EXE,
NEWDSK.DOC, NEWDSK.EXE. [MS-DOS: TC1.5]

CUG284.39-NEWDSK.DOC doc
Manual page for virtual disk initialization utility. => NEWDSK.C,
NEWDSK.EXE.

CUG284.40-NEWDSK.EXE executable
=> NEWDSK.C, NEWDSK.DOC.

CUG284.41-PORTING.DOC doc
Porting Portable 8080 System to Other Systems. Includes information on
the nature of compilers, Low level Input/Output (BIOS), and command
line interface and boot file. => 18080.EXE.

CUG284.42-PROG.DOC doc
Generic information about the 18080 program. => 18080.EXE.

CUG284.43-READ-ME.070 object
Introduction to the 18080 package. => 18080.EXE.

CUG284.44-STAND.DOC object
Instructions for creating a stand-alone program. (a program you can
execute without CP/M in 18080.). => 18080.EXE.

CUG284.45-TRACE.C source
8080 instruction tracer. => 18080.EXE. [MS-DOS: TC1.5]

CUG284.46-UTIL.C source
General utility routines for monitor. => 18080.EXE, MONITOR.C.
[MS-DOS: TC1.5]

CUG284.47-WARNING.CUG doc
=> 18080.EXE. Documentation file extensions were changed from .SJD to
.DOC when translated to English.

CUG284.48-WARNING.DOC doc
=> 18080.EXE. Notes on BIOS.C and physical disk access routines. These
areas require some modification to be ported from NEC PC-9801 series.

==============================================================================
CUG285 -
-----------

BISON for MS-DOS
By Daniel R. Haney. [public] 3 disks. Daniel R. Haney (MA) has ported
Bison, a yacc-like parser generator, to the MS-DOS environment. Bison
was originally developed by Robert Corbett and Richard Stallman as a
part of the Free Software Foundation's GNU.
Haney added prototypes for ANSI conformance and adapted the code that
depends on MS-DOS filename conventions. Bison compiles under Microsoft
C v5.1 and Turbo C v1.5. The original UNIX code remains in the source
(commented out). Thus with little modification our distribution can
still compile under UNIX/XENIX. The disk contains the complete Bison
source code including a Makefile, an extensive set of tutorials and an
example program (HOC3 - High Order Calculator from "Unix Programming
Environments by Kernighan and Pike). The current update added the OS/2
versions of executable files, and incorporated additional changes and
enhancements. For more details see the narrative description of this
package in Section 2.

CUG285.01-ALLOCATE.C source
By Daniel R. Haney, Robert Corbett. Allocate and clear storage for
BISON. ALLOCATE.H, DOSBISON.EXE.

CUG285.02-ALLOCATE.H header
By Daniel R. Haney. => ALLOCATE.C.

CUG285.03-BISON.1
By Daniel R. Haney, Robert Corbett. Bison manual in nroff format. =>
DOSBISON.EXE, BISON.MAN, CHANGES, README, REFERENC, BISON.CLD,
BISON.TEX, BISONINF.0, BISONINF.1, BISONINF.2, BISONINF.3.

CUG285.04-BISON.H header
By Daniel R. Haney. Bison's main header. => DOSBISON.EXE.

CUG285.05-BISON.LNK link
By Daniel R. Haney, Robert Corbett. Link file. => DOSBISON.EXE.

CUG285.06-BISON.MAK make
By Roberto Artigas Jr.. => OS2BISON.EXE. [OS/2]

CUG285.07-BISON.MAN doc
UNIX programmer's Bison manual. => DOSBISON.EXE, BISON.1.

CUG285.08-BISON.TEX doc
By Richard Stallman, Charles Donnelly. Bison reference manual.
DOSBISON.EXE, BISON.1.

CUG285.09-BISONINF.0 doc
Contains copyright information and Tab Tables (indirect) for nodes. =>
DOSBISON.EXE, BISON.MAN, BISONINF.1.

CUG285.10-BISONINF.1 doc
=> BISONINF.0.

CUG285.11-BISONINF.2 doc
=> BISONINF.1.

CUG285.12-BISONINF.3 doc
BISONINF.2.

CUG285.13-CHANGES doc
Jan. 1989, port of Gnu Bison to MS-DOS. => BISON.1, DOSBISON.EXE.

CUG285.14-CLOSURE.C source
By Daniel R. Haney, Robert Corbett. Three subroutines for Bison:
closure(items,n); initialize_closure(n); and finalize_closure (). =>
DOSBISON.EXE, CLOSURE.H, LR0.C.

CUG285.15-CLOSURE.H header
By Daniel R. Haney. => CLOSURE.C.

CUG285.16-CONFLICT.C
By Daniel R. Haney. Find and resolve or report look-ahead conflicts
for Bison. => CONFLICT.H, DOSBISON.EXE.

CUG285.17-CONFLICT.H header
By Daniel R. Haney. => CONFLICT.C.

CUG285.18-COPYING doc
By Richard Stallman. Bison General Public License. Copyright notice by
Free Software Foundation. => BISON.1, DOSBISON.EXE.

CUG285.19-DERIVES.C source
By Robert Corbett. Match rules with nonterminals for Bison. =>
DOSBISON.EXE, DERIVES.H.

CUG285.20-DERIVES.H header
By Daniel R. Haney. => DERIVES.C.

CUG285.21-DOSBISON.EXE executable
By Daniel R. Haney, Robert Corbett. Bison is a general purpose parser
generator which converts a grammar description into a C program to
parse that grammar. It is upward compatible with Bell Laboratories
YACC. => DERIVES.C, OS2BISON.EXE HAIRY.PRS, SIMPLE.PRS, MAKEFILE,
BISON.LNK, ALLOCATE.C, CLOSURE.C, CONFLICT.C, FILES.C, GETARGS.C,
GETOPT.C, LALR.C, LEX.C, MAIN.C, NULLABLE.C, OUTPUT.C, GRAM.C, LR0.C.
[MS-DOS: MSC, TC1.5]

CUG285.22-FILELIST doc
By Daniel R. Haney, Robert Corbett. Bison distribution file list.

CUG285.23-FILES.C source
By Robert Corbett. Open and close files for Bison. => FILES.H,
DOSBISON.EXE.

CUG285.24-FILES.H header
By Daniel R. Haney. => FILES.C.

CUG285.25-GETARGS.C source
By Robert Corbett. Parse command line arguments for Bison. =>
GETARGS.H DOSBISON.EXE.

CUG285.26-GETARGS.H header
By Daniel R. Haney. => GETARGS.C.

CUG285.27-GETOPT.C source
By Daniel R. Haney, Robert Corbett. This version of getopt appears to
the caller like standard UNIX getopt but it behaves differently, since
it allows the user to intersperse the options with the other
arguments. => GETOPT.H, DOSBISON.EXE.

CUG285.28-GETOPT.H header
By Daniel R. Haney. => GETOPT.C.

CUG285.29-GRAM.C source
By Roberto Artigas Jr.. Allocate input grammar variables. => GRAM.H
DOSBISON.EXE.

CUG285.30-GRAM.H header
By Daniel R. Haney. Data definitions for internal representation of
Bison's input. => GRAM.C.

CUG285.31-HAIRY.PRS source
By Daniel R. Haney, Robert Corbett. Parce Handler. Template for
reentrant parser. => DOSBISON.EXE.

CUG285.32-HOC.IN
By Daniel R. Haney, Robert Corbett. Sample input file for higher order
calculator. => HOC3.Y.

CUG285.33-HOC3.H header
By Daniel R. Haney, Robert Corbett. => HOC3.Y.

CUG285.34-HOC3.Y source
By Daniel R. Haney, Robert Corbett. Higher order calculator. =>
DOSBISON.EXE. HOC3.H, HOCDECL.H, HOC.IN, HOCDEMO.BAT, INIT.C, MATH.C,
SYMBOL.C.

CUG285.35-HOCDECL.H header
By Daniel R. Haney, Robert Corbett. Definitions for the HOC3.Y
calculator. HOC3.Y.

CUG285.36-HOCDEMO.BAT batch
By Daniel R. Haney, Robert Corbett. Demonstration of the Higher Order
Calculator. => HOC3.Y.

CUG285.37-HOCFILES.DOC doc
By Daniel R. Haney. Brief description of HOC3 related files. =>
HOC3.Y.

CUG285.38-HOC_IS.DOC doc
By Daniel R. Haney, Robert Corbett. Very brief description of what
HOC3 does. => HOC3.DOC.

CUG285.39-INIT.C source
By Daniel R. Haney, Robert Corbett. Support functions for the Higher
Order Calculator. => HOC3.Y.

CUG285.40-LALR.C header
By Robert Corbett. Compute look-ahead criteria for Bison. => LALR.H,
DOSBISON.EXE.

CUG285.41-LALR.H header
By Daniel R. Haney, Robert Corbett. => LALR.C.

CUG285.42-LEX.C source
By Robert Corbett. Token reader for Bison's input parser. => LEX.H,
DOSBISON.1.

CUG285.43-LEX.H header
By Daniel R. Haney, Robert Corbett. Token type definitions for Bison's
input reader. => LEX.C.

CUG285.44-LR0.C source
By Robert Corbett. Generate the nondeterministic finite state machine
for Bison. => DOSBISON.1, LR0.H.

CUG285.45-LR0.H header
By Daniel R. Haney, Robert Corbett. => LR0.C.

CUG285.46-MACHINE.H header
By Robert Corbett, Richard Stallman. Define machine dependencies for
Bison. => DOSBISON.EXE.

CUG285.47-MAIN.C source
By Robert Corbett. Top level entry point of Bison. => DOSBISON.EXE.

CUG285.48-MAKEFILE make
By Daniel R. Haney, Robert Corbett. Object code dependencies file for
MS-DOS. DOSBISON.EXE. [MSC5]

CUG285.49-MAKEFILE.HOC make
By Daniel R. Haney, Robert Corbett. => HOC3.Y.

CUG285.50-MAKEFILE.MS make
By Daniel R. Haney, Robert Corbett. Microsoft C v 5.1 macros
definitions.-HOC3.Y.

CUG285.51-MATH.C source
By Daniel R. Haney, Robert Corbett. Support functions for the Higher
Order Calculator. => HOC3.Y.

CUG285.52-NEW.H header
By Robert Corbett. Storage allocation interface for Bison. =>
DOSBISON.EXE.

CUG285.53-NULLABLE.C source
By Robert Corbett. Part of the Bison parser generator. => NULLABLE.H,
DOSBISON.EXE.

CUG285.54-NULLABLE.H header
By Daniel R. Haney. => NULLABLE.C.

CUG285.55-OS2BISON.EXE executable
By Daniel R. Haney, Robert Corbett. Bison generates a table driven
parser written in C code from a grammar specification. It is upward
compatible with Bell Laboratories YACC. => DISBISON.EXE, HAIRY.PRS
SIMPLE.PRS, BISON.MAK, BISON.LNK, ALLOCATE.C, CLOSURE.C, CONFLICT.C,
DERIVES.C, FILES.C, GETARGS.C, GETOPT.C, GRAM.C, CALR.C, LEX.C, LR0.C,
MAIN.C, NULLABLE.C, OUTPUT.C. [OS/2]

CUG285.56-OUTPUT.C source
By Robert Corbett. Output the generated parsing program for Bison. =>
DOSBISON.EXE, OUTPUT.H.

CUG285.57-OUTPUT.H header
By Daniel R. Haney. => OUTPUT.C.

CUG285.58-PRINT.C source
By Robert Corbett. Print information on generated parser for Bison.
DOSBISON.EXE, PRINT.H.

CUG285.59-PRINT.H header
By Daniel R. Haney. => PRINT.C.

CUG285.60-READER.C source
By Daniel R. Haney, Robert Corbett. Read the input specification. =>
DOSBISON.EXE, READER.H.

CUG285.61-READER.H header
By Daniel R. Haney. => READER.C.

CUG285.62-README doc
By Daniel R. Haney, Robert Corbett. Information on installing Bison.
=> REFERENC, BISON.CLD.

CUG285.63-REFERENC doc
By Paul Rubin. Discusses differences between Bison and YACC. =>
README.

CUG285.64-SIMPLE.PRS source
By Robert Corbett, Richard Stallman. Template for a simple,
non-reentrant parser. This is the parser code that is written into
each Bison parser when the %semantic_parser declaration is not
specified in the grammar. => HAIRY.PRS, DOSBISON.EXE. There must be
only one dollar sign in this file.

CUG285.65-STATE.H header
By Robert Corbett. Type definitions for nondeterministic finite state
machine for Bison. => DOSBISON.EXE.

CUG285.66-SYMBOL.C source
By Daniel R. Haney, Robert Corbett. Support functions for the Higher
Order Calculator. => HOC3.Y.

CUG285.67-SYMTAB.C source
By Robert Corbett. Symbol table manager for Bison. => SYMTAB.H,
DOSBISON.EXE.

CUG285.68-SYMTAB.H header
By Robert Corbett. Definitions for SYMTAB.C and callers. => SYMTAB.C.

CUG285.69-TYPES.H header
By Robert Corbett. Define data type for representing Bison's grammar
input as it is parsed. => DOSBISON.EXE.

CUG285.70-UNIXMAKE.MAK make
By Robert Corbett. Original UNIX makefile. => DOSBISON.EXE.

CUG285.71-USAGE.DOC doc
By Daniel R. Haney, Robert Corbett. Brief description of what Bison is
and what is required in order to use it. => DOSBISON.EXE.

CUG285.72-VMSGTARG.C source
By Daniel R. Haney, Robert Corbett. VMS version of getargs(): uses DCL
command parsing (argc and argv are ignored). => DOSBISON.EXE,
VMSHLP.MAR.

CUG285.73-VMSHLP.MAR
By Gabor Karsai. Macro help routines for the Bison/VMS program. =>
DOSBISON.EXE, VMSGTARG.C.

CUG285.74-WARSHALL.C source
By Robert Corbett. Generate transitive closure of a matrix. =>
DOSBISON.EXE, WARSHALL.H.

CUG285.75-WARSHALL.H header
By Daniel R. Harrison. => WARSHALL.C.

==============================================================================
CUG286 -
-----------

GRAD FOR MSC
By Conrad Kwok. [share1] 2 disks. This is a new version (1.2) of the
GRAD library. Unlike the earlier release (CUG237 and CUG238), this
version includes the complete source. Because this change
significantly alters the size of the distribution, we are releasing
the update as new volumes instead of updating the original volumes.
CUG286 includes the source code for Microsoft C v4.0, v5.0 and v5.1
and CUG287 includes the source code for Turbo C v1.0. The GRAD
graphics library is a collection of functions for drawing dots, lines,
circles, ellipsis, arcs and also for filling regions, displaying
characters, printing, etc. Several useful sample programs such as a
sideways print utility, a graphics and text merge utility,, and a
graphics command interpreter are provided. GRAD includes support for
CGA (640 X 200) and HGA (720 X 348) graphics modes and can be
configured to support other graphics adapters. GRAD supports Epson
FX-80, Okidata ML192 or compatibles and
laser printers using the Jlaser card. The major differences between
the GRAD library and other graphics libraries are its superior
character display function and versatile printing function. With the
GRAD library, less than 200 lines of commented code are required to
write a sideways printing program with user definable size, font type,
spacing, and top and bottom margins.

CUG286.01-AMCSC10.FON data
Caps and small caps font. => GRADLIB.LIB.

CUG286.02-AMR14.FON data
Roman font. => GRADLIB.LIB.

CUG286.03-AMR7.FON data
Roman font. => GRADLIB.LIB.

CUG286.04-AMR7D.FON data
Roman Sideways font. => GRADLIB.LIB.

CUG286.05-AMSL8.FON data
Slant font. => GRADLIB.LIB.

CUG286.06-AMTT8.FON data
TeleType font. => GRADLIB.LIB.

CUG286.07-ARC2.C source
Draws an arc (part of a circle). => GRADLIB.LIB, ARCPOINT.C,
ARCSUPP.C.

CUG286.08-ARCPOINT.C source
Gives two endpoints of ARC2 or EARC2. => GRADLIB.LIB.

CUG286.09-ARCSUPP.C source
Two supplemental routines for ARC2 and EARC2. => GRADLIB.LIB.

CUG286.10-BLKCLIP.C source
Blockclip is a routine which clips a block against the window. =>
GRADLIB.LIB.

CUG286.11-BLKCOPY.C source
Copy a data block between two frames. => GRADLIB.LIB.

CUG286.12-BLKLDSV.C source
Blockload - load a block from the disk BlockSave - save a block to the
disk. GRADLIB.LIB.

CUG286.13-CALCADDR.ASM source
Calculates the word address of a point in bytes. => GRADLIB.LIB.
Assembly code.

CUG286.14-CCALCADD.OBJ object
GRADLIB.LIB, CALCADDR.ASM.

CUG286.15-CHARDISP.ASM source
Contains character display related functions: _wrtc -- move the pixel
pattern from buffer to the current frame _copyfont -- copy the pixel
data to buffer for manipulation _ctextL -- clip the left side of the
pixel data _ctextR -- clip the right side of the pixel data. =>
GRADLIB.LIB. Assembly code.

CUG286.16-CIRC.ASM source
Draws a logical circle. => GRADLIB.LIB, CIRCLE.C. Assembly code.

CUG286.17-CIRCLE.C source
Contains two external usable routines to draw circle and arc Circle --
draws a logical circle which will look like a circle only on a screen
with square pixels. Arc1 -- Draw n/8 of a circle. n can be 0 to 8. =>
GRADLIB.LIB.

CUG286.18-CLINE.C source
Line (x1, y1, x2, y2) - draw a line from (x1, y1) to (x2, y2)
inclusively. => GRADLIB.LIB.

CUG286.19-COLOR.MAK make
Makefile for FTABLE.OBJ, CALCADDR.OBJ, PLOTTYPE.OBJ (parts of CGA
driver). => GRADLIB.LIB.

CUG286.20-COORD.C source
Contains functions for setting origins and window coordinates. =>
GRADLIB.LIB.

CUG286.21-DISPFONT.OBJ source
Display font program object file. GRADLIB.LIB.

CUG286.22-DOSREAD.ASM source
DOSREAD of GDS. Contains_dosread, _dosopen,_dosseek, and dosclose. =>
GRADLIB.LIB. Assembly code.

CUG286.23-DRAW.C source
Interprets a string of commands for drawing. => GRADLIB.LIB.

CUG286.24-EARC2.C source
Draws an arc (part of an ellipse). => GRADLIB.LIB, ARCPOINT.C,
ARCSUPP.C.

CUG286.25-ELLIPSE.C source
Three external usable routines to draw ellipse and arc. :>
GRADLIB.LIB.

CUG286.26-ENVIRON.C source
Two functions: EnvSave -- saves the environment EnvRsto -- restores
the environment. => GRADLIB.LIB.

CUG286.27-EQUIV.C source
=> GRADLIB.LIB.

CUG286.28-ERR.C source
Example of using the user error handling features. => GRADLIB.LIB.

CUG286.29-EXECFUNC.ASM source
Source file for compiling with executable functions. => GRADLIB.LIB.

CUG286.30-EXECFUNC.OBJ object
=> GRADLIB.LIB, EXECFUNC.ASM.

CUG286.31-EXETIME.C source
Source file for timing GRAD function. => GRADLIB.LIB.

CUG286.32-EXETIME.MAK make
Makefile for compiling TIME.C.=> GRADLIB.LIB.

CUG286.33-FCIRCLE.C source
FillCircle -- draw a solid circle FillEllipse -draw a solid ellipse.
=> GRADLIB.LIB.

CUG286.34-FILE11MS.TXT doc
Names, lengths and one-line descriptions of some files. =>
GRADLIB.LIB.

CUG286.35-FILEFON.TXT doc
Names, lengths and descriptions of some font files. => GRADLIB.LIB.

CUG286.36-FILL.C source
Solid Fill -- entirely fill a region Pattern fill -fill the area by
the pattern specified. =>GRADLIB.LIB.

CUG286.37-FONT.C source
Loadfont -- loads a font file from the disk Removefont -- removes a
font from memory. => GRADLIB.LIB.

CUG286.38-FRAME.C source
Create frame -- creates a new frame Remv frame -- removes a frame from
GRAD and releases the memory. => GRADLIB.LIB.

CUG286.39-FTABLE.C source
=> GRADLIB.LIB.

CUG286.40-FTABLE.OBJ object
=> GRADLIB.LIB, FTABLE.C.

CUG286.41-GDS.H header
=> GRADLIB.LIB.

CUG286.42-GDSLIB.MAK make
=> GRADLIB.LIB.

CUG286.43-GDSLIB.NAM batch
=> GRADLIB.LIB.

CUG286.44-GLOBAL.C source
Initializes global variables. => GRADLIB.LIB.

CUG286.45-GRADARC.H header
Header file for ARC1 and EARC1. => GRADLIB.LIB.

CUG286.46-GRADEGS.GCM source
Command file example for interp and mprint. => GRADLIB.LIB.

CUG286.47-GRADENV.H header
Header file for using EnvSave and EnvRsto. => GRADLIB.LIB, ENVIRON.C.

CUG286.48-GRADEPSN.C source
Printer controls for the Epson FX-80. => GRADLIB.LIB.

CUG286.49-GRADERR.C source
Error handling routine. => GRADLIB.LIB.

CUG286.50-GRADFILE.DOC doc
Brief description of GRAD archives. => GRADLIB.LIB.

CUG286.51-GRADIO.H header
Header file for WriteStr, ReadStr, and WriteC.

CUG286.52-GRADLIB.LIB library
GRAD is a graphics library containing functions for drawing dots,
lines, circles, ellipsis, and arcs and functions for region filling,
window management, character display, and printing. [MS-DOS: MSC5,
MSC4]

CUG286.53-GRADOKI.C source
Printer controls for Okidata ML192. => GRADLIB.LIB.

CUG286.54-GRADPROG.DOC doc
GRAD programmer's reference manual. => GRADLIB.LIB.

CUG286.55-GRADUSER.DOC doc
GRAD Graphics Library User's Manual Version 1.1 for IMB PC/XT/AT or
compatibles. => GRADLIB.LIB.

CUG286.56-GRADVAR.H header
GRAD global variables. => GRADLIB.LIB.

CUG286.57-HCALCADD.OBJ object
=> GRADLIB.LIB, CALCADDR.ASM.

CUG286.58-HLCOPY.ASM source
Contains Level 1 horizontal line, vertical line drawing, and dot
plotting routines. => GRADLIB.LIB. Assembly code.

CUG286.59-HLNLMT.ASM source
=> GRADLIB.LIB. Assembly code.

CUG286.60-INIT.C source
Source for GRAD initialization and cleanup functions. => GRADLIB.LIB.

CUG286.61-INSTALL.DOC doc
Installation procedure and instructions on using GRAD. => GRADLIB.LIB.

CUG286.62-INTERP.C source
This program is used to interpret GRAD functions in restricted C
syntax of function calls. The method used is recursive descent. =>
GRADLIB.LIB.

CUG286.63-INTERP.MAK make
Makefile for compiling INTERP.EXE from INTERP.C and EXECFUNC.ASM. =>
GRADLIB.LIB, INTERP.C, EXECFUNC.ASM.

CUG286.64-JLASER.DOC doc
Instructions for using a laser printer with a JLASER card. =>
GRADLIB.LIB.

CUG286.65-LINE.ASM source
Level 1 line drawing function. => GRADLIB.LIB. Assembly code.

CUG286.66-MISC.ASM source
Miscellaneous GDS functions. => GRADLIB.LIB. Assembly code.

CUG286.67-MPRINT.C source
Sample program. => GRADLIB.LIB.

CUG286.68-MPRINT.MAK make
=> GRADLIB.LIB, MPRINT.C, EXECFUNC.ASM.

CUG286.69-MPRT.GCM data
One of the example files for MPRINT. => GRADLIB.LIB, MPRINT.C.

CUG286.70-MPRT.TXT doc
Another one of the example files for MPRINT. => GRADLIB.LIB, MPRINT.C.

CUG286.71-NEXTXY.C source
Gives next (x,y) location for ReadStr or WriteStr. => GRADLIB.LIB,
MPRINT.C.

CUG286.72-OE7.FON data
Old English font. => GRADLIB.LIB.

CUG286.73-OKI.MAK make
Makefile for compiling GRADOKI.C with PRTGC.ASM. => GRADLIB.LIB.

CUG286.74-PFRAME.C source
Printing functions. => GRADLIB.LIB.

CUG286.75-PFRAME.OBJ object
=> GRADLIB.LIB, PFRAME.C.

CUG286.76-PLOTTYPE.ASM source
This file contains the lowest level routine in writing and accessing
the frame memory, and other related routines. => GRADLIB.LIB
PLOTTYPE.OBJ. Assembly code.

CUG286.77-PLOTTYPE.OBJ object
=> GRADLIB.LIB, PLOTTYPE.ASM.

CUG286.78-PRT.ASM source
Low level functions for printing, including: prt -- convert an 8
integer array for printing pbflush -- flush everything in buffer to
printer rmvO - remove trailing zeros. => GRADLIB.LIB. Assembly code.

CUG286.79-PRTCNTL.C source
Printer controls. => GRADLIB.LIB.

CUG286.80-PRTCNTL.OBJ object
=> GRADLIB.LIB, PRTCNTL.C.

CUG286.81-PRTFONT.C source
=> GRADLIB.LIB.

CUG286.82-PRTFONT.H header
=> GRADLIB.LIB, PRTFONT.C.

CUG286.83-PRTGC.ASM source
prtc -- append a character to the buffer. GRADLIB.LIB. Assembly code.

CUG286.84-PRTGC.OBJ object
=> GRADLIB.LIB, PRTGC.ASM.

CUG286.85-README.1ST doc
System requirements and reference for execution of GRAD. =>
GRADLIB.LIB.

CUG286.86-README.DOC doc
Introduction to GRAD: capabilities with guides to additional
documentation. => GRADLIB.LIB.

CUG286.87-READSTR.C source
Read a line from standard input. => GRADLIB.LIB.

CUG286.88-RECT.C source
Draws a rectangle. => GRADLIB.LIB.

CUG286.89-ROTATE.C source
This is a program to rotate the characters in a font file by 90
degrees in anti-clockwise direction. => GRADLIB.LIB.

CUG286.90-S16X16.FON data
Font file (16 x 16). => GRADLIB.LIB.

CUG286.91-S5X6.FON data
Font file (5 x 6). => GRADLIB.LIB.

CUG286.92-S6X8.FON data
Font file (6 x 8). => GRADLIB.LIB.

CUG286.93-S6X8D.FON data
Font (6 x 8 sideways) file. => GRADLIB.LIB.

CUG286.94-S8X8.FON data
Font file (8 x 8). => GRADLIB.LIB.

CUG286.95-S9X14.FON data
Font file (9 x 14). => GRADLIB.LIB.

CUG286.96-SELECT.C source
Selectfont -- select the current font number. Select frame -- select
the current frame. => GRADLIB.LIB.

CUG286.97-SINVAL.C source
=> GRADLIB.LIB.

CUG286.98-SIZE.C source
Selects font size. => GRADLIB.LIB.

CUG286.99-SPECIAL1.C source
Example of using SPACING FUNC. => GRADLIB.LIB.

CUG286.100-SWPRT.C source
Sideways printing program. => GRADLIB.LIB.

CUG286.101-TANVAL.C source
Tan value for degree 0, 0.5, 1.5, ... 43.5, 44.5, 45. => GRADLIB.LIB.

CUG286.102-TEST.DOC doc
Directions for using example files and sample programs to test
installation. => GRADLIB.LIB.

CUG286.103-TEX2GRAD.C source
Program to convert a TEX pixel file (1002 PXL file) to a GRAD font
file. GRADLIB.LIB.

CUG286.104-TIME.MAK make
=> GRADLIB.LIB.

CUG286.105-VHLINE.C source
Dot (x,y) -- write a single dot to a frame HorzLine (x,y,length,width)
-- draw a horizontal line VertLine (x,y,length,width) -draw a vertical
line. => GRADLIB.LIB.

CUG286.106-VHLN.ASM source
Level 1 horizontal line, vertical line drawing and dotplotting
routines. => GRADLIB.LIB. Assembly code.

CUG286.107-WARNING.CUG doc
Naming conventions for duplicate filenames.

CUG286.108-WRITE.C source
Two public routines: writec--write a single character to the current
frame using currently selected font writeStr--write a character string
to the current frame using currently selected font. => GRADLIB.LIB.

CUG286.109-XHLINE.C source
Creates a horizontal line extended at both ends. => GRADLIB.LIB.

==============================================================================
CUG287 -
-----------

GRAD for Turbo C
By Conrad Kwok. [share1] 3 disks. See CUG286

CUG287.01-AMCSC10.FON data
Caps and small caps font. => GRADLIB.LIB.

CUG287.02-AMR14.FON data
Roman font. => GRADLIB.LIB.

CUG287.03-AMR7.FON data
Roman font. => GRADLIB.LIB.

CUG287.04-AMR7D.FON data
Roman sideways font. => GRADLIB.LIB.

CUG287.05-AMSL8.FON data
Slant font. => GRADLIB.LIB.

CUG287.06-AMTT8.FON data
TeleType font. => GRADLIB.LIB.

CUG287.07-ARC2.C source
Draws an arc (part of a circle). => GRADLIB.LIB, ARCPOINT.C,
ARCSUPP.C.

CUG287.08-ARCPOINT.C source
Gives two endpoints of ARC2 or EARC2. => GRADLIB.LIB.

CUG287.09-ARCSUPP.C source
Two supplemental routines for ARC2 and EARC2. => GRADLIB.LIB.

CUG287.10-BLKCLIP.C source
Blockclip is a routine which clips a block against the window. =>
GRADLIB.LIB.

CUG287.11-BLKCOPY.C source
Copy a data block between two frames. => GRADLIB.LIB.

CUG287.12-BLKLDSV.C source
Blockload - load a block from the disk Blocksave - save a block to the
disk. => GRADLIB.LIB.

CUG287.13-CALCADDR.ASM source
Calculates the word address of a point in bytes. => GRADLIB.LIB.
Assembly code.

CUG287.14-CCALCADD.OBJ object
=> GRADLIB.LIB, CALCADDR.ASM.

CUG287.15-CFTABLE.OBJ object
=> GRADLIB.LIB. This file was extracted from archives, originally
\COLOR.ARC\FTABLE.OBJ.

CUG287.16-CHARDISP.ASM source
Contains character display related functions: _wrtc--move the pixel
pattern from buffer to the current frame _copyfont--copy the pixel
data to buffer for manipulation _ctextL--clip the left side of the
pixel data _ctextR--clip the right side of the pixel data. =>
GRADLIB.LIB.

CUG287.17-CIRC.ASM source
Draws a logical circle. => GRADLIB.LIB, CIRCLE.C. Assembly code.

CUG287.18-CIRCLE.C source
Contains two external usable routines to draw circle and arc
circle--draws a logical circle which will look like a circle only on a
screen with square pixels Arc1--Draw n/8 of a circle. n can be 0 to 8.
=> GRADLIB.LIB.

CUG287.19-CLINE.C source
Line (x1, y1, x2, y2) draw a line from (x1, y1) to (x2, y2)
inclusively. => GRADLIB.LIB.

CUG287.20-COLOR.MAK make
Makefile for FTABLE.OBJ. CALCADDR.OBJ, PLOTTYPE.OBJ (parts of CGA
driver). => GRADLIB.LIB.

CUG287.21-COORD.C source
Contains functions for setting origins and window coordinates. =>
GRADLIB.LIB.

CUG287.22-DISPFONT.OBJ object
Display font program object file. => GRADLIB.LIB.

CUG287.23-DOSREAD.ASM source
DOSREAD of GDS. Contains _dosread, _dosopen, _dosseek, and _dosclose.
=> GRADLIB.LIB. Assembly code.

CUG287.24-DRAW.C source
Interprets a string of commands for drawing. => GRADLIB.LIB.

CUG287.25-EARC2.C source
Draws an arc (part of an ellipse). => GRADLIB.LIB, ARCPOINT.C,
ARCSUPP.C.

CUG287.26-ELLIPSE.C source
Three external usable routines to draw ellipse and arc. =>
GRADLIB.LIB.

CUG287.27-ENVIRON.C source
Two functions: EnvSave -- saves the environment; envRsto -- restores
the environment. => GRADLIB.LIB.

CUG287.28-ERR.C source
Example of using the user error handling features. => GRADLIB.LIB.

CUG287.29-EXECFUNC.ASM source
Source file for compiling with executable functions. => GRADLIB.LIB.
Assembly code.

CUG287.30-EXECFUNC.OBJ object
=> GRADLIB.LIB, EXECFUNC.ASM.

CUG287.31-EXETIME.C source
Source file for timing GRAD function. => GRADLIB.LIB.

CUG287.32-EXETIME.MAK make
Makefile for compiling TIME.C. => GRADLIB.LIB.

CUG287.33-FCIRCLE.C source
FillCircle -- draw a solid circle FillEllipse -draw a solid ellipse.
=> GRADLIB.LIB.

CUG287.34-FILE11MS.TXT doc
Names, lengths and one-line descriptions of some files. =>
GRADLIB.LIB.

CUG287.35-FILEFON.TXT doc
Names, lengths and descriptions of some font files. => GRADLIB.LIB.

CUG287.36-FILL.C source
Solid Fill -- entirely fill a region Pattern fill -fill the area by
the pattern specified. => GRADLIB.LIB.

CUG287.37-FONT.C source
Loadfont -- loads a font file from the disk Removefont -- removes a
font from memory. => GRADLIB.LIB.

CUG287.38-FRAME.C source
CreateFrame -- creates a new frame RemvFrame -- removes a frame from
GRAD and releases the memory. => GRADLIB.LIB.

CUG287.39-FTABLE.C source
=> GRADLIB.LIB.

CUG287.40-GDS.H header
=> GRADLIB.LIB.

CUG287.41-GDSLIB.MAK make
=> GRADLIB.LIB.

CUG287.42-GDSLIB.NAM batch
=> GRADLIB.LIB.

CUG287.43-GLOBAL.C source
Initializes global variables. => GRADLIB.LIB.

CUG287.44-GRADARC.H header
Header file for ARC1 and EARC1. => GRADLIB.LIB.

CUG287.45-GRADEGS.GCM source
Command file example for interp and mprint. => GRADLIB.LIB.

CUG287.46-GRADENV.H header
Header file for using EnvSave and EnvRsto. => GRADLIB.LIB, ENVIRON.C.

CUG287.47-GRADEPSN.C source
Printer controls for the EPSON FX-80. => GRADLIB.LIB.

CUG287.48-GRADERR.C source
Error handling routine. => GRADLIB.LIB.

CUG287.49-GRADFILE.DOC doc
Brief description of GRAD archives. => GRADLIB.LIB.

CUG287.50-GRADIO.H header
Header file for WriteStr, ReadStr and writec.

CUG287.51-GRADLIB.LIB library
GRAD is a graphics library containing functions for drawing dots,
lines, circles, ellipses and arcs and functions for region filling,
window management, character display, and printing. [MS-DOS: TC1.0]

CUG287.52-GRADOKI.C source
Printer controls for Okidata ML192. => GRADLIB.LIB.

CUG287.53-GRADPROG.DOC doc
GRAD programmer's reference manual. => GRADLIB.LIB.

CUG287.54-GRADUSER.DOC doc
GRAD Graphics Library User's Manual Version 1.1 for IBM PC/XT/AT or
compatibles. => GRADLIB.LIB.

CUG287.55-GRADVAR.H header
GRAD global variables. => GRADLIB.LIB.

CUG287.56-HCALCADD.OBJ object
=> GRADLIB.LIB, CALCADDR.ASM.

CUG287.57-HFTABLE.OBJ object
=> GRADLIB.LIB.

CUG287.58-HLCOPY.ASM source
Contains Level 1 horizontal line, vertical line drawing, and dot
plotting routines. => GRADLIB.LIB. Assembly code.

CUG287.59-HLNLMT.ASM source
=> GRADLIB.LIB. Assembly code.

CUG287.60-INIT.C source
Source for GRAD initialization and cleanup functions. => GRADLIB.LIB.

CUG287.61-INSTALL.DOC doc
Installation procedure and instructions on using GRAD. => GRADLIB.LIB.

CUG287.62-INTERP.C source
This program is used to interpret GRAD functions in restricted C
syntax of function calls. The method used is recursive descent. =>
GRADLIB.LIB.

CUG287.63-INTERP.MAK make
Makefile for compiling INTERP.EXE from INTERP.C and EXECFUNC.ASM. =>
GRADLIB.LIB, INTERP.C, EXECFUNC.ASM.

CUG287.64-JLASER.DOC doc
Instructions for using a laser printer with a JLASER card. =>
GRADLIB.LIB.

CUG287.65-LINE.ASM source
Level 1 line drawing function. => GRADLIB.LIB. Assembly code.

CUG287.66-MISC.ASM source
Miscellaneous GDS functions. => GRADLIB.LIB. Assembly code.

CUG287.67-MPRINT.C source
Sample program. => GRADLIB.LIB.

CUG287.68-MPRINT.MAK make
=> GRADLIB.LIB.

CUG287.69-MPRT.GCM data
One of the example files for MPRINT. => GRADLIB.LIB, MPRINT.C.

CUG287.70-MPRT.TXT doc
Another one of the example files for MPRINT. => GRADLIB.LIB, MPRINT.C.

CUG287.71-NEXTXY.C source
Gives next (x,y) location for ReadStr or WriteStr. => GRADLIB.LIB.

CUG287.72-OE7.FON data
Old English Font. => GRADLIB.LIB.

CUG287.73-OKI.MAK make
Makefile for compiling GRADOKI.C with PRTGC.ASM. => GRADLIB.LIB.

CUG287.74-PFRAME.C source
Printing functions. => GRADLIB.LIB.

CUG287.75-PFRAME.OBJ object
=> GRADLIB.LIB, PFRAME.C.

CUG287.76-PLOTTYPE.ASM source
This file contains the lowest level routine in writing and accessing
the frame memory, and other related routines. => GRADLIB.LIB
PLOTTYPE.OBJ. Assembly code.

CUG287.77-PLOTTYPE.OBJ object
=> GRADLIB.LIB, PLOTTYPE.ASM.

CUG287.78-PRT.ASM source
Low level functions for printing, including: prt -- convert an 8
integer array for printing, pbflush -- flush everything in buffer to
printer, rmvO -- remove trailing zeroes. => GRADLIB.LIB.

CUG287.79-PRTCNTL.C source
Printer Controls. => GRADLIB.LIB.

CUG287.80-PRTCNTL.OBJ object
=> GRADLIB.LIB, PRTCNTL.C.

CUG287.81-PRTFONT.C source
=> GRADLIB.LIB.

CUG287.82-PRTFONT.H header
=> GRADLIB.LIB, PRTFONT.C.

CUG287.83-PRTGC.ASM source
prtc -- append a character to the buffer. => GRADLIB.LIB. Assembly
code.

CUG287.84-PRTGC.OBJ object
=> GRADLIB.LIB, PRTGC.ASM.

CUG287.85-README.1ST doc
System requirements and reference for execution of GRAD. =>
GRADLIB.LIB.

CUG287.86-README.DOC doc
Introduction to GRAD: capabilities with guides to additional
documentation. => GRADLIB.LIB.

CUG287.87-READSTR.C source
Read a line from standard input. => GRADLIB.LIB.

CUG287.88-RECT.C source
Draws a rectangle. => GRADLIB.LIB.

CUG287.89-ROTATE.C source
This is a program to rotate the characters in a font file by 90
degrees in anti-clockwise direction. => GRADLIB.LIB.

CUG287.90-S16X16.FON data
Font File (16 x 16). => GRADLIB.LIB.

CUG287.91-S5X6.FON data
Font file (5 x 6). => GRADLIB.LIB.

CUG287.92-S6X8.FON data
Font file (6 x 8). => GRADLIB.LIB.

CUG287.93-S6X8D.FON data -
Font (6 x 8 sideways) file. => GRADLIB.LIB.

CUG287.94-S8X8.FON data
Font File (8x8). => GRADLIB.LIB.

CUG287.95-S9X14.FON data
Font File (9x14). => GRADLIB.LIB.

CUG287.96-SELECT.C source
Selectfont -- select the current font number Selectframe -- select the
current frame. => GRADLIB.LIB.

CUG287.97-SINVAL.C source
=> GRADLIB.LIB.

CUG287.98-SIZE.C source
Selects font size. => GRADLIB.LIB.

CUG287.99-SPECIAL1.C source
Example of using SPACING_FUNC. => GRADLIB.LIB.

CUG287.100-STACK.ASM source
Level 1 horizontal line, vertical line, drawing, and dot plotting
routines. => GRADLIB.LIB. Assembly code.

CUG287.101-SWPRT.C source
Sideways printing program. => GRADLIB.LIB.

CUG287.102-TANVAL.C source
Tan value for degree 0, 0.5, 1.5, ... 43.5, 44.5, 45. => GRADLIB.LIB.

CUG287.103-TC-INST.DOC doc
Installation, procedure and instructions on using GRAD. =>
GRADLIB.LIB, INSTALL.DOC.

CUG287.104-TC-USER.UPD doc
Supplement to the GRAD User's Manual (written for MSC) explaining
differences in Turbo C operations. => GRADLIB.LIB. [MSC]

CUG287.105-TEST.DOC doc
Directions for using example files and sample programs to test
installation. => GRADLIB.LIB.

CUG287.106-TEX2GRAD.C source
Program to convert a TEX pixel file (1002 PXL file) to a GRAD font
file. => GRADLIB .LIB.

CUG287.107-VHLINE.C source
Dot (x,y) -- write a single dot to a frame HorzLine (x,y,length,width)
-- draw a horizontal line VertLine (x,y,length, width) -draw a
vertical line. => GRADLIB.LIB.

CUG287.108-VHLN.ASM source
Level 1 horizontal line, vertical line drawing and dot plotting
routines. => GRADLIB.LIB. Assembly code.

CUG287.109-WARNING.CUG doc
Naming conventions for duplicate filenames.

CUG287.110-WRITE.C source
Two public routines: writec -- write a single character to the current
frame using currently selected font WriteStr -- write a character
string to the current frame using currently selected font. =>
GRADLIB.LIB.

CUG287.111-XHLINE.C source
Creates a horizontal line extended at both ends. => GRADLIB.LIB.

==============================================================================
CUG288 -
-----------

Traveling Salesman, SD and Master Environment Access
[public] 1 disk. This volume contains contributions from Kevin E.
Knauss (MD), Brain Faquhar (Tokyo, JAPAN) and Scott Robert Ladd.
Knauss has contributed a set of programs which illustrate how simple
heuristics can produce acceptable solutions to the traveling salesman
problem. Faquhar has contributed SD, a replacement for the MS-DOS CD
command. SD allows logical names, movement across disk drives, and
easy switching between last and current directories. The program
requires Microsoft C v5.1 or Quick C. Scott Robert Ladd has
contributed a set of functions to access and modify a global master
environment. These functions are described in an article that appeared
in The C User's Journal, vol. 7.5. The source code will work with most
MS-DOS C compilers. It has been tested with Microsoft C v5.1, Quick c
v2.0, Turbo C v2.0, and Zortech C v1.07.

CUG288.01-10CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of ten cities.
=> TSP.C, 10CITY.MTX.

CUG288.02-10CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 10CITY.IN data.
=> TSP.C, 10CITY.IN.

CUG288.03-20CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 20 cities.
=> TSP.C, 20CITY.MTX.

CUG288.04-20CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 20CITY.IN data.
=> TSP.C, 20CITY.IN.

CUG288.05-25CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 25 cities.
=> TSP.C, 25CITY.MTX.

CUG288.06-25CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 25CITY.IN data.
=> TSP.C, 25CITY.IN.

CUG288.07-20PT.C source
By Kevin E. Knauss. TwoOpt. 2-Opt Tour Improvement Algorithm. =>
TSP.C.

CUG288.08-33CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 33 cities.
=> TSP.C, 33CITY.MTX.

CUG288.09-33CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 33CITY.IN data.
=> TSP.C, 33CITY.IN.

CUG288.10-30PT.C source
By Kevin E. Knauss. ThreeOpt. 3-Opt Tour Improvement Algorithm. =>
TSP.C.

CUG288.11-42CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 42 cities.
=> TSP.C, 42CITY.MTX.

CUG288.12-42CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 42CITY.IN data.
=> TSP.C, 42CITY.IN.

CUG288.13-48CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 48 cities.
=> TSP.C, 48CITY.MTX.

CUG288.14-48CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 48CITY.IN data.
=> TSP.C, 48CITY.IN.

CUG288.15-ARTICLE.TSP doc
By Kevin E. Knauss. A Poor Man's Solution to the Traveling Salesman.
Statement of problem. Background of difficulties and applications
related to it. Terminology and approach used toward it.
Implementation, observations and conclusion. => TSP.C.

CUG288.16-BLDMTX.C source
By Kevin E. Knauss. Build Matrix (main), Input Matrix, Output Matrix.
Prompts user for data to build distance matrix. => TSP.C.

CUG288.17-BOOLEAN.H header
By Kevin E. Knauss. Boolean type header file. => TSP.C.

CUG288.18-CONTENTS.DOC doc
By Kevin E. Knauss, Scott Robert Ladd, Brian Fuguhar. List of authors
and their contributions to this volume.

CUG288.19-FIGURE1.TSP doc
By Kevin E. Knauss. Tour Improvement Techniques. Graphic illustration
of a) point proximity, b) chain proximity, c) chain proximity and
orientation, and d) chain orientation in place. => TSP.C.

CUG288.20-FIGURE2.TSP doc
By Kevin E. Knauss. 10, 20, and 25 City Results. Tabulation of tour
length, time, amount of improvement, and percentage from optimum for
each Tour Improvement Technique under each city model. => TSP.C,
FIGURE3.TSP.

CUG288.21-FIGURE3.TSP doc
By Kevin E. Knauss. 33, 42, and 48 City Results. => TSP.C,
FIGURE2.TSP.

CUG288.22-FN.C source
By Kevin E. Knauss. Far Neighbor, High Arc. Farthest Neighbor Tour
Building Algorithm. => TSP.C.

CUG288.23-HYBRID.C source
By Kevin E. Knauss. Point Proximity/2-Opt Hybrid tour improvement
algorithm. => TSP.C.

CUG288.24-KNAUSS.TXT doc
By Kevin E. Knauss. A Poor Man's Solution to the Traveling Salesman.
Text of ARTICLE.TSP. => TSP.C, ARTICLE.TSP.

CUG288.25-MSTR_ENV.C source
By Scott Robert Ladd. Master Environment Access. Facilitates access to
the Master Environment for information and modification. =>
MSTR_ENV.TXT. [MS-DOS2, MS-DOS3: MSC5, QUICKC2.0, TC2.0, ZORTECHC]

CUG288.26-MSTR_ENV.TXT doc
By Scott Robert Ladd. Accessing the Master Environment in MS-DOS.
Describes rationale and function of Master Environment Access. => MSTR
ENV.C.

CUG288.27-NN.C source
By Kevin E. Knauss. Near Neighbor, Cheap Arc. Nearest Neighbor Tour
Building Algorithm. => TSP.C.

CUG288.28-NODELIST.H header
By Kevin E. Knauss. Node pointer type declaration header file. =>
TSP.C.

CUG288.29-POPT.C source
By Kevin E. Knauss. Point Opt. Point Proximity Tour Improvement
Algorithm. => TSP.C.

CUG288.30-PRTMTX.C source
By Kevin E. Knauss. Print Matrix (main). Prints distance matrix in
readable format. TSP.C.

CUG288.31-REFERENC.TSP doc
By Kevin E. Knauss. Research Bibliography. => TSP.C.

CUG288.32-RESULTS.TAB doc
By Kevin E. Knauss. Tabulation of tour length, time, amount of
improvement and percentage from optimum for each Tour Improvement
Technique under each city model. => TSP.C.

CUG288.33-RESUME.TSP doc
By Kevin E. Knauss. Brief professional biography. => TSP.C.

CUG288.34-SD.C source
By Brian Fuguhar. Enhanced ChDir Command. SD (Set Directory) is
upwardly compatible with CD all options of CD are implemented. SD
allows drive specification and changes logged drive, supplies help,
toggles between current & last directory, allows use of logical names,
and can implement a program at the specified destination. [MS-DOS:
MSC5, QUICKC]

CUG288.35-TIME.C source
By Kevin E. Knauss. Get Time, Elapsed Time. Samples clock counter to
find elapsed time. => TSP.C. Function Get Time is MIX.C Compiler
Dependent.

CUG288.36-TSP.C source
By Kevin E. Knauss. TSP (main), ArcCost, Terminate, Print Circuit,.
Traveling Salesman Problem Driver. => NN.C, POPT.C HYBRID.L, FN.C,
BOOLEAN.H, NODELIST.H, TSP.H, BLDMTX.C, PRTMTX.C, TIME.C, 30PT.C,
20PT.C. [MS-DOS: MIXC]

CUG288.37-TSP.H header
By Kevin E. Knauss. => TSP.C.

==============================================================================
CUG289 -
-----------

Othello
By Gary Culp, Jonathan Ward. [public] 1 disk. Gary Culp and Jonathan
Ward, TX, have submitted the complete source code for their Othello
Game. Although the program was compiled under Microsoft C v5.1, it
should be reasonably easy to port since it uses only library routines
described in The C Programming Language, Second Edition (K&R 2nd).

CUG289.01-BDTTY.C source
By Jonathan Ward. Contains the board display routines for TTY type
terminals. => OTHELLO.C.

CUG289.02-BD_EVAL.C source
By Gary Culp. Calculates a score for a board. => OTHELLO.C.

CUG289.03-BLDFA.C source
By Jonathan Ward, Gary Culp. Separate utility which builds table in
FATABL.C.=> OTHELLO.C.

CUG289.04-BLDFA.EXE executable
By Jonathan Ward, Gary Culp. => BLDFA.C.

CUG289.05-BUILDLVL.C source
By Gary Culp. Build the tree of moves down to a given level. =>
OTHELLO.C.

CUG289.06-DUMPTREE.C source
By Jonathan Ward, Gary Culp. Dump entire move tree (for debugging). =>
OTHELLO.C.

CUG289.07-FATABL.C source
By Jonathan Ward. Contains the fa-bits index table for the array of
full-axis bits. => OTHELLO.C.

CUG289.08-GETMOV.C source
By Jonathan Ward, Gary Culp. Functions that read the player's move,
verify it and display the new screen. => OTHELLO.C.

CUG289.09-HEADER.C source
Comment header template for source-code programs. => OTHELLO.C.

CUG289.10-L.BAT batch
By Jonathan Ward. Executes linkage. => OTHELLO.C.

CUG289.11-MINIMAX.C source
By Jonathan Ward. Tree searching minimax algorithms. => OTHELLO.C.

CUG289.12-MOVEIT.C source
By Jonathan Ward, Gary Culp. Verifies a move, updates and displays the
board. OTHELLO.C.

CUG289.13-MOVE_GEN.C source
By Gary Culp. Move generator. Finds a move and builds a list of
affected pieces. => OTHELLO.C.

CUG289.14-OTHDBM.C source
By Jonathan Ward. Database Management routines. => OTHELLO.C.

CUG289.15-OTHELLO.C source
By Jonathan Ward. Main C function: Initializes all sections of the
program, determines order of play, sets up initial board
configuration, displays board and begins play, determines depth of
"look ahead" play. => BDTTY.C, BD_EVAL.C, BUILDLVL.C, BLDFA.C,
DUMPTREE.C, FATABL.C, GETMOV.C, L.BAT, MINIMAX.C, MOVE_GEN.C,
OTHOBM.C, OTHELLO.H, OTHELLO.LNK, OTHELLO.MAK, PIECE_CT.C, PROTECT.C,
TESTDISP.C, MOVEIT.C, TESTDBM.C. [MS-DOS: MSC5]

CUG289.16-OTHELLO.EXE executable
By Jonathan Ward. => OTHELLO.C.

CUG289.17-OTHELLO.H header
By Jonathan Ward, Gary Culp. Global function prototypes, external
variable declarations, and manifest constant definitions for the
Othello program. => OTHELLO.C.

CUG289.18-OTHELLO.LNK link
By Jonathan Ward, Gary Culp. OTHELLO.C.

CUG289.19-OTHELLO.MAK make
By Jonathan Ward, Gary Culp. => OTHELLO.C.

CUG289.20-PIECE_CT.C source
By Gary Culp. Count e number of pieces of a given type or types. Check
each player's ability to move. => OTHELLO.C.

CUG289.21-PROTECT.C source
By Gary Culp. Algorithm for determining which pieces in a given board
configuration are permanent. (Contains extensive documentation.). =>
OTHELLO.C.

CUG289.22-README.DOC doc
By Jonathan Ward, Gary Culp. List of files and descriptions, known
bugs, tentative enhancements. => OTHELLO.C.

CUG289.23-TESTDBM.C source
By Jonathan Ward, Gary Culp. Dummy caller for testing database
manager. => OTHELLO.C.

CUG289.24-TESTDISP.C source
By Jonathan Ward, Gary Culp. Dummy caller for testing display
routines. => OTHELLO.C.

==============================================================================
CUG290 -
-----------

FLEX
By Daniel R. Haney. [public] 2 disks. Daniel R. Haney (MA) has ported
FLEX, a fast lexical analyzer generator, to MS-DOS. FLEX is a rewrite
of lex intended to correct some of that tool's deficiencies. In
particular, flex generates lexical anaylzers much faster, and the
analyzers use smaller tables and run faster. FLEX was developed by
Vern Paxson. Haney adapted the code to conform to MS-DOS file naming
conventions and added prototype declarations for Microsoft v5.1. The
disk contains a complete set of source code documentation, makefile,
and a word count program as an example. Haney's implementation of Flex
can be compiled under MS-DOS and UNIX. Adam Blum has supplied a fix
for a union field bug for compilation under large model. Robert
Artigas has added an OS/2 executable. For more details see the
narrative description of this package in Section 2.

CUG290.01-CCL.C source
By Vern Paxson, Daniel R. Haney. Routines for character classes. =>
MAIN.C, CCL.H.

CUG290.02-CCL.H header
By Daniel R. Haney. Prototypes, flex project. => MAIN.C.

CUG290.03-CHANGES doc
By Daniel R. Haney. Differences between DOS, UNIX, and beta-test
releases. => MAIN.C.

CUG290.04-DFA.C source
By Vern Paxson, Daniel R. Haney, Adam Blum. DFA construction routines.
=> MAIN.C, DFA.H.

CUG290.05-DFA.H header
By Daniel R. Haney. => MAIN.C.

CUG290.06-DOSFLEX.EXE executable
By Daniel R. Haney. Fast Lexical analyzer generator. => MAIN.C.
[MS-DOS: MSC5]

CUG290.07-ECS.C source
By Vern Paxson, Daniel R. Haney. Equivalence class routines. =>
MAIN.C, ECS.H.

CUG290.08-ECS.H header
By Daniel R. Haney. => MAIN.C.

CUG290.09-EXTERNS.DEF header
By Daniel R. Haney. Collected external function declarations, for
reference. => MAIN.C.

CUG290.10-FASTSKEL.C source
By Daniel R. Haney. A lexical scanner generated by FLEX. => MAIN.C,
FASTSKEL.H.

CUG290.11-FASTSKEL.H header
By Daniel R. Haney. Macro definitions for fast/full-table C/FTL
programs generated by FLEX. => MAIN.C.

CUG290.12-FLEX.LNK link
By Daniel R. Haney. => MAIN.C.

CUG290.13-FLEX.MAK make
By Daniel R. Haney. => MAIN.C. [ OS/2 1.2 EE, IBM C/2]

CUG290.14-FLEX.MAN doc
By Vern Paxson, Daniel R. Haney. UNIX Programmer's Manual.
Preformatted vanilla ascii manual. => MAIN.C.

CUG290.15-FLEX.MAP doc
By Vern Paxson, Daniel R. Haney. Map of flex. => MAIN.C.

CUG290.16-FLEXDEF.H header
By Vern Paxson, Daniel R. Haney, Kevin Gong, Roberto Artigas Jr., Adam
Blum. Definitions for FLEX. => MAIN.C.

CUG290.17-HAIRY.PRS source
By Vern Paxson, Daniel R. Haney. MAIN.C.

CUG290.18-MAIN.C source
By Vern Paxson, Kevin Gong, Roberto Artigas Jr., Jef Poskanzer. Main
source program for the Fast LEXical analyzer generator. =>
DOSFLEX.EXE, CCL.C, DFA.C, ECS.C, FASTSKEL.C, MISC.C, NFA.C, PARSE.C,
SIMPL.PRS, HAIRY.PRS, PARSE.Y, FLEXDEF.H, MAIN.H, SCAN.C, SCAN.L,
WCNT.L, FLEX.LNK, FLEX.MAK, OS2FLEX.EXE. [OS/2, MS-DOS: MSC5]

CUG290.19-MAIN.H header
By Daniel R. Haney. => MAIN.C.

CUG290.20-MAKEFILE.UNX doc
By Vern Paxson. UNIX makefile, for documentation. => MAIN.C.

CUG290.21-MISC.C source
By Vern Paxson, Daniel R. Haney. Miscellaneous FLEX routines. =>
MAIN.C MISC.H.

CUG290.22-MISC.H header
By Daniel R. Haney. => MAIN.C.

CUG290.23-NFA.C source
By Vern Paxson, Daniel R. Haney. NFA construction routines. => MAIN.C,
NFA.H.

CUG290.24-NFA.H header
By Daniel R. Haney. => MAIN.C.

CUG290.25-OS2FLEX.EXE executable
By Daniel R. Haney. Fast LEXical analyzer generater. => MAIN.C. IOS/21

CUG290.26-PARSE.C source
By Roberto Artigas Jr.. A Bison parser, made from PARSE.Y. => MAIN.C,
PARSE.H.

CUG290.27-PARSE.H header
By Roberto Artigas Jr.. => MAIN.C.

CUG290.28-PARSE.Y source
By Roberto Artigas Jr.. Parser for FLEX input. => MAIN.C.

CUG290.29-README doc
By Vern Paxson. Notes on the initial FLEX distribution. => MAIN.C.

CUG290.30-README.2 doc
By Daniel R. Haney. Amendment to README, for DOS version distribution,
concerning file naming conventions. => MAIN.C.

CUG290.31-SCAN.C source
By Roberto Artigas Jr.. A lexical scanner generated by FLEX. =>
MAIN.C.

CUG290.32-SCAN.L source
By Roberto Artigas Jr.. Scanner for FLEX input. => MAIN.C.

CUG290.33-SEARCH.CMD batch
By Daniel R. Haney. Batch file using egrep. => MAIN.C.

CUG290.34-SKELCOM.H header
By Vern Paxson. Common macro definitions for VFTL programs generated
by FLEX. => MAIN.C.

CUG290.35-SKELETON.C source
By Daniel R. Haney. A lexical scanner generated by FLEX. => MAIN.C,
SKELETON.H.

CUG290.36-SYM.C source
By Vern Paxson, Daniel R. Haney. Symbol table routines. => MAIN.C,
SYM.H.

CUG290.37-SYM.H header
By Daniel R. Haney. => MAIN.C.

CUG290.38-TBLCMP.C source
By Vern Paxson, Daniel R. Haney. Table compression routines. =>
MAIN.C, TBLCMP.H.

CUG290.39-TBLCMP.H header
By Daniel R. Haney. => MAIN.C.

CUG290.40-TIMINGS doc
By Vern Paxson. A brief note comparing timings for FLEX vs LEX. =>
MAIN.C.

CUG290.41-WCNT.L source
By Daniel R. Haney. Example word count program. => MAIN.C.

CUG290.42-YYLEX.C source
By Vern Paxson, Daniel R. Haney. Scanner front-end for FLEX. Scans for
a regular expression token.

==============================================================================
CUG291 -
-----------

JJb for Quick C and Turbo C Programmers
By John James Broderick. [share2] disk. JJB 1.2 is a shareware screen
functions library for Quick C and Turbo C. This library enables you to
program in a high-level environment while maintaining complete low
level control over your display and keyboard. For example, you can
easily set up pull-down menus without writing hundreds of lines of
code. The library also provides an interface for data entry. The disk
contains the object module for Quick C and Turbo C, documentation,
demo, and five example programs. The library includes functions for
character control, keyboard control, array manipulations, video
control, windowing, pull down menu customizing, and help functions.
For more details see the narrative description of this package in
Section 2.

CUG291.01-JJB-FORM.DOC doc
Registration form. => JJB.EXE.

CUG291.02-JJB-READ.DOC doc
Main documentation. => JJB.EXE.

CUG291.03-JJB.EXE executable
Introductory Demo. JJB 1.2 is a screen functions library for
programming in a high-level environment while maintaining low-level
control over keyboard and display. It also provides an interface for
data entry. => JJBPRINT.BAT, JJBQC-FI.BAT JJBQC-LI.BAT, JJBQCS1.BAT,
JJBREMOV.BAT, JJBTC-FI.BAT, JJBTC-LI.BAT, JJBSHOW1.BAT, JJBKBD.H,
JJBSET.H. [MS-DOS: TC, QUICKC]

CUG291.04-JJBFILES.DOC doc
List of all JJB files. => JJB.EXE.

CUG291.05-JJBINSTL.DOC doc
How to install JJB for Quick C and Turbo C. => JJB.EXE.

CUG291.06-JJBKBD.H header
Keyboard definitions and explanation of the importance of the get_ch()
function to JJB. => JJB.EXE.

CUG291.07-JJBPRINT.BAT batch
Prints JJB files with important documentation. => JJB.EXE,
JJB-FORM.DOC, JJB-READ.DOC, JJBFILES.DOC, JJBINSTL.DOC.

CUG291.08-JJBQC-FI.BAT batch
Final installation. => JJBQC-LI.BAT JJBQC.OBJ, JJBQCOOL.OBJ,
JJBQCINP.OBJ, JJB.EXE. [ QUICKC]

CUG291.09-JJBQC-LI.BAT batch
Learning installation. => JJB.EXE, JJBQC-FI.BAT. [ QUICKC]

CUG291.10-JJBQC.OBJ object
Main object file for Quick C JJB input and enter functions. =>
JJB.EXE. [ QUICKC]

CUG291.11-JJBQCDOL.OBJ object
For input dollar functions. => JJB.EXE. [ QUICKC]

CUG291.12-JJBQCINP.OBJ object
For input and enter functions. => JJB.EXE. [ QUICKC]

CUG291.13-JJBQCS1.BAT batch
Loads JJBSHOW1 with JJB.QLB. => JJBQCS2.BAT. [ QUICKC]

CUG291.14-JJBQCS2.BAT batch
Loads JJBSHOW2 with JJB.QLB. => JJBQCS3.BAT. [ QUICKC]

CUG291.15-JJBQCS3.BAT batch
Loads JJBSHOW3 with JJB.QLB. => JJBQCS4.BAT. [ QUICKC]

CUG291.16-JJBQCS4.BAT batch
Loads JJBSHOW4 with JJB.QLB. => JJBQCS5.BAT. [ QUICKC]

CUG291.17-JJBQCS5.BAT batch
Loads JJBSHOW5 with JJB.QLB. => JJB.EXE. [ QUICKC]

CUG291.18-JJBREMOV.BAT batch
Reverse installation, removes files. => JJB.EXE.

CUG291.19-JJBSET.H header
GET and SET definitions. => JJB.EXE.

CUG291.20-JJBSHOW1.C source
Sample program. => JJBSHOW2.C.

CUG291.21-JJBSHOW2.C source
Sample program. => JJBSHOW3.C.

CUG291.22-JJBSHOW3.C source
Sample program. => JJBSHOW4.C.

CUG291.23-JJBSHOW4.C source
Sample program. => JJBSHOW5.C.

CUG291.24-JJBSHOW5.C source
Sample program. => JJB.EXE, JJBSHOW5.EXE.

CUG291.25-JJBSHOW5.EXE executable
=> JJBSHOW5.C.

CUG291.26-JJBTC-FI.BAT batch
Final Installation. => JJB.EXE, JJBTC-LI.BAT, JJBTC.OBJ, JJBTCDOL.OBJ,
JJBTCINP.OBJ. [ TC]

CUG291.27-JJBTC-LI.BAT batch
Learning Installation. => JJB.EXE, JJBTC-FI.BAT. [ TC]

CUG291.28-JJBTC.OBJ batch
Main object file for Turbo C JJB input and enter functions. =>
JJB.EXE. [ TC]

CUG291.29-JJBTCDOL.OBJ object
For input dollar functions. => JJB.EXE. [ TC]

CUG291.30-JJBTCINP.OBJ object
For input and enter functions. => JJB.EXE. [ TC]

==============================================================================
CUG292 -
-----------

ASxxxx C Cross Assemblers
By Alan R. Baldwin. [public] 4 disks. This package is a collection of
cross assemblers written in C for the 6800 (6802/6808), 6801 (hd6303),
6804, 6805, 6809, 6811, 8085 (8080), and z80 (hd64180)
microprocessors. Each assembler has a device specific section which
includes: . device description, byte order, and file extension
information, . a table of assembler general directives, special
directives, assembler mnemonics and associated operation mnemonics,
addressing modes, and special directives. The assemblers provide the
following features: alphabetized, formatted symbol table listings;
relocatable object modules; global symbols for linking object modules;
conditional assembly directives; reusable local symbols; include-file
processing. The companion relocation linker AS-LINK is able to: bind
multiple object modules into a single memory image; resolve
inter-module references; process absolute, relative, concatenated and
overlay attributes in data and program sections; perform byte and word
program-counter relative (pc or pcr) addressing calculations; define
absolute symbol values at link time; define absolute area base address
values at link time; produce Intel Hex
or Motorola S output files; and produce a map of the linked memory
image. The assemblers and linker have been tested using DECUS C under
TSX+ and RT-11, and with Turbo C v1.5 under MS-DOS. Complete source
code and documentation for the assemblers and linker are included with
the distribution. Additionally, test code for each assembler and
several microprocessor monitors (ASSIST05 for the 6805, MONDEB and
ASSIST09 for the 6809, and BUFFALO 2.5 for the 6811) are included as
working examples. The current version 1.5 includes updates to move
byte index, directpage mode, and byte PC relative address checking
from the assembler to the linker. This update allows byte index
offsets with external references resolved at link time, direct page
variables externally defined with addresses resolved at link time, and
branches may reference external labels or labels in other areas. The
assemblers can generate a listing file that flags the data that will
be relocated by the linker. The REL file format now has an additional
directive for paging information and has additional flags for pageO,
page, and unsigned byte formats. For more details see the narrative
description of this package in Section 2.

CUG292.01-6800.H header
For 6800 (6802/6808) assembler, machine-specific definitions. =>
AS6800.EXE.

CUG292.02-6801.H header
For 6801 (hd6303) assembler, machine-specific definitions. =>
AS6801.EXE.

CUG292.03-6804.H header
For 6804 assembler, machine-specific definitions. => AS6804.EXE.

CUG292.04-6805.H header
For 6805 assembler, machine-specific definitions. => AS6805.EXE.

CUG292.05-6809.H header
For 6809 assembler, machine-specific definitions. => AS6809.EXE.

CUG292.06-6811.H header
For 6811 assembler, machine-specific definitions. => AS6811.EXE.

CUG292.07-8085.H header
For 8085 (8080) assembler, machine-specific definitions. =>
AS8085.EXE.

CUG292.08-85 EXT.C source
Device description, byte order, and file extension info. =>
AS8085.EXE.

CUG292.09-85MCH.C source
Process machine ops for device mnemonics, addressing modes, and
special directives. => AS8085.EXE.

CUG292.10-85PST.C source
Table of assembler general directives, special directives, assembler
mnemonics and associated operation codes. => AS8085.EXE.

CUG292.11-ABSTRA.DOC doc
Abstract: brief explanation of volume 292's components.

CUG292.12-AS6800.BLD make
=> AS6800.EXE. [RT-11: DECUS C]

CUG292.13-AS6800.EXE executable
6800 (6802/6808) assembler. => ASMAIN.C, 6800.H, AS6800.BLD,
AS6800.LNK, AS6800.PRJ, MOOADR.C, MOOEXT.C, MOOMCH.C, MOOPST.C,
T6800.ASM.

CUG292.14-AS6800.LNK link
RT-11 linkage info for compilation. => AS6800.EXE. [RT-11: DECUS C]

CUG292.15-AS6800.PRJ make
Compiler instructions. => AS6800.EXE. [MS-DOS: TC]

CUG292.16-AS6801.BLD make
Native command file for compiling assembler. => AS6801.EXE. [RT-11:
DECUS C]

CUG292.17-AS6801.EXE executable
6801/6803 (hd 6303) assembler. => ASMAIN.C, 6801.H, AS6801.BLD,
AS6801.LNK, AS6801.PRJ, M01ADR.C, M01EXT.C, M01MCH.C, M01PST.C,
T6801.ASM.

CUG292.18-AS6801.LNK link
Linkage info for compilation. => AS6801.EXE. [RT-11: DECUS C]

CUG292.19-AS6801.PRJ make
Compiler instructions. => AS6801.EXE. [MS-DOS: TC]

CUG292.20-AS6804.BLD make
Native command file for compiling assembler. => AS6804.EXE. [RT-11:
DECUS C]

CUG292.21-AS6804.EXE executable
6804 assembler. => ASMAIN.C, 6804.H, AS6804.BLD, AS6804.LNK,
AS6804.PRJ, M04ADR.C, M04EXT.C, M04MCH.C, M04PST.C, T6804S.ASM.

CUG292.22-AS6804.LNK link
Linkage info for compilation. => AS6804.EXE. [RT-11: DECUS C]

CUG292.23-AS6804.PRJ make
Compiler instructions. => AS6804.EXE. [MS-DOS: TC]

CUG292.24-AS6805.BLD make
Native command file for compiling assembler. => AS6805.EXE. [RT-11:
DECUS C]

CUG292.25-AS6805.EXE executable
6805 assembler. => ASMAIN.C, 6805.H, AS6805.BLD, AS6805.LNK,
AS6805.PRJ, M05ADR.C, M05EXT.C, M05PST.C, T6805S.ASM, M05MCH.C.

CUG292.26-AS6805.LNK link
Linkage info for compilation. => AS6805.EXE. [RT-11: DECUS C]

CUG292.27-AS6805.PRJ make
Compiler instructions. => AS6805.EXE. [MS-DOS: TC]

CUG292.28-AS6809.BLD make
Native command file for compiling assembler. => AS6809.EXE. [RT-11:
DECUS C]

CUG292.29-AS6809.EXE executable
6809 assembler. => ASMAIN.C, 6809.H, AS6809.BLD, AS6809.LNK,
AS6809.PRJ, M09ADR.C, M09EXT.C, M09MCH.C, M09PST.C, T6809.ASM.

CUG292.30-AS6809.LNK link
Linkage info for compilation. => AS6809.EXE. [RT-11: DECUS C]

CUG292.31-AS6809.PRJ make
Compiler instructions. => AS6809.EXE. [MS-DOS: TC]

CUG292.32-AS6811.BLD make
Native command file for compiling assembler. => AS6811.EXE. [RT-11:
DECUS C]

CUG292.33-AS6811.EXE executable
6811 assembler. => ASMAIN.C, 6811.H, AS6811.BLD, AS6811.LNK,
AS6811.PRJ, M11ADR.C, M11EXT.C, M11MCH.C, M11PST.C, T6811.ASM.

CUG292.34-AS6811.LNK link
Linkage info for compilation. => AS6811.EXE. [RT-11: DECUS C]

CUG292.35-AS6811.PRJ make
Compiler instructions. => AS6811.EXE. [MS-DOS: TC]

CUG292.36-AS8085.BLD make
Native command file for compiling assembler. => AS8085.EXE. [RT-11:
DECUS C]

CUG292.37-AS8085.EXE executable
8085 (8080) assembler. => ASMAIN.C, 8085.H, 85EXT.C, 85MCH.C, 85PST.C,
AS8085.BLD, AS8085.LNK, AS8085.PRJ, T8085.ASM.

CUG292.38-AS8085.LNK link
Linkage info for compilation. => AS8085.EXE. [RT-11: DECUS C]

CUG292.39-AS8085.PRJ make
Compiler instructions. => AS8085.EXE. [MS-DOS: TC]

CUG292.40-ASDATA.C source
Device-independent source for all assemblers. => ASMAIN.C.

CUG292.41-ASEXPR.C source
Expression evaluator. Device-independent for all assemblers. =>
ASMAIN.C.

CUG292.42-ASLEX.C source
Lexical analyzer. Device-independent for all assemblers. => ASMAIN.C.

CUG292.43-ASLINK.BLD make
Native command file for compiling linker. => ASLINK.EXE. [RT-11: DECUS
C]

CUG292.44-ASLINK.EXE executable
Relocating linker. => LKMAIN.C, ASLINK.BLD, ASLINK.H, ASLINK.LNK,
ASLINK.PRJ.

CUG292.45-ASLINK.H header
For the relocating linker. => ASLINK.EXE.

CUG292.46-ASLINK.LNK link
Linkage info for compilation. => ASLINK.EXE. [RT-11: DECUS C]

CUG292.47-ASLINK.PRJ make
Compiler instructions. => ASLINK.EXE. [MS-DOS: TC]

CUG292.48-ASLIST.C source
Copy a block of source and code to the listing file. => ASMAIN.C.

CUG292.49-ASM.H header
Definitions for all machine-independent functions for all assemblers.

CUG292.50-ASMAIN.C source
Main device-independent source common to all assemblers in this
volume. It coordinates file input/output, symbol table generation,
program/data areas, expression analysis, and assembler directive
processing. => ASDATA.C, ASEXPR.C, ASLEX.C, ASLTST.C, ASM.H, ASOUT.C,
ASSUBR.C, ASSYM.C, AS6800.EXE, AS6801.EXE, AS6804.EXE, AS6805.EXE,
AS6809.EXE, AS6811.EXE, AS8085.EXE, ASZ80.EXE, LKMAIN.C. [TSX+, RT-11,
MS-DOS: TC, DECUS C]

CUG292.51-ASMLNK.DOC doc
Manual, discussing the ASXXXX assemblers in this volume, source
program format, symbols and expressions, general assembler directives,
assembler directives, assembler invocation, error-handling, the
listing file, symbol table file, and object file. Also discusses
ASLINK, and building ASLINK and assemblers. => ASMAIN.C.

CUG292.52-ASMTST.ASM source
Machine Independent Assember Test. Tests directives for memory
allocation; boundaries; strings; expression evaluation; IF, ELSE, and
ENDIF; local symbols; offset calculations; area definitions; assembler
output file; symbol table; and area table. => ASMAIN.C.

CUG292.53-ASOUT.C source
Various machine-independent output functions. => ASMAIN.C.

CUG292.54-ASSUBR.C source
Machine-independent error handler. => ASMAIN.C.

CUG292.55-ASSYM.C source
Device-independent code for all assemblers. Links symbol lists to
hashtables, sets up area lists and dca. => ASMAIN.C.

CUG292.56-AST05.ASM source
Monitor for the MC146805EZ Evaluation Board. => ASMAIN.C.

CUG292.57-ASTO9.ASM source
MC6809 Monitor. => ASMAIN.C.

CUG292.58-ASZ80.BLD make
Native command file for compiling assembler. => ASZ80.EXE. [RT-11:
DECUS C]

CUG292.59-ASZ80.EXE executable
Z80 (hd64180) assembler. => ASMAIN.C, Z80.H, ASZ80.BLD, ASZ80.LNK,
ASZ80.PRJ, Z80ADR.C, Z80EXT.C, Z80MCH.C, Z80PST.C, TZ80.ASM.

CUG292.60-ASZ80.LNK link
Linkage info for compilation. => ASZ80.EXE. [RT-11: DECUS C]

CUG292.61-ASZ80.PRJ make
Compiler instructions. => ASZ80.EXE. [MS-DOS: TC]

CUG292.62-BUF25.ASM source
Buffalo 2.5. Monitor for 6811. => ASMAIN.C.

CUG292.63-LKAREA.C source
Create an area only. => LKMAIN.C.

CUG292.64-LKDATA.C source
=> LKMAIN.C.

CUG292.65-LKEVAL.C source
Evaluate input term. => LKMAIN.C.

CUG292.66-LKHEAD.C source
Create a new header entry. => LKMAIN.C.

CUG292.67-LKIHX.C source
Produce Intel Hex Output file.

CUG292.68-LKLEX.C source
Linker's lexical analyzer. => LKMAIN.C.

CUG292.69-LKLIST.C source
Increment the count of lines on the page. If the page overflows put
out a page skip and linker header. => LKMAIN.C.

CUG292.70-LKMAIN.C source
Main linker module. => ASMAIN.C. [TSX+, RT-11, MS-DOS: TC, DECUS C]

CUG292.71-LKRLOC.C source
Process relocation operations and call designated output routine. =>
LKMAIN.C.

CUG292.72-LKS19.C source
Produce Motorola S19 output file. => LKMAIN.C.

CUG292.73-LKSYM.C source
Sets up the symbol hashtable. => LKMAIN.C.

CUG292.74-MOOADR.C source
Process addressing modes. => AS6800.EXE.

CUG292.75-MOOEXT.C source
Device description, byte order, and file extension information. =>
AS6800.EXE.

CUG292.76-MOOMCH.C source
Process device mnemonics and special directives. => AS6800.EXE.

CUG292.77-MOOPST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. AS6800.EXE.

CUG292.78-M01ADR.C source
Process addressing modes. => AS6801.EXE.

CUG292.79-M01EXT.C source
Device description, byte order, and file extension info. =>
AS6801.EXE.

CUG292.80-M01MCH.C source
Process device mnemonics and special directives. => AS6801.EXE.

CUG292.81-M01PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6801.EXE.

CUG292.82-M04ADR.C source
Process addressing modes. => AS6804.EXE.

CUG292.83-M04EXT.C source
Device description, byte order, and file extension info. =>
AS6804.EXE.

CUG292.84-M04MCH.C source
Process device mnemonics and special directives. => AS6804.C.

CUG292.85-M04PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6804.EXE.

CUG292.86-M05ADR.C source
Process addressing modes. => AS6805.EXE.

CUG292.87-M05EXT.C source
Device description, byte order, and file extension info. =>
AS6805.EXE.

CUG292.88-M05MCH.C source
Process device mnemonics and special directives. => AS6805.EXE.

CUG292.89-MOSPST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6805.EXE.

CUG292.90-M09ADR.C source
Process addressing modes. => AS6809.EXE.

CUG292.91-M09EXT.C source
Device description, byte order, and file extension info. =>
AS6809.EXE.

CUG292.92-M09MCH.C source
Process device mnemonics and special directives. => AS6809.EXE.

CUG292.93-M09PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6809.EXE.

CUG292.94-M11ADR.C source
Process addressing modes. => AS6811.EXE.

CUG292.95-M11EXT.C source
Device description, byte order, and file extension info. =>
AS6811.EXE.

CUG292.96-M11MCH.C source
Process device mnemonics and special directives. => AS6811.EXE.

CUG292.97-M11PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6811.EXE.

CUG292.98-MOND09.ASM source
MONDEB09. 6809 monitor/debugger. => AS6809.EXE.

CUG292.99-README.ASM doc
Typical console input and output routines to write, assemble, and link
with MOND09 or AST09. => MOND09.ASM.

CUG292.100-T6800.ASM source
6800 assembler test. => AS6800.EXE, T6800E.ASM, T6800S.ASM.

CUG292.101-T6800E.ASM source
6800 Assembler Error Check. => T6800.ASM.

CUG292.102-T6800S ASM source
6800 sequential test. => T6800.ASM.

CUG292.103-T6801.ASM source
6801 Assembler test. => AS6801.EXE, T6801E.ASM, T6801S.ASM.

CUG292.104-T6801E.ASM source
6801 Assembler Error check. => T6801.ASM.

CUG292.105-T6801S.ASM source
6801 sequential test. => T6801.ASM.

CUG292.106-T6804S.ASM source
6804 sequential test. => AS6804.EXE.

CUG292.107-T6805S.ASM source
6805 sequential test. => AS6805.EXE.

CUG292.108-T6809.ASM source
6809 Assembler test. => AS6809.EXE, T6809E.ASM.

CUG292.109-T6809E.ASM source
6809 Error Tests. => T6809.ASM.

CUG292.110-T6811.ASM source
6811 assembler test. => AS6811.EXE, T6811E.ASM, T6811 S.ASM.

CUG292.111-T6811E.ASM source
6811 assembler error check. => T6811.ASM.

CUG292.112-T6811S.ASM source
6811 sequential test. => T6811.ASM.

CUG292.113-T8085.ASM source
Test of 8085/8080 assembler, all instructions. => AS8085.EXE.

CUG292.114-TZ80.ASM source
Test of Z80/HD64180 assembler. => ASZ80.EXE.

CUG292.115-WARNING.CUG doc
Copyrights for Motorola, Inc. restated. => AST05.ASM, BUF25.ASM.

CUG292.116-XXXPST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => ASMAIN.C.

CUG292.117-Z80.H header
Machine specific definitions for Z80 assembler. => ASZ80.EXE.

CUG292.118-Z80ADR.C source
Process addressing modes. => ASZ80.EXE.

CUG292.119-Z80EXT.C source
Device description, byte order, and file extension info. => ASZ80.EXE.

CUG292.120-Z80MCH.C source
Process device mnemonics and special directives. => ASZ80.EXE.

CUG292.121-Z80PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => ASZ80.EXE.

==============================================================================
CUG293 -
-----------

3D Medical Imaging, source
By Daniel Geist, Michael Vannier. [public] 2 disks. This set of
programs implements three-dimensional surface reconstruction from
serial slice images, such as CT scans. For more explanation, see the
article in C Users Journal v. 7.6, August, 1989. The code was
developed under Microsoft v5.0, but with a few changes (such as file
handling calls and huge array declarations), it can be adapted to
other compilers. The program generates an output file that contains a
set of 8-bit grayscale images. You must supply your own program to
convert the images to your frame buffer format (The disk contains a
conversion program for an AT&T Targa24 frame buffer board). CUG293
includes all C source code, documentation, and one scan slice file.
CUG294 includes seven CT scan slice files. All the CT scan slices were
produced by a Siemens Somatom 2 CT scanner.

CUG293.01-3-D.BAT batch
By Daniel Geist, Michael Vannier. Batch file to create 3-D
reconstruction of CT images. [MS-DOS]

CUG293.02-3-D.DOC doc
By Daniel Geist, Michael Vannier. 3-D Reconstruction User manual. =>
CUG294.

CUG293.03-ANG.C source
By Daniel Geist, Michael Vannier. This module creates rotated views of
the image around the z-axis. [MS-DOS: MSC5]

CUG293.04-ANGl.C source
By Daniel Geist, Michael Vannier, Ake Wallin. A modified version of
ANG. => ANG.C. [MS-DOS: MSC5]

CUG293.05-ANG2.C source
By Daniel Geist, Michael Vannier. Creates rotated views of the image.
[MS-DOS: MSC5]

CUG293.06-ANGPP.C source
By Daniel Geist, Michael Vannier. This module creates rotated views of
the image around the z-axis. [MS-DOS: MSC5]

CUG293.07-CTBILD.001 data
CT slice.

CUG293.08-CTTGA.C source
By Daniel Geist, Michael Vannier. Converts a 256 x 256 CT file into a
256 x 256 TARGA-TIPS B/W file. [MS-DOS: MSC5]

CUG293.09-CTTGA.EXE executable
By Daniel Geist, Michael Vannier. => CTTGA.C. [MS-DOS: MSC5]

CUG293.10-CUT.C source
By Daniel Geist, Michael Vannier. creates right lateral (x) views.
[MS-DOS: MSC5]

CUG293.11-DBO.OUT data
3-D surface images 256 x 256 with 8 bits per pixel.

CUG293.12-DEB.C source
By Daniel Geist, Michael Vannier. [MS-DOS: MSC5]

CUG293.13-DEP.C source
By Daniel Geist, Michael Vannier. Distance shading program.[MS-DOS:
MSC5]

CUG293.14-DEP2.C source
By Daniel Geist, Michael Vannier. Distance shading program. [MS-DOS:
MSC5]

CUG293.15-DEPPP.C source
By Daniel Geist, Michael Vannier. Distance shading program. [MS-DOS:
MSC5]

CUG293.16-DRE.OUT data
3-D surface images 256 x 256 with 8 bits per pixel.

CUG293.17-DRL.OUT data
3-D surface images 256 x 256 with 8 bits per pixel.

CUG293.18-DUMP.C source
By Daniel Geist, Michael Vannier. Utility program to inspect a binary
file. [MS-DOS: MSC5]

CUG293.19-DUMP1.C source
By Daniel Geist, Michael Vannier. Utility program to inspect a binary
file. [MS-DOS: MSC5]

CUG293.20-DUMP1.EXE executable
[MS-DOS]

CUG293.21-DUMPPP.C source
By Daniel Geist, Michael Vannier. Utility program to inspect a binary
file. [MS-DOS: MSC5]

CUG293.22-FLIPD.C source
By Daniel Geist, Michael Vannier. Flip an image file around the
diagonal axis. [MS-DOS: MSC5]

CUG293.23-FLIPDPP.C source
By Daniel Geist, Michael Vannier. Flip an image around the diagonal
axis. [MS-DOS: MSC5]

CUG293.24-FLIPH.C source
By Daniel Geist, Michael Vannier. Flip an image around the horizontal
axis. [MS-DOS: MSC5]

CUG293.25-FLIPHPP.C source
By Daniel Geist, Michael Vannier. Flip an image around the horizontal
axis. [MS-DOS: MSC5]

CUG293.26-FLIPV.C source
By Daniel Geist, Michael Vannier. Flip an image around the vertical
axis. [MS-DOS: MSC5]

CUG293.27-FLIPVPP.C source
By Daniel Geist, Michael Vannier. Flip an image around the vertical
axis. [MS-DOS: MSC5]

CUG293.28-GIB.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.29-GOR.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.30-GRA.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.31-GRAD.C source
By Daniel Geist, Michael Vannier. This module creates six main axis
views from CT files.[MS-DOS: MSC5]

CUG293.32-GRAD1.C source
By Daniel Geist, Michael Vannier, Ake Wallin. A modified version of
GRAD. [MS-DOS: MSC5]

CUG293.33-GRADPP.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.34-GRINT.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.35-GX.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.36-GY.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.37-HEADER.C doc
By Daniel Geist, Michael Vannier. Brief 3-D Reconstruction
description.

CUG293.38-INTERP.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.39-MK.BAT batch
A batch file for the compilation. [MS-DOS: MSC5]

CUG293.40-PC-3D.TXT doc
By Daniel Geist, Michael Vannier. Documentation of 3-D medical
imaging. The technique of the distant and gradient shading is
explained. => CUG294.

CUG293.41-PICCONV.BAT batch
By Daniel Geist, Michael Vannier. A batch file for displaying the
image. => GRAD.C. [MS-DOS]

CUG293.42-PICTGA.C source
By Daniel Geist, Michael Vannier. Converts a 256* n B/W picture file
into a 256 x 256 TARGA-TIPS B/W or RGB file. [MS-DOS: MSC5]

CUG293.43-PICTGA.EXE executable
=> PICTGA.C. [MS-DOS]

CUG293.44-PT.BAT batch
Executes PICTGA.

CUG293.45-README doc
By Daniel Geist, Michael Vannier. Description of sample data files.

CUG293.46-README1 doc
By Daniel Geist, Michael Vannier, Ake Wallin. Description of the
modified version of programs.

CUG293.47-README2 doc
By Daniel Geist, Michael Vannier. A brief document in the disk.

CUG293.48-RUNANG.BAT batch
A batch file for displaying angled images.

CUG293.49-RUNGRAD.BAT batch
A batch file for creating images from CT files. => GRAD.C.

CUG293.50-SMOOTH.C source
By Daniel Geist, Michael Vannier. 3-D reconstruction program. [MS-DOS:
MSC5]

CUG293.51-SMOOTH2.C source
By Daniel Geist, Michael Vannier. 3-D reconstruction program. [MS-DOS:
MSC5]

CUG293.52-T1.C source
By Daniel Geist, Michael Vannier. Sets the specified video mode.
[MS-DOS: MSC5]

CUG293.53-T2.C source
By Daniel Geist, Michael Vannier. Writes forwards and backwards.
[MS-DOS: MSC5]

CUG293.54-T3.C source
Calculates angle. [MS-DOS: MSC5]

CUG293.55-TGACT.C source
By Daniel Geist, Michael Vannier, Ake Wallin. Converts a TARGA-TIPS
RGB file into a 256 x 256 CT file. [MS-DOS: MSC5]

CUG293.56-TOFG100.C source
By Daniel Geist, Michael Vannier. Sample ITEX program. [MS-DOS: MSC5]

CUG293.57-TOTARGA.C source
By Daniel Geist, Michael Vannier. Sample program to convert image
files from the reconstruction package to AT&T Targa board format.
[MS-DOS: MSC5]

==============================================================================
CUG294 -
-----------

3D Medical Imaging, sample Images
By Daniel Geist, Michael Vannier. I public] 4 disks. See CUG293.

CUG294.01-CTBILD.001 data
Sample CT scan files from a Siemens Somatom 2 CT scanner. It has a
header block of 512 bytes, followed by 256 image lines. Each image
line has 256 elements (pixels). Each pixel consists of 16 bits. Of
these, only the low order 11 bits contain gray scale.

CUG294.02-CTBILD.002 data

CUG294.03-CTBILD.003 data

CUG294.04-CTBILD.004 data

CUG294.05-CTBILD.005 data

CUG294.06-CTBILD.006 data

CUG294.07-CTBILD.007 data

CUG294.08-DBO.OUT data
By Daniel Geist, Michael Vannier. 3-D surface image obtained from CT
scans using GRAD. => README. [MS-DOS]

CUG294.09-DRE.OUT data
3-D surface images 256 x 256 with 8 bits per pixel.

CUG294.10-DRL.OUT data
By Daniel Geist, Michael Vannier. 3-D surface image detained from CT
scans using GRAD. 256 x 256 with 8 bits per pixel.

CUG294.11-READ ME doc
By Daniel Geist, Michael Vannier. Explains contents of this data
volume, intended for use with Volume #293. => README.CT, CUG293.

CUG294.12-README.CT doc
By Daniel Geist, Michael Vannier. Explains CT scan slice data files,
extends offer for more to users with proper facilities. => README.

==============================================================================
CUG295 -
-----------

blkio Library volume withdrawn for massive update see CUG358
By Lyle Frost. [public] 1 disk. The blkio library library is a
buffered input/output library for C similar to the stdio library but
designed for use with structured fields. The LRU (least recently used)
replacement algorithm is used for buffering. The disk includes all the
source code and a utility program that extract documentation embedded
in the source code. The blkio library is a component of cbase, a
commercial C database library. THIS VOLUME HAS BEEN UPDATED
SUBSTANTIALLY AND RELEASED AS CUG358.

==============================================================================
CUG296 -
-----------

C to C++ Migrator
By Charles D. Havener. [public] 1 disk. This C to C++ Migrator program
accepts old style C code as input and generates the new ANSI (or C++)
style function prototypes. In the process, the program generates two
output files: ed.out and proto.out. ed.out is used by the sed stream
editor to edit the original source file. proto.out is used as a header
file including extern function declarations. Therefore, the user must
have a sed (MKS sed for MS-DOS users). The disk contains the source
code for the migrator including complete lex and yacc grammers, the
executable code for MS-DOS, and Havener's article describing the
package from C User's Journal v. 7.8, October, 1989. Recompiling the
migrator program under MS-DOS requires lex and yacc for MS-DOS (FLEX
and BISON are available from the CUG library). For more details see
the narrative description of this package in Section 2.

CUG296.01-CTOCPP.BAT batch
Batch command file to convert .c to .cpp files, calls CTOCPP1.BAT to
handle files individually. => CTOCXX.C.

CUG296.02-CTOCPPl.BAT batch
Processes a single file for CTOCPP.BAT, invokes MSC compiler with /E
option and calls CTOCXX.EXE. => CTOCXX.C.

CUG296.03-CTOCXX make
For the CTOCXX translator. => CTOCXX.C.

CUG296.04-CTOCXX.C source
C to C++ Migrator. Takes the preprocessed source file from
CTOCPP1.BAT, and outputs PROTO.OUT and ED.OUT for editing the original
source file and placing prototypes in header files. => CTOCPP.BAT,
CTOCPP1.BAT, CTOCXX, CTOCXX.H, CTOCXX.L, FLEX.SKE, FLEXCOM.H,
FLEXDEF.H, FLEXSDEF.H, GRAM.Y, LITTLE.Y, SUBS.C, SYMTAB.C. [PCDOS]

CUG296.05-CTOCXX.EXE executable
=> CTOCXX.C.

CUG296.06-CTOCXX.H header
Symbol Table Definitions and boolean definitions for C to C++
conversion tool. => CTOCXX.C.

CUG296.07-CTOCXX.L data
Input file for FLEX. => CTOCXX.C, FLEX.SKE.

CUG296.08-ED.OUT data
Output file from CTOCXX.EXE, used by SED stream editor to edit the
original source code. => CTOCXX.C.

CUG296.09-FLEX.SKE source
A lexical scanner generated by flex. => CTOCXX.C.

CUG296.10-FLEXCOM.H header
Common macro definitions for VFTL programs generated by FLEX. =>
FLEX.SKE.

CUG296.11-FLEXDEF.H header
Definitions for FLEX. => FLEX.SKE.

CUG296.12-FLEXSDEF.H header
Macro definitions for compressed table C/FTL programs generated by
flex. => FLEX.SKE.

CUG296.13-GRAM.Y data
C Grammar, input file for YACC. => CTOCXX.C.

CUG296.14-HAVENER.TXT doc
Rapid Prototyping as a Design Method. Introduction, goals and
philosophy, and phase by phase coverage of the rapid prototyping
process involved in constructing the migrator tool. => CTOCXX.C.

CUG296.15-LITTLE.Y data
A short version of the C Grammar, it includes mainly the productions
that had semantic action code attached for the migrator prototype. =>
CTOCXX.C.

CUG296.16-PROTO.OUT data
Output file from CTOCXX.EXE, used in header files as required. =>
CTOCXX.C.

CUG296.17-README doc
Brief description of files intended for distribution, their usage and
relationships. => CTOCXX.C.

CUG296.18-SAMPL.C data
Sample input, exhibits various function declaration styles. =>
CTOCXX.C.

CUG296.19-SAMPL.CPP data
Output file, exhibits various function declaration styles converted to
C++ from SAMPL.C. => CTOCXX.C.

CUG296.20-SAMPL.SED data
Edited version of SAMPLE.C. => CTOCXX.C.

CUG296.21-SUBS.C source
Miscellaneous functions used by the C to C++ program. => CTOCXX.C.

CUG296.22-SYMTAB.C source
This module contains functions to init the symbol table and hash,
store, find or test a symbol. => CTOCXX.C.

CUG296.23-YTAB.H header
Created by YACC. => CTOCXX.C.

==============================================================================
CUG297 -
-----------

Small Prolog
By Henri de Feraudy. [public] 1 disk. This Prolog interpreter follows
a Cambridge syntax (LISP-like syntax) with advantages for
meta-programming and small code. The Small Prolog includes most
standard built-ins (predicates) based on Clocksin and Mellish's
descriptions in Programming in Prolog, although it can be extended by
creating more user defined built-ins. The disk includes C source
files, make files, documentation, and many Prolog example files that
demonstrate Prolog features for C programmers who may be unfamiliar
with Prolog. The source code is very portable and will compile under
Turbo C v1.5 and Mark William Let's C v4 on PC clones, Mark William C
v3.0 and Megamax Laser C on Atari ST and Sun C compiler on Sun-3.
Feraudy has updated his original Small Prolog. The update includes
some minor bug fixes, a speed improvement, and better handling of type
predicates. It provides more comments in C source code and an improved
makefile. For more details see the narrative description of this
package in Section 2.

CUG297.01-EXAMPL1.SPR data
Example file, also contains Prolog background documentation and minor
brief instructions for running example. => PRMAIN.C.

CUG297.02-EXAMPL10.SPR data
Briefly, how to use the special predicate findall. => PRMAIN.C.

CUG297.03-EXAMPL11.SPR data
How to use enum and recursive-loop. => PRMAIN.C.

CUG297.04-EXAMPL12.SPR data
Simple declarative program. => PRMAIN.C.

CUG297.05-EXAMPL13.SPR data
Simple parsing of simple sentences. PRMAIN.C.

CUG297.06-EXAMPL14.SPR data
A graph searching program.

CUG297.07-EXAMPL2.SPR data
Sophisticated queries and their programming. => PRMAIN.C.

CUG297.08-EXAMPL3.SPR data
Exploring combinations of relations and rules. => PRMAIN.C.

CUG297.09-EXAMPL4.SPR data
Exploring input/output builtins. PRMAIN.C.

CUG297.10-EXAMPL5.SPR data
Using recursion. => PRMAIN.C.

CUG297.11-EXAMPL6.SPR data
About multiple rules. => PRMAIN.C.

CUG297.12-EXAMPL7.SPR data
Using builtin control structure cut. => PRMAIN.C.

CUG297.13-EXAMPL8.SPR data
handling. => PRMAIN.C.

CUG297.14-EXAMPL9.SPR data
Exploring the assert primitive. => PRMAIN.C.

CUG297.15-FRMANUAL.TXT doc
Guide de Reference Peur L'U Hlisateur de Small. Out of date French
translation of PRMANUAL.TXT. => PRMAIN.C.

CUG297.16-HELP.SPR data
Information on predicates. => PRMAIN.C.

CUG297.17-MAKE.SPR data
Unfinished Make utility, requiring builtin definition, meant as an
educational application of Prolog. => PRMAIN.C.

CUG297.18-MAKEFILE make
For Small Prolog. => PRMAIN.C. [SUN-UNIX: SUN C]

CUG297.19-MAKEFILE.TBC make
For Small Prolog on PC. => PRMAIN.C. [MS-DOS: TC]

CUG297.20-PP.C source
Simple Pretty-printer for lisp-like expressions. => PRMAIN.C.

CUG297.21-PRALLOC.C source
Allocates structures. => PRMAIN.C.

CUG297.22-PRASSERT.C source
Implementation of assertz, asserta and clause handling. => PRMAIN.C.

CUG297.23-PRATARI.C source
Atari specific code. => PRMAIN.C. [ ATARI: MWC3]

CUG297.24-PRATARI.MAK make
For Small Prolog. => PRMAIN.C. [ATARI: MWC3]

CUG297.25-PRBLTIN.C source
Builtin predicate definitions, functions, routines. => PRMAIN.C.

CUG297.26-PRBLTIN.H header
Include file for PRBLTIN.C. => PRMAIN.C.

CUG297.27-PRCNSULT.C source
Loads a file of clauses. => PRMAIN.C.

CUG297.28-PRDEBUG.C source
Functions for possible source-level debugging. => PRMAIN.C.

CUG297.29-PRERROR.C source
Error message functions. => PRMAIN.C.

CUG297.30-PRHASH.C source
Builds symbol table. => PRMAIN.C.

CUG297.31-PRIBMPC.C source
PC & PC clone-dependent code. => PRMAIN.C. [MS-DOS: TC, MWC4]

CUG297.32-PRLEX.H header
Used by PRPARSE.C and PRSCAN.C. => PRMAIN.C.

CUG297.33-PRLUSH.C source
Lush resolution algorithm. => PRMAIN.C.

CUG297.34-PRLUSH.H header
Include file for PRLUSH.C. => PRMAIN.C.

CUG297.35-PRMAIN.C source
Small Prolog. Interactive Prolog interpreter with lisp-like syntax. =>
PR**, HELP.SPR, MAKEFILE, MAKEFILE.TBC, PP.C, SPROLOG. *, TURBO.LNK,
VERIF.SPR, XREAD.SPR, ZORTECH.MAK. [SUN-OS, TOS, MS-DOS2: TC1.5, MWC3,
MWC4, MEGAMAX LASER C, GCC] Better to compile this with compact model
on the PC.

CUG297.36-PRMANUAL.TXT doc
Small Prolog user guide and reference. => PRMAIN.C.

CUG297.37-PROLOG.H header
Configuration switches. => PRMAIN.C.

CUG297.38-PRPARSE.C source
Recursive descent parser for lisp-like syntax. => PRMAIN.C, PRSCAN.C.

CUG297.39-PRPRINT.C source
Print functions. => PRMAIN.C.

CUG297.40-PRSCAN.C source
Lexical analysis. :> PRMAIN.C, PRLEX.H.

CUG297.41-PRSUN.C source
Machine specific code for SUN 3. => PRMAIN.C. [UNIX]

CUG297.42-PRTYPES.H header
Basic data structures of Small Prolog. => PRMAIN.C.

CUG297.43-PRUNIFY.C source
Recursive unification algorithm, dereferencing. => PRMAIN.C.

CUG297.44-README doc
Descriptions of volume 297's components. => PRMAIN.C.

CUG297.45-SPROLOG.EXE executable
=> PRMAIN.C. [MS-DOS2: TC1.5]

CUG297.46-SPROIOG.INF doc
Information on various zone sizes. => PRMAIN.C.

CUG297.47-SPROLOG.INI data
Initialization file loaded at Startup. => PRMAIN.C.

CUG297.48-SPROLOG.PRJ object
Project file for Small Prolog. => PRMAIN.C. [MS-DOS: TC]

CUG297.49-TURBOC.LNK link
Linkage info for compilation of small Prolog. => PRMAIN.C. [MS-DOS:
TC]

CUG297.50-VERIF.SPR data
Used for debugging, detects forgotten arguments. => PRMAIN.C.

CUG297.51-XREAD.SPR data
Reads a list & retains variable names, bug finding predicate. =>
PRMAIN.C.

CUG297.52-ZORTECH.MAK make
For Small Prolog. => PRMAIN.C. [MS-DOS ZORTECHC]

==============================================================================
CUG298 -
-----------

PC Curses
By Jeffrey S. Dean. [share] 1 disk. This shareware release of PC
curses, version 8, is a C window functions library designed to
provided compatibility with the UNIX curses package. By fully
utilizing the PC features, this package is coded much simpler that the
UNIX version. For example, there is no need for cursor motion and
screen output optimization on the PC. Currently, there are two major
versions of curses database under UNIX; one is termcap, the other
terminfo. PC curses derives primarily from termcap, with some features
of the terminfo version. Additional routines (not in the original
curses package) are provided for the PC user. The distribution disk
includes a couple of demo programs, Small and Large model library for
Microsoft C v5.0 and Turbo C v1.5 compilers, and documentation that
describes all the functions in the library.

CUG298.01-!README doc
Descriptions of components available for distribution. =>
MSCURSES.LIB, TSCURSES.LIB.

CUG298.02-CURSES.DOC doc
Manual for the package. => MSCURSES.LIB TSCURSES.LIB.

CUG298.03-CURSES.H header
Include file for PC Curses. => MSCURSES.LIB, TSCURSES.LIB.

CUG298.04-DEMO.C source
Simple demonstration program. => MSCURSES.LIB, TSCURSES.LIB DEMO.DAT,
DEMO.EXE, DEMO.HLP.

CUG298.05-DEMO.DAT data
=> DEMO.C.

CUG298.06-DEMO.EXE executable
=> DEMO.C.

CUG298.07-DEMO.HLP data
Help file. => DEMO.C.

CUG298.08-HELLO.C source
Simple curses program. => MSCURSES.LIB, TSCURSES.LIB.

CUG298.09-MOVEBOX.C source
Demo - uses cursor keys to move box around screen. => MSCURSES.LIB,
TSCURSES.LIB, MOVEBOX.EXE, MOVEBOX.HLP.

CUG298.10-MOVEBOX.EXE executable
=> MOVEBOX.C.

CUG298.11-MOVEBOX.HLP data
help file. => MOVEBOX.C.

CUG298.12-MSCURSES.LIB library
PC Curses. Small model, C window functions designed to provide
compatibility with the UNIX curses package. => MOVEBOX.C, UNIX.H,
TSCURSES.LIB, MSDCURSE.LIB, CURSES.H, DEMO.C, HELLO.C.[PCDOS, MS-DOS:
MSC5]

CUG298.13-MSDCURSE.LIB library
Small model with debugging (tracing) code. => MSCURSES.LIB.

CUG298.14-TSCURSES.LIB library
PC Curses. Small model, C window functions designed to provide
compatibility with the UNIX curses package. => MSCURSES.LIB,
TSDCURSE.LIB, CURSES.H, DEMO.C, HELLO.C, MOVEBOX.C, UNIX.H. [PCDOS,
MS-DOS: TC1.5]

CUG298.15-TSDCURSE.LIB library
PC Curses. Small model with debugging (tracing) code. =>
TSCURSES.LIB.[PCDOS, MS-DOS: TC1.5]

CUG298.16-UNIX.H header
Definitions for running PC Curses on UNIX. => TSCURSES.LIB,
MSCURSES.LIB.

==============================================================================
CUG299 -
-----------

MEL and BP
[public] 1 disk. This volume contains two programs, MEL - Universal
Metalanguage Data Processor submitted by George Crews (TN), and BP -
Back Propagations for neural networks by Ronald Michaels (TN). Mel
provides an I/O interface between a program and the user. It can take
input data written in "pseudo-English" and translate it into program
variables. It can also translate a program's variables into
pseudo-English. (See the article in the C Users Journal vol 8.2,
February, 1990.) MEL was originally designed for use with engineering
analysis programs. It was written in ANSI C and was developed using
Microsoft C v5.1. The disk includes MEL source code, a test example
program, sample input and output files, documentation, and the article
and listings from vol. 8.2 of the CUJ. Since MEL provides only a
processor engine, you need to define your own input and output data
format rule (called a dictionary) for your application program in
mel.h. For more details on MEL, see the narrative description of this
package in Section 2. BP is a simple implementation of the back
propagation algorithm as an example of a neural network. The
implementation is based upn the article in Nature, "Learning
representations by back propogation errors" by Rummelhart, Hinton and
Williams. BP employs an adaptive algorithm that converges as a result
of learning. BP was developed on an AT clone with a math compressor
using Zortech C v1.07. The disk also includes the Hercules graphics
version of BP.

CUG299.01-BP.C source
By Ronald Michaels. Back Propagation Delta Rule Learning Program. Main
file for back propagation algorithm as an example of a neural network.
=> BP.EXE, BP1.DAT, ERROR.C, PLOT.C, PLOT.H, RANDOM.L, XOR.DAT,
README.BP, BP2.DAT, BP_H.EXE. [MS-DOS: ECO-C4, ZORTECHC]

CUG299.02-BP.EXE executable
By Ronald Michaels. Basic program without graphics. => BP.C.

CUG299.03-BP1.DAT data
By Ronald Michaels. training patterns. => BP.C.

CUG299.04-BP2.DAT data
By Ronald Michaels. program parameters. => BP.C.

CUG299.05-BP_H.EXE executable
By Ronald Michaels. Program with Hercules Graphics. => BP.C.

CUG299.06-CONVER.C source
By George Crews. Calculates and returns the conversion factor required
for going from units represented by an input string of characters to
units represented by an output string of characters. => MEL.C.

CUG299.07-CREWS1.EX doc
By George Crews. Example of MEL input for a Hydraulic Analysis
Program. => MEL.C CREWS2.EX, CREWS3.EX, CREWS4.EX CREWS5.EX.

CUG299.08-CREWS2.EX doc
By George Crews. Example of obtaining data from a MEL descriptor. =>
CREWS1.EX.

CUG299.09-CREWS3.EX doc
By George Crews. Example of outputting a MEL descriptor. => CREWS1.EX.

CUG299.10-CREWS4.EX doc
By George Crews. Example of output generated by a Hydraulic Analysis
program using MEL (from the input data given in Example 1). =>
CREWS1.EX.

CUG299.11-CREWS5.EX doc
By George Crews. Public interface between MEL and any application
program using it. => CREWS1.EX.

CUG299.12-ERROR.C source
By Ronald Michaels. handles error messages for BP.C. => BP.C, ERROR.H.

CUG299.13-ERROR. H header
By Ronald Michaels. => ERROR.C.

CUG299.14-INPUT data
By George Crews. Example input for MEL TEST. => MEL_TEST.C.

CUG299.15-MEL.ART doc
By George Crews. MEL article in CUJ. => MEL.DOC.

CUG299.16-MEL.C source
By George Crews. MEtaLanguage input/output processor for engineering
analysis programs. => CONVER.C CREWS1.EX, MEL.H, MEL.DOC MEL_TEST.C.
[MS-DOS: MSC5]

CUG299.17-MEL.DOC doc
By George Crews. Introduction list of MEL features, steps for using
MEL for program I/O. => MEL.C.

CUG299.18-MEL.H header
By George Crews. Defines the input and output interfaces (called
"dictionaries") between MEL and the engineering analysis program it is
being used for. Contains example dictionaries. => MEL.C.

CUG299.19-MEL.OBJ object
By George Crews. => MEL.C.

CUG299.20-MEL_TEST.C source
By George Crews. Example code for MEL. It may be customized for use as
a driver. MEL.C, INPUT, OUTPUT, MEL_TEXT.EXE.

CUG299.21-MEL_TEST.EXE executable
By George Crews. => MEL_TEST.C.

CUG299.22-MEL_TEST.OBJ object
By George Crews. => MEL_TEST.C.

CUG299.23-OUTPUT data
By George Crews. Example output for MEL_TEST. => MEL_TEST.C.

CUG299.24-PARITY3.DAT data
By Ronald Michaels. Training pattern set to illustrate a more
difficult version of the XOR problem. => XOR.DAT.

CUG299.25-PARITY4.DAT data
By Ronald Michaels. Training pattern set to illustrate an even more
difficult version of the XOR problem. => XOR.DAT.

CUG299.26-PLOT.C source
By Ronald Michaels. Functions to plot error graph for bp learning. =>
BP.C.

CUG299.27-PLOT.H header
By Ronald Michaels. For plot functions. => BP.C.

CUG299.28-RANDOM.C source
By Ronald Michaels. implementation of a pseudo random number
generator. => BP.C, RANDOM.H, TEST.C.

CUG299.29-RANDOM.H header
By Ronald Michaels. => RANDOM.C.

CUG299.30-README.BP doc
By Ronald Michaels. Description of BP distribution components, program
purpose, how it works, compiling, running, and sources of related
reading. => BP.C.

CUG299.31-README.MEL doc
By George Crews. Brief description of MEL distribution components. =>
MEL.C.

CUG299.32-TEST.C source
By Ronald Michaels. Test driver for RANDOM.C to test the random number
generator for correctness if program is ported to non-80x86
environment. => RANDOM.C.

CUG299.33-XOR.DAT data
By Ronald Michaels. Training pattern set to illustrate the exclusive
OR problem used to prove the limitations of the single-level
perception. => PARITY.3, PARITY.4, BP.C.
