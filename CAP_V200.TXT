==============================================================================
CUG200 -
-----------

SCI - Small C Interpreter
This Small C interpreter by Robert Brodt (NJ) is a shareware package
available only as an executable image for PC-Clones and is accom
panied by two extensive documentation files. A useful learning aid.
[share2]

CUG200.01-CALC.SCI 1.5 source
By Bob Brodt. Sample infix notation calculator program => COPY.SCI.

CUG200.02-COPY.SCI 1.4 source
By Bob Brodt. Sample file copy program CALC.SCI.

CUG200.03-PROGRAM.MAN 1.5 doc
By Bob Brodt. Programmer's guide and tutorials for SCI. => USER.MAN.

CUG200.04-READ.ME doc
By Bob Brodt. Software registration info. [MS-DOS:]

CUG200.05-SCI.EXE 1.5 executable
Small C Interpreter. By Bob Brodt. A small C interpreter, designed to
introduce C. Includes a screen editor, & debugger. => USER.MAN
PROG.MAN. [MSDOS:] Requires 64K of memory.

CUG200.06-SHELL.SCI 1.5 source
By Bob Brodt. The command shell, written in SCl's dialect of C. =>
USER.MAN.

CUG200.07-USER.MAN doc
Small C Tutorial. By Bob Brodt. SCI users manual describing shell,
editor, language, library functions and debugger. => PROGRAM.MAN.

==============================================================================
CUG201 -
-----------

MS DOS System Support
Systems oriented programs and functions by Fred Whaley (CA), Don R.
Ridgway (FL), Richard Hilburger (OR), Brian Irvine (CA), and Dan Lewis
(CA). Includes support for MS-DOS device drivers written in Lattice C
small model; STAYRES which allows MS-DOS resident tasks to be written
in C for DeSmet; a collection of macros and function definitions which
support use of ANSI terminal control sequences tested with both
Microsoft and Lattice; enhanced versions of Lattice exe() and chai()
functions that support use of alternate shells; and functions that
handle interactive console input. [mixed]

CUG201.01-ANSIDEM2.EXE executable
By Don F. Ridgway. Demonstration of ANSI.SYS device drivers. =>
ANSISYS2.C ANSIDEMO.C. [MS-DOS: MSC 2.03, LC2. 15]

CUG201.02-ANSIDEMO.C source
By Don F. Ridgway. Demonstrate ANSI screen and keyboard functions. =>
ANSIDEMO.EXE ANSIREAD.DOC. [MS-DOS: MSC 2.03, LC2.15]

CUG201.03-ANSIDEMO.EXE executable
By Don F. Ridgway. => ANSIDEMO.C. [MS-DOS: MSC, LC]

CUG201.04-ANSIREAD.DOC doc
MS-DOS System Support. By Don F. Ridgway. Documentation for ANSI.SYS
device driver. => ANSISYS.C. [MS-DOS:]

CUG201.05-ANSISYS.C source
Graphics Driver. By Don F. Ridgway. A set of functions to facilitate
graphics on the screen (cursor, screen and extended keyboard
controls). => DRIVER.DOC. [MS-DOS: MSC 2.03, LC2.15]

CUG201.06-ANSISYS2.C source
By Don F. Ridgway. Defines a set of screen functions. Minor change for
Lattice C 3.00. => ANSIDEM2.EXE ANSIREAD.DOC. [MS-DOS: LC3.0]

CUG201.07-DRIVER.DOC doc
By Frank Whaley. Describes a method for using Lattice C to develop
installable device drivers for MS-DOS. => DRIVER.H DRIVER.LIB.
[MS-DOS:]

CUG201.08-DRIVER.H header
By Frank Whaley. Device driver header file. => DRIVER.DOC. [MS-DOS:
LC]

CUG201.09-DRIVER.LIB library
By Frank Whaley. Library of device drivers. => MHDR.ASM MONO.C
MAKEMON.BAT DRIVER.DOC. [MS-DOS:]

CUG201.10-EXECUTE.C source
By Dan Lewis. Defines enhanced exec() and chain() functions which look
for a program not only in the current directory, but also in the
current path. => EXECUTE.DOC. [MS-DOS: LC]

CUG201.11-EXECUTE.DOC doc
By Dan Lewis. => EXECUTE.C. [MS-DOS:]

CUG201.12-FDIRES.C 1.3 source
By Brian Irvine. TSR directory display program. => FDIRES.EXE
FDIRTSR.C STMES.C. [MS-DOS: DESMET]

CUG201.13-FDIRES.EXE executable
By Brian Irvine. => FDIRES.C. [MS-DOS:]

CUG201.14-FDIRTSR.C 1.2 source
By Brian Irvine. Define a TSR function. FDIRES.C. [MS-DOS: MSC 2.03,
LC2.15]

CUG201.15-HDR.ASM source
By Frank Whaley. Device driver library. => DRIVER.LIB DRIVER.H
DRIVER.DOC. [MSDOS:]

CUG201.16-KEYBD.C source
By Richard Hilburger. Direct keyboard input functions (inkey and
kbd_rdy) and sample program. => KEYBD.DOC. [MS-DOS: DES MET]

CUG201.17-KEYBD.DOC doc
By Richard Hilburger. Documentation for keyboard functions. =>
KEYBD.C. [MSDOS:]

CUG201.18-KEYBD.EXE executable
By Richard Hilburger. => KEYBD.C KEYBD.DOC. [MS-DOS: DESMET]

CUG201.19-MAKEMON.BAT batch
By Frank Whaley. Batch file for compiling and linking MONO.C. =>
MONO.C DRIVER.DOC. [MS-DOS:]

CUG201.20-MHDR.ASM 0.0 source
By Frank Whaley. Device driver library. DRIVER.LIB DRIVER.DOC.
[MS-DOS:]

CUG201.21-MONO.C source
By Frank Whaley. Example monochrome character device driver. =>
DRIVER.DOC. [MS-DOS: LC]

CUG201.22-NODUPE.C 1.1 source
By Brian Irvine. Avoid installing the same program twice. => FDIRES.C
STAYRES.DOC. [MS-DOS:]

CUG201.23-STAYRES.C 1.2 source
By Brian Irvine. An outline main() which includes all code necessary
for a terminate and stay resident program. main() may be modified or
linked externally to user's code. => STAYRES.DOC. [MS-DOS: DESMET, LC,
MSC 2.03] Requires DESMET C library functions, inline assembly code.

CUG201.24-STAYRES.DOC doc
By Brain Irvine. Documentation of the TSR program => STAYRES.C.
[MSDOS:]

==============================================================================
CUG202 -
-----------

Karel For MS-DOS
An MS-DOS version of Linda Rising's (IN) KAREL The Robot interpreter.
KAREL programs manipulate a robot and beepers. The Pascal-like
language introduces controls structures and structured design without
the complexity of data structures, types and expressions. This
implementation includes a syntax-directed editor and outputs calls and
tables which are linked to predefined C functions to build a program
simulator. It compiles under an early version of Microsoft. [public]

CUG202.01-KAREL.BAT batch
By Unda Rising. Batch file for Karel simulator. => KAREL1.C
README.DOC. [MS-DOS: MSC]

CUG202.02-KAREL.H header
By Unda Rising. Header file for Karel simulator. => KAREL1.C.
[MS-DOS:]

CUG202.03-KAREL1.C source
By Unda Rising. Source for Karel world builder. => KAREL1.EXE KAREL.H
UGUIDE.DOC CUG139 KED.C. [MS-DOS:]

CUG202.04-KAREL1.EXE executable
Karel the Robot. By Unda Rising. => KAREL1.C. [MS-DOS:]

CUG202.05-KED.C source
By Unda Rising. Part 1 of the source for syntax-directed editor. =>
KED2.C KED1.C KED.H. [MS-DOS:]

CUG202.06-KED.EXE executable
=> KED.C KAREL1.C KED2.C KED.H. [MS-DOS:]

CUG202.07-KED.H header
By Unda Rising. Header file for Ked editor. => KED.C KED2.C. [MS-DOS:
MSC]

CUG202.08-KED2.C source
By Unda Rising. Part 2 of source for syntaxdirected editor. _ KED.C
KED.H KED.EXE. [MS-DOS:]

CUG202.09-MENU.DOC doc
By Linda Rising. Commands for the Ked editor. => UGUIDE.DOC. [MS-DOS:]

CUG202.10-README.DOC doc
By Unda Rising. Notes on files and compilation instructions. =>
README2.DOC UGUIDE.DOC. [MS-DOS:]

CUG202.11-README2.DOC doc
By Linda Rising. Notes on source files. README.DOC UGUIDE.DOC.
[MS-DOS:]

CUG202.12-SESSIONS.DOC doc
By Unda Rising. Sample editing sessions. UGUIDE.DOC KED.C. [MS-DOS:]

CUG202.13-UGUIDE.DOC doc
By Unda Rising. User's guide for Karel simulator and Ked. =>
SESSIONS.DOC CUG139 README2.DOC. [MS-DOS:]

==============================================================================
CUG203 -
-----------

YAM For MS-DOS
An MS-DOS port of YAM, a modem control utility that supports XMODEM
(Ward Christensen) XMODEM/CRC-16, MODEM7, CompuserveA, UNIX sb, and
YMODEM transfer protocols. This version by Olen Pederson, (MN) is
descended from the BDS C original by Chuck Forsberg, (OR) et al,
(CUG110) and Paul Homchick's ClC86 CP/M 86 version. Includes ex
tensive documentation. [public]

CUG203.01-CC.BAT batch
By Olen Pederson, Chuck Forsberg. Batch file for compiling a single
YAM module. [MS-DOS: LC]

CUG203.02-CCL.BAT batch
By Olen Pederson, Chuck Forsberg. Batch file for compiling and linking
a YAM module. [MS-DOS:]

CUG203.03-LLYAM.BAT batch
By Olen Pederson, Chuck Forsberg. Batch file to link YAM modules.
[MS-DOS:]

CUG203.04-MAKEARC.BAT batch
By Olen Pederson, Chuck Forsberg. Makes archive of all needed YAM
files. [MS-DOS:]

CUG203.05-README.DOC doc
By Olen Pederson, Chuck Forsberg. YAMMAN.DOC.

CUG203.06-YAM.EXE executable
YAM for MS-DOS. By Olen Pederson, Chuck Forsberg. => YAMMAN.DOC YAM1.C
CUG110. [MS-DOS: LC]

CUG203.07-YAM.H header
By Olen Pederson, Chuck Forsberg. Macros, prototypes, and data types.
YAMSYS.H. [MS-DOS:]

CUG203.08-YAM1.C source
By Olen Pederson, Chuck Forsberg. Main program and command sequencer.
YAM.H. [MS-DOS:]

CUG203.09-YAM10.C source
By Olen Pederson, Chuck Forsberg. File display, unsqueeze functions.
=> YAM.H. [MS-DOS:]

CUG203.10-YAM11.ASM source
By Olen Pederson, Chuck Forsberg. YAM's terminal I/O assembly
routines. [MS-DOS:]

CUG203.11-YAM2.C source
By Olen Pederson, Chuck Forsberg. File transmission protocol headers.
=> YAM.H. [MS-DOS: LC]

CUG203.12-YAM3.C source
By Olen Pederson, Chuck Forsberg. Conversation with data capture, file
XMSN without error checking. => YAM.H. [MSDOS:]

CUG203.13-YAM4.C source
By Olen Pederson, Chuck Forsberg. CIS, a protocol handler. => YAM.H.
[MS-DOS:]

CUG203.14-YAM5.C source
By Olen Pederson, Chuck Forsberg. Basic low-level modem functions.
User specific modem initialization. => YAM.H. [MS-DOS:]

CUG203.15-YAM6.C source
By Olen Pederson, Chuck Forsberg. Global variables and constants. =>
YAM.H. [MSDOS:]

CUG203.16-YAM7.C source
By Olen Pederson, Chuck Forsberg. File and initialization. => YAM.H.
[MS-DOS:]

CUG203.17-YAM8.ASM source
By Olen Pederson, Chuck Forsberg. CRCK subroutine. [MS-DOS:]

CUG203.18-YAM9.ASM 1.2 source
By Olen Pederson, Chuck Forsberg. CRCK subroutine. [MS-DOS:]

CUG203.19-YAMCC.BAT batch
By Olen Pederson, Chuck Forsberg. Batch file for compiling and
assembling YAM [MS-DOS: MASM]

CUG203.20-YAMCFG.T doc
By Olen Pederson, Chuck Forsberg. tup configuration file.

CUG203.21-YAMHELP.T doc
By Olen Pederson, Chuck Forsberg. Help file. => YAMMAN.DOC YAMIMPL.DOC

CUG203.22-YAMIMPL.DOC doc
By Olen Pederson, Chuck Forsberg. Implementation manual for YAM. =>
YAM MAN.DOC. [MS-DOS:]

CUG203.23-YAMLIST doc
By Olen Pederson, Chuck Forsberg. List of file to link. [MS-DOS: LC]

CUG203.24-YAMMAN.DOC doc
By Chuck Forsberg, Olen Pederso. Complete user instructions, options,
function by function description, and file descriptions. Also a sample
session and bug report. => YAMIMPL.DOC CUG110.

CUG203.25-YAMPHONE.T doc
By Olen Pederson, Chuck Forsberg. Telephone numbers used by YAM.

CUG203.26-YAMSYS.H header
By Olen Pederson, Chuck Forsberg, Olen Pederson, Chuck Forsberg.
Header and global. Global equates for specific installations and modem
ports. => YAMSYS.H YAM.H YAM5.C. [MS-DOS, MS-DOS: LC]

CUG203.27-YMODEM.DOC doc
XMODEM/YMODEM Protocol Reference. By Chuck Forsberg, Ward Christensen.
Length description of the operation and options of XMODEM/YMODEM
protocol. YAMMAN.DOC CUG139.

==============================================================================
CUG204 -
-----------

68000 C Compiler
A 68000 C compiler by Matthew Brandt (GA). Brandt describes the
compiler as "an optimizing C compiler which has successfully compiled
itself under UNIX System V." The compiler accepts floating point types
but doesn't know how to generate code for them. It supports only
#include and #define preprocessor directives. Output is in UNIX 68000
object code format. The compiler will compile under Microsoft C v3.0
or later. Package has little documentation. [restricted]

CUG204.01-ANALYZE.C source
By Matthew Brandt. Expression optimizer. C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS: MSC]

CUG204.02-C.H header
By Matthew Brandt. [UNIX, MS-DOS:]

CUG204.03-CC68.EXE executable
By Matthew Brandt. C compiler that generates UNIX 68000 assembler
format. [UNIX, MS-DOS: MSC]

CUG204.04-CGLBDEC.H header
By Matthew Brandt. Global definitions. [UNIX, MS-DOS:]

CUG204.05-CGLBDEF.C source
By Matthew Brandt. Global definitions. => C.H EXPR.H GEN.H. [UNIX,
MS-DOS:]

CUG204.06-CMAIN.C source
68000 C Compiler. By Matthew Brandt. Define main function. => C.H
EXPR.H GEN.H CGLBDEC.H. [UNIX, MS-DOS: UNIX] Requires 68000 processor
for use on UNIX system.

CUG204.07-CODE.H header
By Matthew Brandt. Code structure definitions. [UNIX, MS-DOS: MSC]

CUG204.08-DECL.C source
By Matthew Brandt. Parsing declarations. C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS:]

CUG204.09-EXPR.C source
By Matthew Brandt. Expression evaluation. Builds a parse tree for an
expression. => C.H EXPR.H GEN.H CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.10-EXPR.H header
By Matthew Brandt. Expression tree descriptions. [MS-DOS, UNIX:]

CUG204.11-FUNC.C source
By Matthew Brandt. Function compilation routines. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.12-GEN.H header
By Matthew Brandt. Code generation structure and constants. [UNIX,
MS-DOS:]

CUG204.13-GENCODE.C source
By Matthew Brandt. Code generation routines for evaluating expressions
and conditions. => C.H EXPR.H GEN.H CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.14-GENSTMT.C source
By Matthew Brandt. Generates code. => C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS:]

CUG204.15-GETSYM.C source
By Matthew Brandt. Get a symbol from input stream. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.16-INIT.C source
By Matthew Brandt. Program initialization routine. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.17-INTEXPR.C source
By Matthew Brandt. Evaluates integer expression. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.18-LIB.S source
By Matthew Brandt. Assembly coded long signed multiplication. [UNIX:]
Motorola 68000 processor.

CUG204.19-LIST.C source
By Matthew Brandt. List the symbol table. C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS: MSC]

CUG204.20-MAKE.BAT batch
By Matthew Brandt. Batch file to create cc68 compiler. [MS-DOS:]

CUG204.21-MEMMGT.C source
By Matthew Brandt. Memory management functions. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.22-OPTIMIZE.C source
By Matthew Brandt. Optimization code. => C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS:]

CUG204.23-OUTCODE.C source
By Matthew Brandt. Generate code. => C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MSDOS:]

CUG204.24-PEEPGEN.C source
By Matthew Brandt. Peephole optimization functions. => C.H EXPR.H
GEN.H CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.25-PREPROC.C source
By Matthew Brandt. Preprocessor functions. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.26-README doc
By Matthew Brandt. Author's bug report along with system requirements.

CUG204.27-REGISTER.C source
By Matthew Brandt. Handles the allocation and deallocation of
temporary registers. C.H EXPR.H GEN.H CGLBDEC.H. [UNIX, MS-DOS: MSC]

CUG204.28-SEARCHKW.C source
By Matthew Brandt. Searches keyword. => C.H EXPR.H GEN.H CGLBDEC.H.
[UNIX, MS-DOS:]

CUG204.29-SIEVE.C source
By Matthew Brandt. Produces SIEVE.LIS and SIEVE.S. [UNIX, MS-DOS:]

CUG204.30-START.C source
By Matthew Brandt. Builds a parse tree of statements. => C.H EXPR.H
GEN.H CGLBDEC.H. [UNIX, MS-DOS:]

CUG204.31-SYMBOL.C source
By Matthew Brandt. Symbol table routines. => C.H EXPR.H GEN.H
CGLBDEC.H. [UNIX, MS-DOS:]

==============================================================================
CUG205 -
-----------

Utilities Vll
Rewrites of backgammon and go fish from CUG102 plus some text filters
and other utilities including detabber, word frequency counter, and
UNIX tee and word filters. Developed under Microsoft v3.0. Submitted
by Michael N. Yokoyama (HI). [public]

CUG205.01-BG.C 2.0 source
By Michael Yokoyama. Adaptation of Leor Zolman's backgammon for
MS-DOS. Uses ANSI.SYS for screen control and colors.-BG.EXE BGDISP.C
BGTALK.C CUG 102.22. [MS-DOS: MSC3.0] Requires ANSI.SYS.

CUG205.02-BG.EXE 2.0 executable
By Michael Yokoyama. Backgammon executable. => BG.C. [MS-DOS:]

CUG205.03-BGDISP.C 2.0 source
By Michael Yokoyama. Display subroutine for backgammon. => CUG102 BG.C
BGHELP.C. [MS-DOS:]

CUG205.04-BGTALK.C 2.0 source
By Michael Yokoyama. Conversation module for Backgammon II. => CUG102
BG.C BGDISP.C. [MS-DOS:]

CUG205.05-CAPITALS.C 2.0 source
By Michael Yokoyama. Capitalize text files. => CAPITALS.DOC
CAPITALS.EXE. [MSDOS: MSC]

CUG205.06-CAPITALS.DOC doc
By Michael Yokoyama. Usage information. => CAPITALS.C CAPITALS.EXE.
[MS-DOS:]

CUG205.07-CAPITALS.EXE executable
By Michael Yokoyama. => CAPITALS.C CAPITALS.DOC. [MS-DOS: MSC]

CUG205.08-CCL-CL.C source
By Michael Yokoyama. Filter to eliminate multiple carraige returns. =>
CCL-CL.DOC. [MS-DOS:]

CUG205.09-CCL-CL.DOC doc
By Michael Yokoyama. Usage information. => CCL-CL.C. [MS-DOS:]

CUG205.10-CCL-CL.EXE executable
By Michael Yokoyama. => CCL-CL.CCLCLDOC. [MS-DOS: MSC]

CUG205.11-COLOR.C source
By Michael Yokoyama. Changes the colors of text on PC-clones. =>
COLOR.DOC COLOR.EXE. [MS-DOS:] Requires ANSI.SYS.

CUG205.12-COLOR.DOC doc
By Michael Yokoyama. Usage information. => COLOR.EXE. [MS-DOS:]
CONFIG.SYS must contain device = ANSI.SYS.

CUG205.13-COLOR.EXE executable
By Michael Yokoyama. => COLOR.C COLOR.DOC. [MS-DOS:]

CUG205.14-CONVERT.EXE executable
By Michael Yokoyama, Michael Yokoyama. Convert a number to hexadecimal
and octal. => CONVERT.EXE CONVERT.C. [MSDOS, MS-DOS:]

CUG205.15-CUG205.LST doc
Listing of files along with file by file description.

CUG205.16-DETAB.C source
By Michael Yokoyama. Replaces tabs with equivalent number of spaces.
=> DETAB.DOC DETAB.EXE. [MS-DOS: MSC]

CUG205.17-DETAB.DOC doc
By Michael Yokoyama. Usage information. DETAB.C. [MS-DOS:]

CUG205.18-DETAB.EXE executable
By Michael Yokoyama. => DETAB.C. [MSDOS:]

CUG205.19-ENTAB.C source
By Michael Yokoyama. Replaces spaces with tabs. => DETAB.C ENTAB.DOC.
[MSDOS:]

CUG205.20-ENTAB.DOC doc
By Michael Yokoyama. Usage information. => ENTAB.C. [MS-DOS:]

CUG205.21-ENTAB.EXE executable
By Michael Yokoyama. => ENTAB.C DETAB.C. [MS-DOS: MSC]

CUG205.22-EXPOSE.C 1.1 source
By Michael Yokoyama. List messages in executable files. => EXPOSE.EXE.
[MS-DOS:]

CUG205.23-EXPOSE.EXE 1.1 executable
By Michael Yokoyama. => EXPOSE.C. [MSDOS:]

CUG205.24-FISH.C source
By Michael Yokoyama. Children's Go-Fish game. => FISH.EXE CUG102.11.
[MSDOS:]

CUG205.25-FISH.EXE executable
By Michael Yokoyama. => FISH.C. [MSDOS:]

CUG205.26-FKEY.C source
By Michael Yokoyama. Function key redefinition program. => FKEY.EXE
TIMEMARK.C. [MS-DOS:]

CUG205.27-FKEY.EXE executable
By Michael Yokoyama. => FKEY.C. [MSDOS:]

CUG205.28-FREQ.C source
By Michael Yokoyama. Counts occurrences of similar lines in sorted
files. => FREQ.EXE WHITE.C RS.C WORDS.C. [MS-DOS:]

CUG205.29-FREQ.DOC doc
By Michael Yokoyama. Usage information. => FREQ.C. [MS-DOS:]

CUG205.30-FREQ.EXE executable
By Michael Yokoyama. => FREQ.C FREQ.DOC. [MS-DOS: MSC]

CUG205.31-LOWCASE.C source
By Michael Yokoyama. Filter for converting entire text files to lower
case. => CAPITALS.C LOWCASE.DOC. [MS-DOS:]

CUG205.32-LOWCASE.DOC doc
By Michael Yokoyama. Usage information. LOWCASE.C LOWCASE.EXE. [MS
DOS:]

CUG205.33-LOWCASE.EXE executable
By Michael Yokoyama. => LOWCASE.DOC. [MS-DOS: MSC]

CUG205.34-RS.C source
By Michael Yokoyama. Filter to remove white space from end of line. =>
RS.DOC RS.EXE. [MS-DOS:]

CUG205.35-RS.DOC doc
By Michael Yokoyama. Usage description. => RS.C RS.EXE. [MS-DOS:]

CUG205.36-RS.EXE executable
By Michael Yokoyama. => RS.C RS.DOC. [MS-DOS: MSC]

CUG205.37-TEE.C source
By Michael Yokoyama. UNIX-like Tee command. Copies standard input to
the specified file without changing standard output. => TEE.DOC
TEE.EXE. [MS-DOS:]

CUG205.38-TEE.DOC doc
By Michael Yokoyama. Usage description. => TEE.C TEE.EXE. [MS-DOS:]

CUG205.39-TEE.EXE executable
By Michael Yokoyama. => TEE.C TEE.DOC. [MS-DOS: MSC]

CUG205.40-TIMEMARK.C source
By Michael Yokoyama. Prints current time and date. => TIMEMARK.EXE.
[MS-DOS:]

CUG205.41-TIMEMARK.EXE executable
By Michael Yokoyama. => TIMEMARK.C. [MS-DOS:]

CUG205.42-WHITE.C source
By Michael Yokoyama. Counts the blanks, tabs, and carraige returns in
a file. => WHITE.EXE WHITE.DOC. [MS-DOS:]

CUG205.43-WHITE.DOC doc
By Michael Yokoyama. Usage information. => WHITE.C. [MS-DOS:]

CUG205.44-WHITE.EXE executable
By Michael Yokoyama. => WHITE.C WHITE.DOC. [MS-DOS: MSC]

CUG205.45-WORDS.C source
Word Lister. By Michael Yokoyama. Places words on separate lines. =>
WORDS.DOC WORDS.EXE CUG 141.05 CUG 167.02. [MSDOS:]

CUG205.46-WORDS.DOC doc
By Michael Yokoyama. Usage information and examples. => WORDS.C.
[MS-DOS:]

CUG205.47-WORDS.EXE executable
By Michael Yokoyama. => WORDS.DOC. [MS-DOS: MSC]

CUG205.48-WSTYPE.C source
Wordstar Display. By Michael Yokoyama. Displays and/or converts
Wordstar files to viewable clean files. => WSTYPE.DOC WSTYPE.EXE.
[MS-DOS:]

CUG205.49-WSTYPE.DOC doc
By Michael Yokoyama. Usage information and examples. => WSTYPE.C.
[MS-DOS:]

CUG205.50-WSTYPE.EXE executable
By Michael Yokoyama. => WSTYPE.C WSTYPE.DOC. [MS-DOS: MSC]

==============================================================================
CUG206 -
-----------

Checkbook Register Doc and Exec. A suite of programs for maintaining a
check register under CP/M from Jim Woolley (CA) of WoolleyWare.
Contains user documentation and executable versions of the programs
configured for an Osborne I display. An installation program can be
used to reconfigure the executables for other terminals. User
interface modeled after Wordstar. [restricted]

CUG206.01-ABSTRACT.DOC 1.1 doc
Documentation Abstract. By Jim Woolley. Covers features, system
specifications, and functional description of check register program.
=> CHECKS.DOC.

CUG206.02-CHECKS.DOC doc
Complete Documentation, tutorial. By Jim Woolley. Users guide
including tutorial and commands summary. => CHECKS11.COM CG207.

CUG206.03-CHECKS.SCR data
Screen Control Data. By Jim Woolley. CHECKSIN.COM.

CUG206.04-CHECKS11.COM 1.1 executable
Updated Version of Checks. By Jim Woolley. Manages the current check
register, including reconciliation of transactions which have cleared.
=> CLEARS11.COM CHECKSIN.COM CUG207. [CP/M-80: BDSC]

CUG206.05-CHECKSIN.COM executable
Installs CHECKS.SCR file. By Jim Woolley. Adapts 'checks' and 'clears'
to your video display terminal. => CHECKS11.COM CLEARS11.COM CUG207.
[CP/M 80:]

CUG206.06-CHECKSIN.DAT 1.1 data
Installation Data. By Jim Woolley. => CHECKSIN.COM.

CUG206.07-CLEARS11.COM 1.1 executable
By Jim Woolley. Maintains and summarizes transactions after they have
cleared the bank, for historical review. => CHECKS11.COM CHECKSIN.COM
CUG207. [CP/M-80: BDSC] Requires 52.5K of TPA.

CUG206.08-DEMO.DAT 1.1 data
By Jim Woolley. Demonstration check register. => DEMO.INF.

CUG206.09-DEMO.INF 1.1 data
By Jim Woolley. Demonstration information. => DEMO.DAT.

CUG206.10-README.11 1.1 doc
Revision 1.1 Information. By Jim Woolley. Update of README.A. =>
README.A.

CUG206.11-README.A 1.1 doc
Condensed Installation Directions. By Jim Woolley. Disk contents. =>
ABSTRACT.DOC CHECKS.DOC.

==============================================================================
CUG207 -
-----------

Checkbook Register Doc and Source
The source code (BDS C v1.5) and user documentation for a suite of
programs that maintain a checkbook. The programs are user supported
software. [restricted]

CUG207.01-ABSTRACT.DOC 2.0 doc
Condensed Documentation. By Jim Woolley. Condensed documentation
includes system specifications and functional descriptions. =>
CHECKS.DOC README.11 README.A README.B CUG206.

CUG207.02-CHECK.SCR data
Screen Control Data. By Jim Woolley. => CHECKSIN.COM.

CUG207.03-CHECKA.C 1.0 source
By Jim Woolley. Contains entry editing functions. => CHECKS.H.
[CP/M-80: BDSC]

CUG207.04-CHECKD.C 1.1 source
By Jim Woolley. Data entry functions. _ CHECKS.H. [CP/M-80:]

CUG207.05-CHECKS.C 1.1 source
Main Source Code File. By Jim Woolley. Includes main and data fetching
functions. => CHECKS.H. [CP/M-80:]

CUG207.06-CHECKS.DOC doc
Complete Documentation & Tutorial. By Jim Woolley. Users guide
including tutorial and edit command summary. => CHECKS11.COM README.11
README.A README.B CUG206.

CUG207.07-CHECKS.H header
By Jim Woolley. Header file including global definitions and data
structures. [CP/M-80: BDSC]

CUG207.08-CHECKSB.C source
By Jim Woolley. Text display functions. => CHECKS.H. [CP/M-80:]

CUG207.09-CHECKSC.C 1.1 source
By Jim Woolley. Contains functions for cursor positioning, character
manipulation, money functions, saving and aborting functions. =>
CHECKS.H CUG206. [CP/M-80:]

CUG207.10-README.11 1.1 doc
Update Information. By Jim Woolley. Includes listing of disk files. =>
CHECKS.DOC.

CUG207.11-README.B doc
Condensed Installation Directions. By Jim Woolley. Includes table of
disk contents. => CHECKS.C.

CUG207.12-XIO.C 1.0 source
By Jim Woolley. I/O functions using direct BIOS. => CHECKS.H. [CP/M
80: BDSC]

==============================================================================
CUG208 -
-----------

E For CP/M 68K
A version of the 'e' full screen editor adapted for CP/M 68K by Dr.
Yoshimasa Tsuji(Japan). 'e' is a small, fast editor with complete
block and string operations, able to handle very large files. [public]

CUG208.01-CB.C source
C Program Beautifier. By Yoshimasa Tsuji, William C. Colley III.
Copies C source code to stdout adjusting spacing and indentation for
readability. Curly braces checking is included. Written in Portable C.
[MS-DOS, CP/M, UNIX:]

CUG208.02-CPM68K.C 1.48 source
'e' For 68K. By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. OS
dependent functions. => E0.C CUG:3133 CUG158. [CP/M-68K, MS-DOS: DRI,
Alcyon] Default configuration is for systems with 128K or more

CUG208.03-CRT.S 1.0 source
Assembly portion C startup module for DRI. Calls XMAIN.C to post
process command line, sets up standard VO. => XMAIN.C. [CP/M-68K: DRI,
Alcyon] 68000 assembly code

CUG208.04-E.DOC doc
By G. Nigel Gilbert. Original 'e' documentation. => CUG133.

CUG208.05-E.H 1.48 header
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. => E68K.DOC.
[CP/M68K: DRI, Alcyon]

CUG208.06-E0.C 1.48 source
Screen Editor. By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji.
Root file for editor. Includes main() and top level command processor.
=> CUG 133 CUG 158 E.H E68K.DOC. [CP/M 68K: DRI, Alcyon]

CUG208.07-E1.C source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. File maintenance
functions. Functions to control editor modes such as auto-indent, tab
settings, backup behavior, and status displays. => E.H E68K.DOC. [CP/M
68K: DRI, Alcyon]

CUG208.08-E10.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Buffered disk l/O.
Interface to the virtual memory system. => E.H E68K.DOC. [CP/M-68K:
DRI, Alcyon]

CUG208.09-E2.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Functions to
modify text buffer. => E.H E68K.DOC. [CP/M-68K: DRI]

CUG208.10-E3.C source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Text display
functions. => E.H E68K.DOC. [CP/M-68K: Alcyon]

CUG208.11-E4.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. String search and
replace functions. => E.H E68K.DOC. [CP/M-68K: DRI, Alcyon]

CUG208.12-E5.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Functions to read
and write files. => E.H E68K.DOC. [CP/M: DRI, Alcyon]

CUG208.13-E6.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Perform block com
mands. => E.H E68K.DOC. [CP/M-68K: DRI,Alcyon]

CUG208.14-E68K.DOC doc
By Yoshimasa Tsuji. History of 'e' & a discussion of BDS C
non-portability. => E0.C E.DOC.

CUG208.15-E7.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Low level terminal
l/O functions. => E.H E68K.DOC. [CP/M-68K: DRI, Alcyon]

CUG208.16-E8.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. High level
interface to virtual text buffer. => E.H E68K.DOC. [CP/M68K: DRI,
Alcyon]

CUG208.17-E9.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Memory management
functions. => E.H E68K.DOC. [CP/M-68K: DRI, Alcyon]

CUG208.18-ETERM.C 1.48 source
By G. Nigel Gilbert, J.W. Haefner, Yoshimasa Tsuji. Terminal specific
functions. => E.H E68K.DOC. [CP/M-68K: DRI, Alcyon]

CUG208.19-LIBC.DAT data
By Yoshimasa Tsuji. Extensive comments and tutorial information about
the functions in DRl's standard library. [CP/M 68K: DRI, Alcyon]

CUG208.20-READ.ME doc
By Yoshimasa Tsuji. Bug fixes, new features. General file description.
=> E68K.DOC E0.C.

CUG208.21-STDIO.H header
Header file fixed for DRI C. [CP/M 68K: DRI]

CUG208.22-TAB.C source
By Yoshimasa Tsuji. Tablify text. => ENTAB DETAB.

CUG208.23-XMAIN.C source
By Yoshimasa Tsuji. C portion of C startup module. Sets up channels,
expands wild cards, handles quoted strings, distinguishes between
upper and lower case on command line. Calls mai(). => CRT.S. [CP/M
68K: DRI]

==============================================================================
CUG209 -
-----------

Simplex Curve Fitting
Contributed by Dr. John A. Rupley (AZ) this package for Eco C-80,
finds a best fit between experimental data and a model supplied by the
experimenter. The programs use the Nelder - Mead algorithm for simplex
minimization, and a least
squares measure of fit quality. [public]

CUG209.01-CONTENTS.ECO 1.0 doc
By John A. Rupley. File listing. _ HEADERS.ECO.

CUG209.02-CTRLCNST.H 1.00 header
By John A. Rupley. Common system definitions, control constants.
[CP/M: ECO]

CUG209.03-HEADERS.ECO 1.00 doc
By John A. Rupley. Short descriptions of C programs and related files.

CUG209.04-LDHFITR.C 1.0 source
By John A. Rupley. Nonlinear least square fit by simplex minimization
(Nelder-Mead algorithm) of two-substrate, two-product enzyme kinetic
data. => LDHFITR.DOC LDHFITRC.COM SIMPLEXR.DOC SIMPMAIN.C LINEFITR.C.
[CP/M: ECO]

CUG209.05-LDHFITR.COM 1.0 executable
By John A. Rupley. => LDHFITR.C. [CP/M:]

CUG209.06-LDHFITR.DAT 1.0 data
By John A. Rupley. Data file. => LDHFITR.C. [CP/M:]

CUG209.07-LDHFITR.DOC 1.0 doc
By John A. Rupley. Notes on data reduction by computer. => LDHFITR.C.
[CP/M:]

CUG209.08-LINEFITR.C 1.0 source
By John A. Rupley. Test of simplex minimization by fit of linear
function (y = a + bx) to trial data. => LINEFITR.COM LINEFITR.DAT
SIMPMAIN.C. [CP/M: ECO]

CUG209.09-LINEFITR.COM executable
By John A. Rupley. => LINEFITR.C. [CP/M:]

CUG209.10-LINEFITR.DAT dah
By John A. Rupley. Data file to LINEFITR.COM. => LINEFITR.C. [CP/M:]

CUG209.11-SIMPFITR.DAT data
By John A. Rupley. Template for input of data. => SIMPFITR.DOC.
[CP/M:]

CUG209.12-SIMPFITR.DOC 1.00 doc
By John A. Rupley. Documentation for C routines. => SIMPLEXR.DOC
SIMOUTR.DOC LDBFITR.DOC.

CUG209.13-SIMPLEXR.DOC 1.00 doc
By John A. Rupley. Explanation of NelderMead algorithm. =>
SIMPLEXR.DOC.

CUG209.14-SIMPLIB0.C 1.00 source
By John A. Rupley. => SIMPLIB1.C SIMPMAIN.C. [CP/M: ECO]

CUG209.15-SIMPLIB1.C 1.0 source
By John A. Rupley. Definition of the aggregate data, with a dummy
structure declaration. => SIMPLIB0.C SIMPMAIN.C. [CP/M:]

CUG209.16-SIMPMAIN.C l.oo source
By John A. Rupley. => SIMPLIB1.C SIMPLIB0.C. [CP/M:]

CUG209.17-SIMPOUTR.DOC 1.00 doc
By John A. Rupley. Description of output from the simple fitting
program. SIMPFITR.DOC.

CUG209.18-SYSlCALR.MAC 1.00 source
By John A. Rupley. Assembly code function called by C program. =>
SIMPMAIN.C. [CP/M: M80]

==============================================================================
CUG210 -
-----------

Simulations and Loadable Bios For CP/M
A potpourri of CP/M programs: a percolative phase transition simula
tion based upon lattice statistics, agrade book manager and a logon
program for ZCPR3 (Eco-C80) all by Dr. John A. Rupley; (AZ) a set of
utilities and code fragments to support load able BIOS modules (C/80)
by Ted Carnevale (NY); an Aztec CII version of Dan Schechter's (ND)
kittyline (see description of CUG216); and a dump utility from Ken
Busch (CA), developed under Mix C (NY); an Aztec CII version of Dan
Schechter's (ND) kittylint (see description of CUG216); and a dump
utility from Ken Busch (CA), developed under Mix C [public]

CUG210.01-CONTENTS.ECO 1.0 doc
By John A. Rupley. Partial list of files with description.

CUG210.02-CTRLCNST.H 1.0 header
By J.A. Rupley. Common system definitions and control constants.
[CP/M: ECO]

CUG210.03-CXB.C 1.2 source
By N.T. Carnevale. Reports loaded BIOS extensions. => XB.H. [CP/M 2.2:
C/80]

CUG210.04-DUMP.C 1.7 source
By K.G. Busch. Displays the contents of range of memory in hexadecimal
format. => DUMP.DOC DUMP.COM DUMPS.COM. [CP/M: Mix]

CUG210.05-DUMP.COM 1.7 executable
Memory dump. By K.G. Busch. Linked with RUNTIME.OVY. => DUMP.C.
[CP/M:]

CUG210.06-DUMP.DOC doc
By K.G. Busch. Documentation of Dump C. => DUMP.COM DUMP.C. [CP/M:
MIX]

CUG210.07-DUMPS.COM 1.7 executable
Memory dump summary description of Rupley files. By K.G. Busch. Unked
with SMALLCOM.OVY. => DUMP.C. [CP/M: Mix]

CUG210.08-HEADERS doc

CUG210.09-HEADERS.ECO doc

CUG210.10-KITTYLNT.C source
By Dan Schechter. A 'tiny lint' source code analyzer. => KITTYLNT.DOC.
[CP/M: AZTEC]

CUG210.11-KlmLNT.COM executable
By Dan Schechter. => KITTYLNT.DOC. [CP/M:]

CUG210.12-KITTYLNT.DOC doc
By Dan Schechter. Documentation for KITTYLNT.C. => KITTYLNT.C
KITTYLNT.COM.

CUG210.13-LOGONR.C 3.0 source
By J.A. Rupley. Logon routine for ZCPR2. Displays time and date
information from Hayes clock and timestamps. => SYS1CALR.MAC
CTRLCNST.H. [CP/M: ECO]

CUG210.14-LXB.ASM source
By N.T. Carnevale. Installs a loadable BIOS extension. =>
NEWXBIOS.CUG. [CP/M:] Requires Digital Research's RMAC or compatible
assembler.

CUG210.15-MUXB.ASM source
By N.T. Carnevale. BIOS extension module. => NEWXBIOS.CUG. [CP/M:]
Requires Digital Research's RMAC assembler.

CUG210.16-NEWXBIOS.CUG doc
By N.T. Carnevale. Documentation for BIOS extension module and related
utilities. => CXB.C RXB.C XB.H LXB.ASM MUXB.ASM.

CUG210.17-PERCOLXR.C 1.0 source
By J.A. Rupley. Simulation of percolative phase transition in a two
dimensional square lattice. => PERCOLXR.COM. [CP/M: ECO]

CUG210.18-PERCOLXR.COM 1.0 ex-
ecutable By J.A. Rupley. => PERCOLXR.C. [CP/M:]

CUG210.19-RXB.C source
By N.T. Carnevale. Removes an installed BIOS extension. =>
NEWXBIOS.CUG. [CP/M: C/80]

CUG210.20-SUMGRADR.C 1.00 source
By John A. Rupley. System for keeping an instructor's grade book.
[CP/M: ECO]

CUG210.21-SUMGRADR.COM 1.00 ex-
ecutable By John A. Rupley. => SUMGRADR.C. [CP/M:]

CUG210.22-SUMGRADR.DAT 1.00 data
By John A. Rupley. Test file. => SUMGRADR.C.

CUG210.23-SYS1 CALR.MAC 1.00 souruce
By John A. Rupley. Assembly code function to call an absolute address
from within a C program. [CP/M: M80]

CUG210.24-XB.H header
By N.T. Carnevale. Header file for CXB.C and RXB.C. => CXB.C RXB.C
NEWXBIOS.CUG. [CP/M: Ct80]

==============================================================================
CUG211 -
-----------

Search, Sort and Merge
Utilities by Dr. John A. Rupley (AZ), to search, sort and merge files
with variable length records. These utilities expect records to be
delimited by a string, allowing multiline records. Keys may be
specfiied by strings containing whildcards and meta characters.
Programs are configured to manipulate abstracts (e.g. for online
searches of Chemical Abstracts). All for BDS v1.5 (CP/M). [public]

CUG211.01-BDSCIO.H header
By Leor Zolman. Standard header file for BDS C. [CP/M: BDSC]

CUG211.02-CHARFUN.CRL 1.0 object
=> CHARFUNR.CSM. [CP/M:l

CUG211.03-CHARFUNR.CSM 1.0 source
By M.I. Maney. Library of assembly code functions to handle character
operations. => CHMFUN.CRL. [CP/M:]

CUG211.04-CIO.CRL object
By J.A. Rupley. => DIOR.C. [CP/M:]

CUG211.05-CONTENTS.BDS doc
By John A. Rupley. => HEADERS.BDS.

CUG211.06-DIO.H 1.0 header
By Eugene H. Mallory. I/O redirection header from BDS C and Van Nuys
Toolkit. => DIOR.C CUG143 CUG144. [CP/M: BDSC]

CUG211.07-DIOR.C 1.0 source
l/O Redirection Library. By J.A. Rupley, Gene Mallory. => DIO.H.
[CP/M:]

CUG211.08-HEADERS.BDS 1.0 doc
By John A. Rupley. Short description of programs and related files.

CUG211.09-SCOPE.CRL object
By J.A. Rupley. => SCOPER.C. [CP/M: BDSC]

CUG211.10-SCOPER.C 1.0 source
By J.A. Rupley. Slightly modified "SCOPE" library of full screen input
functions. => SCOPE.CRLCUG105. [CP/M:]

CUG211.11-STDLIB3R.C 1.0 source
By John A. Rupley. Incorporate use of drive/user prefix into BDS
standard library functions. [CP/M:]

CUG211.12-STRFUN.CRL 1.0 object
By M.I. Maney, John A. Rupley. => CG106.26 STRFUNR.CSM. [CP/M:]

CUG211.13-STRFUNR.CSM source
By M.I. Maney. Library of assembly code functions to handle string
operations. => STRFUN.CRL CUG106. [CP/M:]

CUG211.14-WILDEXP.CRL object
By J.A. Rupley. => WILDEXPR.C. [CP/M:]

CUG211.15-WILDEXPR.C 1.0 source
Wildcard Utility. By J.A. Rupley. Accepts wild card on CP/M command
line. This modification of Van Nuys Toolkit original supports use of
drive/user file prefix. => WILDEXP.CRL CUG143 CUG144 DIO.H STDLIB3R.C.
[CP/M:]

CUG211.16-XMERGE1.TST 1.0 data
By J.A. Rupley. Test file for XMERGER. => XMERGER.C. [CP/M:]

CUG211.17-XMERGE2.TST data
By J.A. Rupley. Test file for XMERGER. => XMERGER.C. [CP/M:]

CUG211.18-XMERGER.C 1.0 source
By J.A. Rupley. Merge two sorted files, with output redirection. =>
XMERGER.COM XMERGE1.TST XMERGE2.TST XSORT.C XSRCHR.C. [CP/M: BDSC]

CUG211.19-XMERGER.COM executable
By J.A. Rupley. => XMERGER.C. [CP/M:]

CUG211.20-XSORT.TST 1.0 data
By J.A. Rupley. Test file for XSORTR. => XSORTR.C. [CP/M:]

CUG211.21-XSORTR.C 1.0 source
By J.A. Rupley. Sort random length text records, such as abstracts. =>
XSRCHR.C XSORT.TST XSORTR.COM XMERGER.C. [CP/M: BDSC]

CUG211.22-XSORTR.COM executable
By J.A. Rupley. => XSORTR.C. [CP/M:]

CUG211.23-XSRCH.ZIP data
By J.A. Rupley. Template file for XSRCHR. => XSRCHR.COM.

CUG211.24-XSRCHCAS.ZIP data
By J.A. Rupley. Templates for full-screen input. => XSRCHR.COM.

CUG211.25-XSRCHR.C 1.0 source
By J.A. Rupley. => XSRCHR.C XSORT.C XMERGER.C XSRCH.TST XSRCH.ZIP
XSRCHCAS.ZIP XSRCHR.COM XSRCHSTD.ZIP. [CP/M: BDSC]

CUG211.26-XSRCHR.COM executable
By J.A. Rupley. => XSRCHR.C. [CP/M:]

CUG211.27-XSRCHSTD.ZIP 1.0 data
By J.A. Rupley. Templates for full screen input. => XSRCHR.COM.

==============================================================================
CUG212 -
-----------

Simulation For BDS
A BDS C version of Dr. John A. Rupley's (AZ) percolative phase
transition simulation. An Eco C-80 version appears on CUG210. [public]

CUG212.01-BDSCIO.H header
By Leor Zolman. Standard header file for BDS C. [CP/M: BDSC]

CUG212.02-CONTENTS.BDS 1.0 doc
By J.A. Rupley. Disk table of contents with short description. =>
HEADERS.BDS.

CUG212.03-DEFF.CRL object
By Leor Zolman. Relocatable image of BDS standard library with
modifications to incorporate use of du: driver/user prefix into
standard BDS library. => STDLIB3R.CRL. [CP/M: BDSC]

CUG212.04-DEFF2.CRL object
By Leor Zolman. Part two of BDS standard library. => DEFF.CRL. [CP/M:]

CUG212.05-DIO.CRL object
By J.A. Rupley, Gene Mallory. => DIOR.C. [CP/M:]

CUG212.06-DIO.H 1.0 header
By J.A. Rupley, Gene Mallory. Includes support for redirection under
BDS. => DIOR.C. [CP/M:]

CUG212.07-DIOR.C source
VO Redirection Library. By J.A. Rupley, Gene Mallory. I/O redirection
library for BDS C. => DIO.H DIO.CRL CG143.09. [CP/M:]

CUG212.08-FLOAT.CRL object
=> FLOATR.C. [CP/M:]

CUG212.09-FLOATR.C 1.0 source
Floating Point Library. By J.A. Rupley, L.C. Calhoun, Bob Mathias.
Library of floating point functions. => CUG107. [CP/M: BDSC]

CUG212.10-HEADERS.BDS 1.00 doc
By J.A. Rupley. Summary description of each program. => CONTENTS.BDS.

CUG212.11-JARIO.H 1.0 header
By J.A. Rupley. Header file with various constants, including input
and output. => PERC3DR.C. [CP/M: BDSC]

CUG212.12-PERC3DR.C 1.00 source
By J.A. Rupley. Simulation of percolative phase transition is a
three-dimensional simple cubic lattice. => JARIO.H BDSCIO.H DIO.H
PERC3DR.COM PERCOLAR.C. [CP/M:]

CUG212.13-PERC3DR.COM executable
By J.A. Rupley. => PERC3DR.C. [CP/M:]

CUG212.14-PERCOLAR.C 1.00 source
By J.A. Rupley. Simulation of percolative phase transition in a
two-dimensional square lattice. => PERCOLAR.COM PERC3DR.C. [CP/M:]

CUG212.15-PERCOLAR.COM 1.0 ex-
ecutable By J.A. Rupley. [CP/M:]

CUG212.16-STDLIB3R.C source
By J.A. Rupley. Incorporates use of du prefix into BDS standard
library functions. => DEFF.CRL DEFF2.CRL. [CP/M:]

==============================================================================
CUG213 -
-----------

Van Nuys Enhancements
Several enhanced tools from the Van Nuys Toolkit (CUG143 and CUG144)
and UNVAN, a filter which undoes the idiosyncratic keywords used
throughout the original toolkit. Among other improvements, Rupley has
added ZCPR3 style wildcards in drive and user specifications. From Dr.
John A. Rupley (AZ), for BDS C (CP/M). [public]

CUG213.01-BATCHR.C 1.0 source
Submit (Batch) Utility from Van Nuys Toolkit.. By J.A. Rupley, Eugene
H. Mallory. Extended menu to include all BAT, ZEX and SUB files in all
user areas of current drive and of drive A. => BATCHR.COM CUG143.
[CP/M: BDSC]

CUG213.02-BATCHR.COM executable
By J.A. Rupley. => BATCHR.C. [CP/M:]

CUG213.03-BDSCIO.H header
By J.A. Rupley. Standard header file from Van Nuys Toolkit and BDS C.
[CP/M:]

CUG213.04-CBPRCPR.BAT batch
By J.A. Rupley. Submit file for filtering C code through cbprepr then
cbr. => CBPREPR.C CBR.C. [CP/M;]

CUG213.05-CBPREPR.C 1.0 source
Filter to prepare C code for formatting. By J.A. Rupley. Filter
inserts/deletes white space and newline marker to produce consist ant
text style. Then filters through CBR to indent by control level. =>
CBPREPR.COM CBPREPR.BAT CBR.C. [CP/M: BDSC]

CUG213.06-CBPREPR.COM executable
By J.A. Rupley. => CBPREPR.C. [CP/M:]

CUG213.07-CBPRETST.C 1.0 source
By J.A. Rupley. Test file for CBPREPT.C and CBR.C. => CBR.C
CBPRETST.C. [CP/M:]

CUG213.08-CBR.C 1.0 source
By J.A. Rupley. Filter to reformat C code, indented according to
control level. => CBPREPR.C CBR.COM. [CP/M:]

CUG213.09-CBR.COM executable
By J.A. Rupley. => CBR.C CBPREPR.C. [CP/M:]

CUG213.10-CONTENTS.BDS doc
By John A. Rupley. Disk contents. => HEADERS.BDS.

CUG213.11-CR.C 1.0 source
By J.A. Rupley, Eugene H. Mallory. Construct and execute submit file
from instructions in special comments within the source files. =>
CR.COM. [CP/M: BDSC]

CUG213.12-CR.COM executable
By J.A. Rupley. => CR.C. [CP/M:]

CUG213.13-DEFF.CRL object
Standard relocatable library for BDS. => STDLIB3R.CRL. [CP/M:]

CUG213.14-DEFFC.CRL object
Standard relocatable library for BDS. => STDLIB3R.C. [CP/M:]

CUG213.15-DIO.CRL object
=> DIOR.C.

CUG213.16-DIO.H header
By John A. Rupley, Eugene H. Mallory. I/O redirection header file. =>
DIOR.C. [CP/M:]

CUG213.17-DIOR.C 1.0 source
1/0 Redirection Ubrary from BDS C and Van Nuys Toolkit. By J.A.
Rupley, Gene Mallory. => DIO.CRL DIO.H STDLIB3R.C. [CP/M: BDSC]

CUG213.18-HEADERS.BDS doc
Headers of files. => CONTENTS.BDS.

CUG213.19-JARIO.H header
By J.A. Rupley. Author's personal header file.

CUG213.20-STDLIB3R.C source
File-Handling Functions. By J.A. Rupley. Functions allow the use of
du: in addition to u/d: drive/user prefix. => DEFF.CRL DEFF2.CRL.
[CP/M: BDSC]

CUG213.21-UNVANR.C 1.0 source
By J.A. Rupley. Filter to convert Van Nuys Toolkit Pascal style
delimiters and keywords back to standard C tokens. => UNVANR.COM.
[CP/M:]

CUG213.22-UNVANR.COM executable
By J.A. Rupley. => UNVANR.C. [CP/M:]

CUG213.23-WILDEXP.CRL object
By J.A. Rupley. => WILDEXPR.C.

CUG213.24-WILDEXPR.C 1.0 source
Modified Version of WILDEXP.. By J.A. Rupley. Allows use of du: and
u/d: as well as expansion of d?: and ?/d: forms. => WILDEXP.CRLCUG111
CUG121 CUG143. [CP/M: BDSC]

CUG213.25-XCR.C source
Cross-Reference Utility. By J.A. Rupley, Phillip N. Hisley. Modified
version of XC.C CUG 120.19: Added check on characters of output per
line (cbar_count) to obtain correct pagination. => XCR.COM. [CP/M:]

CUG213.26-XCR.COM executable
By J.A. Rupley, Phillip N. Hisley. => XCR.C. [CP/M:]

==============================================================================
CUG214 -
-----------

File Display Utilities
Developed under BDS v1.4, BDS C utilities for editing and browsing in
files--TYPEXXR is descended for TYPE20; XSHOWR allows rapid movement
of the display window using Wordstar-like commands; a clock support
utility. From Dr. John A. Rupley (AZ). [public]

CUG214.01-BDSCIO.H header
By Leor Zolman. Standard header file for BDS. [CP/M: BDSC]

CUG214.02-CBR.C 1.0 source
By J.A. Rupley. Filter to reformat C code, indented according to
control level. => CBR.COM CUG213. [CP/M:]

CUG214.03-CBR.COM executable
By J.A. Rupley. => CBR.C. [CP/M:]

CUG214.04-CHARFUN.CRL object
By J.A. Rupley. => CHARFUNR.CSM. [CP/M:]

CUG214.05-CHARFUNR.CSM 1.0 source
By M.I. Maney. Library of assembly code functions to handle character
operations. => CHARFUN.CRL. [CP/M:]

CUG214.06-CHRONOR.C 1.0 source
By J.A. Rupley. Reads Hayes chronograph and display time, date. =>
CHRONOR.COM. [CP/M:]

CUG214.07-CHRONOR.COM executable
By J.A. Rupley. => CHRONOR.C. [CP/M:]

CUG214.08-CONTENTS.BDS doc
By John A. Rupley. Table of contents. => HEADERS.BDS.

CUG214.09-CTRLSHOR.C 1.0 source
Show control characters. By J.A. Rupley, Eugene H. Mallory. Strips
high bits and displays control characters (not cr, If, tab) as
"^char". => CTRLSHOR.COM. [CP/M:] BDSC]

CUG214.10-CTRLSHOR.COM 1.0 ex-
ecutable By J.A. Rupley. => CTRLSHOR.C. [CP/M:]

CUG214.11-DIO.CRL obiect
By J.A. Rupley. => DIOR.C.

CUG214.12-DIO.H header
By J.A. Rupley. IO redirection header file. => DIOR.C. [CP/M: BDSC]

CUG214.13-DIOR.C 1.0 source
I/O Redirection Library. By J.A. Rupley. Modifications: avoids CR-CR
pair before LF by patch in putchar(). => DIO.CRL DIO.H STDLIB3R.C.
[CP/M:]

CUG214.14-HEADERS.BDS doc
File headers. => CONTENTS.BDS.

CUG214.15-JARIO.H 1.00 header
By J.A. Rupley. Authors personal standard header. [CP/M: BDSC]

CUG214.16-STDLIB3R.C source
Flle-Handling Functions. By J.A. Rupley. Functions allow the use of
du: in addition to u/d: drive/user prefix. => DEFF.CRL
DEFFC.CRLWILDCARD. [CP/M:]

CUG214.17-STRFUN.CRL 1.0 object
By J.A. Rupley. => STRFUNR.CSM. [CP/M:]

CUG214.18-STRFUNR.CSM 1.0 source
By J.A. Rupley. Assembly coded functions for string operations. =>
STRFUN.CRL CHARFUNR.CSM CUG106. [CP/M:]

CUG214.19-TYPER-R.C 1.0 source
Typer. By John A. Rupley, H.G. Lord. Line editor that handles typing
not suitable for a word processor (i.e. envelopes, forms, short
notes). => TYPER-R.COM. [CP/M: BDSC]

CUG214.20-TYPER-R.COM 1.0 executable
By J.A. Rupley. => TYPER-R.C. [CP/M:]

CUG214.21-TYPEXXR.C 10 source
By J.A. Rupley. Sequential display of a file, with options for
printing. A rewrite of TYPE20. => TYPEXXR.COM. [CP/M:]

CUG214.22-TYPEXXR.COM 10 executable
By J.A. Rupley. [CP/M:]

CUG214.23-WILDEXP.CRL object
By J.A. Rupley. => WILDF

CUG214.24-WILDEXPR.C
Modified Version of WILI Rupley. Allows use of du as expansion of d?:
and DEXP.CRL CUG111 CUG [CP/M: BDSC]

CUG214.25-XSHOW.H 1.00
By J.A. Rupley. Header file for XSHOWR.C. and XSHOWFNS.C. [CP/M:]

CUG214.26-XSHOWFNS.C
By J.A. Rupley. Function => XSHOWR.C. [CP/M: BDSC]

CUG214.27-XSHOWR.C 1.0 source
By J.A. Rupley. Page through a file using Wordstar-like commands.
Search for strings including wildcards and control characters. =>
XSHOW.H XSHOWFNS.C XSHOWR.COM. [CP/M:]

CUG214.28-XSHOWR.COm 1.0 executable
By J.A. Rupley. => XSHOWR.C. [CP/M:]

==============================================================================
CUG215 -
-----------

BBS For BDSC
A Bulletin Board system for BDS C under CP/M. This package is the
direct ancestor of BBS for UNIX (CUG182) and appears to be descended
for RBBS4 (CUG147). [public]

CUG215.01-BBSC.C 1.0 source
Bulletin Board System. By Mike Kelly. Main source files for running
the BBS and invoking related functions. => BBSC.DOC. [CP/M: BDSC]

CUG215.02-BBSC.DOC 1.0 doc
System Documentation. By Mike Kelly.=> BBSC.C. [CP/M:]

CUG215.03-BBSCDEF.H header
By Mike Kelly. Global defines and storage definitions for use by BBSC
system. => BBSC.C. [CP/M: BDSC]

CUG215.04-BBSCFILE.C 1.0 source
By Mike Kelly. File 1/0 support utilities. => BBSC.C. [CP/M:]

CUG215.05-BBSCLOCK.C 1.0 source
By Mike Kelly. Clock routine to access a Hayes Chronograph. => BBSC.C.
[CP/M:]

CUG215.06-BBSCMISC.C 1.0 source
By Mike Kelly. Miscellaneous functions used across the system. =>
BBSC.C. [CP/M:]

CUG215.07-BBSCPORT.C 1.0 source
By Mike Kelly. Support routines to access the modem port. => BBSC.C.
[CP/M:]

CUG215.08-BULLETIN.BBS doc
By Mike Kelly. Data file for bulletins to be shown at signon. =>
BBSC.C. [CP/M:]

CUG215.09-HEADER.BBS doc
By Mike Kelly. 7 record header files used with the messages. =>
BBSC.C. [CP/M:]

CUG215.10-HELP.BBS doc
By Mike Kelly. Short help file to explain the commands available. =>
BBSC.C. [CP/M:]

CUG215.11-MESSAGE.BBS doc
By Mike Kelly. Holds the messages left on BBS. => BBSC.C. [CP/M:]

CUG215.12-USER.BBS doc
By Mike Kelly. Maintains names, passwords, etc. of each caller. =>
BBSC.C. [CP/M:]

CUG215.13-WELCOME.BBS doc
By Mike Kelly. The signon/welcome file. => BBSC.C. [CP/M:]

==============================================================================
CUG216 -
-----------

Zmodem and Saveram
[mixed] 2 disks. Zmodem, by Chuck Forsberg (OR), is a file transfer
system designed to work efficiently in packet switched and time-shared
systems. Saveram developed under Microsoft v3.0, by Dave Madsen (IL)
and Frank H. Jeys (TX) loads a group of files to ramdisk at the
beginning of a work session and saves all modified files back to hard
disk at the end of the session. This volume also includes Kittylint, a
"tiny lint" and calc87, a calculator program for Eco C-88, both from
Dan Schechter (ND); and Anywhere, an enhanced where, by John Teichert,
Jr.

CUG216.01-ANYWHERE.C source
By John Teichert Jr., Mark S. Ackerman. Locate files on the PC hard
disk. Can be set up to search multiple hard disks. => ANYWHERE.DOC,
AW.EXE. [MS-DOS: MSC]

CUG216.02-ANYWHERE.DOC doc
By John Teichert Jr. Documentation for ANYWHERE. => ANYWHERE.C.

CUG216.03-AW.EXE executable
By John Teichert Jr., Mark S. Ackerman. WHERE.C. [MS-DOS]

CUG216.04-C-USER.TXT doc
By Frank H. Jeys. Documentation for scanfils. => SCANFILS.C.

CUG216.05-CALC87.C source
By Dan Schechter. Calculator program written to call on ECO C's 8087
emulation routines. Basic arithmetic plus sin, cos, tan, arcsin,. =>
CALC87.C. [CP/M, MS-DOS: AZTEC, ECO-C]

CUG216.06-CALC87.DOC doc
By Dan Schechter. Documentation for CALC87. => CALC87.C. [CP/M,
MS-DOS: AZTEC, ECO-C]

CUG216.07-CATALOG.216 doc
Listing of files, their authors and a short description of the file.
=> INDEX.

CUG216.08-CLL.BAT batch
By Frank H. Jeys. Example batch file that utilizes scanfils. =>
C-USER.TXT. [MS-DOS]

CUG216.09-DSZ.1 doc
UNIX style manual page for DSZ command. In Nroff format. => DSZ.EXE.

CUG216.10-DSZ.EXE executable
YMODEM, ZMODEM file transfer subprogram designed to be called from a
communications program or bulletin board. Uses. => DSZ.1. [MS-DOS]

CUG216.11-GZ doc
By Chuck Forsberg. SZ command file. SZ.C.

CUG216.12-INDEX doc
By Dan Schechter. Description of files. CATALOG.216.

CUG216.13-KITTYLNT.C source
By Dan Schechter. Kitty Lint. A mini-lint that checks delimiters, line
termination, printf statements and for loops. CP/M version.
KITTYLNT.C88, KlTTYLNT.COM. [CP/M: AZTEC]

CUG216.14-KITTYLNT.C88 source
By Dan Schechter. Kitty Lint 88. MS-DOS version of KITTYLNT.C. =>
KITTYLNT.C. [MS-DOS: ECO-C]

CUG216.15-KITTYLNT.COM executable
By Dan Schechter. => KITTYLNT.C, KITTYLNT.C88. [CP/M: AZTEC]

CUG216.16-KITTYLNT.DOC doc
By Dan Schechter. Documentation for KITTYLNT. => KITTYLNT.C,
KITTYLNT.C88.

CUG216.17-MEMO doc
By Dan Schechter. CALC87.C output file. CALC87.C.

CUG216.18-MINIRB.1 doc
By Chuck Forsberg. UNIX style manual page for MINIRB in Nroff format.
=> MINIRB.C.

CUG216.19-MINIRB.C source
By Chuck Forsberg, omen Technology Inc.. A bootstrap program for UNIX
to receive files from computers running YMODEM. MINIRB.1. [UNIX,
MS-DOS]

CUG216.20-NSWEEP.COM executable
Disk sweep utility for CP/M. [CP/M]

CUG216.21-PROGS.DOC doc
By Chuck Forsberg. Formatted pages for manual for UNDOS, RZ, SZ, DSZ.
=> UNDOS.C, RZ.C, SZ.C, DSZ.EXE. [UNIX, MS-DOS]

CUG216.22-RBSB.C source
By Chuck Forsberg. Terminal mode control from RB/SB ancestor. =>
ZMODEM.DOC. [UNIX]

CUG216.23-RZ.1 doc
By Chuck Forsberg. UNIX style manual page for RZ. => RZ.C. Nroff
format.

CUG216.24-RZ.C source
By Chuck Forsberg. UNIX ZMODEM: Receives Files.. Receives files and
commands from computers running Professional-YAM, PowerCom, YAM, IMP,
or programs supporting. => RZ.1, SZ, DSZ.EXE, MINIRB.C, PROGS.DOC.
[UNIX, MS-DOS]

CUG216.25-SAVEFILS.BAT batch
By Frank H. Jeys. output batch file generated by scanfils. =>
SCANFILS.C.

CUG216.26-SCANFIL.MAP data
By Frank H. Jeys. Map file. => SCANFILS.C. [MS-DOS: MSC]

CUG216.27-SCANFILS.C source
By Frank H. Jeys. Generates a batch file to backup only files which
have changed since an earlier scanfils execution. => C-USER.TXT,
CCL.BAT. [MS-DOS: MSC]

CUG216.28-SCANFILS.EXE executable
By Frank H. Jeys. => SCANFILS.C. [MS-DOS: MSC]

CUG216.29-SCANFILS.FOR source
By Frank H. Jeys. FORTRAN version of SCANFILS. => SCANFILS.C.

CUG216.30-SCANFILS.LST doc
By Frank H. Jeys. Compiler listing. SCANFILS.C. [MS-DOS]

CUG216.31-SCANFILS.OBJ object
By Frank H. Jeys. => SCANFILS.C. [MSC]

CUG216.32-SZ.1 doc
By Chuck Forsberg. => SZ.C. Nroff format.

CUG216.33-SZ.C source
By Chuck Forsberg. UNIX ZMODEM: Send Files. UNIX utility to send files
and commands to computers running Professional-YAM, PowerCom, YAM,
IMP, or programs supporting. => SZ.1, ZMODEM.DOC, DSZ.EXE, MINIRB.C,
PROGS.DOC. [UNIX, MS-DOS]

CUG216.34-UNDOS.1 doc
By Chuck Forsberg. UNIX style manual page for UNDOS. => UNDOS.C.

CUG216.35-UNDOS.C source
By Chuck Forsberg. Converts MS-DOS or CP/M format source files to UNIX
format. UNDOS.1, XMODEM.DOC. [UNIX, MS-DOS]

CUG216.36-ZM.C source
By Chuck Forsberg. ZMODEM protocol primitives. => ZMODEM.DOC. [UNIX,
MS-DOS]

CUG216.37-ZMODEM.DOC doc
By Chuck Forsberg, omen Technology Inc.. The ZMODEM Asynchronous Inter
Application File Transfer Protocol. Full documentation and development
history. RZ.C, SZ.C, ZM.C, RBSB.C, ZM.C. [UNIX, MS-DOS]

CUG216.38-ZMODEM.H header
By Chuck Forsberg. Manifest constants for ZMODEM. => ZMODEM.DOC, ZM.C.

==============================================================================
CUG217 -
-----------

Spell and Dictionary Part I
By Kenji Hino, Bob Denny. [public] 1 disk. Contains a spelling checker
and half the dictionary on CUG217. The rest of the dictionary is on
CUG218. Kenji Hino rewrote the package from a Software Tools version.
The disk contains three executable versions developed under Microsoft
C. SPELLC is quite portable and should compile under most compilers.
SPELLS is compiled with the small model option, SPELLC with compact
model, and SPELLH with hugh model. The nine dictionary data files will
require at least 500 Kb when concatenated. Spell copies named files to
standard output while looking up each word in a dictionary. Misspelled
words are displayed with asterisks beneath.

CUG217.01-HEADER.CUG doc
File headers. => SPELL.DOC, HY.C.

CUG217.02-HY.C source
By Bob Denny. Hyphenates words from standard input. => HY.EXE.
[MS-DOS: MSC]

CUG217.03-HY.EXE executable
By Bob Denny. => HY.C. [MS-DOS: MSC]

CUG217.04-SPELL.C source
By Kenji Hino. Spelling Checker. SPELL.DOC, CUG218. [MS-DOS: MSC]

CUG217.05-SPELL.DOC doc
By Kenji Hino. User and program documentation. => SPELL.C, SPELLS.EXE,
SPELLH.EXE, SPELLC.EXE.

CUG217.06-SPELLO.DAT data
Dictionary Part O (A - Bright). SPELL*.DAT.

CUG217.07-SPELL1.DAT data
Dictionary Part 1 (Brighten - Deduce). SPELL*.DAT.

CUG217.08-SPELL2.DAT data
Dictionary Part 2 (Deduced - Floss). => SPELL*.DAT.

CUG217.09-SPELLC.EXE executable
By Kenji Hino. Spell with Compact Model. SPELL.C, SPELL.DOC. [MS-DOS:
MSC]

CUG217.10-SPELLH.EXE executable
By Kenji Hino. Spell with Huge Model. SPELL.C, SPELL.DOC. [MS-DOS:
MSC]

CUG217.11-SPELLS.EXE executable
By Kenji Hino. Spell with Small Model. SPELL.C, SPELL.DOC. [MS-DOS:
MSC]

==============================================================================
CUG218 -
-----------

Spell and Dictionary Part 11
By Kenji Hino, Bob Denny. [public] 2 disks. See CUG217.

CUG218.01-DIGRAM.C source
By Bob Denny. Hyphenation Diagram Tables. => HYPHEN.C, SUFFIX.C.
[MS-DOS: MSC] From DECUS.

CUG218.02-HYPHEN.C source
By Bob Denny. Hyphenation Module. SUFFIX.C, DIGRAM.C. [MS-DOS: MSC]
From DECUS.

CUG218.03-SPELL3.DAT data
Dictionary Part 3 (Flotilla - Instructed). CUG217, SPELL*.DAT.

CUG218.04-SPELL4.DAT data
Dictionary Part 4 (Instructions - Ms). SPELL*.DAT.

CUG218.05-SPELL5.DAT data
Dictionary Part 5 (Msec - Prosecution).

CUG218.06-SPELL6.DAT data
Dictionary Part 6 (Prosecutions - Skipjack). => SPELL*.DAT.

CUG218.07-SPELL7.DAT data
Dictionary Part 7 (SkipI - Unasterisked). => SPELL*.DAT.

CUG218.08-SPELL8.DAT data
Dictionary Part 8 (Unattacked - Zworykin). => SPELL*.DAT.

CUG218.09-SUFFIX.C source
By Bob Denny. Suffix Table for Hyphenation. => HYPHEN.C, DIGRAM.C.
[MS-DOS: MSC] From DECUS.

==============================================================================
CUG219 -
-----------

6502 Cross Assemblers
Contains 6502 and 65C02 assemblers by William Colley 111 (OH). These
assemblers have compiled under Aztec, C86, Aztec Cll, Eco-C, HP-UX,
Microsoft C and QNIX C. Plus an 8048 cross assembler that compiles
under Eco-C88, Microsoft, DeSmet and BSD 4.2 UNIX. [public]

CUG219.01-A48.C 0.0 source
Portable 8048 Cross-Compiler. By William C. Colley III. Assemble code
for the Intel 8048 family of microprocessors. All assembler functions
supported except relocation, linkage and macros. => A48.DOC A48.H
A48EVAL.C A48UTIL.C. [CP/M-80, CP/M-86, MS-DOS, PC-DOS, QNK, HP-UX:
AZTEC, Cl 86, ECO, LC, MSC, QNK, HPUX]

CUG219.02-A48.DOC doc
Documentation. By Wlliam C. Colley III. => A48.C.

CUG219.03-A48.H header
By Wlliam C. Colley III. Header file including compile, assemble and
link instructions for compilers. => A48.C.

CUG219.04-A48EVAL.C 0.0 source
Expression Evaluator and Lexical Analyzer. By William C. Colley III.
=> A48.C.

CUG219.05-A48UTIL.C 0.0 source
By Wlliam C. Colley III. Symbol table building and searching, opcode
and operator table searching, listing file output, hex file output,
error flagging. => A48.C.

CUG219.06-A65.C 0.0 source
6502 Portable Cross-Assembler. By William C. Colley III. Assemble code
for the MOS Tech 6502 and Rockwell 65C02 microprocessor (portable). =>
A65.DOC A65.H A65EVAL.C A65UTIL.C. [CP/M, CP/M-
86, HP-UX, MS-DOS, QNIX AZTEC, CI 86, ECO, HP-UX, LC, MSC, QNIX]

CUG219.07-A65.DOC doc
6502/65C02 Cross-Assembler Documentation. By William C. Colley III. =>
A65.C A65C.C.

CUG219.08-A65.H header
By William C. Colley 111. Header file including compile, assemble and
link instructions for compilers. => A65.C.

CUG219.09-A65C.C source
65C02 Portable Cross-Assembler. By William C. Colley 111. Produces
Rockwell 65C02 microprocessor. This program is written in portable C.
All assembler functions are supported except relocation, linkage, and
macros. => A65C.H A65CEVAL.C A65CUTIL.C A65.DOC TEST65C.ASM. [CP/M,
CP/M 86, MS-DOS, QNIX, PC-DOS: AZTEC, Cl 86, ECO, HP-UX, LC, MSC, QNK]

CUG219.10-A65C.H header
By William C. Colley 111. Header file including compile, assemble and
link instructions for compilers. => A65C.C.

CUG219.11-A65CEVAL.C source
6SC02 Portable Cross-Assembler. By William C. Colley 111. Assembler's
expression evaluator and lexical analyzer. => A65C.C.

CUG219.12-A65CUTIL.C source
65C02 Portable Cross-Assembler. By Will Tam C. Colley 111. Contains
the symbol table builder and searcher, opcode and operator table,
listing file output, hex file output, and error checking. => A65C.C.

CUG219.13-A65EVAL.C source
6502 Cross-Assembler (portable). By William C. Colley 111. Assembler's
expression evaluator and lexical analyzer. => A65.C.

CUG219.14-A65UTIL.C source
6502 Cross-Assembler (portable). By William C. Colley 111. Contains
the symbol table builder and searcher, opcode and operator table,
listing file output, hex file output, and error flagging. => A65.C.

CUG219.15-READ.ME2 doc
By William C. Colley 111. Disk Summary.

CUG219.16-TEST48.ASM source
Portable 8048 Cross-Assembler Test Program. By William C. Colley 111.
=> A48.C.

CUG219.17-TEST65.ASM source
Portable 6502 Cross-Assembler Test File. By William C. Colley 111. =>
A65.C.

CUG219.18-TEST65C.ASM source
Portable 65C02 Cross-Assembler Test Program. By William C. Colley 111.
=> A65C.C.

==============================================================================
CUG220 -
-----------

Windows BOSS
By Philip A. Mongelluzzo. [share2] 3 disks. Windows BOSS is an
extensive library of C functions for the creation, management and
manipulation of text windows. The package provides basic window
functions such as open/close windows as well as pop-up windows, pull
down menus, status lines, a context sensitive on-line help system and
mouse control functions. The Data Clerk (part of the package) can
build data entry form screens in windows created by The Window BOSS.
The package includes documentation, demo programs, demo executable and
libraries for Microsoft C/Quick C, Borland Turbo C/C++, Lattice C,
Watcom C, Mix Power C, Datalight C, Aztec C and C86. Because of the
volume of programs and its MS-DOS specific nature, the distribution
disk contains MS-DOS specific archived files.

CUG220.01-AZTECS.BAT batch
Compiler driver - Aztec

CUG220.02-BOSS.MAN doc
Documentation and Registration Form.

CUG220.03-BOSS.TOC doc
Table of Contents for documentation.

CUG220.04-BOSSDEMO.C source
Extensive demonstration program, using all possible window functions.
=> BOSSDEMO.MAK, BOSSDEMO.PRT, BOSSDEMO.EXE. [MS-DOS: AZTEC, TC, MSC,
LC, MIXC, DLC, ZORTECH C/C++, C186, WATCOMC]

CUG220.05-BOSSDEMO.EXE executable
Demo Program [MS-DOS]

CUG220.06-C86.BAT batch
Compilation driver- C86

CUG220.07-DLCS.BAT batch
Compiler driver - Datalight C

CUG220.08-GENINDEX.C source
Create index from test file. [MS-DOS]

CUG220.09-HELLO.C source
Sample program. [MS-DOS]

CUG220.10-INTELC.HLP doc
Help message file. => HELP.C.

CUG220.11-INTELC.NDX doc
Index output file. => GENINDEX.C, INTELC.HLP.

CUG220.12-LCS3.BAT batch
Compiler driver - Lattice 3.4

CUG220.13-LCS6.BAT batch
Compiler driver - Lattice 6.0

CUG220.14-LOADAZ.BAT batch
Link batch file - Aztec

CUG220.15-LOADC86.BAT batch
Link batch file - C186

CUG220.16-LOADDLC.BAT batch
Link batch file - Datalight

CUG220.17-LOADLC3.BAT batch
Link batch file - Lattice 3.4

CUG220.18-LOADLC6.BAT batch
Link batch file - Lattice 6.0

CUG220.19-LOADMS5.BAT batch
Link batch file - Microsoft C 5.x

CUG220.20-LOADMS6.BAT batch
Link batch file - Microsoft C 6.x

CUG220.21-LOADPC.BAT batch
Link batch file - Mix Power C

CUG220.22-LOADQC20.BAT batch
Link batch file - Quick C 2.0

CUG220.23-LOADQC25.BAT batch
Link batch file - Quick C 2.5

CUG220.24-LOADTC.BAT batch
Link batch file - Turbo C

CUG220.25-LOADTS.BAT batch
Link batch file - TopSpeed C

CUG220.26-LOADWAT.BAT batch
Link batch file - Watcom C

CUG220.27-LOADWEC.BAT batch
Link batch file - EXPRESS C

CUG220.28-LOADZTC.BAT batch
Link batch file - Zortech C

CUG220.29-MSC5.BAT batch
Compiler driver - Microsoft C 5.x

CUG220.30-MSC6.BAT batch
Compiler driver - Microsoft C 6.x

CUG220.31-MSQC20.BAT batch
Compiler driver - Quick C 2.0

CUG220.32-MSQC25.BAT batch
Compiler driver - Quick C 2.5

CUG220.33-MWIN.MIX library
BOSS library - Mix Power C [ MIXC]

CUG220.34-PCCM.BAT batch
Compiler Driver - Mix Power C

CUG220.35-REV.HST source
Revision history.

CUG220.36-REV.LEV doc
Current version.

CUG220.37-SAMPLE.C source
Data entry sample program

CUG220.38-SAZTEC.LIB library
BOSS library - Aztec C [ AZTEC]

CUG220.39-SC86.LIB library
Small Memory Library - C186. [ C186]

CUG220.40-SDLC.LIB library
Small Memory Library - Data light. [ DLC]

CUG220.41-SLAT3.LIB library
Small Memory Library - Lattice 3.4. [LC]

CUG220.42-SLAT6.LIB library
Small Memory Library - Lattice 6.0. [LC]

CUG220.43-SMSC5.LIB library
Small Memory Library - Microsoft 5.xx. [MSC5]

CUG220.44-SMSC6.LIB library
Small Memory Library - Microsoft 6.x. [MSC6]

CUG220.45-SMSQC20.LIB library
BOSS library - QuickC 2.0 [QUICKC]

CUG220.46-SMSQC25.LIB library
BOSS library - QuickC 2.5 [QUICKC]

CUG220.47-STC.LIB library
Small C Library - Turbo C. [TC]

CUG220.48-TCS.BAT batch
Compiler driver - Turbo C

CUG220.49-TSAPP.PRJ project
Make file - TopSpeed C

CUG220.50-TSC.LIB library
BOSS library - TopSpeed C [TOPSPEED]

CUG220.51-TSS.BAT batch
Compiler Driver - TopSpeed C

CUG220.52-TSSWIN.PRJ project
Make file - TopSpeed C

CUG220.53-WATEC.LIB library
BOSS library - EXPRESS C [EXPRESSC]

CUG220.54-WATOC.LIB library
BOSS library - Watcom C [WATCOMC]

CUG220.55-WECS.BAT batch
Compiler Driver - EXPRESS C

CUG220.56-WINDOWS.EXT
Type checking include file

CUG220.57-WINDOWS.FN5 doc
Type Checking Include File. => WINDOWS.H. [MS-DOS]

CUG220.58-WINDOWS.FN6
Type checking include file

CUG220.59-WINDOWS.FNT
Type checking include file

CUG220.60-WINDOWS.FNZ
Type checking include file

CUG220.61-WINDOWS.H header
BOSS Include Files.

CUG220.62-WN_FRMGE.C source
Data entry form reader

CUG220.63-WN_GBOOL.C source
Data entry function (logical)

CUG220.64-WN_GDATE.C source
Data entry function (dates)

CUG220.65-WN_GDOUB.C source
Data entry function (double)

CUG220.66-WN_GFLOA.C source
Data entry function (floats)

CUG220.67-WN_GINT.C source
Data entry function (integer)

CUG220.68-WN_GLONG.C source
Data entry function (long)

CUG220.69-WN_GPHON.C source
Data entry function (phone)

CUG220.70-WN_GPWOR.C source
Data entry function (password)

CUG220.71-WN_GTEXT.C source
Data entry function (various text)

CUG220.72-WN_GTIME.C source
Data entry function (time)

CUG220.73-WN_GUINT.C source
Data entry function (unsigned int)

CUG220.74-WN_GULON.C source
Data entry function (unsigned long)

CUG220.75-WN_HELP.C source
Help function source

CUG220.76-WN_IEMSG.C source
Data entry error message handler

CUG220.77-WN_IHMSG.C source
Data entry help message handler

CUG220.78-WN_POPUP.C source
Popup function source

CUG220.79-WN_PUTS.C source
Source to wn_puts()

CUG220.80-WOCS.BAT batch
Compiler Driver - Watcom C

CUG220.81-ZTCS.BAT batch
Compiler Driver - Zortech C

CUG220.82-ZTECH.LIB library
BOSS library - Zortech C ] ZORTECH C/C++]

==============================================================================
CUG221 -
-----------

6809 C For Flex
A rewrite of Ron Cain's Small C targeted for 6809 processors running
under the FLEX operating System. Dieter Flunker (Italy), has expanded
slightly on the language subset implemented by Cain and includes a
peephole code optimizer. [public]

CUG221.01-ABS.ASM source

CUG221.02-ABS.C source
Return absolute value

CUG221.03-ATOI.ASM source

CUG221.04-ATOI.C source
Convert string to integer

CUG221.05-C.RTL source

CUG221.06-CC.DOC doc
By Dieter H. Flunkert.

CUG221.07-CC1 TO CC91 2.3 source
Small-C compiler for 6809 FLEX By Pieter H. Flunkert, Ron Cain.
Small-C compiler which produces 6809 assembler output. This volume
includes both C source and compiled output (as optimized assembly
source). 16809 FLEX: VAX VMS C] Requires TSC relocatable assembler,
library generator and linking loader.

CUG221.08-CCASM.COM executable
Assemble C sources

CUG221.09-CCBUILD.COM executable
Build the C run time library

CUG221.10-CCDEF.C source
Small C compiler definitions

CUG221.11-CCEQU.SYS source
Small C compiler system equates

CUG221.12-CCPOLL.ASM source

CUG221.13-CCPOLLC source
check terminal

CUG221.14-CCROOT.ASM source
root module for Small C compiler

CUG221.15-DEBUG.ASM source
Debug part of Small C. Prints the entered function name

CUG221.16-FPUTS.ASM source

CUG221.17-FPUTS.C source
put string in stream

CUG221.18-ISALPHA.C source
Check if alpha character

CUG221.19-ISDIGIT.ASM source

CUG221.20-ISDlGlT.C source
Check if digit

CUG221.21-ISLOWER.ASM source

CUG221.22-ISLOWER.C source
Check if lower case character

CUG221.23-ISPLPHA.ASM source

CUG221.24-ISSPACE.ASM source

CUG221.25-ISSPACE.C source
Check if space, newline or tab

CUG221.26-ISUPPER.C source
Check if upper case character

CUG221.27-ITOA.ASM source

CUG221.28-ITOA.C source
Convert integer to string

CUG221.29-LEFT.ASM source

CUG221.30-LEFT.C source
left adjust and null terminate a string

CUG221.31-PEEPHOLE.C source
By Dieter H. Flunkert. Peephole optimizer for 6809 code

CUG221.32-PRINTF.ASM source

CUG221.33-PRINTF.C source
printf() - formatted print

CUG221.34-README.ASM doc

CUG221.35-README.DOC doc
Documentation of the disk contents

CUG221.36-README2 doc
Warning of peephole.c

CUG221.37-REVERSE.ASM source

CUG221.38-REVERSE.C source
reverse string in place

CUG221.39-STRCAT.ASM source

CUG221.40-STRCAT.C source
concatenate two strings

CUG221.41-STRCMP.ASM source

CUG221.42-STRCMP.C source
Compare two strings

CUG221.43-STRCPY.C source
copy string

CUG221.44-STRLEN.ASM source

CUG221.45-STRLEN.C source
return string length

CUG221.46-STRNCMP.C source
compare strings

CUG221.47-TOLOWER.ASM source

CUG221.48-TOLOWER.C source
invert character to lower case

CUG221.49-TOUPPER.ASM source

CUG221.50-TOUPPER.C source
convert character to upper case

==============================================================================
CUG222 -
-----------

Small C for CP/M Doc and Exec
F.A. Scacchitti's (NY) significantly enhanced version of J.E.
Hendrix's Small C v2.1. This CP/M implementation handles global
initialization, external statics, the ternary conditional operator,
multiple levels of indirection, global multi-dimensional arrays,
arrays of pointer, hex and octal constants, and nested includes. Also
includes an expanded standard library. Contains the executable COM
file, relocatable libraries and user documentation. Source is on
CUG223. [public]

CUG222.01-CC.COM 2.7 executable
Executable Small C Compiler. By F.A. Scacchitti. => CC.DOC CUG223.
[CP/M:]

CUG222.02-CC.DOC 2.7 doc
Small C Documentation. By F.A. Scacchitti. => CC.COM CUG223- [CP/M:]

CUG222.03-CCC.SUB batch
By F.A. Scacchitti. Submit file to produce a .COM file => CC.COM.
[CP/M:]

CUG222.04-CCM.SUB batch
Submit file to produce a .MAC file. By F.A. Scacchitti. => CC.DOC.
[CP/M:]

CUG222.05-CCR.SUB batch
Submit file to produce a .REL file. By F.A. Scacchitti. => CC.DOC.
[CP/M:]

CUG222.06-CDISKS.TXT doc
By F.A. Scacchitti. Description of files => CC.DOC.

CUG222.07-CLIB.DOC doc
By F.A. Scacchitti. Documentation for library. => CC.DOC.

CUG222.08-CLIB.LST doc
By F.A. Scacchitti. Listing of library functions => CLIB.DOC.

CUG222.09-CLIB.REL object
Relocatable library. By F.A. Scacchitti.=> CLIB.DOC. [CP/M:]

CUG222.10-LCC.SUB batch
Submit file for linking multiple .REL's. By F.A. Scacchitti. =>
CC.DOC. [CP/M:]

CUG222.11-RCC.SUB batch
By F.A. Scacchitti. Like CCC but links in RDRTL first => CC.DOC
CCC.SUB. [CP/M:]

CUG222.12-RDRTLREL object
Redirectable output module. By F.A. Scacchitti. => CLIB.DOC. [CP/M:]

CUG222.13-STDIO.H header
By F.A. Scacchitti. Standard 1/0 header file => CC.COM. [CP/M:]

CUG222.14-WARNING.CUG doc
Disk contents. The source files are on disk 223.

==============================================================================
CUG223 -
-----------

Small C for CP/M Source The source code for a Small C compiler. A full
description appears with the entry for CUG222. To construct the
compiler you must have an M80 compatible assembler. [public]

CUG223.01-ABORT.MAC source
By F.A. Scacchitti. [CP/M:M80]

CUG223.02-ABS.C source
By F.A. Scacchitti. Returns the absolute value of an integer. => CUG
222. [CP/M: Small C]

CUG223.03-ARGS.C source
By F.A. Scacchitti. Standard argc function. => CUG 222. [CP/M:]

CUG223.04-ARRAY.C source
By F.A. Scacchitti. Array test program. => CUG222. [CP/M:]

CUG223.05-ATOI.C source
By F.A. Scacchitti. Converts a character to an integer. => CUG222.
[CP/M:]

CUG223.06-ATOIB.C source
By F.A. Scacchitti. Converts an unsigned integer to base b. => ATOI.C
CUG [CP/M ]

CUG223.07-AVAIL.C source
By F.A. Scacchitti. Returns the number of bytes of available memory.
=> CUG222. [CP/M:]

CUG223.08-BDOS.MAC source
By F.A. Scacchitti. Allows CP/M calls from within C. [CP/M: M80]

CUG223.09-CALL1.MAC source
By F.A. Scacchitti. Multiply routine. [CP/M:]

CUG223.10-CALL2.MAC source
By F.A. Scacchitti. Divide routine. [CP/M:]

CUG223.11-CALL3.MAC source
By F.A. Scacchitti. Switch routine. [CP/M:]

CUG223.12-CALL4.MAC source
By F.A. Scacchitti. Arithmetic shift. [CP/M:]

CUG223.13-CALL5.MAC source
By F.A. Scacchitti. Main arithmetic routine. => CALL1.MAC CALL2.MAC
CALL3.MAC CALL4.MAC. [CP/M:]

CUG223.14-CALLOC.C source
By F.A. Scacchitti. Cleared memory allocation of n items of specified
bytes. [CP/M: Small C]

CUG223.15-CC.DEF source
By F.A. Scacchitti. Listing of definitions and history of changes.
[CP/M:]

CUG223.16-CC1.C 2.7 source
Small-C Compiler Part 1. By J.E. Hendrix. => CUG 222. [CP/M: Small C]

CUG223.17-CC11.C 2.7 source
By J.E. Hendrix. Source code for Small C. => CC1.C. [CP/M:]

CUG223.18-CC12.C 2.7 source
By J.E. Hendrix. Open an include file. => CC1.C. [CP/M:]

CUG223.19-CC13.C 2.7 source
By J.E. Hendrix. Statement parser. => CC1.C. [CP/M:]

CUG223.20-CC2 source
By J.E. Hendrix. Part 2 - Small C compiler. => CC1.C. [CP/M:]

CUG223.21-CC21.C 2.7 source
By J.E. Hendrix. => CC1.C. [CP/M:]

CUG223.22-CC22.C 2.7 source
By J.E. Hendrix. => CC1.C CC2.C. [CP/M:]

CUG223.23-CC3.C 2.7 source
By J.E. Hendrix. Part 3 - Small C => CC1.C. [CP/M:]

CUG223.24-CC31.C source
By J.E. Hendrix. [CP/M:]

CUG223.25-CC32.C 2.7 source
By J.E. Hendrix. => CC1.C CC3.C.

CUG223.26-CC33.C 2.7 source
By J.E. Hendrix. => CC1.C CC3.C. [CP/M:]

CUG223.27-CC4.C 2.7 source
By J.E. Hendrix. Part 4 - Small C. [CP/M:]

CUG223.28-CC41.C 2.7 source
By J.E. Hendrix. Prints all assembler info, before any code is
generated. => CC1.C CC4.C. [CP/M:]

CUG223.29-CC42.C source
By J.E. Hendrix. [CP/M:]

CUG223.30-CCC.SUB batch
By F.A. Scacchitti. Submit file to produce a .COM file. [CP/M:]

CUG223.31-CCCC.SUB batch
By F.A. Scacchitti. Submit file for compiling the compiler. [CP/M:]

CUG223.32-CCLIST.SUB batch
By F.A. Scacchitti. Submit file for listing the compiler. [CP/M:]

CUG223.33-CCM.SUB batch
By F.A. Scacchitti. Submit file to produce .MACfile. [CP/M:]

CUG223.34-CCR.SUB batch
By F.A. Scacchitti. Submit file to produce .RELfile. [CP/M:]

CUG223.35-CLEARERR.C source
By F.A. Scacchitti. Clears errors and end of file marks in fd. [CP/M:
Small C]

CUG223.36-CLS.C source
By F.A. Scacchitti. Clear screen program. [CP/M:]

CUG223.37-CPM10.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.38-CPMDISK.MAC source
By F.A. Scacchitti. Log in disk number. [CP/M:]

CUG223.39-CSEEK.C source
By F.A. Scacchitti. Position fd to the 128 byte record indicated by
"offset" relative to the point indicated by "base". [CP/M: Small C]

CUG223.40-CTELL.C source
By F.A. Scacchitti. [CP/M:]

CUG223.41-DELAY.MAC source
By F.A. Scacchitti. Delay n milliseconds. [CP/M: M80] based on 4 MHz
clock.

CUG223.42-DOLDDR.MAC source
By F.A. Scacchitti. [CP/M:]

CUG223.43-DSLDIR.MAC source
By F.A. Scacchitti. [CP/M:]

CUG223.44-DTOI.C source
By F.A. Scacchitti. Converts signed decimal string to integer number
returns field length, else ERR on error. [CP/M: Small C]

CUG223.45-ERATOS.C source
By F.A. Scacchitti. Eratosthenes Sieve Prime Number Program. [CP/M:]

CUG223.46-EXIT.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.47-FA.C source
File Append Program. By F.A. Scacchitti. [CP/M: Small C]

CUG223.48-FB.C source
File Copy (Bin) Program. By F.A. Scacchitti. [CP/M:]

CUG223.49-FC.C source
File Copy Program. By F.A. Scacchitti. Copies file from file to file.
[CP/M:]

CUG223.50-FEOF.C source
By F.A. Scacchitti. Returns true only if end of file is reached.
[CP/M:]

CUG223.51-FERROR.C source
By F.A. Scacchitti. Returns true only if a file error has occurred.
[CP/M:]

CUG223.52-FFD.C source
Formfeed Program. By F.A. Scacchitti. [CP/M:]

CUG223.53-FFLUSH.C source
Flush. By F.A. Scacchitti. [CP/M:]

CUG223.54-FGETC.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.55-FGETS.MAC source
By F.A. Scacchitti. [CP/M:]

CUG223.56-FILELIB.MAC source
By F.A. Scacchitti. Continue the constructs necessary for handling
file I/O. [CP/M:]

CUG223.57-FM.C source
File Modification Program. By F.A. Scacchitti. Copies from source file
to new file modifying on the fly. [CP/M: Small C]

CUG223.58-FPRINTF.C source
Formatted Print Statement. By F.A. Scacchitti. Operates as per K&R.
[CP/M:]

CUG223.59-FPUTC.MAC source
By F.A. Scacchini. [CP/M: M80]

CUG223.60-FPUTS.MAC source
By F.A. Scacchitti. [CP/M:]

CUG223.61-FREAD.C source
By F.A. Scacchitti. [CP/M: Small C]

CUG223.62-FREBUF.C source
By F.A. Scacchitti. [CP/M:]

CUG223.63-FREE.C source
By F.A. Scacchitti. Free previously allocated memory block. Memory
must be freed in the reverse order from which it was allocated.
[CP/M:]

CUG223.64-FREE10.MAC source
By F.A. Scacchitti. Mark a buffer as free. [CP/M: M80]

CUG223.65-FSCANF.C source
Formatted Read. By F.A. Scacchitti. Operates as described by K&R.
[CP/M: Small C]

CUG223.66-FWRITE.C source
By F.A. Scacchitti. [CP/M:]

CUG223.67-GETCHAR.C source
By F.A. Scacchitti. Direct console input via BDOS (6). [CP/M:]

CUG223.68-GETS.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.69-GRAB10.MAC source
By F.A. Scacchitti. Find an input buffer, and return its address.
[CP/M:]

CUG223.70-GRABUF.C source
By F.A Scacchitti. [CP/M: Small C]

CUG223.71-HELLO.C source
By F.A. Scacchitti. [CP/M:]

CUG223.72-INP.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.73-ISALNUM.C source
By F.A Scacchitti. Returns 'true' if c is alphanumeric. [CP/M: Small
C]

CUG223.74-ISALPHA.C source
By F.A. Scacchitti. Return 'true' if c is alphabetic. [CP/M:]

CUG223.75-ISASCII.C source
By F.A Scacchitti. Return 'true' if c is an ASCII character. [CP/M:]

CUG223.76-ISATTY.C source
By F.A. Scacchitti. Pie turn 'true' if fd is a device, else 'false'.
[CP/M:]

CUG223.77-ISCNTRL.C source
By F.A. Scacchitti. Return 'true' if c is a control character. [CP/M:]

CUG223.78-ISDIGIT.C source
By F.A. Scacchitti. Return 'true' if c is a digit. [CP/M:]

CUG223.79-ISGRAPH.C source
By F.A Scacchitti. Return 'true' is c is a graphic character. [CP/M:]

CUG223.80-ISLOWER.C source
By F.A Scacchitti. Return 'true' if c is a lower case character.
[CP/M:]

CUG223.81-ISPRINT.C source
By F.A. Scacchitti. Return 'true' if c is a printable character.
[CP/M:]

CUG223.82-ISPUNCT.C source
By F.A Scacchitti. Return 'true' if c is a punctuation character.
[CP/M:]

CUG223.83-ISSPACE.C source
By F.A. Scacchitti. Return 'true' is c is a white-space character.
[CP/M:]

CUG223.84-ISUPPER.C source
By F.A Scacchitti. Return 'true' if c is uppercase alphabetic. [CP/M:]

CUG223.85-ISXDIGIT.C source
By F.A. Scacchitti. Return 'true' if c is a hexidecimal digit. [CP/M:]

CUG223.86-ITOA.C source
By F.A. Scacchitti. Converts number to characters in string. [CP/M:]

CUG223.87-ITOAB.C source
By F.A Scacchitti. Converts "unsigned" n to characters in S using base
b. (non-standard) [CP/M:]

CUG223.88-ITOD.C source
By F.A Scacchitti. Convert number to signed decimal string of width sz
right adjusted, blank filled; returns 'str'. [CP/M:]

CUG223.89-ITOO.C source
By F.A Scacchitti. Converts number to octal string of length sz right
adjusted and blank filled. [CP/M:]

CUG223.90-ITOU.C source
By F.A Scacchitti. Converts number to unsigned decimal string of width
sz right adjusted. [CP/M:]

CUG223.91-ITOX.C source
By F.A Scacchitti. Convert number to hex string of length sz right
adjusted and blank filled. [CP/M:]

CUG223.92-LCC.SUB batch
By F.A Scacchitti. Submit file for linking multiple.REL's. [CP/M:]

CUG223.93-LEFT.C source
By F.A Scacchitti. Left-left adjust and null terminate a string.
[CP/M: Small C]

CUG223.94-LEXCMP.C source
By F.A Scacchitti. determines the relation between two values (,, = ).
[CP/M:]

CUG223.95-LIBID.C source
By F.A Scacchitti. Credit line for author, who created this library.
[CP/M:]

CUG223.96-MALLOC.C source
By F.A. Scacchitti. Returns the address of the allocated block, else
null for failure. [CP/M:]

CUG223.97-MAX.C source
By F.A. Scacchitti. [CP/M:]

CUG223.98-MIN.C source
By F.A. Scacchitti. [CP/M:]

CUG223.99-NEWLIB.SUB batch
By F.A. Scacchitti. Submit for generating library. [CP/M:]

CUG223.100-OTOI.C source
By F.A. Scacchitti. Converts unsigned octal string to integer number.
[CP/M: Small C]

CUG223.101-OUTP.MAC source
By F.A. Scacchitti. [CP/M:M80]

CUG223.102-PAD.C source
By F.A. Scacchitti. Place n occurrences of character at destination.
[CP/M: Small C]

CUG223.103-POLL.C source
By F.A. Scacchitti. Poll for console input or interruption. [CP/M:]

CUG223.104-PRNTF.C source
By F.A. Scacchitti. Formatted print, as per K&R. [CP/M:]

CUG223.105-PUTCHAR.C source
By F.A. Scacchitti. Normal console output via BDOS(2). [CP/M:]

CUG223.106-PUTLIST.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.107-PUTS.C source
By F.A. Scacchitti. Puts (string). [CP/M: Small C]

CUG223.108-RCC.SUB batch
By F.A. Scacchitti. Like ccc but links in RDRTL first. [CP/M:]

CUG223.109-RDRTL.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.110-READ.C source
By F.A. Scacchitti. [CP/M: Small C]

CUG223.111-RENAME.C source
By F.A. Scacchitti. [CP/M:]

CUG223.112-REVERSE.C source
By F.A. Scacchitti. Reverse string in place. [CP/M:]

CUG223.113-REWIND.C source
By F.A. Scacchitti. [CP/M:]

CUG223.114-SIGN.C source
By F.A. Scacchitti. Returns the sign of number. [CP/M:]

CUG223.115-STDIO.H header
By F.A. Scacchitti. [CP/M:]

CUG223.116-STRCAT.C source
By F.A. Scacchitti. Concatenate first argument to the back of the
second argument. [CP/M: Small C]

CUG223.117-STRCHR.C source
By F.A. Scacchitti. Returns pointer to 1st occurrence of C in string,
else zero. [CP/M:]

CUG223.118-STRCMP.C source
By F.A. Scacchitti. Compares two strings. [CP/M:]

CUG223.119-STRCPY.C source
By F.A. Scacchitti. copy a string. [CP/M:]

CUG223.120-STRLEN.C source
By F.A. Scacchitti. Returns the length of a string. [CP/M:]

CUG223.121-STRNCAT.C source
By F.A. Scacchitti. Concatenates n bytes of 'x' to end of 'y'. [CP/M:]

CUG223.122-STRNCMP.C source
By F.A. Scacchitti. Compares two strings for at most n characters and
returns an integer. [CP/M:]

CUG223.123-STRNCPY.C source
By F.A. Scacchitti. Copy n characters from source to destination.
[CP/M:]

CUG223.124-STRRCHR.C source
By F.A. Scacchitti. Search S for rightmost occurrence of C. [CP/M:]

CUG223.125-TIME.C source
By F.A. Scacchitti. Time set and display program. [CP/M:] Written for
Xerox 820.

CUG223.126-TOASCII.C source
By F.A. Scacchitti. Returns ASCII equivalent of C. [CP/M:]

CUG223.127-TOLOWER.C source
By F.A. Scacchitti. Converts uppercase C to lowercase C. [CP/M:]

CUG223.128-TOPOFMEM.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.129-TOUPPER.C source
By F.A. Scacchitti. Converts lowercase C to uppercase C. [CP/M: Small
C]

CUG223.130-UALLOC.C source
Memory Allocation. By F.A. Scacchitti. Returns the address of the
allocated block of memory or null, if the request is greater than
space available. [CP/M:]

CUG223.131-UNGETC.C source
By F.A Scacchitti. [CP/M:]

CUG223.132-UNLINK.C source
By F.A. Scacchitti. unlink (name) char *name; [CP/M:]

CUG223.133-UNLINK.MAC source
By F.A. Scacchitti. [CP/M: M80]

CUG223.134-UTOI.C source
By F.A. Scacchitti. Converts unsigned decimal string to integer
number. [CP/M: Small C]

CUG223.135-UW.C source
By F.A. Scacchitti. Strips Wordstar control symbols from a file.
[CP/M:]

CUG223.136-WC.C source
By F.A. Scacchitti. Text analysis utility. [CP/M:]

CUG223.137-WRITE.C source
By F.A Scacchitti. [CP/M:]

CUG223.138-XTOI.C source
Converts hex string to integer value.

CUG223.139-ZZBUF.MAC source
By F.A. Scacchitti. Used to preserve standard CP/M buffer for input
arguments. [CP/M: M80]

CUG223.140-ZZFIO.MAC source
By F.A. Scacchitti. File I/O storage variables. [CP/M:]

==============================================================================
CUG224 -
-----------

UtiliX
An MS-DOS implementation of several popular UNIX utilities. The
command behavior and options are similar to System V standards. This
shareware package was written and contributed by Tom Woods (MD).
[share2]

CUG224.01-CAT.EXE 2.0 executable
By Tom Woods. Concatenate and print files. => CAT.HLP. [MS-DOS:
DESMET]

CUG224.02-CAT.HLP 2.0 doc
By Tom Woods. Usage info. => CAT.EXE.

CUG224.03-CECHO.EXE 2.0 executable
By Tom Woods. Echo arguments. => CECHO.HLP. [MS-DOS: DESMET]

CUG224.04-CECHO.HLP 2.0 doc
By Tom Woods. Usage info. => CECHO.EXE.

CUG224.05-CHMOD.EXE 2.0 executable
By Tom Woods. Change file attributes. => CHMOD.HLP. [MS-DOS: DESMET]

CUG224.06-CHMOD.HLP 2.0 doc
By Tom Woods. Usage info. => CHMOD.EXE.

CUG224.07-CMP.EXE 2.0 executable
By Tom Woods. Compare two files. => CMP.HLP. [MS-DOS: DESMET]

CUG224.08-CMP.HLP 2.0 doc
By Tom Woods. Usage info. => CMP.EXE DIFF.EXE COM.EXE. [MS-DOS:]

CUG224.09-COMM.EXE 2.0 executable
By Tom Woods. Select or reject lines common to two sorted files. =>
COMM.HLP UNIO.EXE CMP.EXE. [MS-DOS: DESMET]

CUG224.10-COMM.HLP 2.0 doc
By Tom Woods. Usage info. => COMM.EXE.

CUG224.11-CTIME.EXE 2.0 executable
By Tom Woods. Time a command. => CTIME.HLP. [MS-DOS: DESMET]

CUG224.12-CTIME.HLP 2.0 doc
By Tom Woods. Usage info. => CTIME.EXE.

CUG224.13-EXPR.EXE 2.0 executable
By Tom Woods. Evaluate simple expression (long integer). => EXPR.HLP.
[MSDOS: DESMET]

CUG224.14-EXPR.HLP 2.0 doc
By Tom Woods. Usage Tnfo. => EXPR.EXE TEST.EXE HOC.EXE.

CUG224.15-FIND.EXE 2.0 executable
By Tom Woods. Search directories for a name. => FIND.HLP. [MS-DOS:
DESMET]

CUG224.16-FIND.HLP 2.0 doc
By Tom Woods. Usage info. => FIND.EXE. [MS-DOS:]

CUG224.17-GREP.EXE 2.0 executable
By Tom Woods. Search a file for a pattern (regular expression). =>
GREP.HLP. [MS DOS:]

CUG224.18-GREP.HLP 2.0 doc
By Tom Woods. Usage info. => GREP.EXE.

CUG224.19-HEAD.EXE 2.0 executable
By Tom Woods. Print the first few lines of a file. => HEAD.HLP.
[MS-DOS: DESMET]

CUG224.20-HEAD.HLP 2.0 doc
By Tom Woods. Usage info. => HEAD.EXE TAIL.EXE.

CUG224.21-HELP.EXE 2.0 executable
By Tom Woods. Display the online help files for the UTILK commands. =>
HELP.HLP. [MS-DOS: DESMET]

CUG224.22-HELP.HLP 2.0 doc
By Tom Woods. Usage info. => HELP.EXE.

CUG224.23-HOC.EXE 2.0 executable
By Tom Woods. An interactive language for floating point arithmetic.
=> HOC.HLP. [MSDOS: DESMET]

CUG224.24-HOC.HLP 2.0 doc
By Tom Woods. Usage info.

CUG224.25-INSTALL.BAT batch
By Tom Woods. Install Utilix to target drive. [MS-DOS:]

CUG224.26-LS.EXE 2.0 executable
By Tom Woods. List contents of directory. => LS.HLP. [MS-DOS: DESMET]

CUG224.27-LS.HLP 2.0 doc
By Tom Woods. Usage info. => LS.EXE.

CUG224.28-OD.EXE 2.0 executable
By Tom Woods. Octal, decimal, hex, ASCII, or floating point dump. =>
OD.HLP. [MSDOS: DESMET]

CUG224.29-OD.HLP 2.0 doc
By Tom Woods. Usage info. => OD.EXE.

CUG224.30-PR.EXE 2.0 executable
By Tom Woods. Print file in format suitable for a printer. => PR.HLP.
[MS-DOS: DESMET]

CUG224.31-PR.HLP doc
By Tom Woods. Usage info. => PR.EXE.

CUG224.32-REV.EXE executable
By Tom Woods. reverse lines of a file. => REV.HLP. [MS-DOS: DESMET]

CUG224.33-REV.HLP 2.0 doc
By Tom Woods. Usage info. => REV.EXE.

CUG224.34-RM.EXE 2.0 executable
By Tom Woods. Remove (unlink) files. => RM.HLP. [MS-DOS: DESMET]

CUG224.35-RM.HLP doc
By Tom Woods. Usage info. => RM.EXE RMDIR.EXE.

CUG224.36-SORT.EXE 2.0 executable
By Tom Woods. Sort lines in text files merging contents if multiple
files. => SORT.HLP. [MS-DOS: DESMET]

CUG224.37-SORT.HLP 2.0 doc
By Tom Woods. Usage info. => SORT.EXE.

CUG224.38-STRINGS.EXE 2.0 executable
By Tom Woods. Search a file for character strings. => STRINGS.HLP.
[MS-DOS: DESMET]

CUG224.39-STRINGS.HLP 2.0 doc
By Tom Woods. => STRINGS.EXE.

CUG224.40-TAIL EXE 2.0 executable
By Tom Woods. Print the last few lines of strings. => TAIL.HLP.
[MS-DOS: DESMET]

CUG224.41-TAIL.HLP 2.0 doc
By Tom Woods. Usage info. => TAIL.EXE.

CUG224.42-TEE.EXE 2.0 executable
By Tom Woods. Output the input to several files. => TEE.HLP. [MS-DOS:
DESMET]

CUG224.43-TEE.HLP 2.0 doc
By Tom Woods. Usage info. => TEE.EXE.

CUG224.44-TEST.EXE 2.0 executable
By Tom Woods. Test conditions of file or strings. => TEST.HLP.
[MS-DOS: DESMET]

CUG224.45-TEST.HLP 2.0 doc
By Tom Woods. Usage info. => TEST.EXE.

CUG224.46-TR.EXE 2.0 executable
By Tom Woods. Translate characters. => TR.HLP. [MS-DOS:]

CUG224.47-TR.HLP 2.0 doc
By Tom Woods. => TR.EXE.

CUG224.48-UNIQ.EXE 2.0 executable
By Tom Woods. Report repeated lines in a file. => UNIQ.HLP. [MS-DOS:
DESMET]

CUG224.49-UNIQ.HLP 2.0 doc
By Tom Woods. Usage info. => UNIQ.EXE.

CUG224.50-UTILIX.HLP 2.0 doc
By Tom Woods. Utilix documentation. => INSTALL.BAT.

CUG224.51-WC.EXE 2.0 executable
By Tom Woods. Line, word, and character count. => WC.HLP. [MS-DOS:
DESMET]

CUG224.52-WC.HLP 2.0 doc
By Tom Woods. => INSTALL.BAT WC.EXE. [MS-DOS:]

==============================================================================
CUG225 -
-----------

Utilities and Zmath
Some disk and directory related utilities for CP/M from Phil Cogar,
Australia and routines to do double precision floating point multiply,
divide and square root from Neil R.Koozer, (OR). Includes menu
coordinated utilities which archive files, display the BIOS disk
parameter block, "repack" a directory, display raw disk sectors, un
erase files, and move files from oneuser area to another. Also
includes an executable Z80 assembler (no source code). [public]

CUG225.01-ARCHIVE.C 2.0 source
By Phil Cogar. Archive selected files to disk. => ARCHIVE.COM TM CPIO
UTIL.C. [CP/M: BDSC]

CUG225.02-ARCHIVE.COM 2.0 executable
By Phil Cogar. => ARCHIVE.C. [CP/M:]

CUG225.03-CHKDSK.C 1.1 source
By Phil Cogar. Displays the Disk Parameter Block information in the
BIOS and the allocation map for a selected disk. => CHKDSK.COM DEFF4.C
PEC.H UTILC. [CP/M 2.x:]

CUG225.04-CHKDSK.COM 1.1 executable
By Phil Cogar. => CHKDSK.C. [CP/M:]

CUG225.05-CLEANUP.C 1.1 source
By Phil Cogar. Deletes all inactive entries from a directory and
reconstructs the directory in alphabetical order. => UTIL.C. [CP/M:]

CUG225.06-CLEANUP.COM 1.1 executable
By Phil Cogar. => CLEANUP.C. [CP/M:]

CUG225.07-CNTFIL.C 1.1 source
By Phil Cogar. Counts all the active files in user areas and displays
a table of the counts. => CNTFIL.COM PEC.H UTILC. [CP/M:]

CUG225.08-CNTFIL.COM 1.1 executable
By Phil Cogar. => CNTFIL.C. [CP/M:]

CUG225.09-DEFF3.C 1.4 source
By Phil Cogar. Function library. Includes functions to count &
manipulate bits, read a character "raw" from the console, change the
user number direct interface to BDOS file operations, isprint() and
other isxxx() functions. => DEFF3.CRL DEFF3.TXT. [CP/M:]

CUG225.10-DEFF3.CRL object
By Phil Cogar. Object module. => DEFF3.C. [CP/M:]

CUG225.11-DEFF3.TXT doc
By Phil Cogar. Function descriptions of DEFF3.C.

CUG225.12-DEFF4.C 1.4 source
By Phil Cogar. Function library including terminal control functions
for a Hazeltine Esprit and direct interfaces to important BIOS
functions. => DEFF4.TXT DEFF4.CRL [CP/M: BDSC]

CUG225.13-DEFF4.CRL object
By Phil Cogar. Object module. => DEFF4.C. [CP/M:]

CUG225.14-DEFF4.TXT doc
By Phil Cogar. Function descriptions for DEFF4.C. => DEFF4.C.

CUG225.15-DIR2.C 1.2 source
By Phil Cogar. Creates a "ghost" or backup directory on the last
available track of the disk. => CLEANUP.C UTIL.C. [CP/M: BDSC]

CUG225.16-DIR2.COM 1.2 executable
By Phil Cogar. => DIR2.C. [CP/M:]

CUG225.17-LISTFILE.C 1.4 source
By Phil Cogar. Prints a file to printer with line numbers, and heading
(file name). => LISTFILE.COM UTIL.C. [CP/M:]

CUG225.18-LISTFILE.COM executable
By Phil Cogar. => LISTFILE.C. [CP/M:]

CUG225.19-NOBAD.C 1.2 source
By Phil Cogar. Finds bad sectors on a disk and puts them in a file on
user area 15. => NOBAD.COM UTIL.C. [CP/M:]

CUG225.20-NOBAD.COM executable
By Phil Cogar. => NOBAD.C. [CP/M:]

CUG225.21-PEC.H header
By Phil Cogar. Definitions for BDOS, terminal, disk parameter block,
and file control block. [CP/M:]

CUG225.22-RESTORE.C 1.0 source
By Phil Cogar. Restore a file that has been erased. => RESTORE.COM
UTILC. [CP/M:]

CUG225.23-RESTORE.COM executable
By Phil Cogar. => RESTORE.C. [CP/M:]

CUG225.24-SECREAD.C 1.1 source
By Phil Cogar. Display a disk sector in either ASCII or hex, to the
screen. => SECREAD.COM PEC.H UTIL.C. [CP/M:]

CUG225.25-SECREAD.COM executable
By Phil Cogar. => SECREAD.C. [CP/M:]

CUG225.26-USER2.C 2.0 source
By Phil Cogar. Copies a file from one user area to another. =>
USER2.COM PEC.H CLEANUP.C UTIL.C. [CP/M:]

CUG225.27-USER2.COM executable
By Phil Cogar. => USER2.C. [CP/M:]

CUG225.28-UTILC source
By Phil Cogar. Menu program for using chkdsk, dir2, secread, cleanup,
nobad, showdir, cntfil, restore, and user2. => UTILCOM. [CP/M:]

CUG225.29-UTIL.COM executable
By Phil Cogar. => UTIL.C. [CP/M:]

CUG225.30-Z1.COM executable
By Neil Koozer. A Z80 assembler. => Z1.DOC ZMATH.AZM. [CP/M:]

CUG225.31-Z1.DOC doc
By Neil Koozer. Describes Z1.COM in terms of changes to ZBOMR.COM.
[CP/M:] Describes only new features. Original Z80MR and associated
files available from Micro Cornucopia (Disk B25).

CUG225.32-ZMATH.AZM source
By Neil Koozer. Assembly coded math package. => Z1.DOC Z1.COM. [CP/M:]

==============================================================================
CUG226 -
-----------

Art-Cee
A rule-based inference engine from Dan Cheatham (KS). Developed under
MIX C on a PC clone. ARTIE represents knowledge as if-then rules with
associated weights reflecting their probable applicability. ARTIE
includes a simple query system and will make assumptions while trying
to answer questions. [public]

CUG226.01-ART-CEE.COM 1.4 executable
Small Artificial Intelligence Inference Engine. By Dan Cheatham.
Executable file with runtime support. => MANUAL.TXT. [MSDOS: MIX]
requires 128K of memory.

CUG226.02-DOGNCAT 1.4 data
Sample Grouping File. By Dan Cheatham. => MANUAL.TXT.

CUG226.03-HELP1.AIH 1.4 data
Primary Help Routine Panel. By Dan Cheatham. => MANUAL.TXT.

CUG226.04-HELP2.AIH 1.4 data
Summary of Rule Input Syntax. By Dan Cheatham. => MANUAL TXT.

CUG226.05-HELP3.AIH 1.4 data
Summary of Query Input Syntax. By Dan Cheatham. => MANUAL.W.

CUG226.06-HELP4.AIH 1.4 data
Summary of Commands. By Dan Cheatham. => MANUAL.TXT.

CUG226.07-MANUAL.TXT doc
User's Guide. By Dan Cheatham. => HELP1.AIH HELP2.AIH HELP3.AIH
HELP4.AIH.

CUG226.08-READ.ME doc
By Dan Cheatham. Brief description of ARTCEE.COM. => MANUALTXT MT
CEE.COM.

CUG226.09-SAMPLE.FIL data
Minimal Sample Data File. By Dan Cheatham. => DOGNCAT ART-CEE.COM.

CUG226.10-WORKUP0.C 1.4 source
Parser Routines. By Dan Cheatham. => WORKUP0.H WORKUP1.H. [MS-DOS: MK]

CUG226.11-WORKUP0.H 1.4 header
By Dan Cheatham. Header file containing MAX definitions. => WORKUP0.H.
[MSDOS:]

CUG226.12-WORKUP1.H 1.4 header
By Dan Cheatham. Header file for secondary source files. => WORKUP0.H.
[MSDOS:]

CUG226.13-WORKUP2.C 1.4 source
1/0 Functions. By Dan Cheatham. => WORKUP0.H WORKUP1.H. [MS-DOS:]

CUG226.14-WORKUP3.C 1.4 source
Thinking, inference-drawing routines. By Dan Cheatham. => WORKUP0.H
WORKUP1.H. [MS-DOS:]

CUG226.15-WORKUP4.C 1.4 source
Driver Routines. By Dan Cheatham. => WORKUP0.H. [MS-DOS:]

==============================================================================
CUG227 -
-----------

Portable Graphics v2.1
By Rainer Gerhards. [public] 2 disks. A library of graphics routines
for PC clones from Rainer Gerhards (West Germany). The package
implements a global coordinate system, and includes support for
manipulating IBM display modes, for drawing pixels, lines, boxes,
ellipses, and arcs, for filling boxes with color, painting regions
with color. Also includes text fonts and demonstration programs.
Compiles under Lattice C, Datalight C v2.2x, Microsoft and Borland
Turbo C. The MSC version is untested.

CUG227.01-ALLGLOB.H header
Header for using world coordinates for addressing. => GRAF.TXT.
[MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.02-BARNAMES.H header
=> GRAF.TXT. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.03-BIOS-L3D.OBJ object
Large data model BIOS module.=> BIOS.C. [MS-DOS: LC]

CUG227.04-BIOS.C source
BIOS low-level driver. => BIOS.H, GRAPHICS.H. [MS-DOS: MSC, TC1.0,
LC3, DLC2]

CUG227.05-BIOS.H header
Low-level BIOS header file. => BIOS.C. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.06-BIOS_L3L.OBJ object
Large model BIOS module.=> BIOS.C. [MS-DOS: LC]

CUG227.07-BIOS_L3P.OBJ object
Large program model BIOS module. BIOS.C. [MS-DOS: LC]

CUG227.08-BIOS_L3S.OBJ object
Small model BIOS module.=> BIOS.C. [MS-DOS: LC]

CUG227.09-BLDDSK.BAT batch
MS-DOS Library Build Routine.

CUG227.10-BTRIGTAB.C source
=> TRIGTAB.H. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.11-DOS.MAC source
Macrofile for defining system constants. => EGAA.ASM, HERCA.ASM.
[MS-DOS: MASM]

CUG227.12-EGA.C source
EGA function library. => EGA.H, GRAPHICS.H. [MS-DOS: MSC, TC1.0, LC3,
DLC2]

CUG227.13-EGA.H header
Low-level EGA device header file. => EGA.C, EGA.ASM. [MS-DOS: MSC,
TC1.0, LC3, DLC2]

CUG227.14-EGAA.ASM source
Low-level driver for EGA device. => EGA.C, EGA.H, DOS.MAC. [MASM]

CUG227.15-FRKTAL.C source
Graphics example. => GRAPHICS.L, GRAF.C. [MS-DOS: MSC, TC1.0, LC3,
DLC2]

CUG227.16-GRAF.C source
Hardware independent high-level graphics library. => GRAF.TXT.
[MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.17-GRAF.S source
User documentation written in nroff format. => GRAF.TXT. [MS-DOS: MSC,
TC1.0, LC3, DLC2]

CUG227.18-GRAF.TXT doc
Documentation for portable graphics library. GRAF.S.

CUG227.19-GRAFBL3D.OBJ object
Large data model graphics module with BIOS.=> GRAF.C. [MS-DOS: LC]

CUG227.20-GRAFBL3L.OBJ object
Large model graphics module with BIOS. GRAF.C. [MS-DOS: LC]

CUG227.21-GRAFBL3P.OBJ object
Large program model graphics module with BIOS.=> GRAF.C. [MS-DOS: LC]

CUG227.22-GRAFBL3S.OBJ object
Small model graphics module with BIOS.=> GRAF.C. I[MS-DOS: LC]

CUG227.23-GRAFHL3D.OBJ object
Large data model graphics module with Hercules.[MS-DOS: LC]

CUG227.24-GRAFHL3L.OBJ object
Large model graphics module with Hercules.=> GRAF.C. [MS-DOS: LC]

CUG227.25-GRAFHL3P.OBJ object
Large program model graphics module with Hercules.=> GRAF.C. [MS-DOS:
LC]

CUG227.26-GRAFHL3s.OBJ object
Small model graphics module with Hercules card.=> GRAF.C. [MS-DOS: LC]

CUG227.27-GRAFTEXT.C source
=> STDFONT.H. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.28-GRAFTURT.C source
=> GRAF.TXT. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.29-GRAFTURT.OBJ object
=> GRAFTURT.C. [MS-DOS: LC3]

CUG227.30-GRAPHICS.H header
=> GRAF.H, GRAF.TXT. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.31-HERC.C source
Function library for Hercules graphic card. => HERC.H, GRAPHICS.H.
[MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.32-HERC.H header
Low-level Hercules device header file. HERC.C. [MS-DOS: MSC, TC1.0,
LC3, DLC2]

CUG227.33-HERCA.ASM source
Low-level driver for Hercules monochrome graphics card. => HERC.C,
HERC.H. [MS-DOS: MASM]

CUG227.34-HERCA_D.OBJ object
Large data model Hercules module. HERCA.ASM. [MS-DOS: MASM]

CUG227.35-HERCA_L.OBJ object
Large model Hercules module.=> HERCA.ASM. [MS-DOS: MASM]

CUG227.36-HERCA_P.OBJ object
Large program model Hercules module. HERCA.ASM. [MS-DOS: LC]

CUG227.37-HERCA_S.OBJ object
=> HERCA.ASM. [MS-DOS: MASM]

CUG227.38-HERC_L3D.OBJ object
=> HERC.C. [MS-DOS: LC3]

CUG227.39-HERC_L3L.OBJ object
Large model Hercules module.=> HERC.C. [MS-DOS: LC]

CUG227.40-HERC_L3P.OBJ object
Large program model Hercules module. HERC.C. [MS-DOS: LC3]

CUG227.41-HERC_L3s.OBJ object
Small model Hercules module.=> HERC.C. [MS-DOS: LC]

CUG227.42-READ.CUG doc
Documentation for object code naming rule. [MS-DOS]

CUG227.43-README.DOC doc

CUG227.44-STDFONT.H header
Defines the standard 8 x 8 font. => GRAFTEXT.C. [MS-DOS: MSC, TC1.0,
LC3, DLC2]

CUG227.45-TRIGTAB.H header
Precomputed trigonometric tables. => BTRIBTAB.C. [MS-DOS: MSC, TC1.0,
LC3, DLC2]

CUG227.46-TURTLE.C source
=> GRAFTURT.C. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.47-TURTLE.EXE executable
=> TURTLE.C. [MS-DOS: LC]

CUG227.48-TURTLE.OBJ object
=> TURTLE.EXE, TURTLE.C. [MS-DOS: LC3]

CUG227.49-VERSION doc
GRAPHLIB Version 2.1 11/15/87.

CUG227.50-XXHR.C source
Low-level driver for the Else PC XXHR, DXHR and XXHR vector graphics
board. XXHR.H. [MS-DOS: MSC, TC1.0, LC3, DLC2]

CUG227.51-XXHR.H header
Low-level driver for the Elsa PC XHR-DXHR and XXHR vector graphics
board. => XXHR.C. [MS-DOS: MSC, TC1.0, LC3, DLC2]

==============================================================================
CUG228 -
-----------

Miscellany IX
Contains BDSMARK, a utility which supports the adaptation of BDS C
code by identifying function calls peculiar to BDS from David D. Clark
(IN) and the following collected and contributed by Michael Yokayama
(HI): a set of ISAM routines, a windowing library, an HP Laserjet
print program, some Lattice math subroutines, a Hayes compatible modem
utility and some directory and file maintenance utilities. Many of
these programs also appear on US-Disk 1308 and US-Disk 1310. [mixed]

CUG228.01-BDSMARK.C source
By David C. Clark. Marks calls to library functions that BDS C
implements in a nonstandard fashion. Aids in porting BDS C to MS-DOS,
or updating to v1.6. => BDSMARK.DOC. [MS-DOS, CP/M:]

CUG228.02-BDSMARK.DOC doc
By David C. Clark. Documentation for BDSMARK. => BDSMARK.C.

CUG228.03-CHKMAT.C source
Matrix Mathematics Checker. => US-DISK 1308. [MS-DOS: LC]

CUG228.04-CUG228.DSK doc
Summary of C routines and functions on this disk.

CUG228.05-CWINDEMO.C source
By Glen Boyd. C windowing package, demo source. [MS-DOS: LC] US-Disk
1310

CUG228.06-CWINDEMO.DOC doc
By Glen Boyd. C-window demonstration documentation.

CUG228.07-CWINDEMO.EXE executable
By Glen Boyd. => CWINDEMO.C. [MSDOS: LC]

CUG228.08-CWINDOWS.DOC doc
By Glen Boyd. Function descriptions for window package.

CUG228.09-CWINDOWS.LIB library
By Glen Boyd. A shareware windowing for PC clones. Supports up to 255
overlapping windows. [MS-DOS: LC] Uses a custom printf that doesn't
support I/O redirection.

CUG228.10-DRAW.C source
Multiple Character Printing Program. By Jim Nech. Prints character in
multiples up, down, right or left. [MS-DOS: DESMET] UKDisk 1308

CUG228.11-ERAQ.C source
By John Welch. Like the MS-DOS erase command, except that the user is
always prompted for verification before the files are erased. [MS-DOS:
LC]

CUG228.12-ISAM.C source
ISAM. By John M. Dashner. A partially completed ISAM system. Keys are
limited to 64 bytes. => ISAM.H US-DISK 1310. [MS-DOS:]

CUG228.13-ISAM.H header
ISAM. By John M. Dashner. ISAM header file. => ISAM.C. [MS-DOS:]

CUG228.14-ISAMADD.C source
ISAM. By John M. Dashner. Add an index record. => ISAM.H. [MS-DOS:]

CUG228.15-ISAMC.DOC doc
ISAM Documentation. By John M. Dashner. => ISAM.C. Still needs to be
debugged.

CUG228.16-ISAMCLS.C source
ISAM. By John M. Dashner. Close ISAM indexing. => ISAM.H. [MS-DOS: LC]

CUG228.17-ISAMDELC source
ISAM. By John M. Dashner. Delete a record. => ISAM.H. [MS-DOS:]

CUG228.18-ISAMGET.C source
ISAM. By John M. Dashner. Get a record. => ISAM.H. [MS-DOS:1

CUG228.19-ISAMNXT.C source
ISAM. By John M. Dashner. Traverse sequential index. => ISAM.H.
[MS-DOS:]

CUG228.20-ISAMOPN.C source
ISAM. By John M. Dashner. Open ISAM index. => ISAM.H. [MS-DOS:]

CUG228.21-ISAMPRV.C source
ISAM. By John M. Dashner. Get previous record. => ISAM.H. [MS-DOS:]

CUG228.22-ISAMSIT.C source
ISAM. By John M. Dashner. Sort ISAM index. => ISAM.H. [MS-DOS:]

CUG228.23-ISAMUPD.C source
ISAM. By John M. Dashner. Update control record. => ISAM.H. [MS-DOS:]

CUG228.24-LATER.C source
File date compare utility. Sets exit code according to dates of two
files. => US-DISK 1308. [MS-DOS: DESMET] System dependent for MS-DOS
v2.0

CUG228.25-LJ.C source
HP Laserjet Printing Utility. By Joe Barnhart, Ray Duncan, Abel
DeSouza. Prints two pages of information on one page. Landscape font
at 17 cpi. => LJ.EXE US-DISK 1307. [MS-DOS: C 86]

CUG228.26-LJ.EXE executable
By Joe Barnhart, Ray Duncan, Abel DeSouza. [MS-DOS:]

CUG228.27-MAT.C source
Matrix Decomposition and Double-Back Substitution. => CHKMAT.C US-DISK
1308. [MS-DOS: DESMET]

CUG228.28-MATHMAX.C source
Mathematical Subroutines. By Max R. Dursteler. Includes sqrt, exp,
pow, mod, asin, sin, atan, log, floor, ceil. Operates on doubles. =>
MATHMAX H US-DISK 1307. [MS-DOS: LC, MSC]

CUG228.29-MATHMAX.H header
By Max R. Durshler. => MATHMAX.C.

CUG228.30-MSWEEP.C source
By Fredinand Knerlich. File utility based on CP/M nsweep. => US-DISK
1308. [MS-DOS: DESMET]

CUG228.31-PACDEC.C source
By Odis C. Wooten. Decimal string to packed decimal. => US-DISK 1308.
[MS-DOS:]

CUG228.32-PARSER.C source
Generalized, Finite-State Parser. By Uoyd Zusman. Powerful parser
allowing extraction of single tokens from character string. => US-DISK
1308. [MS-DOS:]

CUG228.33-PI.C source
Pi Calculator. By R.E. Sawyer. Computes pi to n decimal places. =>
US-DISK 1308 MIRACL. [MS-DOS:] Execution time is nearly proportional
to the square of the number of digits computed. 1000 digits takes 51
hours.

CUG228.34-SCRNMISC.C source
By Garth Kennedy. Functions to manipulate the CRT. Clear screen, set
video mode, set cursor position, position graphics cursor. => US-DISK
1310. [MS-DOS: LC2.12]

CUG228.35-SETHAYES.C source
Initializes Hayes Smart modem. By Lynn Long. => US-DISK 1310. [MS-DOS:
LC]

CUG228.36-STRMATH.C source
String to Math Functions. By Robert E. Sawyer. Performs arithmetic on
numbers stored as strings. Supports addition, subtraction,
multiplication, and division. => US DISK 1310. [MS-DOS: DESMET]

CUG228.37-SYSTEM.C source
Lattice 2.13 System Call. By Jeff Spidle. Replaces Lattice v2.13
system call which ignores SWITCHAR setting before invoking secondary
command processor. => USDISK 1310. [MS-DOS: LC2.13] For dated version
of Lattice C.

CUG228.38-SYSTMISC.C source
By Garth Kennedy. System functions to create sounds and get the system
time and date. => US-DISK 1310. [MS-DOS: LC2.12]

==============================================================================
CUG229 -
-----------

Little Smalltalk--UNIX Part 1
Part 1 of a double volume set which contains portable dialect
Smalltalk for UNIX systems by Dr. Timothy Budd (WA). In a distribu
tion suitable for installation on atrue UNIX system. See CUG231 and
CUG232 for the unbundled version. [public]

CUG229.01-INSTALL executable
Little Smalltalk Installation. By Timothy A. Budd. Installation
information. => UNBUNDLE SOURCES.BUN CUG230 CUG231 CUG232. [UNIX:]

CUG229.02-MAKEFILE make
Little Smalltalk. By Timothy A. Budd. => INSTALL

CUG229.03-SOURCES.BUN source
Little Smalltalk. By Timothy A. Budd. Bundled source files. =>
UNBUNDLE INSTALL.

CUG229.04-UNBUNDLE executable
Little Smalltalk. By Timothy A. Budd. Shell for unbundling the
Smalltalk files. => INSTALL SOURCE.BUN. [UNIX:]

==============================================================================
CUG230 -
-----------

Little Smalltalk--UNIX Part 2
Part 2 of a double volume set. See also 229. [public]

CUG230.01-DOCS.BUN source
Uttle Smalltalk. By Timothy A. Budd. Bundled documentation files. =>
CUG229. [UNIX ]

CUG230.02-PARSER.BUN source
Little Smalltalk. By Timothy A. Budd. Bundled parser source file. =>
CUG229. [UNIX ]

CUG230.03-PRELUDE.BUN source
Uttle Smalltalk. By Timothy A. Budd. Bundled prelude files. => CUG229.
[UNIX:]

CUG230.04-TEST.BUN source
Little Smalltalk. By Timothy A. Budd. Bundled test files. => CUG229.
[UNIX]

==============================================================================
CUG231 -
-----------

Lfflle Smal talk--Unbundled
Timothy Budd contributes a portable dialect Smalltalk. This volume
constitute a complete distribution with unbundled files. This double
set volume is more convenient for non-UNIX environments. [public]

CUG231.01-4QUEEN.OUT data
Output file.

CUG231.02-4QUEEN.ST data
Class description file.

CUG231.03-8QUEEN.ST data
Class description file.

CUG231.04-ARRAY.C source
By Timothy A. Budd. Array creation. [UNIX:]

CUG231.05-BASIC.OUT data
Output file.

CUG231.06-BASIC.ST data
Class description file.

CUG231.07-BLOCK.C source
By Timothy A. Budd. Block creation and block return. [UNIX]

CUG231.08-BLOCK.H header
By Timothy A. Budd. Block definitions. [UNIX:]

CUG231.09-BLOCKS.OUT data
Output file.

CUG231.10-BLOCKS.ST data
Class description file.

CUG231.11-BYTE.C source
By Timothy A. Budd. Bytearray manipulation. [UNIX:]

CUG231.12-BYTE.H header
By Timothy A. Budd. Bytearray definitions. [UNIX:]

CUG231.13-CHECK.ST data
Class description file.

CUG231.14-CLASS.C source
By Timothy A. Budd. Class instance creation and deletion. [UNIX]

CUG231.15-CLDICT.C source
By Timothy A. Budd. Internal class dictionary. [UNIX:]

CUG231.16-COLLECT.OUT data
Output file.

CUG231.17-COLLECT.ST data
Class description file.

CUG231.18-COND.ST data
Class description file.

CUG231.19-CONTROL.ST data
Class description file.

CUG231.20-COPY.OUT data
Output file.

CUG231.21-COPY.ST data
Class definition file.

CUG231.22-COURIER.C source
By Timothy A. Budd. Message passing interface. [UNIX:]

CUG231.23-DISCLAIM doc

CUG231.24-DRIVE.C source
By Timothy A. Budd. Command parser. [UNIX:]

CUG231.25-FIB.ST data
Class description file.

CUG231.26-FILE.C source
By Timothy A. Budd. Programs used by class file. [UNIX]

CUG231.27-FILE.H header
By Timothy A. Budd. Class file definitions. [UNIX:]

CUG231.28-FILE.LST doc
Ust of files.

CUG231.29-FILE.OUT data
Output file.

CUG231.30-FILE.ST data
Class description file.

CUG231.31-FORK.OUT data
Output file.

CUG231.32-FORK.ST data
Class description file.

CUG231.33-GENERATO.ST data
Class description file.

CUG231.34-IN data
Input file.

CUG231.35-INTERP.C source
By Timothy A. Budd. Byte code interpreter. [UNIX]

CUG231.36-INTERP.H header
By Timothy A. Budd. Interpreter definitions. [UNIX:]

CUG231.37-LEX.C source
By Timothy A. Budd. Lexical analyzer for driver. [UNIX]

CUG231.38-LEXCMD.C source
By Timothy A. Budd. Miscellaneous lexer related routines. [UNIX]

CUG231.39-LINE.C source
By Timothy A. Budd. Line grabber. [UNIX]

CUG231.40-MAIN.C source
Source for Creating 'st' Uttle Smalltalk Interpreter. By Timothy A
Budd. Main driver. [UNIX]

CUG231.41-MAKEFILE.SOU doc
By Timothy A Budd. Make file for 'st'. [UNIX:]

CUG231.42-MAKEFILE.TES make
Makefile for tests.

CUG231.43-NEW.OUT data
Output file.

CUG231.44-NEW.ST data
Class description file.

CUG231.45-NEWMAL.C source
By Timothy A. Budd. New malloc subroutines. [UNIX]

CUG231.46-NUM.OUT data
Output file.

CUG231.47-NUM.ST data
Class description file.

CUG231.48-NUMBER.C source
By Timothy A. Budd. Number definitions. [UNIX ]

CUG231.49-NUMBER.H header
By Timothy A. Budd. Number definitions. [UNIX ]

CUG231.50-OBJECT.C source
By Timothy A. Budd. Object memory management. [UNIX]

CUG231.51-OBJECT.H header
By Timothy A. Budd. Object definitions. [UNIX:]

CUG231.52-PENSHOW.ST data
Class description file.

CUG231.53-PHIL.OUT data
Output file.

CUG231.54-PHIL.ST data
Class description file.

CUG231.55-PLANE.ST data
Class description file.

CUG231.56-PRIME.ST data
Class description file.

CUG231.57-PRIME3.ST data
Class description file.

CUG231.58-PRIME4.ST data
Class description file.

CUG231.59-PRIMES.ST data
Class description file.

CUG231.60-PRIMITIV.C source
By Timothy A Budd. Primitive manager. [UNIX]

CUG231.61-PRIMITIV.H header
By Timothy A. Budd. Primitive definitions. [UNIX.]

CUG231.62-PROB.ST data
Class description file.

CUG231.63-PROCESS.C source
By Timothy A Budd. Process manager. [UNIX]

CUG231.64-PROCESS.H header
By Timothy A Budd. Process definitions. [UNIX]

CUG231.65-SIM1.0UT data
Output file.

CUG231.66-SIMl.ST data
Class description file.

CUG231.67-SIM2.0UT data
Output file.

CUG231.68-SIM2.ST data
Class description file.

CUG231.69-SIM3.0UT data
Output file.

CUG231.70-SIM3.ST data
Class description file.

CUG231.71-SSTR.C source
By Timothy A Budd. File and replace string occurrences. [UNIX:]

CUG231.72-STRING.C source
By Timothy A Budd. String creation and deletion. [UNIX]

CUG231.73-STRING.H header
By Timothy A. Budd. String definitions. [UNIX:]

CUG231.74-SUPER.OUT data
Output file.

CUG231.75-SUPER.ST data
Class description file.

CUG231.76-SYMBOL.C source
By Timothy A. Budd. Symbol creation. [UNIX:]

CUG231.77-SYMBOL.H header
By Timothy A. Budd. String and symbol definitions. [UNIX:]

CUG231.78-SYMBOLS doc
By Timothy A. Budd. [UNIX:]

CUG231.79-SYMS.C source
By Timothy A. Budd. Symbol definitions. [UNIX]

CUG231.80-TEMP.ST data
Class description file.

CUG231.81-TURING.ST data
Class description file.

CUG231.82-VISITOR.ST data
Class description file.

==============================================================================
CUG232 -
-----------

Little Smalltalk - Unbundled Part 2 Part 2 of a double volume set. See
also CUG231. [public]

CUG232.01-ACOLLECT.ST data
Class description file: array collection.

CUG232.02-APNDX1 doc
Object descriptions.

CUG232.03-ARRAY.ST data
Class description file: array.

CUG232.04-BAG.ST data
Class description file: bag.

CUG232.05-BLOCK.ST data
Class description file: block.

CUG232.06-BOOKS doc
Ust of books.

CUG232.07-BOOLEAN.ST data
Class description file: boo lean.

CUG232.08-BUGS doc
Known bugs.

CUG232.09-BYTEARRA.ST data
Class description file: Byte Array.

CUG232.10-CHAR.ST data
Class description file: char.

CUG232.11-CLASS.ST data
Class description file: class.

CUG232.12-CMDS.H header
By Timothy A. Budd. Source for parser. Commands definitions. [UNIX:]

CUG232.13-COLLECT1.ST data
Class description file: collection.

CUG232.14-DICTIONA.ST data
Class description file: dictionary.

CUG232.15-DISCLAIM doc

CUG232.16-DRIVE.H header
Source for parser. Parser and driver definitions. [UNIX:]

CUG232.17-ENV.H header
Source for parser. Execution environment definitions. [UNIX:]

CUG232.18-FALSE.ST data
Class description file: false.

CUG232.19-FILE.LST doc
List of files.

CUG232.20-FILE.ST data
Class description file: file.

CUG232.21-FLOAT.ST data
Class description file: float.

CUG232.22-FORM.ST data
Class description file: form.

CUG232.23-INDEX doc
Index.

CUG232.24-INIT doc

CUG232.25-INSTALL doc
Instructions for installation.

CUG232.26-INTEGER.ST data
Class description file: integer.

CUG232.27-INTERVAL.ST data
Class description file: interval.

CUG232.28-KCOLLECT.ST data
Class description file: keyed collection.

CUG232.29-LARRAY.ST data
Class description file: arrayed collection.

CUG232.30-LEXYY.C source
Source for parser. Lexical analyzer- [UN X:

CUG232.31-LIST.ST data
Class description file: list.

CUG232.32-MACROS doc
Maoros for producing description of alas

CUG232.33-MAGNITUD.ST data
Class description file: magnitude.

CUG232.34-MAKEFILE.DOC doc
Makefile for documentation.

CUG232.35-MAKEFILE.PAR make
Source for parser. Makefile for creating parser. [UNIX:]

CUG232.36-MAKEFILE.PRE make
Makefile for prelude.

CUG232.37-NIL.ST data
Class description file: undefined object.

CUG232.38-NUMBER.ST data
Class description file: number.

CUG232.39-OBJECT.ST data
Class description file: object.

CUG232.40-PARSE1.C source
Source of parse. Pass 1 of the parser. [UNIX:]

CUG232.41-PARSE2.C source
Source for parser. Pass 2 of the parser. [UNIX:]

CUG232.42-PARSER.H header
Source for parser. Parser definitions. [UNIX]

CUG232.43-PARSER.LEX source
Source for parser. Lexical analyzer.

CUG232.44-PARSER.Y source
Source for parser. Class method syntax. [UNIX:]

CUG232.45-PEN.ST data
Class description file: pen.

CUG232.46-POINT.ST data
Class description file: point.

CUG232.47-PRIMNUM.H header
Source for parser. Primitive names and numbers recognized by the
parser.

CUG232.48-PROCESS.ST data
Class description file: process.

CUG232.49-RADIAN.ST data
Class description file: radian.

CUG232.50-RANDOM.ST data
Class description file: random.

CUG232.51-READ-ME doc

CUG232.52-SAVESCRI source
Save command.

CUG232.53-SCOLLECT.ST data
Class description file: sequence able collection.

CUG232.54-SEMAPHOR.ST data
Class description file: semaphore.

CUG232.55-SET.ST data
Class description file:set.

CUG232.56-SMALLTAL.ST data
Class description file: small talk.

CUG232.57-ST.1 doc
Usage information.

CUG232.58-STRING.ST data
Class description file: string.

CUG232.59-SYMBOL.ST data
Class description file: symbol.

CUG232.60-SYNTAX doc
Language syntax documentation.

CUG232.61-TRUG.ST data
Class description file: true.

CUG232.62-UCHAR.C source
Test file.

CUG232.63-USERMAN doc
User's guide.

CUG232.64-YTAB.C source
[UNIX]

CUG232.65-YTAB.H header
Header file for lex. [UNIX:]

==============================================================================
CUG233 -
-----------

Make and Other Utilities
This volume contains a simple make utility by Allen Holub (CA)
originally for Lattice but also Microsoft compatible; two batch
utilities (push and pop) written under Microsoft v4.0 from Warren J.
Hebert (LA); a directory repack utility by Richard Karas; a pretty
printer by Andrew L. Bender; a file display utility by Vincent Bly
(VA); a backslash escape sequence from Ward Christensen (IL); and
routines to call Microsoft Fortran from Datalight C by James W.
Haefner
(UT). [mixed]

CUG233.01-COLRVIEW.C source
By Ward Christensen. Displays a text file, but interprets "\x" escapes
as color change commands. Optionally sends output to JX80 printer. =>
COLRVIEW.EXE. [MS-DOS:] File is labelled "test version".

CUG233.02-COLRVIEW.EXE executable
By Ward Christensen. => COLRVIEW.C. [MS-DOS:]

CUG233.03-COLRVIEW.OBJ object
By Ward Christensen. => COLRVIEW.C. [MS-DOS:]

CUG233.04-CPRINT.C 1.2 source
By Andrew L. Bender M.D.. Prints a C file with nesting level and
header on each page. Reports any unbalanced braces, brackets or
parentheses. => CPRINT.EXE. [MS-DOS: Cl 86]

CUG233.05-CPRINT.EXE 1.2 executable
By Andrew L. Bender M.D.. => CPRINT.C. [MS-DOS:]

CUG233.06-CPRINT.OBJ 1.2 object
By Andrew L. Bender M.D.. => CPRINT.C CPRINT.EXE. [MS-DOS:]

CUG233.07-DSKRPK.C 1.0 source
Directory Repack. By Richard A. Karar. Remove all deleted files and
move valid files together to make free space for new files. =>
DSKRPK.EXE DSKRPK.DOC. [MSDOS: Supersoft] FP arithmetic performed as
function calls, not built-ins. Uses in-line assembly.

CUG233.08-DSKRPK.DOC doc
Directory Repack. By Richard A. Karar. Documentation for DSKRPK.
Includes tutorial material on low-level MS-DOS disk operations. =>
DSKRPK.C. [MS-DOS:]

CUG233.09-DSKRPK.EXE 1.0 executable
By Richard A. Karar. => DSKRPK.C RSKRPK.DOC. [MS-DOS:]

CUG233.10-MAKE.C 1.0 source
Make. By Allen Holub, Kenji Hino. Unix-like utility which simplifies
compilations in any language. This simple version doesn't include the
macro facilities or other advanced features of the UNK original. =>
MAKE.C MAKE.H. [MS-DOS: MSC4.0, LC3.0] Lattice requires MS-DOS v3.0 +

CUG233.11-MAKE.DOC 1.0 doc
By Allen Holub, Kenji Hino. Documentation for MAKE. => MAKE.C.

CUG233.12-MAKE.EXE 1.0 executable
By Allen Holub, Kenji Hino. => MAKE.DOC. [MS-DOS: MSC4.0, LC3.0]

CUG233.13-MAKE.H 1.0 header
By Allen Holub, Kenji Hino. Header file. => MAKE.DOC. [MS-DOS: MSC4.0,
LC3.0]

CUG233.14-MAKE.OBJ object
By Allen Holub, Kenji Hino. [MS-DOS: MSC4.0, LC3.0]

CUG233.15-MKFILE 1.0 make
By Allen Holub, Kenji Hino. File dependency descriptions used by make.
=> MAKE.DOC. [MS-DOS:]

CUG233.16-MSCALLS.ASM 1.0 source
By J.W. Haefner. Macros to be used in calling Microsoft Fortran v3.2
double precision trancendentals from Data Light C compiler. [MS-DOS:
MASM]

CUG233.17-MSFTSDR.ASM source
By J.W. Haefner. Calls MSFORTRAN double precision transcendentals from
Datalight C. => MSCALLS.ASM MSFTSDR.DOC. [MS-DOS: DLC3.01]

CUG233.18-MSFTSDR.DOC 1.0 doc
By J.W. Haefner. Describes the use of MSCALLS.ASM and MSFTSDR.ASM. =>
MSCALLS.ASM MSFTSDR.ASM.

CUG233.19-MSFTSDR.OBJ object
By J.W. Haefner. => MSFTSDR.DOC. [MSDOS: DLC 3.01 ]

CUG233.20-MSTSDR.C source
By J.W. Haefner. A demonstration program that calls MS FORTRAN
transcendental functions and prints the result. [MS-DOS:]

CUG233.21-MSTSDR.EXE executable
By J.W. Haefner. [MS-DOS:]

CUG233.22-OKI.C source
By Andrew L. Bender M.D.. Okidata printer setup menu. => OKI.EXE
RITEMAN.C. [MSDOS:]

CUG233.23-OKI.EXE executable
By Andrew L. Bender M.D.. => OKI.C. [MSDOS:]

CUG233.24-POP.C source
By Warren J. Hebert. Restores working directory from last directory
stored in file CDSTACK.DAT. => PUSH.C. [MS-DOS:]

CUG233.25-PUSH.C source
By Warren J. Hebert. Saves current working directory to LIFO stack
kept in file CDSTACK.DAT. Supports complex path relative batch
operations. => POP.C WS.C. [MS-DOS:]

CUG233.26-RITEMAN.C source
By Andrew L. Bender M.D.. Riteman printer setup menu. => RITEMAN.EXE
RITEMAN.OBJ OKI.C. [MS-DOS:]

CUG233.27-RITEMAN.EXE executable
By Andrew L. Bender M.D.. => RITEMAN.C. [MS-DOS:]

CUG233.28-RITEMAN.OBJ object
By Andrew L. Bender M.D.. => RITEMAN.C. [MS-DOS:]

CUG233.29-SAVAG.C source
Savage floating point benchmark. [MSDOS:]

CUG233.30-VTYPE.C source
By Vincent Bly. Improved version of TYPE. An key will quickly stop the
display. ESC will abort. Tabs may be expanded to specified number of
spaces. => VTYPE.DOC VTYPE.EXE. [MS-DOS: DESMET]

CUG233.31-VTYPE.DOC doc
By Vincent Bly. Documentation for VTYPE. => VTYPE.C.

CUG233.32-VTYPE.EXE executable
By Vincent Bly. => VTYPE.C. [MS-DOS: DESMET]

CUG233.33-WS.BAT batch
By Warren J. Hebert. Example usage of push and pop. => PUSH.C POP.C.
[MS DOS:]

==============================================================================
CUG234 -
-----------

XDIR
A user-oriented file manipulation and disk maintenance utility
shareware package from Mike Blakley (FL). Under XDIR, users may
delete, copy or rename files, display or print text files, dump files
in ASCII and hexadecimal, change file attributes, encrypt and decrypt
files, search for files by date, at-
tribute, or name and search for words in a file or group of files.
Compiles under Eco-C88. [share1]

CUG234.01-COMPILE.BAT batch
By Mike Blakley. Batch file for compilation. [MS-DOS:]

CUG234.02-CONTENTS.DOC doc
By Mike Blakley. Table of disk contents.

CUG234.03-CTLR.C 1.0 source
Scan Files For Text. By Mike Blakley. => XDIR.DOC HDIR.DOC. [MS-DOS:
ECOC88]

CUG234.04-DISPLAY.C 1.0 source
Screen Display Module. By Mike Blakley. Display a screen and accept an
answer. => HDIR.DOC XDIR.DOC. [MS-DOS:]

CUG234.05-GETAPAGE.C 1.0 source
File Listing Routine. By Mike Blakley. => HDIR.DOCXDIR.DOC. [MS-DOS:]

CUG234.06-HDIR.DOC 1.0 doc
Subroutine Documentation. By Mike Blakley. => XDIR.DOC.

CUG234.07-MISC.C 1.0 source
By Mike Blakley. Miscellaneous routines. => HDIR.DOC XDIR.DOC.
[MS-DOS: ECOC88]

CUG234.08-README.1ST 1.0 doc
By Mike Blakley. Instructions for setup and use.

CUG234.09-SECURE.C 1.0 source
Encryption Module. By Mike Blakley. => XDIR.DOC HDIR.DOC. [MS-DOS:
ECOC88]

CUG234.10-TESTPRT.ASM 1.0 source
By Mike Blakley. Test if printer is ready. => XDIR.DOC HDIR.DOC.
[MS-DOS: MASM]

CUG234.11-UTIL.C 1.0 source
By Mike Blakley. => XDIR.DOC HDIR.DOC. [MS-DOS: ECO-C88]

CUG234.12-XDIR.C 1.0 source
By Mike Blakley. Main processing module. => XDIR.DOC HDIR.DOC.
[MS-DOS:]

CUG234.13-XDIR.DOC 1.0 doc
System Documentation. By Mike Blakley. XDIR system was developed to
simplify processing of MS-DOS commands, to provide additional system
security and provide an screen oriented presentation for beginning
users. => XDIR.C XDIR.H XDIR.EXE HDIR.DOC.

CUG234.14-XDIR.EXE 1.0 executable
By Mike Blakley. => XDIR.C XDIR.DOC HDIR.DOC. [MS-DOS: ECO-C88]

CUG234.15-XDIR.H 1.0 header
By Mike Blakley. => XDIR.DOC XDIR.C HDIR.DOC. [MS-DOS:]

CUG234.16-YDIR.C 1.0 source
File Attribute Manipulation. By Mike Blakley. => XDIR.DOC HDIR.DOC.
[MS-DOS:]

CUG234.17-ZDIR.C 1.0 source
By Mike Blakley. Search a directory, includes selection by file
attribute. => HDIR.DOC XDIR.DOC. [MS-DOS:]

==============================================================================
CUG235 -
-----------

Overview
A file maintenance utility contributed by James Mathews (MN). In
addition to the standard file maintenance abilities, Overview also al
lows access to up to fourdirectories each in a separate window,
displays directory trees, includes a function to show all files (not
just the current directory), and includes on-line help. This share
ware package was written in Microsoft C v4.0 but calls some assembly
language functions. [share1]

CUG235.01-BIOSIO.ASM 1.02 source
By James Mathews. Routine to do BIOS screen I/O. => OV.C. [MS-DOS:
MASM]

CUG235.02-CVTHLP.C 1.01 source
By James Mathews. Converts a text file to 'compiled' format used by
overview. => OV.C. [MS-DOS: MSC 4.0]

CUG235.03-DATE.ASM 1.02 source
By James Mathews. routine to work with MS-DOS date. => OV.C. [MS-DOS:
MASM]

CUG235.04-DIRECT.ASM 1.02 source
By James Mathews. routines to do direct screen I/O. => OV.C. [MS-DOS:]

CUG235.05-DOSFILE.H header
By James Mathews. => FILE.C. [MS-DOS: MSC 4.0]

CUG235.06-FARMEM.ASM source
By James Mathews. Routines to allocate and free 'FAR' memory. => OV.C.
[MSDOS: MASM]

CUG235.07-FILE.C source
By James Mathews. Functions that work on/with MS-DOS files. => OV.C.
[MS-DOS: MSC 4.0]

CUG235.08-FILEI0.ASM source
By James Mathews. Routines to do lowlevel file l/O. Includes functions
to seek, read, write, time stamp, get current directory, set
attributes, and fake error return. => OV.C. [MS-DOS: MASM]

CUG235.09-GETOPT.C source
By James Mathews. Get next command line option from argv. => OV.C.
[MS-DOS: MSC4.0]

CUG235.10-GRABBRK.ASM source
By James Mathews. Grab control-break, contro14 interrupts. => OV.C.
[MS-DOS: MASM]

CUG235.11-MAKEFILE make
By James Mathews. Make file for compiling OVERVIEW. => OV.C. [MS-DOS:]

CUG235.12-OV.C 1.02 source
Overview. By James Mathews. OVERVIEW allows the user to perform common
operations on disk files in a visual, tabular manner. => OV.DOC OV.H.
[MS-DOS: MSC4.0]

CUG235.13-OV.DOC 1.02 doc
By James Mathews. Installation and usage information. => OV.C.
[MS-DOS:]

CUG235.14-OV.EXE 1.02 executable
By James Mathews. => OV.C. [MS-DOS: MSC4.0]

CUG235.15-OV.H 1.02 header
By James Mathews. Global definitions. => OV.C. [MS-DOS:]

CUG235.16-OV.HLP 1.02 doc
By James Mathews. Compiled help file. => CVTHLP.C. [MS-DOS:]

CUG235.17-OV.LNK doc
By James Mathews. List of object files. MAKEFILE.

CUG235.18-OVATTRIB.C source
By James Mathews. File attribute functions. => OV.C. [MS-DOS: MSC4.0]

CUG235.19-OVCMD.C source
By James Mathews. Execute MS-DOS command. => OV.C. [MS-DOS:]

CUG235.20-OVDEF.C source
By James Mathews. Define screen and display parameters. => OV.C.
[MS-DOS:]

CUG235.21-OVDIR.C source
By James Mathews. Directory functions. => OV.C. [MS-DOS:]

CUG235.22-OVFDISP.C source
By James Mathews. File display functions. => OV.C. [MS-DOS:]

CUG235.23-OVFILE.C source
By James Mathews. File handling routines. => OV.C. [MS-DOS:]

CUG235.24-OVFMOVE.C source
By James Mathews. Move the file pointer for scrolling. => OV.C.
[MS-DOS:]

CUG235.25-OVHELP.C source
By James Mathews. On-line help routines. => OV.C. [MS-DOS:]

CUG235.26-OVHELP.TXT doc
By James Mathews. ASCII help file. => OV.HLP. [MS-DOS:]

CUG235.27-OVLOGO.C source
By James Mathews. Display Overview logo. => OV.C. [MS-DOS: MSC4.0]

CUG235.28-OVMENU.C source
By James Mathews. Menu system. => OV.C. [MS-DOS:]

CUG235.29-OVPROMPT.C source
By James Mathews. Prompt functions. OV.C. [MS-DOS:]

CUG235.30-OVSELECT.C source
By James Mathews. Set the selection attributes. => OV.C. [MS-DOS:]

CUG235.31-OVSORT.C source
By James Mathews. Sort routines. => OV.C. [MS-DOS:]

CUG235.32-OVSTR.C source
By James Mathews. String routines. => OV.C. [MS-DOS:]

CUG235.33-OVTAG.C source
By James Mathews. Toggle the tag. => OV.C. [MS-DOS:]

CUG235.34-OVTTY.C source
By James Mathews. Routines to set video attributes, position cursor,
save screen, and restore screen. => OV.C. [MS-DOS:]

CUG235.35-OVVBUF.C source
By James Mathews. Buffer management routines. => OV.C. [MS-DOS:]

CUG235.36-OVVIEW.C source
By James Mathews. View functions. => OV.C. [MS-DOS:]

CUG235.37-OVWIN.C source
By James Mathews. Functions to create and manage a dialog window. =>
OV.C. [MS-DOS:]

CUG235.38-PATHNAME.C source
By James Mathews. Create a fully qualified path name. => OV.C.
[MS-DOS:]

CUG235.39-PATHOPEN.C source
By James Mathews. Open a file along a given path. => OV.C. [MS-DOS:]

CUG235.40-README.OV doc
By James Mathews. Listing of files.

CUG235.41-README.SRC 1.02 doc
By James Mathews. Historical account of Overview. => OV.C.

CUG235.42-REGISTER.FRM doc
By James Mathews. Registration form.

CUG235.43-SCANTREE.C source
By James Mathews. Scan a specified directory tree. => OV.C. [MS-DOS:
MSC4.0]

CUG235.44-STRING.C source
By James Mathews. Function to copy a string with blank fill. => OV.C.
[MS-DOS:]

CUG235.45-VOLUME.C source
By James Mathews. Functions to get and set information about MS-DOS
volume label. => OV.C. [MS-DOS:]

==============================================================================

==============================================================================
CUG236 -
-----------

HIGHLY PORTABLE UTILITIES
By William C. Colley, III. [mixed] 1 disk. A collection of very
portable programs that will compile and run with minimal hassle.
William Colley III (OH) took these programs from other CUG library
volumes, edited, rewrote and tested them to make them more portable.
With a few exceptions, all programs are now known to compile and
execute correctly under Aztec C II(CP/M), Eco-C80 (CP/M), Eco-C88
(MS-DOS), Microsoft v3 small model (MS-DOS), and Microsoft v3 large
model. Utilities and tools include BAWK (an exception that doesn't run
under Eco-C or Microsoft large model), bc, cflow, sgrep, sc, tee, 2up,
RS232EXP, cb, retab, fcomp, head, and plcheck.

CUG236.01-2UP.C source
By William C. Colley, III, Eugene H. Mallory. Multi-column output
Stacker. Formats text into one or more columns. => 2UP.DOC. [CP/M,
UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.02-2UP.DOC doc
By William C. Colley, III, Eugene H. Mallory. Usage information. =>
2UP.C.

CUG236.03-BAWK.C source
By William C. Colley, III, Bob Brodt. Bawk: Text Pattern/Action Tool.
Like UNIX's AWK, BAWK scans text files for regular expression patterns
and executes a user-defined action. => BAWK.DOC. [CP/M, UNIX, MS-DOS]

CUG236.04-BAWK.DOC doc
By William C. Colley, III, Bob Brodt. Usage information. => BAWK.C.

CUG236.05-BAWK.H header
By William C. Colley, III, Bob Brodt. Global definitions. => BAWK.C.
[CP/M, UNIX, MS-DOS]

CUG236.06-BAWKACT.C source
By William C. Colley, III, Bob Brodt. BAWK: Actions Compiler. =>
BAWK.C. [CP/M, UNIX, MS-DOS]

CUG236.07-BAWKDO.C source
By William C. Colley, III, Bob Brodt. BAWK: Actions Interpreter. =>
BAWK.C. [CP/M, UNIX, MS-DOS]

CUG236.08-BAWKPAT.C source
By William C. Colley, 111, Bob Brodt. BAWK Regular Expression
Compiler/Interpreter.=> BAWK.C. [CP/M, UNIX, MS-DOS]

CUG236.09-BAWKSYS.C source
By William C. Colley, III, Bob Brodt. Built in functions, variables
declarations, and stack management routines. => BAWK.C. [CP/M, UNIX,
MS-DOS]

CUG236.10-BC.BAT batch
By William C. Colley, III, Bob Brodt. BC batch file. => PF.BC.
[MS-DOS]

CUG236.11-BC.H header
By J. McKeon. BC header file. => PF.BC. [CP/M, UNIX, MS-DOS]

CUG236.12-CB.C source
By William C. Colley, III, J.W. Kindschi Jr.. Pretty Printer. Formats
a C program with proper indents for each statement. => CB.DOC. [CP/M,
UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.13-CB.DOC doc
By William C. Colley, III, J.W. Kindschi Jr.. Usage Information. =>
CB.C.

CUG236.14-CFLOW.C source
By William C. Colley, III, Mark Ellington. Function Abstractor.
Abstacts C function calls and declarations from a C source and
produces a listing of the program's calling hierarchy. => CFLOW.DOC.
[CP/M, UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.15-CFLOW.DOC doc
By William C. Colley, III, Mark Ellington. Usage information. =>
CFLOW.C.

CUG236.16-FCOMP.C source
By Chuck Allison. Compare Text Files. [CP/M, UNIX, MS-DOS: AZTEC,
MSC3.0, ECO-C]

CUG236.17-HEAD.C source
By William C. Colley, III, Eugene H. Mallory. Utility to print the
first n lines of a list of files. [CP/M, UNIX, MS-DOS: AZTEC, MSC3.0,
ECO-C]

CUG236.18-HEADERS.CUG doc

CUG236.19-PF.BC data
By J. McKeon. Translates a BASlC-like language BC to C. => SGREP.DOC,
BC.H, BC.BAT, PROGS.BC. [CP/M, UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]
requires SGREP.EXE.

CUG236.20-PLCHECK.C source
By Richard Conn. Display the nesting level of a C program. [CP/M,
UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.21-PROGS.BC data
By J. McKeon. BC example input. => PROGS.C.

CUG236.22-PROGS.C source
By J. McKeon. BC example results. PROGS.BC. PF.BC.

CUG236.23-RETAB.C source
By William C. Colley, III. Entab/Detab/Strip Combo. Strips upper-order
bits, detabifies, then entabifies a text file. => RETABF.C. [CP/M,
UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.24-RETABF.C source
By William C. Colley, III. Entab/Detab/Strip Combo - Filter Version.
=> RETAB.C. [CP/M, UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.25-RS232EXP.C source
By William C. Colley, III, J. Kilar. RS 232 Diagnostic Helper. An
"expert system" that helps diagnose problems with the RS232 serial
port. => RS232EXP.DOC. [MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.26-RS232EXP.DOC doc
By William C. Colley, III, J. Kilar. Usage information. => RS232EXP.C.

CUG236.27-SGREP.C source
String search and replace utility. This version can handle multiple
patterns and distinguishes between upper and lower. SGREP.DOC, CUG152.
[CP/M, UNIX, MS-DOS: AZTEC, MSC3.0, ECO-C]

CUG236.28-SGREP.DOC doc
By J. McKeon. Usage information. SGREP.C.

CUG236.29-TEE.C source
By Michael Yokoyama. Portable Tee. Copies standard input to specified
file and to standard output. => TEE.DOC. [CP/M, UNIX, MS-DOS: AZTEC,
MSC3.0, ECO-C]

CUG236.30-TEE.DOC doc
By Michael Yokoyama. Usage information. => TEE.C.

CUG236.31-XC.C source
By William C. Colley, III, Phillip N. Hisley, W.H. Rauser. Cross
Reference Generator. => CUG126, CUG171. [CP/M, UNIX, MS-DOS: AZTEC,
ECO-C]

CUG236.32-XC2.C source
By William C. Colley, III, David N. Smith, Fred C. Smith, Phillip N.
Hisley. Cross referencer modified for Microsoft C v5.0. [MS-DOS: MSC]

CUG236.33-XC2.H header
By William C. Colley, Ill, Fred C. Smith. Cross reference header file.
[MS-DOS: MSC]

==============================================================================
CUG237 -
-----------

GRAD GRAPHICS
A shareware graphics library (object only) for PC clones which in
cludes functions for drawing dots,lines, circles, ellipses, arcs and
for filling regions, and displaying and printing characters. Support
CGA and HGA in both full and half mode. Up to nine virtual screens are
available. Supports Microsoft v4 (small model) and Turbo C compilers.
GRAD includes device drivers for a color graphics adapter, Epson
FX-80, Okidata ML192 and the JLASER laser interface. This disk holds
an extensive user's manual, the main library, one font file and
various header files. CUG238 cont [share2]

CUG237.01-AMBX7.FON data
By Conrad Kwok. Bold font file.

CUG237.02-GRADARC.H header
By Conrad Kwok. Header for ARC1 and EARC1. [MS-DOS: MSC 4.0, TC 1.0]

CUG237.03-GRADENV.H header
By Conrad Kwok. Header for using EnvSave and EnvRsto. [MS-DOS: MSC
4.0, TC 1.0]

CUG237.04-GRADFILE.DOC doc
By Conrad Kwok. Documentation for the GRAD files.

CUG237.05-GRADIO.H header
By Conrad Kwok. Header for WriteStr, ReadStr and Writec. [MS-DOS: MSC
4.0, TC 1.0]

CUG237.06-GRADUSER.DOC doc
By Conrad Kwok. GRAD graphics library user's manual. 186K.

CUG237.07-GRADVAR.H header
By Conrad Kwok. GRAD global variables. [MS-DOS: MSC 4.0, TC 1.0]

CUG237.08-INSTALL.DOC doc
By Conrad Kwok. Installation procedure and directions on using the
GRAD library.

CUG237.09-INTERP.C source
By Conrad Kwok. Interpret a GRAD command tile. This development tool
interprets graphics operations written in a C-like syntax as an
alternative to direct linkage. => GRADMC.GCM MPRINT.C. [MS-DOS: MSC
4.0, TC 1.0]

CUG237.10-JLASER.DOC doc
By Conrad Kwok. Documentation for JLASER card.

CUG237.11-MCALCADD.OBJ object
By Conrad Kwok. => CALCADDR.ASM. [MSDOS: MSC 4.0]

CUG237.12-MDISPFON.OBJ object
By Conrad Kwok. Display font object file. [MS-DOS:]

CUG237.13-MEXECFUN.OBJ object
By Conrad Kwok. GRAD library object file. => EXECFUNC.ASM. [MS-DOS:]

CUG237.14-MFTABLE.OBJ source
By Conrad Kwok. => FTABLE.C. [MS-DOS:]

CUG237.15-MGRADLIB.LIB library
By Conrad Kwok. GRAD graphics library for MSC v4. [MS-DOS:]

CUG237.16-MHCALCAD.OBJ object
By Conrad Kwok. => CALCADDR.ASM. [MSDOS:]

CUG237.17-MPFRAME.OBJ object
By Conrad Kwok. [MS-DOS:]

CUG237.18-MPLOTTYP.OBJ object
By Conrad Kwok. => PLOTTYPE.ASM. [MSDOS:]

CUG237.19-MPRTCNTL.OBJ object
By Conrad Kwok. [MS-DOS:]

CUG237.20-MPRTGC.OBJ object
By Conrad Kwok. => PRTGC.ASM. [MSDOS:]

CUG237.21-README. lST doc
By Conrad Kwok. Registration information, machine and compiler
requirements.

CUG237.22-README.DOC doc
By Conrad Kwok. GRAD description.

CUG237.23-TC-INST.DOC doc
By Conrad Kwok. Installation directions for Turbo C users.

CUG237.24-TC-USER.UPD doc
By Conrad Kwok. Turbo C users manual update

CUG237.25-TCALCADD.OBJ object
By Conrad Kwok. => CALCADDR.ASM. [MSDOS: TC]

CUG237.26-TEST.DOC doc
By Conrad Kwok. Documentation for running the test file.

CUG237.27-TFTABLE.OBJ object
By Conrad Kwok. => FTABLE.C. [MS-DOS: TC]

CUG237.28-TGRADLIB.LIB library
By Conrad Kwok. GRAD graphics library for Turbo C. [MS-DOS:]

CUG237.29-THCALCAD.OBJ object
By Conrad Kwok. => CALCADDR.ASM. [MSDOS:]

CUG237.30-THFTABLE.OBJ object
By Conrad Kwok. => FTABLE.C. [MS-DOS:]

CUG237.31-TPFRAME.OBJ object
By Conrad Kwok. [MS-DOS:]

CUG237.32-TPLOTTYP.OBJ object
By Conrad Kwok. 4 PLOTTYPE.ASM. [MSDOS:]

CUG237.33-TPRTCNTL OBJ object
By Conrad Kwok. [MS-DOS:]

CUG237.34-TPRTGC.OBJ object
By Conrad Kwok. => PRTGC.ASM. [MSDOS:]

CUG237.35-WARNING.CUG doc
By Conrad Kwok. Naming conventions.

==============================================================================
CUG238 -
-----------

GRAD GRAPHICS
A share ware graphics library (object only) for PC clones which in
cludes functions for drawing dots,lines, circles, ellipses, arcs and
for filling regions, and displaying and printing characters. Supports
Microsoft v4 (small model) and Turbo C compilers. GRAD includes device
drivers for a color graphics adapter (640 x 200), an extended graphics
adapter, Epson FX-80, Okidata ML192 and the JLASER laser interface.
This disk contains additional font files and the source code for
several demonstration programs which include utilities to print
documents sideways and to merge text and graphics. Source code for the
library routines (in C and assembly) is available from the author for
$60. [share2]

CUG238.01-AMBX7.FON data
By Conrad Kwok. Bold font.

CUG238.02-AMCSC10.FON data
By Conrad Kwok. Caps and small caps font.

CUG238.03-AMMI7.FON data
By Conrad Kwok. Mathematics and Italics font.

CUG238.04-AMR14.FON data
By Conrad Kwok. TeX font.

CUG238.05-AMR7.FON data
By Conrad Kwok. Roman.

CUG238.06-AMR7D.FON data
By Conrad Kwok. TeX font for sideway print

CUG238.07-AMSL8.FON data
By Conrad Kwok. Slant font.

CUG238.08-AMSY7.FON data
By Conrad Kwok. Slant font.

CUG238.09-AMTI7.FON data
By Conrad Kwok. Italics font.

CUG238.10-AMTT10.FON data
By Conrad Kwok. Teletype font.

CUG238.11-AMTT8.FON data
By Conrad Kwok. Teletype font.

CUG238.12-CALCADDR.ASM source
By Conrad Kwok. Hardware dependent graphic routines. IBM color
graphics card (640 x 400) mode and Hercules graphics 720 x 348) are
supported. [MS-DOS: MASM]

CUG238.13-COLOR.MAK make
By Conrad Kwok. Microsoft makefile for calcaddr, plottype, and ftable.
[MS-DOS: MSC]

CUG238.14-ERR.C source
By Conrad Kwok. Example of using error handling feature. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.15-EXECFUNC.ASM source
By Conrad Kwok. [MS-DOS: MASM]

CUG238.16-EXETIME.C source
By Conrad Kwok. Used for timing GRAD performance. [MS-DOS: MSC]

CUG238.17-EXETIME.MAK make
By Conrad Kwok. Make file for compiling EXETIME.C => EXETIME.C.
[MS-DOS:]

CUG238.18-FILE11MS.TXT doc
By Conrad Kwok. File by file description.

CUG238.19-FILEFON.TXT doc
By Conrad Kwok. Description of available fonts

CUG238.20-GRADARC.GCM data
By Conrad Kwok. Example command file for interp and mprint. [MS-DOS:]

CUG238.21-GRADARC.H header
By Conrad Kwok. Header for ARC1 and EARCL => CUG 237. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.22-GRADEPSN.C source
By Conrad Kwok. Printer control for Epson FX-80 printer. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.23-GRADEVN.H header
By Conrad Kwok. Header for using ENVSAVE and ENVRSTO. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.24-GRADIO.H header
By Conrad Kwok. Header for WriteStr, EnvSave and EnvTsto. [MS-DOS: MSC
4.0, TC 1.0]

CUG238.25-GRADOKI.C source
By Conrad Kwok. Okidata ML192 command file. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.26-GRADVAR.H header
By Conrad Kwok. Grad global variable. [MSDOS: MSC 4.0, TC 1.0]

CUG238.27-INIT.C source
By Conrad Kwok. Source for Grad initialization and cleanup functions.
[MS-DOS: MSC 4.0, TC 1.0]

CUG238.28-INTERP.C source
By Conrad Kwok. Interpret GRAD function calls in restricted syntax. =>
INTERP.EXE GRADARC.GCM. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.29-INTERP.EXE executable
By Conrad Kwok. => INTERP.C. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.30-INTERP.MAK make
By Conrad Kwok. Make file for compiling MPRINT.C. => INTERP.C.
[MS-DOS:]

CUG238.31-MFTABLE.C source
By Conrad Kwok. Font table definition. [MSDOS: MSC 4.0]

CUG238.32-MPRINT.C source
By Conrad Kwok. Interpret GRD functions and print graphics on the
printer. => MPRINT.EXE MPRINT.MAK MPRINT.GCM MPRT.TXT. [MS-DOS: TC
1.0]

CUG238.33-MPRINT.EXE executable
By Conrad Kwok. => MPRINT.C. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.34-MPRINT.MAK make
By Conrad Kwok. Make file for compiling MPRINT.C. => MPRINT.C.

CUG238.35-MPRT.GCM data
By Conrad Kwok. Example file for MPRINT.EXE. => MPRT.EXE.

CUG238.36-MPRT.TXT doc
By Conrad Kwok. Example file for MPRINT. => MPRINT.C.

CUG238.37-OE7.FON data
By Conrad Kwok. Old English font.

CUG238.38-OKI.MAK make
By Conrad Kwok. Make file for compiling GRADOKI.C.

CUG238.39-PLOTTYPE.ASM source
By Conrad Kwok. The lowest level routines in writing and accessing the
frame memory. [MS-DOS:]

CUG238.40-PRTGC.ASM source
By Conrad Kwok. Append a character to the buffer. [MS-DOS:]

CUG238.41-README.DOC doc
By Conrad Kwok. General description of GRAD system.

CUG238.42-ROTATE.C source
By Conrad Kwok. Rotate the characters in a font file by 90 degrees in
anti-clockwise direction. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.43-S16X16.FON data
By Conrad Kwok. Font file (16x16).

CUG238.44-S5X6.FON data
By Conrad Kwok. Font file (5x6).

CUG238.45-S6X8.FON data
By Conrad Kwok. Font file (6x8).

CUG238.46-S6X8D.FON data
By Conrad Kwok. Font file for swprt (6x8).

CUG238.47-S8X8.FON data
By Conrad Kwok. Font file (8x8).

CUG238.48-S9X14.FON data
By Conrad Kwok. Font file (9x14).

CUG238.49-SIZE.C source
By Conrad Kwok. Change font size. [MS DOS: MSC 4.0, TC 1.0]

CUG238.50-SPECIAL1.C source
By Conrad Kwok. Example of using SPACING_FUNC. [MS-DOS: MSC 4.0, TC
1.0]

CUG238.51-SWPRT.C source
By Conrad Kwok. Sideways printing program. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.52-SWPRT.EXE executable
By Conrad Kwok. => SWPRT.C. [MS-DOS: MSC 4.0, TC 1.0]

CUG238.53-TEX2GRAD.C source
By Conrad Kwok. Convert a TeX pixel file to a GRAD font file. [MS-DOS:
MSC 4.0, TC 1.0]

CUG238.54-TFTABLE.C source
By Conrad Kwok. Font table for Turbo C. [MS-DOS:]

CUG238.55-TIME.MAK make
By Conrad Kwok. Make file for TIME.C.

CUG238.56-WARNING.CUG doc
Naming conventions.

==============================================================================
CUG239 -
-----------

PC GAMMON For MSC4
An attractive backgammon game for PC clones contributed by David Oshel
(IA). The board Ts drawn with graphic characters and supports color.
This game (complete with sound effects) sports three styles of play
(not levels). It also allows real dice throws to be entered if you
like. Its subsystems may be interesting to those not necessarily
interested in backgammon. Includes a fast I/O library (which writes
directly to the screen memory) and a function which scrolls a file
through a screen window. See CUG240 for a Turbo C version. [public]

CUG239.01-BACKGMMN.DOC 6.0 doc
By David C. Oshel. Revision history, introduction to the game.

CUG239.02-BACKGMMN.EXE 6.0 executable
By David C. Oshel. => BACKGMMN.DOC. [MS-DOS: MSC]

CUG239.03-BACKGMMN.H 6.0 header
By David C. Oshel. Private declarations. => CIAO.H. [MS-DOS:]

CUG239.04-BACKGMMN.MAK 6.0 make
By David C. Oshel. Make file for compiling BACKGMMN.

CUG239.05-BG0.C 6.0 source
By David C. Oshel. Contains main() and global data. => BACKGMMN.H.
[MS-DOS: MSC]

CUG239.06-BG1.C 6.0 source
By David C. Oshel. Globals and utilities BACKGMMN.H. [MS-DOS:]

CUG239.07-BG2.C 6.0 source
By David C. Oshel. Board and dice manager. => BACKGAMMN.H. [MS-DOS:]

CUG239.08-BG3.C 6.0 source
By David C. Oshel. Gameplan and strategy manager. => BACKGMMN.H.
[MS-DOS:]

CUG239.09-CIAO.C 6.0 source
By David C. Oshel. Console 1/0 for IBM clone. These are fast
primitives to read and with to the IBM video RAM. Routines to position
the cursor, fill an area, scroll windows, and draw boxes. => CIAO.LIB.
[MSDOS:]

CUG239.10-CIAO.H 6.0 header
By David C. Oshel. Declaration for all global data and functions in
CIAO.LIB. => CIAO.C. [MS-DOS:]

CUG239.11-CIAO.LIB 6.0 library
By David C. Oshel. Library for console input and output. => CIAO.C.
[MS-DOS:]

CUG239.12-CIAO.XRF 6.0 data
By David C. Oshel. Cross reference of functions. => CIAO.C.

CUG239.13-CIAOLIB.MAK 6.0 make
By David C. Oshel. Make file for CIAO.LIB. => CIAO.LIB.

CUG239.14-CLAIROL.C 6.0 source
By David C. Oshel. Modify screen colors or monochrome attributes. =>
CIAO.LIB. [MSDOS: MSC]

CUG239.15-GETMS.C 6.0 source
By David C. Oshel. Simple setline function. CIAO.LIB. [MS-DOS:]

CUG239.16-KEYDEFS.C 6.0 source
By David C. Oshel. Displays a popout window with the ten function
keys. CIAO.LIB. [MS-DOS:]

CUG239.17-KEYIN.C 6.0 source
By David C. Oshel. Extended ASCII characters are returned. =>
CIAO.LIB. [MS-DOS:]

CUG239.18-MONEY.C 6.0 source
By David C. Oshel. Edit dollar & cents string. => CIAO.LlB. [MS-DOS:]

CUG239.19-NOOP.C 6.0 source
By David C. Oshel. Noop definitions for #defines in debugging test
files. => CIAO.LIB. [MS-DOS:]

CUG239.20-PC-GAMN6.DOC doc
PC-Gammon Version 6.0 w/ Color. By David C. Oshel. User's manual.

CUG239.21-README doc
By David C. Oshel. Author's message.

CUG239.22-SOUND.C 6.0 source
By David C. Oshel. Sound generation primitives. => CIAO.LIB. [MS-DOS:
MSC]

CUG239.23-TYPEAFIL.C 6.0 source
By David C. Oshel. Type a file with optional word wrap in a window
box. => CIAO.LIB. [MS-DOS:]

CUG239.24-WPRINTF.C 6.0 source
By David C. Oshel. Printf formatted string into a window. => CIAO.LIB.
[MS-DOS:]

CUG239.25-XEQ.C 6.0 source
By David C. Oshel. Run a file in a directory. => CIAO.LIB. [MS-DOS:]

==============================================================================
CUG240 -
-----------

PC GAMMON For TURBO
An attractive backgammon game for PC clones contributed by David Oshel
(IA). The board is drawn with graphic characters and supports color.
This game (complete with sound effects) sports three styles of play
(not levels). It also allows real dice throws to be entered if you
like. Its subsystems may be interesting to those not necessarily
interested in backgammon. Includes a fast I/O library (which writes
directly to the screen memory) and a function which scrolls a file
through a screen window. See CUG239 for a Microsoft C version-
[public]

CUG240.01-BACKGMMN.DOC 7.0 doc
By David C. Oshel. Revision history, introduction to the game.

CUG240.02-BACKGMMN.EXE 7.0 executable
By David C. Oshel. => BACKGMMN.DOC BGO.C. [MS-DOS: TC 1.0]

CUG240.03-BACKGMMN.H 7.0 header
By David C. Oshel. Global definitions. => CIAO.H. [MS-DOS:]

CUG240.04-BACKGMMN.PRJ 7.0 make
By David C. Oshel. Turbo project file. [MSDOS:]

CUG240.05-BG0.C 7.0 source
By David C. Oshel. Contains main() and globals. => BACKGMMN.H.
[MS-DOS:]

CUG240.06-BG1.C 7.0 source
By David C. Oshel. Globals and utilities. BACKGMMN.H. [MS-DOS:]

CUG240.07-BG2.C 7.0 source
By David C. Oshel. Board and dice manager. => BACKGMMN.H. [MS-DOS:]

CUG240.08-BG3.C 7.0 source
By David C. Oshel. Gameplan and strategy manager. => BACKGMMN.H.
[MS-DOS:]

CUG240.09-CIAO.C 7.0 source
By David C. Oshel. Console 1/0 for IBM clone. These are fast
primitives to read and write to the IBM video RAM. Routines to
position the cursor, fill an area, scroll windows, and draw boxes. =>
CLAO.H. [MSDOS:]

CUG240.10-CIAO.H 7.0 header
By David C. Oshel. Declaration for all global data & functions in
CIAO.LIB. CIAO.C. [MS-DOS:]

CUG240.11-CLAIROLC 7.0 source
By David C. Oshel. Modify screen colors or monochrome attributes. =>
CIAO.C. [MSDOS:]

CUG240.12-GETMS.C 7.0 source
By David C. Oshel. Simple getline function. => CIAO.C. [MS-DOS:]

CUG240.13-KEYIN.C 7.0 source
By David C. Oshel. Extended ASCII characters are returned. => CIAO.C.
[MS-DOS:]

CUG240.14-NOOP.C 7.0 source
By David C. Oshel. Noop definitions for # defines in debugging test
files. => CIAO.C. [MS-DOS:]

CUG240.15-PC-GAMN.DOC 7.0 doc
By David C. Oshel. User's manual. [MSDOS:]

CUG240.16-SOUND.C 7.0 source
By David C. Oshel. => CIAO.C. [MS-DOS:]

CUG240.17-TYPEAFIL.C 7.0 source
By David C. Oshel. Type a file with optional word wrap in a window
box. => CIAO.C. [MS-DOS:]

CUG240.18-WPRINTF.C 7.0 source
By David C. Oshel. Printf formatted string into a window. => CIAO.C.
[MS-DOS:]

==============================================================================
CUG241 -
-----------

INFERENCE ENGINE & RULE BASED COMPILER
By George Hageman. [share1] 1 disk. This backward chaining inference
engine allows rules to be written with variations of "and," "not," and
"if" keywords and allows rules to invoke separate user-supplied
programs. Unlike ART-CEE (CUG226), this is not a probabilistic system;
each relation must be either true or false. This shareware package
includes all the source code to recompile under Microsoft v3.0 or UNIX
System V. Packaged for CUG by Michael Yokoyama (HI).

CUG241.01-ANIMALS data
Knowledge base for the animal classification expert.

CUG241.02-DISKFILE.DOC doc
File by file description.

CUG241.03-EDIR.CS source
Simple weather predictor expert system. EDIR.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.04-EDIR.EXE executable
=> EDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.05-EXPERT.H header
Structures of the rulebase. => GETKEYWO.CR. [UNIX, MS-DOS: MSC3.0]

CUG241.06-GETKEYWO.CR source
Rule-based compiler source. [UNIX, MS-DOS: MSC3.0]

CUG241.07-GT_301.CS source
Storm prediction system source. => GT_301.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.08-GT_301.EXE executable
=> GT_301.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.09-GT_302.CS source
Storm prediction system. => GT_302.EXE, GT_301.CS. [UNIX, MS-DOS:
MSC3.0]

CUG241.10-GT_302.EXE executable
=> GT_302.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.11-INFER.H header
Define global variables used in the inference engine. [UNIX, MS-DOS:
MSC3.0]

CUG241.12-INFERENC.CI source
Inference engine main routine. => INFERENC.EXE, INFERENC.H. [UNIX,
MS-DOS: MSC3.0]

CUG241.13-INFERENC.DOC doc
Introduction to expert systems and user's guide.

CUG241.14-INFERENC.EXE executable
=> INFERENC.CI. [UNIX, MS-DOS: MSC3.0]

CUG241.15-INFERENC.H header
INFERENC.CI. [UNIX, MS-DOS: MSC3.0]

CUG241.16-INFERENC.STR doc
Inference engine program structure (pseudocode). => INFERENC.CI.

CUG241.17-KEYWORDS.H header
Keywords definition. [UNIX, MS-DOS: MSC3.0]

CUG241.18-LT_298.CS source
Storm prediction system source. => ROUTINE.H, WEATHER.H, LT_298.EXE.
[UNIX, MS-DOS: MSC3.0]

CUG241.19-LT_298.EXE executable
=> LT_298.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.20-LT_301.CS source
Storm prediction system source. => LT_301.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.21-LT_301.EXE executable
=> LT_301.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.22-MAKEFILE.II make
Makefile for inference engine. [UNIX, MS-DOS: MSC3.0]

CUG241.23-MAKEFILE.RR make
Makefile for rule-based compiler.

CUG241.24-MAKEFILE.SS make
Makefile for storm prediction system.

CUG241.25-MESSAGE1.CS source
Storm prediction system source. => MESSAGE1.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.26-MESSAGE1.EXE executable
=> MESSAGE1.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.27-NDIR.CS source
Storm prediction system source. => ROUTINE.H, WEATHER.H, NDIR.EXE.
[UNIX, MS-DOS: MSC3.0]

CUG241.28-NDIR.EXE executable
=> NDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.29-NEDIR.CS source
=> NEDIR.EXE, ROUTINE.H, WEATHER.H. [UNIX, MS-DOS: MSC3.0]

CUG241.30-NEDIR.EXE executable
=> NEDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.31-NWDIR.CS source
Storm prediction system source. NWDIR.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.32-NWDIR.EXE executable
=> NWDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.33-PUTSTRIN.CR source
Rule-based compiler source. [UNIX, MS-DOS: MSC3.0]

CUG241.34-REMANTE.CI source
Inference engine source. [UNIX, MS-DOS: MSC3.0]

CUG241.35-ROUTINE.H header
Include file for both rule-based compiler and inference engine. [UNIX,
MS-DOS: MSC3.0]

CUG241.36-ROUTINE.HS header
Storm prediction system source. [UNIX, MS-DOS: MSC3.0]

CUG241.37-RPD_FALL.CS source
Storm prediction system source. => RPD FALL.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.38-RPD_FALL.EXE executable
=> RPD_FALL.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.39-RPD_RISE.CS source
Storm prediction system source. => RPD_RISE.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.40-RPD_RISE.EXE executable
=> RPD_RISE.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.41-RULECOMP.CR source
Rule-based compiler source. => RULECOMP.EXE, RULECOMP.STR. [UNIX,
MS-DOS: MSC3.0]

CUG241.42-RULECOMP.EXE executable
=> RULECOMP.STR, RULECOMP.CR. [UNIX, MS-DOS: MSC3.0]

CUG241.43-RULECOMP.STR doc
Rule-based compiler, program structure pseudocode. => RULECOMP.EXE.
[UNIX, MS-DOS: MSC3.0]

CUG241.44-RUNROUTl.CI source
Inference engine source. => GETTRUTH.CI. [ UNIX, MS-DOS: MSC3.0]

CUG241.45-SDIR.CS source
Storm prediction system. => EDIR.CS, SDIR.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.46-SDIR.EXE executable
=> SDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.47-SEDIR.CS source
Storm prediction system source. => SEDIR.EXE, EDIR.CS. [UNIX, MS-DOS:
MSC3.0]

CUG241.48-SEDIR.EXE executable
=> SEDIR.CS, EDIR.CS. [ UNIX, MS-DOS: MSC3.0]

CUG241.49-SLO_FALL.CS source
Storm prediction system source. => SLO_FALL.EXE. [UNIX, MS-DOS:
MSC3.0]

CUG241.50-SLO_FALL.EXE executable
=> SLO_FALL.CS. [ UNIX, MS-DOS: MSC3.0]

CUG241.51-SLO_RISE.CS source
Storm prediction system source. => SLO_RISE.EXE, EDIR.CS. [UNIX,
MS-DOS: MSC3.0]

CUG241.52-SLO_RISE.EXE executable
=> SLO_RlSE.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.53-STEADY.CS source
Storm prediction system source. => STEADY.EXE. [UNIX, MS-DOS: MSC3.0]

CUG241.54-STEADY.EXE executable
=> STEADY.CS, EDIR.CS. [ UNIX, MS-DOS: MSC3.0]

CUG241.55-SWDIR.CS source
Storm prediction system source. => SWDIR.EXE, EDIR.CS. [UNIX, MS-DOS:
MSC3.0]

CUG241.56-SWDIR.EXE executable
=> SWDIR.CS. [ UNIX, MS-DOS: MSC3.0]

CUG241.57-VERIFY.CI source
Inference engine source. => VERIFYTR.CI, GETTRUTH.CI. [UNIX, MS-DOS:
MSC3.0]

CUG241.58-VERIFYTR.CI source
Inference engine source. => VERIFY.CI, GETTRUTH.CI. [UNIX, MS-DOS:
MSC3.0]

CUG241.59-WDIR.CS source
Storm prediction system source. => WDIR.EXE, EDIR.CS. [UNIX, MS-DOS:
MSC3.0p]

CUG241.60-WDIR.EXE executable
=> WDIR.CSHUNIX, MS-DOS: MSC3.0]

CUG241.61-WEATH ER data
Weather predictor. => WEATHER.HS. [ UNIX, MS-DOS: MSC3.0]

CUG241.62-WEATHER.HS header
Storm prediction system source. => EDIR.CS. [UNIX, MS-DOS: MSC3.0]

CUG241.63-WEKNOW.CI source
Inference engine source. [UNIX, MS-DOS: MSC3.0]

==============================================================================
CUG242 -
-----------

STILL MORE CROSS ASSEMBLERS
A version of William Colley III's (OH) cross assembler that generates
code for the Intel 8051 and the 68HC11. Portably coded, these
assemblers will compile correctly under a variety of UNIX, MSDOS, and
CP/M compilers. [public]

CUG242.01-8052BITS.LIB 0.1 Library
By William C. Colley III. Defines names for the additional special
function registers (SFRs) of the Intel 8052.

CUG242.02-A51.C 0.1 source
By William C. Colley III. Assembles code for the Intel 8051
microprocessor. => A51.DOC. [CP/M, MS-DOS, UNIX:]

CUG242.03-A51.DOC 0.1 doc
By William C. Colley III. User manual. => A51.C.

CUG242.04-A51.H 0.1 header
By William C. Colley III. Contains compile, assemble, and link
instructions. => A51.C. [CP/M, MS-DOS, UNIX]

CUG242.05-A51EVALC 0.1 source
By William C. Colley III. Assembler's expression evaluator and lexical
analyzer. => A51.C. [CP/M, MS-DOS, UNIX:]

CUG242.06-A51UTIL.C 0.1 source
By William C. Colley III. Contains the symbol table, table searching
functions, file output and error flagging. => A51.C. [CP/M, MS-DOS,
UNIX:]

CUG242.07-A611.C 0.0 source
By William C. Colley III. Assembles code for the Motorola 68HC11
microprocessor. AB11.DOC. [CP/M, MS-DOS, UNIX:]

CUG242.08-A611.DOC 0.0 doc
By William C. Colley III. User's manual. => A611.C.

CUG242.09-A611.H header
By Wlliam C. Colley III. Contains compile, assemble, and link
instructions. => A611.C. [CP/M, MS-DOS, UNIX:]

CUG242.10-A611EVAL.C 0.0 source
By Wlliam C. Colley III. Contains the assembler's expression evaluator
and lexical analyzer. => A611.C. [CP/M, MS-DOS, UNIX:]

CUG242.11-A611UTIL.C 0.0 source
By Wlliam C. Colley III. Contains symbol table building and searching,
file output, and error flagging. => A611C. [CP/M, MSDOS, UNIX:]

CUG242.12-A63.C 0.0 source
By William C. Colley III. Assembles code for the Hitachi HD6301 family
microprocessor. => A63.DOC. [CP/M, MS-DOS, UNIX:]

CUG242.13-A63.DOC doc
By William C. Colley III. User's manual. => A63.C.

CUG242.14-A63.H 0.0 header
By Wlliam C. Colley III. Contains compile, assemble, and link
instructions. => A63.C. [CP/M, MS-DOS, UNIX:]

CUG242.15-A63EVAL.C O.O source
By Wlliam C. Colley III. Contains the assembler's expression evaluator
and lexical analyzer. => A63.C. [CP/M, MS-DOS, UNIX:]

CUG242.16-A63UTILC 0.0 source
By William C. Colley III. Contains the symbol table building and
searching, file output routines, error flagging. => A63.C. [CP/M,
MS-DOS, UNIX:]

CUG242.17-READ.ME3 doc
By William C. Colley III. The disk contents.

CUG242.18-TEST51.ASM source
By William C. Colley III. The entire instruction set of the 8051
processor to use in testing the 8051 cross-assembler. => A51.C.

CUG242.19-TEST611.ASM 0.0 source
By William C. Colley III. The entire instruction set of the 68HC11 CPU
to use in testing the 68HC11 cross-assembler. => A611.C.

CUG242.20-TEST63.ASM source
By Willaim C. Colley III. The entire instruction set of the 63701 CPU
to use in testing the 63701 cross-assembler. => A63.C.

==============================================================================
CUG243 -
-----------

DECUS C PREPROCESSORS
A complete C pre-processor that implements some ANSI-like features.
Based on a DECUS release, this port compiles under Microsoft v3.0 and
Lattice v2.0. This implementation supports #elif constructs,
hexadecimal constants, #if defined, #if size of, unsigned ints and
longs, long double, and token concatenation among other more common
features. Compiles under four different Lattice memory models and two
Microsoft memory models. Originally released to DECUS by Martin Minow
and adapted to MS-DOS by Ted Lemon and Jym Dyer. Packaged for CUG by
Michael Yokoyama (HI). [public]

CUG243.01-CCP. 1 doc
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Documentation for CCP.
=> CCP1.C. [MS-DOS:]

CUG243.02-CCP.EXE executable
Decus C Preprocessor. By Ted Lemon, Jym Dyer, Martin Minow. => CCP.1.
[MS-DOS: MSC3.0, LC2.0]

CUG243.03-CCP.H header
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Internal definitions. =>
CCP1.C. [MSDOS: MSC3.0, LC2.0]

CUG243.04-CCP1.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. C Preprocessor
implemented by Martin Minow - main program. => CPP.1. [MSDOS: MSC3.0.
LC2.0]

CUG243.05-CCP3.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. File open and command
line options. => CCP1.C. [MS-DOS: MSC3.0, LC2.0]

CUG243.06-CCP4.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Macro definitions. =>
CCP1.C. [MSDOS: MSC3.0, LC2.0]

CUG243.07-CCP5.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Expression evaluation.
=> CCP1.C. [MS-DOS: MSC3.0, LC2.0

CUG243.08-CCP6.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Support routine. =>
CCP1.C. [MSDOS: MSC3.0. LC2.0]

CUG243.09-CPP.LNK source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. tinker file. => CCP1.C.

CUG243.10-CPP1.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. # control line
processor. => CPP1.C. [MS-DOS: MSC3.0, LC2.0]

CUG243.11-CPPDEF.H header
Decus C Preprocessor. By Ted Lemon, Jym Dyer. System dependent
definitions. => CCP.1. [MS-DOS: MSC3.0, LC2.0]

CUG243.12-DISK.DOC doc
By Michael Yokoyama. Disk contents.

CUG243.13-FLOATCPP.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Expression evaluator. =>
CCP1.C. [MS-DOS: MSC3.0, LC2.0]

CUG243.14-MAKEFILE make
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Compiler makefile. =>
CPP.1.

CUG243.15-READ.ME doc
By Ted Lemon, Jym Dyer. MS-DOS specific implementation information for
Decus C Preprocessor.

CUG243.16-TEST.C source
Decus C Preprocessor. By Ted Lemon, Jym Dyer. Memory model and MS-DOS
test file for C Preprocessor. => CPP.1. [MS-DOS: MSC3.0, LC2.0]

==============================================================================
CUG244 -
-----------

deBRUIN
All programs relate to cellular automata and were contributed by
Harold V. McIntosh and Gerardo Cisneros, Mexico. This disk contains
materials illustrating the concepts presented in the article "Abstract
Mathematical Art" by Kenneth E. Perry (Byte, Dec. 1986). The automata
programs were developed with Wizard C under MSDOS 2.11. This disk is
an analytic tool and has no special display requirements. Disk
contains both source and executable. [public]

CUG244.01-FOUR31.C source
By Harold V. McIntosh. Analyze the de Brujn diagram of a cellular
automaton and report all the periodic states. Version for totalistic
(3.1), fourth generation. [MS-DOS: wizard C]

CUG244.02-FOUR31.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.03-ONE31.C source
By Harold V. McIntosh. States with period 1 and displacements
zero(1.0) or one (1.1) are analyzed for a four-state, nearest neigh
bor (3.1) automaton. [MS-DOS: Wizard C]

CUG244.04-ONE31.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.05-ONE32.C source
By Harold V. McIntosh. Version for totalistic (3.2), first generation.
[MS-DOS: Wizard C]

CUG244.06-ONE32.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.07-ONE41.C source
By Harold V. McIntosh. States with period 1 and displacements zero
(1.0) or one (1.1) are analyzed for a four-stab, nearest neighbor
(4.1) automaton. [MS-DOS: wizard C]

CUG244.08-ONE41.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.09-ONE42.C source
By Harold V. McIntosh. Version for totalistic (4.2), first generation.
[MS-DOS: Wzard C]

CUG244.10-ONE42.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.11-THREE31.C source
By Harold V. McIntosh. Version for totalistic (3.1), third generation.
[MS-DOS: Weard C]

CUG244.12-THREE31.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.13-THREE41.C source
By Harold V. McIntosh. Version for totalistic (4.1), third generation.
[MS-DOS: Wzard C]

CUG244.14-THREE41.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.15-TWO31.C source
By Harold V. McIntosh. Version for totalistic (3.1), second
generation. [MS-DOS: Wizard C]

CUG244.16-TWO31.EXE executable
By Harold V. McIntosh. [MS-DOS:]

CUG244.17-TWO41.C source
By Harold V. McIntosh. Version for totalistic (4.1), second
generation. [MS-DOS: Wzard C]

CUG244.18-TWO41.EXE executable
By Harold V. McIntosh. [MS-DOS:]

==============================================================================
CUG245 -
-----------

LINEAR CELLULAR AUTOMATA
All programs relate to cellular automata and were contributed by
Harold V. McIntosh and Gerardo Cisneros, Mexico. This disk contains
materials illustrating the concepts presented in the article "Abstract
Mathematical Art" by Kenneth E. Perry (Byte, Dec. 1986). The automata
programs were developed with Wizard C under MSDOS 2.11. This disk
displays evolving automata and requires a PC-type color graphics
adapter. Contains both source and executable. [public]

CUG245.01-LCA.DOC doc
By Harold V. McIntosh. Historical view of cellular automaton and
program descriptions.

CUG245.02-LCA21.C source
By Harold V. McIntosh, Gerardo Cisneros. (2,1) linear cellular
automaton. => LCA21.EXE. [MS-DOS: WIZMD]

CUG245.03-LCA21.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. => LCA21.C. [MS-DOS:]

CUG245.04-LCA22.C source
(2,2) Linear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA22.EXE. [MS-DOS:]

CUG245.05-LCA22.EXE executable
By Harold V. McIntosh. => LCA22.C. [MSDOS:]

CUG245.06-LCA23.C source
(2,3) Linear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA23.EXE. [MS-DOS:]

CUG245.07-LCA23.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. => LCA23.C. [MS-DOS:]

CUG245.08-LCA31.C source
(3,1) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA31.EXE. [MS-DOS:]

CUG245.09-LCA32.C source
(3,2) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA32.EXE. [MS-DOS:]

CUG245.10-LCA32.EXE executable
By Harold V. McIntosh, Gerardo Cisneros, Harold V. McIntosh, Gerardo
Cisneros. => LCA31.C LCA32.C. [MS-DOS, MS-DOS:]

CUG245.11-LCA33.C source
(3,3) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA33.EXE. [MS-DOS:]

CUG245.12-LCA33.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. LCA33.C. [MS-DOS:]

CUG245.13-LCA41.C source
(4,1) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA41.EXE. [MS-DOS:]

CUG245.14-LCA41.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. LCA41.C. [MS-DOS:]

CUG245.15-LCA42.C source
(4,2) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. LCA42.EXE. [MS-DOS:]

CUG245.16-LCA42.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. => LCM2.C. [MS-DOS:]

CUG245.17-LCA43.C source
(4,3) Unear Cellular Automatron. By Harold V. McIntosh, Gerardo
Cisneros. => LCA43.EXE. [MS-DOS:]

CUG245.18-LCA43.EXE executable
By Harold V. McIntosh, Gerardo Cisneros. => LCA43.C. [MS-DOS: WIZARD]

==============================================================================
CUG246 -
-----------

CYCLES MANDELBROT GRAPHICS
Contributed by Harold V. McIntosh and Gerardo Cisneros, Mexico. The
majority of this volume are materials illustrating the concepts
presented in the article "Abstract Mathmatical Art" by Kenneth E.
Perry (Byte, Dec. 1986). The automata programs were developed with
Wizard C under MSDOS 2.11. This volume is an analytical tool and no
special display requirements. This volume also contains a program by
E.H. Ramm which plots portions of the Mandelbrot set. Contains both
source and executable. [public]

CUG246.01-CYCLE21.C source
By Harold V. McIntosh. Analyze the cycles of a cellular automaton and
report all the periodic states. Periods of (2, 1) rings. CYCLE21.EXE.
[MS-DOS: WIZMD]

CUG246.02-CYCLE21.EXE executable
By Harold V. McIntosh. => CYCLE21.C. [MSDOS:]

CUG246.03-CYCLE22.C source
By Harold V. McIntosh. Periods of (2,2) rings. => CYCLE22.EXE.
[MS-DOS:]

CUG246.04-CYCLE22.EXE executable
By Harold V. McIntosh. => CYCLE22.C. [MSDOS:]

CUG246.05-CYCLE23.C source
By Harold V. McIntosh. Periods of (2,3) rings. => CYCLE23. EXE.
[MS-DOS:]

CUG246.06-CYCLE23.EXE executable
By Harold V. McIntosh. => CYCLE23.C. [MSDOS:]

CUG246.07-CYCLE31.C source
By Harold Y. McIntosh. Periods of (3,1) rings. => CYCLE31.EXE.
[MS-DOS:]

CUG246.08-CYCLE31.EXE executable
By Harold V. McIntosh. => CYCLE31.C. [MSDOS:]

CUG246.09-CYCLE32.C source
By Harold V. McIntosh. Periods of (3,2) rings. => CYCLE32.EXE.
[MS-DOS:]

CUG246.10-CYCLE32.EXE executable
By Harold V. McIntosh. => CYCLE32.C. [MS DOS:]

CUG246.11-CYCLE41.C source
By Harold V. McIntosh. Periods of (4,1) rings. => CYCLE41.EXE.
[MSDOS:]

CUG246.12-CYCLE41.EXE executable
By Harold V. McIntosh. => CYCLE41.C. [MSDOS:]

CUG246.13-CYCLE42.C source
By Harold V. McIntosh. Periods of (4,2) rings. => CYCLE42.EXE.
[MS-DOS:]

CUG246.14-CYCLE42.EXE executable
By Harold V. McIntosh. => CYCLE42.C. [MSDOS:]

CUG246.15-GRAPHDRI.S source
By E.H. Ramm. Graphic support routine. [MS-DOS: Assembly]

CUG246.16-MANDEL.C source
Mandelbrot Set Plotter. By E.H. Ramm. Plots images from the Mandelbrot
set, on an Epson MX 80 printer. [CP/M-68K: DRI, (Alcyon)]

CUG246.17-PLOTTF.C source
By E.H. Ramm. Test file for graphics function. => GRAPHDRI.S.
[CP/M-68K: DRIC]

==============================================================================
CUG247 -
-----------

MIRACL A Multi-precision Integer and Rational Arithmetic C Library
released as shareware by Michael Scott of Ireland. Includes complete
source
code for the library and several example programs. Known to compile
under MS-DOS with Aztec v3.4, Microsoft v3.0, Mark Williams v2.0,
Turbo v1.0 and Zorland v1.1. [share1 ]

CUG247.01-AZDOIT.BAT 1.32 batch
By Michael Scott. Creates the MIRACLLIB from its components. =>
BNCORE.C. [MS DOS:]

CUG247.02-BNARTH0.C 1.32 source
By Michael Scott. Add and subtract routines => MIRACL.H BNCORE.C. [MS
DOS: MSC 3.0, TC 1.0, MWC]

CUG247.03-BNARTH1.C 1.32 source
By Michael Scott. Multiplying and dividing BIG NUMBERS by integer
numbers. => MIRACL.H BNCORE.C. [MS-DOS:]

CUG247.04-BNARTH2.C 1.32 source
By Michael Scott. Multiplying and dividing BIG NUMBERS. => BNCORE.C.
[MS-DOS:]

CUG247.05-BNARTH3.C 1.32 source
By Michael Scott. Powers and roots function. => BNCORE.C. [MS-DOS:]

CUG247.06-BNBUILD.C 1.32 source
By Michael Scott. 'Rash' number builder. Uses generator of regular
continued fraction expansion to create a flash number, rounded if
necessary. => BNCORE.C. [MS DOS:]

CUG247.07-BNCORE.C 1.32 source
By Michael Scott. Core module - contains initialization code and
general purpose utilities. [MS-DOS:]

CUG247.08-BNDOUBLE.C 1.32 source
By Michael Scott. Double to flash conversion routines. => BNCORE.C.
[MS-DOS:]

CUG247.09-BNFLASH.C 1.32 source
By Michael Scott. Floating-slash arithmetic. => BNCORE.C. [MSDOS:]

CUG247.10-BNFLASH1.C 1.32 source
By Michael Scott. Rash roots and power functions. => BNCORE.C.
[MS-DOS:]

CUG247.11-BNFLASH2.C 1.32 source
By Michael Scott. Flash exponential and logs.=> BNCORE.C. [MS-DOS:]

CUG247.12-BNFLASH3.C 1.32 source
By Michael Scott. Trig functions. => BNCORE.C. [MS-DOS:]

CUG247.13-BNFLASH4.C 1.32 source
By Michael Scott. Flash hyperbolic trig. => BNCORE.C. [MS-DOS:]

CUG247.14-BNGCD.C 1.32 source
By Michael Scott. Greatest common divisor module. => BNCORE.C.
[MS-DOS:]

CUG247.15-BNIOl.C 1.32 source
By Michael Scott. I/O routines 1. BNCORE.C. [MS-DOS:]

CUG247.16-BNI02.C 1.32 source
By Michael Scott. I/O routines 2. => BNCORE.C. [MS-DOS:]

CUG247.17-BNMULDV.ANY 1.32 source
By Michael Scott. Routine muldiv calculates (a*b+c)/m and (a*b+c)%m as
quickly as possible. => BNCORE.C. [MS-DOS:]

CUG247.18-BNMULDV.C 1.32 source
By Michael Scott. Turbo C muldiv function using in line assembly
functions. BNCORE.C. [MS-DOS:]

CUG247.19-BNPI.C 1.32 source
By Michael Scott. Calculate pi by GaussLegendre method. => BNCORE.C.
[MSDOS:]

CUG247.20-BNPRIME.C 1.32 source
By Michael Scott. Test for and generate prime numbers. => BNCORE.C.
[MS-DOS:]

CUG247.21-BNRAND.C 1.32 source
By Michael Scott. Random number routine. => BNCORE.C. [MS-DOS:]

CUG247.22-BNROUND.C 1.32 source
By Michael Scott. Euclidean mediant rounding routine. => BNCORE.C.
[MS-DOS:]

CUG247.23-BNXGCD.C 1.32 source
By Michael Scott. Extended greatest common divisor module. =>
BNCORE.C. [MSDOS:]

CUG247.24-BRENT.C 1.32 source
By Michael Scott. Example program to factor big numbers using
Brent-Pollard method. => BNCORE.C. [MS-DOS:]

CUG247.25-BRUTE.C 1.32 source
By Michael Scott. Example program to factor numbers using brute force.
=> BNCORE.C. [MS-DOS:]

CUG247.26-BUGS.DOC 1.32 doc
By Michael Scott.

CUG247.27-CALC.C 1.32 source
By Michael Scott. Miracl - rational calculator. => CALC.EXE BNCORE.C.
[MSDOS:]

CUG247.28-CALC.EXE 1.32 executable
By Michael Scott. => CALC.C. [MS-DOS:]

CUG247.29-CRACKER.C 1.32 source
By Michael Scott. Factor big numbers using Brillhart-Morrison method
with Pomerance/Wagestaff early abort technique. => BNCORE.C. [MS-DOS:]

CUG247.30-DECIPH.C 1.32 source
By Michael Scott. Decipher messages using Okamoto private key. =>
ENCIPH.C BNCORE.C. [MS-DOS:]

CUG247.31-DECODE.C 1.32 source
By Michael Scott. Decode a message using RSA private key. => ENCODE.C
BNCORE.C. [MS-DOS:]

CUG247.32-ENCIPH.C 1.32 source
By Michael Scott. Encipher text using OKAMOTO public key. => BNCORE.C.
[MSDOS:]

CUG247.33-ENCODE.C 1.32 source
By Michael Scott. Encode using RSA public key. => BNCORE.C. [MS-DOS:]

CUG247.34-FACT.C 1.32 source
By Michael Scott. Example program to calculate factorials. =>
BNCORE.C. [MS-DOS:]

CUG247.35-HAILC 1.32 source
By Michael Scott. Program to investigate hailstone numbers =>
BNCORE.C. [MSDOS:]

CUG247.36-HILBERT.C 1.32 source
By Michael Scott. Solve set of linear equations involving a Hilbert
matrix. => BNCORE.C. [MS-DOS:]

CUG247.37-MANUAL1.DOC 1.32 doc
By Michael Scott. User's Guide. => MANUAL2.DOC.

CUG247.38-MANUAL2.DOC 1.32 doc
By Michael Scott. Function descriptions.

CUG247.39-MERSENNE.C 1.32 source
By Michael Scott. Calculate mersenne primes using Lucas-Lehmer test.
=> BNCORE.C. [MS-DOS:]

CUG247.40-MIRACL.H 1.32 header
By Michael Scott. Main header file. => MIRACL.HXX BNCORE.C. [MS-DOS:]

CUG247.41-MIRACLHXX 1.32 header
By Michael Scott. Main header file if using ANSI enhanced type C
compiler. => MIRACL.H BNCORE.C. [MS-DOS:]

CUG247.42-MIRDEFF.H 1.32 header
By Michael Scott. MIRACL definitions. => BNCORE.C. [MS-DOS:]

CUG247.43-MSDOIT.BAT 1.32 batch
By Michael Scott. Creates MIRACL.LIB from component parts, using
Microsoft C compiler v3.00+. => BNCORE.C. [MS-DOS:]

CUG247.44-MWDOIT.BAT 1.32 batch
By Michael Scott. Creates MIRACL.LIB from its component parts, using
Mark Williams C compiler v2.00. [MS-DOS:]

CUG247.45-OKOKEY.C 1.32 source
By Michael Scott. Generates Okamoto keys. => BNCORE.C. [MS-DOS:]

CUG247.46-PALIN.C 1.32 source
By Michael Scott. Investigates palindromic reversals. => BNCORE.C.
[MS-DOS:]

CUG247.47-PI.C 1.32 source
By Michael Scott. Calculate pi. => BNCORE.C. [MS-DOS:]

CUG247.48-PRIVATE.KEY 1.32 source
By Michael Scott. [MS-DOS:]

CUG247.49-PUBLIC.KEY 1.32 source
By Michael Scott. [MS-DOS:]

CUG247.50-README.DOC doc
By Michael Scott. Overview of MIRACL.

CUG247.51-ROOTS.C 1.32 source
By Michael Scott. Program to calculate roots. => BNCORE.C. [MS-DOS:]

CUG247.52-RSAKEY.C 1.32 source
By Michael Scott. Program to generate RSA keys. => BNCORE.C. [MS-DOS:]

CUG247.53-SAMPLE.C 1.32 source
By Michael Scott. Example program. => BNCORE.C. [MS-DOS:]

CUG247.54-SHARE.DOC 1.32 doc
By Michael Scott. Share ware statement for end-users.

CUG247.55-START.DOC 1.32 doc
By Michael Scott. Introduction to MIRACL. => SHARE.DOC MANUAL1.DOC.

CUG247.56-TCDOIT.BAT 1.32 batch
By Michael Scott. Creates MIRACL.LIB using Turbo C v1.0 [MS-DOS:]

CUG247.57-UPDATE.DOC doc
By Michael Scott. Revision history.

CUG247.58-ZRDOIT.BAT 1.32 batch
By Michael Scott. Creates MIRACL.LIB using Zorland v1.1. [MS-DOS:
ZORLAND 1.]

==============================================================================
CUG248 -
-----------

MlCROSPELL
By Daniel M. Lawrence. [restricted] 1 disk. This stand-alone spelling
checker features a 1000 word common word list and 43,000 word main
dictionary. Includes an executable module for MSDOS and source code
which can be recompiled to run on the AMIGA 1000, Atari ST, several
different flavors of UNIX and the IBM 370 series under CMS. MicroSPELL
is known to compile with MWC86, Lattice, Aztec, Microsoft and Turbo
running under MSDOS. MicroEMACS 3.9 (CUG197 & CUG 198) can be used
with MicroSPELL to create a system which scans through a file,
displaying each questionable word as part of an edit screen.

CUG248.01-CDICT.C source
Dictionary compression utility. => CDICT.EXE. [UNIX, MS-DOS: AZTEC,
TC, MSC, LC, MWC]

CUG248.02-CDICT.EXE executable
=> CDICT.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.03-CHECK.C source
Check source words against dictionary. => MAIN.C. [UNIX, MS-DOS:
AZTEC, TC, MSC, LC, MWC]

CUG248.04-COMMON.C source
Most common word list routine. => MAIN.C, COMMON.TXT. [UNIX, MS-DOS:
AZTEC, TC, MSC, LC, MWC]

CUG248.05-CoMMoN.TXT doc
Listing of common words. => CoMMoN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.06-DDEF.H header
Global variable definitions. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.07-DICT.DCT data
Compressed main dictionary. => MAIN.C.

CUG248.08-DMERGE.C source
Dictionary merge utility. => DMERGE.EXE. [UNIX, MS-DOS: AZTEC, TC,
MSC, LC, MWC]

CUG248.09-DMERGE.EXE executable
=> DMERGE.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.10-DOPT.H header
Compile options settings. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.11-DPATH.H header
Path list to find dictionary files. => MAIN.C. [UNIX, MS-DOS: AZTEC,
TC, MSC, LC, MWC]

CUG248.12-DSFX.H header
Suffix list. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.13-DSTRUCT.H header
Structure declarations. => MAIN.H. [UNIX, MS-DOS: AZTEC, TC, MSC, LC,
MWC]

CUG248.14-FILE.C source
File I/O => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.15-IBMPC.C source
Prototype screen driver. => MAIN.C. IMS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.16-MAIN.C source
A stand alone spelling checker with 1000 word common usage list (for
speed) and 43,000 word main dictionary. Spell has. => MICRO EMACS.
[UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.17-MDICT.C source
Main dictionary functions. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.18-QUICK.C source
Quick sort function. => MICRO EMACS. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.19-README doc
Support information, program description, installation requirements
and file descriptions.

CUG248.20-SCAN.CMD data
MicroEmacs 3.9 command file used to scan spelled documents. => MICRO
EMACS. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.21-SOURCE.C source
Source file parsing routine. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC,
LC, MWC]

CUG248.22-SPELL.EXE executable
=> MAIN.C. [UNIX, MS-DOS: AZTEC, TC, MSC, LC, MWC]

CUG248.23-SPELL.LST doc
=> MAIN.C, SPELL.EXE.

CUG248.24-SPELL.MSS doc
Preliminary documentation in Micro-SCRlBE form.

CUG248.25-SPELL.TXT doc
Preliminary documentation in standard text form.

CUG248.26-USER.C source
User word list file functions. => MAIN.C. [UNIX, MS-DOS: AZTEC, TC,
MSC, LC, MWC]

==============================================================================
CUG249 -
-----------

C SPOT RUN (CSR) LIBRARY
An add-on library by Bob Pritchett (NJ), Philip Mongelluzzo (CT), and
George Roukas including more than 200 functions for PC-clones. This
shareware package includes functions to perform text windowing, cursor
control, printer output, time and date manipulation, video output,
simple graphics, advanced field and free-form data input, sound,
MS-DOS and BIOS access, and menu support. Includes only object modules
for Microsoft and Turbo C compilers. Source code is available from the
authors for $50. [share2]

CUG249.01-CCDEMOMS.BAT batch
By Bob Pritchett. Compile and link demo for Microsoft C. [MS-DOS: MSC]

CUG249.02-CCDEMOTC.BAT batch
By Bob Pritchett. Compile and link demo under Turbo C v1.0 [MS-DOS: TC
1.0]

CUG249.03-CHECKC.EXE 2.1 executable
By Bob Pritchett. A small C code checker [MS-DOS: MSC, DLC]

CUG249.04-COLOR.H 2.1 header
By Bob Pritchett. Color related manifests. [MS-DOS: MSC, DLC, TC]

CUG249.05-CSR201.NWS 2.1 doc
By Bob Pritchett. Volume 2 of newsletter.

CUG249.06-CSRDEMO.C 2.1 source
By Bob Pritchett. Demo program => CSRDEMO.EXE. [MS-DOS: MSC, DLC, TC
1.0]

CUG249.07-CSRDEMO.EXE 2.1 executable
By Bob Pritchett. => CSRDEMO.C. [MSDOS:]

CUG249.08-CSRDEMO.PRJ 2.1 make
By Bob Pritchett. Project file to make CSR in Turbo C. => CSRDEMO.C.
[MS-DOS: TC 1.0]

CUG249.09-CSRDOS.H 2.1 header
By Bob Pritchett. Include file for directory searching. [MS-DOS: MSC,
DLC, TC]

CUG249.10-CSRMENU.H 2.1 header
By Bob Pritchett. Include file for menu routines. [MS-DOS: MSC, DLC,
TC]

CUG249.11-CSRMISC.H 2.1 header
By Bob Pritchett. Assorted definitions for CSR. [MS-DOS: MSC, DLC, TC]

CUG249.12-CSRMODES.H 2.1 header
By Bob Pritchett. Include file with set mode() options. [MS-DOS: MSC,
DLC, TC]

CUG249.13-CSRMSC.LIB 2.1 library
By Bob Pritchett. Link able version of the library for Microsoft.
[MS-DOS: MSC] TSCSR.LIB

CUG249.14-CSRSHELL.ASM 2.1 source
By Bob Pritchett. Skeletal assembly language interface to Microsoft C.
[MS-DOS: MASM]

CUG249.15-CSRSOUND.H header
By Bob Pritchett. Some musical note values and declarations. [MS-DOS:
MSC, DLC, TC]

CUG249.16-CSRTIME.H 2.1 header
By Bob Pritchett. Text arrays for week and names. [MS-DOS: MSC, DLC,
TC]

CUG249.17-CSRUPDT.DOC 2.1 doc
By Bob Pritchett. Update information. => CSRWHOLE.DOC.

CUG249.18-CSRWHOLE.DOC doc
By Bob Pritchett. Complete documentation.

CUG249.19-ERRORS.H 2.1 header
By Bob Pritchett. Text for critical MS-DOS errors. [MS-DOS: MSC, DLC,
TC]

CUG249.20-FLINE.EXE 2.1 executable
By Bob Pritchett. Program to print out lines in a source file.
[MS-DOS: MSC, DLC]

CUG249.21-README.C source
By Bob Pritchett. Program to allow quick and easy viewing of a
README.DAT text file. => README.EXE README.DAT. [MSDOS: MSC]

CUG249.22-README.DAT data
By Bob Pritchett. Program description and author's comments. =>
README.C. [MSDOS:]

CUG249.23-README.EXE executable
By Bob Pritchett. => README.C. [MS-DOS: MSC]

CUG249.24-SKEY.H 2.1 header
By Bob Pritchett. Special extended key functions. [MS-DOS: DLC, TC]

CUG249.25-TIMERS.C source
By Bob Pritchett, D. Perras. Code for timing functions. [MS-DOS: MSC,
DLC]

CUG249.26-TSCSR.LIB library
By Bob Pritchett. Linkable version of the library for Turbo C.
[MS-DOS: TC]

==============================================================================
CUG250 -
-----------

68K FP LIBRARY & MANDELBROT GRAPHICS
By Edmund Ramm. [public] 1 disk. Contributed by Edmund Ramm, West
Germany, this volume for MC68020 machines running CP/M 68K replaces
floating point modules in Dri-C with modules which take advantage of
an MC68881 chip. Ramm has also provided a fractals program which
generates Mandelbrot graphics.

CUG250.01-ACOS.O object
[CP/M-68K]

CUG250.02-ACOS.S source
IEEE format single precision arc cosine function. [CP/M-68K] assembly
source.

CUG250.03-ASIN.O object
[CP/M-68K]

CUG250.04-ASIN.S source
IEEE format single precision arc tangent function. [CP/M-68K] assembly
source.

CUG250.05-ATAN.O object
[CP/M-68K]

CUG250.06-ATAN.S source
[CP/M-68K] assembly source.

CUG250.07-CEIL.O object
[CP/M-68K]

CUG250.08-CEI L.S source
IEEE format single precision ceil functions. [CP/M-68K] assembly
source.

CUG250.09-COS.O object
[CP/M-68K]

CUG250.10-COS.S source
IEEE format single precision cosine function. [CP/M-68K] assembly
source.

CUG250.11-COSH.O object
[CP/M-68K]

CUG250.12-COSH.S source
IEEE format single precision hyperbolic cosine function. [CP/M-68K]
assembly source.

CUG250.13-EXP.O object
[CP/M-68K]

CUG250.14-EXP.S source
IEEE format single precision exponential function. [CP/M-68K] assembly
source.

CUG250.15-FABS.O object
[CP/M-68K]

CUG250.16-FABS.S source
IEEE format single precision absolute function. [CP/M-68K] assembly
source.

CUG250.17-FLOOR.0 object
[CP/M-68K]

CUG250.18-FLOOR.S source
IEEE format single precision floor function. [CP/M-68K] assembly
source.

CUG250.19-FMOD.O object
[CP/M-68K]

CUG250.20-FMOD.S source
IEEE format single precision modulo function. [CP/M-68K] assembly
source.

CUG250.21-FPADD.O object
[CP/M-68K]

CUG250.22-FPADD.S source
IEEE format single precision addition function. [CP/M-68K] assembly
source.

CUG250.23-FPCMP.O object
[CP/M-68K]

CUG250.24-FPCMP.S source
IEEE format single precision two-numbers comparison function.
[CP/M-68K] assembly source.

CUG250.25-FPDIV.O object
[CP/M-68K]

CUG250.26-FPDIV.S source
IEEE format single precision division function. [CP/M-68K] assembly
source.

CUG250.27-FPMUL.O object
[CP/M-68K]

CUG250.28-FPMUL.S source
IEEE format single precision multiplication function. [CP/M-68K]
assembly source.

CUG250.29-FPN EG.O object
[CP/M-68K]

CUG250.30-FPNEG.S source
IEEE format single precision negation function. [CP/M-68K] assembly
source.

CUG250.31-FPSUB.O object
[CP/M-68K]

CUG250.32-FPSUB.S source
IEEE format single precision subtraction function. [CP/M-68K] assembly
source.

CUG250.33-FSQR.O object
[CP/M-68K]

CUG250.34-FSQR.S source
IEEE format single precision square function. [CP/M-68K] assembly
source.

CUG250.35-GRAPHDRI.S source
Graphic Support Routines. bit map display functions. => MANDEL.C.
[CP/M-68K] assembly source.

CUG250.36-LIB68881.DOC doc
Procedures to replace DRI-C IEEE floating point library with a new
library.

CUG250.37-LOG.O object
[CP/M-68K]

CUG250.38-LOG.S source
IEEE format single precision logarithm function. [CP/M-68K] assembly
source.

CUG250.39-LOG10.0 object
[CP/M-68K]

CUG250.40-LOG10.S source
IEEE format single precision decimal logarithm function. [CP/M-68K]
assembly source.

CUG250.41-MANDEL.C source
plots fractals, using the Mandelbrot set on EPSON MX-80 matrix
printer. => GRAPHDRI.S. [CP/M-68K: DRIC] Change the printer control
sequences if not using EPSON MX-80.

CUG250.42-PLOTF.C source
bit image file point. => MANDEL.C. [CP/M-68K]

CUG250.43-POW.O object
[CP/M-68K]

CUG250.44-POW.S source
IEEE format single precision power x ^ y function. [CP/M-68K] assembly
source.

CUG250.45-SIN.O object
[CP/M-68K]

CUG250.46-SIN.S source
IEEE format single precision sine function. [CP/M-68K] assembly
source.

CUG250.47-SINH.0 object
[CP/M-68K]

CUG250.48-SINH.S source
IEEE format single precision hyperbolic function. [CP/M-68K] assembly
source.

CUG250.49-SQRT.O object
[CP/M-68K]

CUG250.50-SQRT.S source
IEEE format single precision square root function. [CP/M-68K] assembly
source.

CUG250.51-TAN.O object
[CP/M-68K]

CUG250.52-TAN.S source
IEEE format single precision tangent function. [CP/M-68K] assembly
source.

CUG250.53-TANH.O object
[CP/M-68K]

CUG250.54-TAN H.S source
IEEE format single precision hyperbolic tangent function. [CP/M-68K]
assembly source.

==============================================================================
CUG251 -
-----------

PULL DOWN MENUS & ADVENTURE SYSTEM
[restricted] 1 disk. Pull Down Menus by James Pinson is a
general-purpose menu system for any PC application. The screen
handling is performed by using BIOS interrupts. The program was
developed under Lattice C v2.4. An article about pull down menus
appeared in the May 1987 BYTE. The adventure authoring system for
writing text adventure games by David Betz has three essential
features: a parser to handle commands typed by the player, an
object-description facility, and a language for specifying the events
that take place in response to the player's commands. The program was
developed under Aztec C.

CUG251.01-ADVAVL.C source
By David Michael Betz. AVL tree manipulation routine. [Macintosh,
MS-DOS: AZTEC]

CUG251.02-ADVAVL.H header
By David Michael Betz. AVL tree definitions. [Macintosh, MS-DOS:
AZTEC]

CUG251.03-ADVCOM.C source
By David Michael Betz. A compiler for adventure games. [Macintosh,
MS-DOS: AZTEC]

CUG251.04-ADVCOM.H header
By David Michael Betz. adventure compiler definitions. [Macintosh,
MS-DOS: AZTEC]

CUG251.05-ADVDBS.C source
By David Michael Betz. adventure database access routines. [Macintosh,
MS-DOS: AZTEC]

CUG251.06-ADVDBS.H header
By David Michael Betz. adventure database definitions. [Macintosh,
MS-DOS: AZTEC]

CUG251.07-ADVEXE.C source
By David Michael Betz. execute adventure code. [Macintosh, MS-DOS:
AZTEC]

CUG251.08-ADVEXP.C source
By David Michael Betz. expression compiler for adventure games.
[Macintosh, MS-DOS: AZTEC]

CUG251.09-ADVFCN.C source
By David Michael Betz. functions for adventure game. [Macintosh,
MS-DOS: AZTEC]

CUG251.10-ADVFIO.C source
By David Michael Betz. file l/O routines for the adventure compiler.
[Macintosh, MS-DOS: AZTEC]

CUG251.11-ADVINT.C source
By David Michael Betz. an interpreter for adventure games. [Macintosh,
MS-DOS: AZTEC]

CUG251.12-ADVINT.H header
By David Michael Betz. adventure interpreter definitions. [Macintosh,
MS-DOS: AZTEC]

CUG251.13-ADVJUNK.C source
By David Michael Betz. functions for the adventure interpreter.
[Macintosh, MS-DOS: AZTEC]

CUG251.14-ADVMSG.C source
By David Michael Betz. adventure interpreter message routine.
[Macintosh, MS-DOS: AZTEC]

CUG251.15-ADVPRS.C source
By David Michael Betz. adventure parser. [Macintosh MS-DOS:AZTEC]

CUG251.16-ADVSCN.C source
By David Michael Betz. A lexical scanner for the adventure compiler.
[Macintosh MS-DOS: AZTEC]

CUG251.17-ADVSYS.DOC doc
By David Michael Bek. A users guide explaining the adventure language
syntax.

CUG251.18-ADVTRM.C source
By David Michael Betz. terminal I/O routines for adventure game.
[Macintosh, MS-DOS: AZTEC]

CUG251.19-CONTENTS.MAY doc
Disk contents descriptions.

CUG251.20-LIST1.PS source
By Denis G. Pelli. From article"Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.21-LIST2.PS source
By Denis G. Pelli. From article "Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.22-LIST3.PS source
By Denis G. Pelli. From article"Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.23-LIST4.PS source
By Denis G. Pelli. From article "Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.24-LIST5.PS source
By Denis G. Pelli. From article"Putting Postscript to Work" in BYTE,
May 1987. Postscript source.

CUG251.25-LISTINGS.DOC doc
By Chris Crawford, Eva White. A benchmark run on Machintosh SCSI
external hard disk. [Macintosh] BASIC source.

CUG251.26-OBJECTS.ADI source
By David Michael Betz. An object-oriented runtime package including
object definitions.

CUG251.27-OSAMPLE.ADV source
By David Michael Betz. A sample adventure code.

CUG251.28-PULLDOWN.C source
By James L. Pinson. A pulldown menu program under MSDOS. [MS-DOS: LC2]

CUG251.29-READ.ME doc
By James L. Pinson. Changes to pulldown menu

CUG251.30-README.1 ST doc
list of files for the adventure game.

CUG251.31-README.NOW doc
Non commercial use documentation.

CUG251.32-WARNING.CUG doc
Warning for users who try to compile the adventure program under
MSDOS.

==============================================================================
CUG252 -
-----------

C TUTOR text
By Gordon Dodrill. [share1] 1 disk. This extensive C tutorial was
contributed by the author Gordon Dodrill, Coronado Enterprises,
Albuquerque, NM. C Tutor begins with the most basic concepts of the C
programming language and takes you up to the highest level of C
programming; including concepts of pointers, structures, and dynamic
allocation. This tutorial is not for a beginning programmer, however
you do not have to know anything of the C programming language. CUG252
contains the text, about 100 pages, including numerous examples.
CUG253 contains the source for each of the text examples and the
source to construct a visual calculator program. This version (v2.4)
of C Tutor has been updated to include the ANSI standard. Dodrill's
tutorial for older versions of Turbo C has been retained in the CUG
Library as volumes 257 and 258. We also distribute Dodrill's C++ Tutor
as CUG353.

CUG252.01-CHAP01.TXT doc
Getting Started. The first example program of the Turbo C tutorial. =>
CUG253.

CUG252.02-CHAP02.TXT doc
Program Structure. Discussion of program structure, commenting and
good program style.

CUG252.03-CHAP03.TXT doc
Program control. Explanation of program control, including loops, the
switch construct, the goto, break and continue, if and if-else.

CUG252.04-CHAP04.TXT doc
Assignment and logical compare. Discussion of assignment and logical
compares, explaining various data types and the cryptic constructs.

CUG252.05-CHAP05.TXT doc
Functions, variables & prototyping. Discussion of functions, variables
and prototyping, including recursion, floating returns and variable
scope.

CUG252.06-CHAP06.TXT doc
Defines & Macros. Defines and Macros explained, including the enum
type variable.

CUG252.07-CHAP07.TXT doc
Strings and Arrays. Strings and Arrays explained, including
multidimensional arrays and passing data from functions.

CUG252.08-CHAP08.TXT doc
Pointers. Pointers explained, including two way function data.

CUG252.09-CHAP09.TXT doc
Standard Input/Output. Explanation of standard input/output, including
in memory I/O conversion and error output.

CUG252.10-CHAP10.TXT doc
File Input/Output. Explanation of file I/O including formatted and
single character output; word, line, single character and file, reads,
and printer output.

CUG252.11-CHAP11.TXT doc
Structures. Structures explained including structures with pointers,
arrays of structures, unions, nested structures and a bit field
example.

CUG252.12-CHAP12.TXT doc
Dynamic allocation. Discussion of dynamic memory allocation, including
both simple and large dynamic allocation and linked lists.

CUG252.13-CHAP13.TXT doc
Character and bit manipulation. Character and bit manipulation
explained, including upper/lower case, character classification,
logical bit operations and bit shifting.

CUG252.14-CHAP14.TXT doc
Example Programs. Example programs, including DOS call examples, batch
file processes, a source code lister, and a visual calculator.

CUG252.15-INTRO.TXT doc
Introduction. Introduction to Turbo C tutorial. => CUG253.

CUG252.16-PRINTEXT.BAT batch
A batchfile to print text files. [MS-DOS]

CUG252.17-PRINTEXT.EXE executable
Executable version to print text files.

CUG252.18-READ.ME doc
A users guide. => CUG253.

CUG252.19-TABCONT.TXT doc
Table of contents.

==============================================================================
CUG253 -
-----------

C TUTOR source
By Gordon Dodrill [share1] 1 disk. See CUG252

CUG253.01-AMORT data
the loan amortization equations. => VC.DOC.

CUG253.02-ANYFILE.C source
Chapter 10 - program 7. read in any file. => CHAP10.TXT CUG252.

CUG253.03-BACKWARD.C source
Chapter 05 - Program 6. recursion program. => CHAP05.TXT CUG252.

CUG253.04-BETTERIN.C source
Chapter 09 - Program 3. Better form of single I/O. => CHAP09.TXT
CUG252.

CUG253.05-BIGARRAY.C source
Chapter 07 - Program 4. many arrays. => CHAP07.TXT CUG252.

CUG253.06-BIGDYNL.C source
Chapter 12 - Program 2. large dynamic allocation. => CHAP12.TXT
CUG252.

CUG253.07-BITFIELD.C source
Chapter 11 - Program 7. bitfield examples. => CHAP11.TXT CUG252.

CUG253.08-BITOPS.C source
Chapter 13 - Program 3. logical bit operations. => CHAP13.TXT CUG252.

CUG253.09-BREAKCON.C source
Chapter 03 - Program 5. the break and continue. => CHAP03.TXT CUG252.

CUG253.10-CHARCLAS.C source
Chapter 13 - Program 2. character classification. => CHAP13.TXT
CUG252.

CUG253.11-CHAROUT.C source
Chapter 1 0 - Program 2. single character output. => CHAP10.TXT
CUG252.

CUG253.12-CHRSTRG.C source
Chapter 07 - Program 1. character strings. => CHAP07.TXT CUG252.

CUG253.13-COMBINE.C source
Chapter 04 - Program 4. => CHAP04.TXT CUG252. There is no output from
this program.

CUG253.14-COMMENTS.C source
Chapter 02 - Program 5. comments in C. => CHAP05.TXT CUG252.

CUG253.15-COMPARES.C source
Chapter 04 - Program 5. logical compares. => CHAP04.TXT CUG252.

CUG253.16-CRYPTIC.C source
Chapter 04 - Program 6. the cryptic constructs. => CHAP04.TXT CUG252.

CUG253.17-DATA.C source
data initialize and calculate. => CUG252, VC.C.

CUG253.18-DEFIN.H header
definitions for a visual calculator program. => CUG252, VC.C.

CUG253.19-DEFINE.C source
Chapter 06 - Program 1. defines. => CHAP06.TXT CUG252.

CUG253.20-DOSEX.C source
Chapter 14 - Program 1. DOS Call examples. => CHAP14.TXT CUG252.
[MS-DOS]

CUG253.21-DOWHILE.C source
Chapter 03 - Program 2. the do-while loop. => CHAP03.TXT CUG252.

CUG253.22-DUMBCONV.C source
Chapter 03 - Program 9. Poor program style temperature conversion. =>
CHAP03.TXT CUG252.

CUG253.23-DUMBCONV.V source
Chapter 3 - Program 9. poor program style temperature conversion. =>
CUG252, CHAP3.TXT.

CUG253.24-DYNLINK.C source
Chapter 12 - Program 3. dynamic linked list program. => CHAP12.TXT
CUG252.

CUG253.25-DYNLIST.C source
Chapter 1 2 - Program 1. simple dynamic allocation. => CHAP12.TXT
CUG252.

CUG253.26-ENUM.C source
Chapter 06 - Program 3. enumerated type. => CHAP06.TXT CUG252.

CUG253.27-FILE.C source
file input and output routines. => VC.DOC, CUG252.

CUG253.28-FIRSTEX.C source
Chapter 1 - Program 1. The first example program. => CUG252,
CHAP1.TXT.

CUG253.29-FLOATSQ.C source
Chapter 05 - Program 3. floating returns. => CHAP05.TXT CUG252.

CUG253.30-FLOATSQ2.C source
Chapter 05 - Program 7. floating returns with prototypes. =>
CHAP05.TXT CUG252.

CUG253.31-FORLOOP.C source
Chapter 03 - Program 3. the for loop. => CHAP03.TXT CUG252.

CUG253.32-FORMOUT.C source
Chapter 10 - Program 1. formatted output. => CHAP10.TXT CUG252.

CUG253.33-FUNCPNT.C source
Chapter 08 - Program 4. This is the print stuff function. =>
CHAP08.TXT CUG252.

CUG253.34-GOODFORM.C source
Chapter 02 - Program 6. good program style. => CHAP02.TXT CUG252.

CUG253.35-GOTOEX.C source
Chapter 03 - Program 7. the goto statement. => CHAP03.TXT CUG252.

CUG253.36-HELP data
the users index of files. => CUG252, VC.DOC.

CUG253.37-IFELSE.C source
Chapter 03 - Program 4. the if & if-else construct. => CHAP03.TXT
CUG252.

CUG253.38-INMEM.C source
Chapter 09 - Program 6. in memory I/O conversion. => CHAP09.TXT
CUG252.

CUG253.39-INTARRAY.C source
Chapter 07 - Program 3. integer array. => CHAP07.TXT CUG252.

CUG253.40-INTASIGN.C source
Chapter 04 - Program 1. integer assignment. => CHAP04.TXT CUG252.

CUG253.41-INTIN.C source
Chapter 09 - Program 4. integer input. => CHAP09.TXT CUG252.

CUG253.42-LIST.C source
Chapter 1 4 - Program 3. read in any text file and list it on the
monitor with line numbers and with page numbers. => LISTF.C,
CHAP14.TXT CUG252.

CUG253.43-LIST.EXE executable
source code lister. => LIST.C, CHAP14.TXT CUG252.

CUG253.44-LISTF.C source
Chapter 14 - Program 3. contains functions called by LIST.C. =>
LIST.C, CHAP14.TXT CUG252.

CUG253.45-LOTTYPES.C source
Chapter 04 - Program 3. lots of data types. => CHAP04.TXT CUG252.

CUG253.46-MACRO.C source
Chapter 06 - Program 2. macros. => CHAP06.TXT CUG252.

CUG253.47-MORTYPES.C source
Chapter 04 - Program 2. more data types. => CHAP04.TXT CUG252.

CUG253.48-MULTIARY.C source
Chapter 07 - Program 6. multidimensional array. => CHAP07.TXT CUG252.

CUG253.49-NESTED.C source
Chapter 11 - Program 4. nested structures. => CHAP11.TXT CUG252.

CUG253.50-ONEINT.C source
Chapter 02 - Program 4. one integer variable. => CHAP02.TXT CUG252.

CUG253.51-PASSBACK.C source
Chapter 07 - Program 5. getting data from functions. => CHAP07.TXT
CUG252.

CUG253.52-PAYMENT data
the monthly payment calculation. => VC.DOC., CUG252.

CUG253.53-POINTER.C source
Chapter 08 - Program 1. illustration of pointer use. => CHAP08.TXT
CUG252.

CUG253.54-POINTER2.C source
Chapter 08 - Program 2. an example using pointers. => CHAP08.TXT
CUG252.

CUG253.55-PRINTALL.BAT batch
a batch file to print out all source code listings.

CUG253.56-PRINTDAT.C source
Chapter 10 - Program 8. output to the printer. => CHAP10.TXT CUG252.

CUG253.57-READ.ME doc
users guide to C tutorial example programs. => CUG252.

CUG253.58-READCHAR.C source
Chapter 10 - Program 3. read single characters. => CHAP10.TXT CUG252.

CUG253.59-READGOOD.C source
Chapter 10 - Program 5. better read and display. => CHAP10.TXT CUG252.

CUG253.60-READLINE.C source
Chapter 10 - Program 6. read a full line. => CHAP10.TXT CUG252.

CUG253.61-READTEXT.C source
Chapter 10 - Program 4. read single words. => CHAP10.TXT CUG252.

CUG253.62-RECURSON.C source
Chapter 05 - Program 5. simple recursion program. => CHAP05.TXT
CUG252.

CUG253.63-SCOPE.C source
Chapter 05 - Program 4. scope of variables. => CHAP05.TXT CUG252.

CUG253.64-SHIFTER.C source
Chapter 13 - Program 4. bit shifting operations. => CHAP13.TXT CUG252.

CUG253.65-SIMPLEIO.C source
Chapter 09 - Program 1. => CHAPO9.TXT CUG252.

CUG253.66-SINGLEIO.C source
Chapter 09 - Program 2. single character I/O. => CHAPO9.TXT CUG252.

CUG253.67-SPECIAL.C source
Chapter 09 - Program 7. standard error output. => CHAPO9.TXT CUG252.

CUG253.68-SQUARES.C source
Chapter 05 - Program 2. return a value in function. => CHAP05.TXT
CUG252.

CUG253.69-STRINGIN.C source
Chapter 09 - Program 5. string input. => CHAPO9.TXT CUG252.

CUG253.70-STRINGS.C source
Chapter 07 - Program 2. character string manipulation. => CHAP07.TXT
CUG252.

CUG253.71-STRUCT.DEF source
structure definition. => CUG252, VC.C.

CUG253.72-STRUCT1.C source
Chapter 11 - Program 1. minimum structure example. => CHAP11.TXT
CUG252.

CUG253.73-STRUCT2.C source
Chapter 11 - Program 2. array of structures. => CHAP11.TXT CUG252.

CUG253.74-STRUCT3.C source
Chapter 11 - Program 3. structures with pointers. => CHAP11.TXT
CUG252.

CUG253.75-SUMSQRES.C source
Chapter 05 - Program 1. square function. CHAP05.TXT CUG252.

CUG253.76-SWITCH.C source
Chapter 03 - Program 6. the switch construct. => CHAP03.TXT CUG252.

CUG253.77-TEMPCONV.C source
Chapter 03 - Program 8. the temperature conversion. => CHAP03.TXT
CUG252.

CUG253.78-TEST data
a group of 50 nonsense equations. => VC.C, CUG252.

CUG253.79-TEST.BAT batch
=> WHATNEXT.C.

CUG253.80-TRIVIAL.C source
Chapter 02 - Program 1. the minimal program. => CHAP02.TXT CUG252.

CUG253.81-TWOWAY.C source
Chapter 08 - Program 3. two way function data. => CHAP08.TXT CUG252.

CUG253.82-UGLYFORM.C source
Chapter 02 - Program 7. bad program style. => CHAP02.TXT CUG252.

CUG253.83-UNION1.C source
Chapter 11 - Program 5. a union example. => CHAP11.TXT CUG252.

CUG253.84-UNION2.C source
a union example. => CHAP11.TXT CUG252.

CUG253.85-UPLOW.C source
Chapter 13 - Program 1. upper/lower case text. => CHAP13.TXT CUG252.

CUG253.86-VC.C source
Chapter 14 - Program 4. visual calculator. => VC.DOC, CHAP14.TXT
CUG252. [MS-DOS]

CUG253.87-VC.DOC doc
visual calculator tutorial. => CHAP14.TXT CUG252.

CUG253.88-VC.EXE executable
Visual Calculator. => VC.C, CHAP14.TXT CUG252. [MS-DOS]

CUG253.89-VIDEO.C source
Chapter 14 - Program 4. video output routines. => VC.C, STRUCT.DEF,
DEFIN.H. [MS-DOS]

CUG253.90-WHATNEXT.C source
Chapter 14 - Program 2. ask question in batch file. => CHAP14.TXT
CUG252.

CUG253.91-WHILE.C source
Chapter 03 - Program 1. while loop. => CHAP03.TXT CUG252.

CUG253.92-WRTMORE.C source
Chapter 02 - Program 3. write more output. => CHAP02.TXT CUG252.

CUG253.93-WRTSOME.C source
Chapter 02 - Program 2. write some output. => CHAP02.TXT CUG252

==============================================================================
CUG254 -
-----------

Withdrawn from CUG Library
[public] 0 disks. Withdrawn to avoid potential copywrite infringement.

==============================================================================
CUG255 -
-----------

EGA GRAPHICS LIBRARY
By Kent Cedola. [restricted] 1 disk. This graphics library is written
entirely in assembly language and executes quickly. The routines are
callable from Turbo C, and are
well-documented. See the Narrative Descriptions section of this
directory for a complete listing of the graphics functions in the
package and examples of Cedola's coding style for these routines. For
more details see the narrative description of this package in Section
2.

CUG255.01-CEGA_IO.ASM source
EGA I/O routines. [MS-DOS] assembly code.

CUG255.02-COLORS.C source
Displays over a hundred colors by a bit color map. Only the standard
palette setting are used, if changed, more colors could be produced.
[MS-DOS: MSC3.0]

CUG255.03-DEMO.C source
Demonstrates some of the EGA graphic routines. [MS-DOS: MSC3.0]

CUG255.04-DEMO.EXE executable
=> DEMO.C. [MS-DOS]

CUG255.05-EGA.DOC doc
EGA graphic function description.

CUG255.06-EGA.LIB library
EGA graphic function library. [MS-DOS]

CUG255.07-FARDEMO.C source
Demonstrates calling by EGA routines using FAR calls. [MS-DOS: MSC4]

CUG255.08-FARDEMO.EXE executable
=> FARDEMO.C, FARJUMP.C. [MS-DOS]

CUG255.09-FARJUMP.C source
Demonstrates calling by EGA routines using FAR calls. => FARDEMO.C.
[MS-DOS: MSC4]

CUG255.10-GIOINIT.ASM source
Check EGA ROM for VEGA BIOS version string and 24 MH2 feature. Set
VEGA HIRES (600x480) mode. [MS-DOS] assembly code.

CUG255.11-GIOINIT.OBJ object
[MS-DOS]

CUG255.12-GOTOXY.ASM source
gotoxy function. [MS-DOS] assembly code.

CUG255.13-GPAMTGD.C source
[MS-DOS: MSC3.0]

CUG255.14-GPBALL.ASM source
EGA Graphic Primitive, drawing a circle. [MS-DOS] assembly code.

CUG255.15-GPBITBLT.ASM source
EGA Graphic Primitives. [MS-DOS: MSC3.0] assembly code.

CUG255.16-GPBOX.ASM source
box-drawing function. [MS-DOS] assembly code.

CUG255.17-GPCIR.ASM source
Circle-drawing function. This routine will plot a solid color or
pattern and automatically clip for the current viewport. [MS-DOS]
assembly code.

CUG255.18-GPCLIP1.ASM source
clip line in current window. [MS-DOS] assembly code.

CUG255.19-GPCLIP2.ASM source
clip line in current window. [MS-DOS] assembly code.

CUG255.20-GPCOLOR.ASM source
Set current color. [MS-DOS]

CUG255.21-GPFILL.C source
Set the current style for line drawing primitives. [MS-DOS: MSC3.0]

CUG255.22-GPFLOOD.ASM source
Complex object fill, color/shading. [MS-DOS] assembly code.

CUG255.23-GPINIT.ASM source
initialize graphic display. [MS-DOS] assembly code.

CUG255.24-GPINITRD.ASM source
EGA Graphic Primitive. [MS-DOS] assembly code.

CUG255.25-GPINITWT.ASM source
EGA Graphic Primitive. [MS-DOS]

CUG255.26-GPLDPAL.ASM source
Load all palette registers. [MS-DOS] assembly code.

CUG255.27-GPLINE.ASM source
Draw a line. [MS-DOS] assembly code.

CUG255.28-GPMERGE.ASM source
Set current merge mode. [MS-DOS] assembly code.

CUG255.29-GPMOVE.ASM source
Set current graphic position. [MS-DOS] assembly code.

CUG255.30-GPMOVGTM.ASM source
[MS-DOS] assembly code.

CUG255.31-GPMOVMTG.ASM source
Initialize graphic software for 640x350 color/monographics. [MS-DOS]
assembly code.

CUG255.32-GPPAL.ASM source
Set a palette register. [MS-DOS] assembly code.

CUG255.33-GPPARMS.ASM source
Set up graphic adapter parameters. [MS-DOS] assembly code.

CUG255.34-GPPLOT.ASM source
Plot a point at X,Y. [MS-DOS] assembly code.

CUG255.35-GPRDCLR.C source
Read the current color to be used by other graphic primitives.
[MS-DOS: MSC3.0]

CUG255.36-GPRDCOL.ASM source
Read a column of pixels. [MS-DOS] assembly code.

CUG255.37-GPRDDOT.ASM source
Read pixel at coordinate (X,Y). [MS-DOS] assembly code.

CUG255.38-GPRDPAL.ASM source
Read current palette setting. [MS-DOS] assembly code.

CUG255.39-GPRDROW.ASM source
Read a row of pixels. [MS-DOS] assembly code.

CUG255.40-GPREADRW.ASM source
[MS-DOS] assembly code.

CUG255.41-GPRECT.C source
Draw a rectangle between CP and (X,Y). [MS-DOS]

CUG255.42-GPRINTF.ASM source
[MS-DOS] assembly code.

CUG255.43-GPSCALE.ASM source
Scale from world to device. [MS-DOS] assembly code.

CUG255.44-GPSHAD1.ASM source
Set pattern for shading. [MS-DOS] assembly code.

CUG255.45-GPSHADE.C source
Set pattern for shading area. [MS-DOS]

CUG255.46-GPSLOPE.ASM source
[MS-DOS] assembly code.

CUG255.47-GPSlYLE.C source
Set the current style for line drawing primitives. [MS-DOS]

CUG255.48-GPTERM.ASM source
terminate graphic display. [MS-DOS] assembly code.

CUG255.49-GPTERMRD.ASM source
[MS-DOS] assembly code.

CUG255.50-GPTERMWT.ASM source
[MS-DOS] assembly code.

CUG255.51-GPVIEWPO.ASM source
Set current view port. [MS-DOS] assembly code.

CUG255.52-GPWAREA.C source
initialize work area. [MS-DOS]

CUG255.53-GPWINDOW.C source
see the current window coordinates. [MS-DOS]

CUG255.54-GPWRITRW.ASM source
[MS-DOS] assembly code.

CUG255.55-GPWSPACE.C source
[MS-DOS]

CUG255.56-GPWTCOL.ASM source
write a column of pixels. [MS-DOS] assembly code.

CUG255.57-GPWTROW.ASM source
write a row of pixels. [MS-DOS] assembly code.

CUG255.58-KC_PAL.C source
[MS-DOS]

CUG255.59-MAKE make
make file for FARDEMO. => FARDEMO.C. [MS-DOS]

CUG255.60-MCEGA.H header
defines all global variable.

CUG255.61-POPUP.C source
open & close a pop up window. [MS-DOS]

CUG255.62-README.DOC doc
a list of files.

CUG255.63-SHADE.ASM source
shading function. [MS-DOS]

CUG255.64-TURBOC.DOC doc
[MS-DOS: TC]

CUG255.65-VPMODULE.ASM source
[MS-DOS] assembly code.

CUG255.66-WORLD.C source
an example of how graphic primitives can be put together to form "HIGH
LEVEL" graphic routines. [MS-DOS]

==============================================================================
CUG256 -
-----------

DeSMET CARRY FIAG ROUTINES
By Phil E. Cogar. [public] 2 disks.
This package consists of some 65 functions (in both source code and
object form) which give DeSmet C programmers access to MS-DOS system
calls and return more error information than the standard intdos()
type call. These functions make use of the DeSmet externally declared
register variables, especially the _carryf variable. The functions are
written in assembly language. An article in The C User's Journal, vol.
6.2 details one of the functions, providing some tutorial insight into
how to create a hardware interface that will give C programs access to
low-level hardware resources like registers and status flags.

CUG256.01-ABSREAD.A source
absolute disk read. [MS-DOS: DESMETC] Assembly code.

CUG256.02-ABSREAD.O object
[MS-DOS]

CUG256.03-ABSWRITE.A source
absolute disk write. [MS-DOS: DESMETC] Assembly code.

CUG256.04-ABSWRITE.O object
[MS-DOS]

CUG256.05-BLKGET.A source
Get control data to block. [MS-DOS: DESMETC] assembly code.

CUG256.06-BLKGET.O object
[MS-DOS]

CUG256.07-BLKSEND.A source
send control data to block. [MS-DOS: DESMETC] Assembly code.

CUG256.08-BLKSEND.O object
[MS-DOS]

CUG256.09-CARRYF.TXT doc
carry flag, DOS interrupt documentation.

CUG256.10-CHKHNDL.A source
Check whether handle refers to a file or a device on a Microsoft
network station (Local) or is redirected to a server (remote.).
[MS-DOS: DESMETC] assembly code.

CUG256.11-CHKHNDL.O object
[MS-DOS]

CUG256.12-CHKREM.A source
Check whether drive is a local drive on Microsoft Networks or is
redirected to a server (remote). [MS-DOS: DESMETC] Assembly code.

CUG256.13-CHKREM.O object
[MS-DOS]

CUG256.14-ENDPROC.A source
end process. [MS-DOS: DESMETC] Assemble code.

CUG256.15-ENDPROC.O object
[MS-DOS]

CUG256.16-ERRLIST.C source
array of pointers to error messages. Should be used with PRINTER.
[MS-DOS: DESMETC]

CUG256.17-FNDFIRST.A source
Find first matching file. [MS-DOS: DESMETC] Assemble code.

CUG256.18-FNDFIRST.O object
[MS-DOS]

CUG256.19-FNDNEXT.A source
Find next matching file .... use only after FINDFIRST function.
[MS-DOS: DESMETC] Assembly code.

CUG256.20-FNDNEXT.O object
[MS-DOS]

CUG256.21-FUNOFH.A source
open file. [MS-DOS: DESMETC] Assemble code.

CUG256.22-FUNOFH.O object
[MS-DOS]

CUG256.23-FUN10H.A source
close file. [MS-DOS: DESMETC] Assemble code.

CUG256.24-FUN10H.O object
[MS-DOS]

CUG256.25-FUN11H.A source
search for first matching entry. [MS-DOS: DESMETC] Assemble code.

CUG256.26-FUN11H.O object
[MS-DOS]

CUG256.27-FUN12H.A source
search for next matching entry. [MS-DOS: DESMETC] Assemble code.

CUG256.28-FUN12H.O object
[MS-DOS]

CUG256.29-FUN13H.A source
delete file. [MS-DOS: DESMETC] Assemble code.

CUG256.30-FUN13H.O object
[MS-DOS]

CUG256.31-FUN17H.A source
rename file. [MS-DOS: DESMETC] Assemble code.

CUG256.32-FUN17H.O object
[MS-DOS]

CUG256.33-FUN1CH.A source
get drive data. [MS-DOS: DESMETC] Assembly code.

CUG256.34-FUN1CH.O object
[MS-DOS]

CUG256.35-FUN23H.A source
get file size (in records). [MS-DOS: DESMETC] Assembly code.

CUG256.36-FUN23H.O object
[MS-DOS]

CUG256.37-FUN38H.A source
get country data. [MS-DOS: DESMETC] Assembly code.

CUG256.38-FUN38H.O object
[MS-DOS]

CUG256.39-FUN39H.A source
create directory. [MS-DOS: DESMETC] Assemble code.

CUG256.40-FUN39H.O object
[MS-DOS]

CUG256.41-FUN3AH.A source
remove directory. [MS-DOS: DESMETC] Assemble code.

CUG256.42-FUN3AH.O object
[MS-DOS]

CUG256.43-FUN3BH.A source
change current directory. [MS-DOS: DESMETC] assemble code.

CUG256.44-FUN3BH.O object
[MS-DOS]

CUG256.45-FUN3CH.A source
create handle. [MS-DOS: DESMETC] Assemble code.

CUG256.46-FUN3CH.O object
[MS-DOS]

CUG256.47-FUN3DH.A source
open handle. [MS-DOS: DESMETC] Assemble code.

CUG256.48-FUN3DH.O object
[MS-DOS]

CUG256.49-FUN3EH.A source
close handle. [MS-DOS: DESMETC] assemble code.

CUG256.50-FUN3EH.O object
[MS-DOS]

CUG256.51-FUN3FH.A source
read handle. [MS-DOS: DESMETC] assembly code.

CUG256.52-FUN3FH.O object
[MS-DOS]

CUG256.53-FUN40H.A source
write handle. [MS-DOS: DESMETC] Assemble code.

CUG256.54-FUN40H.O object
[MS-DOS]

CUG256.55-FUN41H.A source
delete file. [MS-DOS: DESMETC] assemble code.

CUG256.56-FUN41H.O object
[MS-DOS]

CUG256.57-FUN42H.A source
move file pointer. [MS-DOS: DESMETC] Assemble code.

CUG256.58-FUN42H.O object
[MS-DOS]

CUG256.59-FUN45H.A source
duplicate file handle. [MS-DOS: DESMETC] assembly code.

CUG256.60-FUN45H.O object
[MS-DOS]

CUG256.61-FUN46H.A source
force duplicate file handle. [MS-DOS: DESMETC] Assemble code.

CUG256.62-FUN46H.O object
[MS-DOS]

CUG256.63-FUN47H.A source
get current directory. [MS-DOS: DESMETC] assemble code.

CUG256.64-FUN47H.O object
[MS-DOS]

CUG256.65-FUN48H.A source
allocate memory. [MS-DOS: DESMETC] Assemble code.

CUG256.66-FUN48H.O object
[MS-DOS]

CUG256.67-FUN49H.A source
free allocated memory. [MS-DOS: DESMETC] Assemble code.

CUG256.68-FUN49H.O object
[MS-DOS]

CUG256.69-FUN4AH.A source
set block size (paragraphs). [MS-DOS: DESMETC] assembly code.

CUG256.70-FUN4AH.O object
[MS-DOS]

CUG256.71-FUN56H.A source
change directory entry. [MS-DOS: DESMETC] Assemble code.

CUG256.72-FUN56H.O object
[MS-DOS]

CUG256.73-FUN5AH.A source
create unique temporary file. [MS-DOS: DESMETC] Assemble code.

CUG256.74-FUN5AH.O object
[MS-DOS]

CUG256.75-FUN5BH.A source
create new file. [MS-DOS: DESMETC] Assembly code.

CUG256.76-FUN5BH.O object
[MS-DOS]

CUG256.77-FUN6H.A object
direct console I/O. [MS-DOS: DESMETC] Assemble code.

CUG256.78-FUN6H.O object
[MS-DOS]

CUG256.79-GDATIME.A source
get date and time. [MS-DOS: DESMETC] Assembly code.

CUG256.80-GDATIME.O object
[MS-DOS]

CUG256.81-GETATTR.A source
get file attributes. [MS-DOS: DESMETC] Assemble code.

CUG256.82-GETATTR.O object
[MS-DOS]

CUG256.83-GETDATA.A source
Get data from IOCTL device. [MS-DOS: DESMETC] Assembly code.

CUG256.84-GETDATA.O object
[MS-DOS]

CUG256.85-GETDEV.A source
Get IOCTL device. [MS-DOS: DESMETC] Assemble code.

CUG256.86-GETDEV.O object
[MS-DOS]

CUG256.87-GETPSP.A source
Get PSP address at active process. [MS-DOS: DESMETC] Assemble code.

CUG256.88-GETPSP.O object
[MS-DOS]

CUG256.89-GETRET.A source
get return code from child process. [MS-DOS: DESMETC] Assembly code.

CUG256.90-GETRET.O object
[MS-DOS]

CUG256.91-GETSTATE.A source
get verify state. [MS-DOS: DESMETC] Assemble code.

CUG256.92-GETSTATE.O object
[MS-DOS]

CUG256.93-GETSTRAT.A source
get memory allocation strategy. [MS-DOS: DESMETC] Assemble code.

CUG256.94-GETSTRAT.O object
[MS-DOS]

CUG256.95-INSTAT.A source
get IOCTL device input status. [MS-DOS: DESMETC] Asesmbly code.

CUG256.96-INSTAT.O object
[MS-DOS]

CUG256.97-LABEL.EXE executable
give a disk VOLUME LABEL or change the existing Volume label. [MS-DOS]

CUG256.98-LEXE.A source
load and execute a program. [MS-DOS: DESMETC] Assemble code.

CUG256.99-LEXE.O object
[MS-DOS]

CUG256.100-LISTFILE.EXE executable
listing a file. [MS-DOS]

CUG256.101-LOCKFIL.A source
lock the file. [MS-DOS: DESMETC] Assemble code.

CUG256.102-LOCKFIL.O object
[MS-DOS]

CUG256.103-LOVLAY.A source
load overlay. [MS-DOS: DESMETC] Assemble code.

CUG256.104-LOVLAY.O object
[MS-DOS]

CUG256.105-MEDTYPE.A source
Check media type (fixed or removable.). [MS-DOS: DESMETC] Assemble
code.

CUG256.106-MEDTYPE.O object
[MS-DOS]

CUG256.107-NETNAME.A source
Get machine name. [MS-DOS: DESMETC] Assemble code.

CUG256.108-NETNAME.O object
[MS-DOS]

CUG256.109-OUTSTAT.A source
Get IOCTL device output status. [MS-DOS: DESMETC] Assembly code.

CUG256.110-OUTSTAT.O object
[MS-DOS]

CUG256.111-PRINTERR.C source
prints the message corresponding to the error code returned by a
function. [MS-DOS: DESMETC]

CUG256.112-PRINTERR.O object
[MS-DOS]

CUG256.113-READ.ME doc
file list.

CUG256.114-RETRY.A source
Set how many times MS-DOS should retry a disk operation which fails
because of file-sharing violation. [MS-DOS: DESMETC]

CUG256.115-RETRY.O object
[MS-DOS]

CUG256.116-SDATIME.A source
Set date and time. [MS-DOS: DESMETC] assembly code.

CUG256.117-SDATIME.O object
[MS-DOS]

CUG256.118-SENDDATA.A source
Send data to IOCTL device. [MS-DOS: DESMETC] Assemble code.

CUG256.119-SENDDATA.O object
[MS-DOS]

CUG256.120-SETATTR.A source
Set file attributes. [MS-DOS: DESMETC] Assemble code.

CUG256.121-SETATTR.O object
[MS-DOS]

CUG256.122-SETCTRY.A source
Set country data. [MS-DOS: DESMETC] Assembly code.

CUG256.123-SETCTRY.O object
[MS-DOS]

CUG256.124-SETDEV.A source
Set IOCTL devices. [MS-DOS: DESMETC] Assembly code.

CUG256.125-SETDEV.O object
[MS-DOS]

CUG256.126-SETSTRAT.A source
Set memory allocation strategy. [MS-DOS: DESMETC] Assemble code.

CUG256.127-SETSTRAT.O object
[MS-DOS]

CUG256.128-UNLOCK.A source
Unlock the file. [MS-DOS: DESMETC] Assembly code.

CUG256.129-UNLOCK.O object
[MS-DOS]

CUG256.130-USAGE.DOC doc
Usage of carry flag functions.

==============================================================================
CUG257 -
-----------

C TUTOR FOR TURBO C executable
By Gordon Dodrill. [sharel] 1 disk. This shareware tutorial from
Coronado Enterprises, Albuquerque, NM, includes specific support for
Turbo-C, both in the code and in tutorial notes built into the lesson
text. The tutorial is released on two volumes. CUG257 is the text of
the tutorial package. CUG258 is the source code. The original C tutor
(CUG252 and CUG253) has been upgraded to conform to the ANSI Standard
however we retain CUG257 and CUG258 for programmers working with older
versions of Turbo C.

CUG257.01-CHAP1.TXT doc
Getting Started. The first example program of the Turbo C tutorial.

CUG257.02-CHAP10.TXT doc
File Input/Output. Explanation of file I/O including formatted and
single character output; word, line, single character and file reads,
and printer output.

CUG257.03-CHAP11.TXT doc
Structures. Structures explained including structures with pointers,
arrays of structures, unions, nested structures and a bit field
example.

CUG257.04-CHAP12.TXT doc
Dynamic Allocation. Discussion of dynamic memory allocation, including
both simple and large dynamic allocation and linked lists.

CUG257.05-CHAP13.TXT doc
Character and Bit Manipulation. Character and bit manipulation
explained, including upper/lower case, character classification,
logical bit operations and bit shifting.

CUG257.06-CHAP14.TXT doc
Example Programs. Example programs including DOS call examples, batch
file processes, a source code lister, and a visual calculator.

CUG257.07-CHAP2.TXT doc
Program Structure. Discussion of program structure, commenting and
good program style.

CUG257.08-CHAP3.TXT doc
Program Control. Explanation of program control, including loops, the
switch construct, the goto, break and continue, if and if-else.

CUG257.09-CHAP4.TXT doc
Assignment and Logical Compare. Discussion of assignment and logical
compares, explaining various data types and the cryptic constructs.

CUG257.10-CHAP5.TXT doc
Functions, Variables, Prototyping. Discussion of functions, variables
and prototyping, including recursion, floating returns and variable
scope.

CUG257.11-CHAP6.TXT doc
Defines and Macros. Defines and Macros explained, including the enum
type variable.

CUG257.12-CHAP7.TXT doc
Strings and Arrays. Strings and Arrays explained, including
multidimensional arrays and passing data from functions.

CUG257.13-CHAP8.TXT doc
Pointers. Pointers explained, including two way function data.

CUG257.14-CHAP9.TXT doc
Standard Input/Output. Explanation of standard input/output, including
in memory I/O conversion and error output.

CUG257.15-INTRO.TXT doc
Introduction. Introduction to Turbo C tutorial.

CUG257.16-LIST.COM executable
File listing utility.

CUG257.17-PRINTEXT.BAT batch
A batch file to print text files.

CUG257.18-READ.ME doc
A users guide.

CUG257.19-TABCONT.TXT doc
Table of contents.

==============================================================================
CUG258 -
-----------

C TUTOR FOR TURBO C source
By Gordon Dodrill. [share1] 1 disk. See CUG257.

CUG258.01-AMORT data
the loan amortization equations. VC.DOC.

CUG258.02-ANYFILE.C source
Chapter 10 - Program 7. Read in any file. => CUG257, CHAP10.TXT.

CUG258.03-BACKWARD.C source
Chapter 5 - Program 6. recursion program. => CUG257, CHAP5.TXT.

CUG258.04-BETTERIN.C source
Chapter 9 - Program 3. better form of single I/O. => CUG257,
CHAP9.TXT.

CUG258.05-BIGARRAY.C source
Chapter 7 - Program 4. many arrays. CUG257, CHAP7.TXT.

CUG258.06-BIGDYNL.C source
Chapter 12 - Program 2. large dynamic allocation. => CUG257,
CHAP12.TXT.

CUG258.07-BITFIELD.C source
Chapter 11 - Program 7. bitfield examples. => CUG257, CHAP11.TXT.

CUG258.08-BITOPS.C source
Chapter 13 - Program 3. logical bit operations. => CUG257, CHAP13.TXT.

CUG258.09-BREAKCON.C source
Chapter 3 - Program 5. the break and continue. => CUG257, CHAP3.TXT.

CUG258.10-CHARCLAS.C source
Chapter 13 - Program 2. character classification. => CUG257,
CHAP13.TXT.

CUG258.11-CHAROUT.C source
Chapter 10 - Program 2. single character output. => CUG257,
CHAP10.TXT.

CUG258.12-CHRSTRG.C source
Chapter 7 - Program 1. character strings. => CUG257, CHAP7.TXT.

CUG258.13-COMMENTS.C source
Chapter 2 - Program 5. Comments in C. => CUG257, CHAP5.TXT.

CUG258.14-COMPARES.C source
Chapter 4 - Program 4. logical compares. => CUG257, CHAP4.TXT.

CUG258.15-COMPILER.C doc
Notes on Turbo C compiler. => CUG257.

CUG258.16-COMPILER.DOC doc
Notes on Turbo C compiler. => CUG257.

CUG258.17-CRYPTIC.C source
Chapter 4 - Program 5. the cryptic constructs. => CUG257, CHAP4.TXT.

CUG258.18-DATA.C source
data initialize and calculate. => VC.C.

CUG258.19-DEFIN.H header
definitions for a visual calculator program. => VC.C.

CUG258.20-DEFINE.C source
defines. => CUG257, CHAP6.TXT.

CUG258.21-DOSEX.C source
Chapter 14 - Program 1. DOS call examples. => CUG257, CHAP14.TXT.
[MS-DOS]

CUG258.22-DOWHILE.C source
Chapter 3 - Program 2. the do-while loop. => CUG257, CHAP3.TXT.

CUG258.23-DUMBCONV.C source
Chapter 3 - Program 9. poor program style, temperature conversion. =>
CUG257, CHAP3.TXT.

CUG258.24-DYNLINK.C source
Chapter 12 - Program 3. dynamic linked list program. => CUG257,
CHAP12.TXT.

CUG258.25-DYNLIST.C source
Chapter 12 - Program 1. simple dynamic allocation. => CUG257,
CHAP12.TXT.

CUG258.26-ENUM.C source
Chapter 6 - Program 3. Enumerated type. => CUG257, CHAP6.TXT.

CUG258.27-FILE.C source
file input and output routines. => VC.DOC.

CUG258.28-FIRSTEX.C source
Chapter 1 - Program 1. The first example program. => CHAP1.TXT CUG257.

CUG258.29-FLOATSQ.C source
Chapter 5 - Program 3. floating returns. => CUG257, CHAP5.TXT.

CUG258.30-FLOATSQ2.C source
Chapter 5 - Program 7. floating returns with prototype. => CUG257,
CHAP5.TXT.

CUG258.31-FORLOOP.C source
Chapter 3 - Program 3. the for loop. => CUG257, CHAP3.TXT.

CUG258.32-FORMOUT.C source
Chapter 10 - Program 1. formatted output. => CUG257, CHAP10.TXT.

CUG258.33-GOODFORM.C source
Chapter 2 - Program 6. good program style. => CUG257, CHAP2.TXT.

CUG258.34-GOTOEX.C source
Chapter 3 - Program 7. the goto statement. => CUG257, CHAP3.TXT.

CUG258.35-HELP data
the users index of files. => VC.DOC.

CUG258.36-IFELSE.C source
Chapter 3 - Program 4. the if & if-else construct. => CUG257,
CHAP3.TXT.

CUG258.37-INMEM.C source
Chapter 9 - Program 6. in memory I/O conversion. => CUG257, CHAP9.TXT.

CUG258.38-INTARRAY.C source
Chapter 7 - Program 3. integer array. => CUG257, CHAP7.TXT.

CUG258.39-INTASIGN.C source
Chapter 4 - Program 1. integer assignment. => CUG257, CHAP4.TXT.

CUG258.40-INTIN.C source
Chapter 9 - Program 4. integer input. => CUG257, CHAP9.TXT.

CUG258.41-LIST.C source
Chapter 14 - Program 3. read in any text file and list it on the
monitor with line numbers and with page numbers. => CHAP14.TXT CUG257,
LISTF.C.

CUG258.42-LIST.EXE executable
source code lister. => CHAP14.TXT CUG257, LIST.C.

CUG258.43-LIST.PRJ make
A project file for list program. => CHAP14.TXT CUG257, LIST.C.

CUG258.44-LISTF.C source
Chapter 14 - Program 3. contains functions called by list.c. =>
CHAP14.TXT CUG257, LIST.C.

CUG258.45-LOTTYPES.C source
Chapter 4 - Program 3. lots of data types. => CHAP4.TXT CUG257.

CUG258.46-MACRO.C source
Chapter 6 - Program 2. macros. => CHAP6.TXT CUG257.

CUG258.47-MORTYPES.C source
Chapter 4 - Program 2. more data types. => CHAP4.TXT CUG257.

CUG258.48-MULTIARY.C source
Chapter 7 - Program 6. multidimensional array. => CHAP7.TXT CUG257.

CUG258.49-NESTED.C source
Chapter 11 - Program 4. nested structures. => CHAP11.TXT CUG257.

CUG258.50-ONEINT.C source
Chapter 2 - Program 4. one integer variable. => CHAP2.TXT CUG257.

CUG258.51-PASSBACK.C source
Chapter 7 - Program 5. Getting data from functions. => CHAP7.TXT
CUG257.

CUG258.52-PAYMENT data
The monthly payment calculation. => VC.DOC.

CUG258.53-POINTER.C source
Chapter 8 - Program 1. illustration of pointer use. => CHAP8.TXT
CUG257.

CUG258.54-POINTER2.C source
Chapter 8 - Program 2. an example using pointers. => CHAP8.TXT CUG257.

CUG258.55-PRINTALL.BAT batch
a batch file to print out all source code listings.

CUG258.56-PRINTDAT.C source
Chapter 10 - Program 8. output to the printer. => CHAP10.TXT CUG257.

CUG258.57-READ.ME doc
users guide.

CUG258.58-READCHAR.C source
Chapter 10 - Program 3. read single characters. => CHAP10.TXT CUG257.

CUG258.59-READGOOD.C source
Chapter 10 - Program 5. better read and display. => CHAP10.TXT CUG257.

CUG258.60-READLINE.C source
Chapter 10 - Program 6. read a full line. CHAP10.TXT CUG257.

CUG258.61-READTEXT.C source
Chapter 10 - Program 4. read single words. => CHAP10.TXT CUG257.

CUG258.62-RECURSON.C source
Chapter 5 - Program 5. simple recursion program. => CHAP5.TXT CUG257.

CUG258.63-SCOPE.C source
Chapter 5 - Program 4. scope of variable. => CHAP5.TXT CUG257.

CUG258.64-SHIFTER.C source
Chapter 13 - Program 4. bit shifting operations. => CHAP13.TXT CUG257.

CUG258.65-SIMPLEIO.C source
Chapter 9 - Program 1. simplest standard I/O. => CHAP9.TXT CUG257.

CUG258.66-SINGLEIO.C source
Chapter 9 - Program 2. single character l/O. => CHAP9.TXT CUG257.

CUG258.67-SPECIAL.C source
Chapter 9 - Program 7. standard error output. => CHAP9.TXT CUG257.

CUG258.68-SQUARES.C source
Chapter 5 - Program 2. return a value in function. => CHAP5.TXT
CUG257.

CUG258.69-STRINGIN.C source
Chapter 9 - Program 5. string input. => CHAP9.TXT CUG257.

CUG258.70-STRINGS.C source
Chapter 7 - Program 2. character string manipulation. => CHAP7.TXT
CUG257.

CUG258.71-STRUCT.DEF source
structure definition. => VC.C.

CUG258.72-STRUCTl.C source
Chapter 11 - Program 1. minimum structure example. => CHAP11.TXT
CUG257.

CUG258.73-STRUCT2.C source
Chapter 11 - Program 2. array of structures. =:> CHAP11.TXT CUG257.

CUG258.74-STRUCT3.C source
Chapter 11 - Program 3. structures with pointers. => CHAP11.TXT
CUG257.

CUG258.75-SUMSQRES.C source
Chapter 5 - Program 1. square function. => CHAP5.TXT CUG257.

CUG258.76-SWITCH.C source
Chapter 3 - Program 6. the switch construct. CHAP3.TXT CUG257.

CUG258.77-TEMPCONV.C source
Chapter 3 - Program 8. the temperature conversion. => CHAP3.TXT
CUG257.

CUG258.78-TEST data
A group of 50 nonsense equations. => VC.C.

CUG258.79-TEST.BAT batch
Batch for ask question in batch file. => WHATNEXT.C.

CUG258.80-TRIVIAL.C source
Chapter 2 - Program 1. the minimal program. :> CHAP2.TXT CUG257.

CUG258.81-TWOWAY.C source
Chapter 8 - Program 3. two way function data. => CHAP8.TXT CUG257.

CUG258.82-UGLYFORM.C source
Chapter 2 - Program 7. bad program style. => CHAP2.TXT CUG257.

CUG258.83-UNION1.C source
Chapter 11 - Programs. a union example. => CHAP11.TXT CUG257.

CUG258.84-UNION2.C source
Chapter 11 - Program 6. a union example. => CHAP11.TXT CUG257.

CUG258.85-UPLOW.C source
Chapter 13 - Program 1. upper/lower case text. => CHAP13.TXT CUG257.

CUG258.86-VC.C source
Chapter 14 - Program 4. visual calculator. => VC.DOC, CHAP14.TXT
CUG257. [MS-DOS: TC]

CUG258.87-VC.DOC doc
visual calculator tutorial. => CHAP14.TXT CUG257.

CUG258.88-VC.EXE executable
Visual Calculator. visual calculator. => VC.C. [MS-DOS]

CUG258.89-VC.PRJ make

CUG258.90-VIDEO.C source
Chapter 14 - Program 4. video output routines. => VC.C, STRUCT.DEF,
DEFIN.H.

CUG258.91-WHATNEXT.C source
Chapter 14 - Program 2. ask question in batch file. => CHAP14.TXT
CUG257.

CUG258.92-WHILE.C source
Chapter 3 - Program 1. while loop. => CHAP3.TXT CUG257.

CUG258.93-WRTMORE.C source
Chapter 2 - Program 3. write more output. => CHAP2.TXT CUG257.

CUG258.94-WRTSOME.C source
Chapter 2 - Program 2. write some output. => CHAP2.TXT CUG257.

==============================================================================
CUG259 -
-----------

CONSOLE I/O & WITHERS TOOLS
[public] 1 disk. This volume contains contributions from Bob Withers,
Allen, TX, and Jeff D. Pipkins of Quality Micro Systems, Inc., Mobile,
AL. Withers contributed the complete source code for a windowing
system and an execution time profiler. Both were developed under
MS-DOS and are compatible with Turbo C v1.0 and Microsoft C (v4.0 and
v5.0). The windowing package will work with both monochrome and CGA
adapters. Withers' code will overlay windows (with options to save or
discard the overlaid area), move windows, scroll within a window, and
draw exploding windows. Pipkins has contributed a library of routines
to perform direct console I/O under MS-DOS. Pipkins supplies routines
that are non-redirectable, routines that handle PC type extended
keycodes, and a keyboard status polling routine that checks for
Ctrl-C. These assembly language functions are packaged as replacements
for Microsoft's kbhit(), getch(), getche(), ungetch(), and putch().
For more details see the narrative description of this package in
Section 2.

CUG259.01-APROFILE.ASM source
By Bob Withers. Low level application profile generator. [MS-DOS]
Requires assembler.

CUG259.02-APROFILE.OBJ object
By Bob Withers. => APROFILE.ASM. [MS-DOS]

CUG259.03-CONIO.ASM source
By Jeff D. Pipkins. Source code for putch(), getch(), getche(),
ungetch(), and kbhit(). I/O routines as replacements for the
corresponding routines in Microsoft C libraries. [MS-DOS]

CUG259.04-CONIO.BAT batch
By Jeff D. Pipkins. Batch file for installing CONIO into MSC
libraries. [MS-DOS]

CUG259.05-CONIO.DOC doc
By Jeff D. Pipkins. CONIO function description.

CUG259.06-CONIO.FAR object
By Jeff D. Pipkins. Object code for medium large and huge memory
models.

CUG259.07-CONIO.NER object
By Jeff D. Pipkins. Object code for small and compact memory models.
[MS-DOS]

CUG259.08-CPROFILE.C source
By Bob Withers. Utility routines which are static linked to an
application program to allow access to the features provided by the
program profile package. => APROFILE.ASM. [MS-DOS: TC, MSC]

CUG259.09-MAKEPRF.C source
By Bob Withers. A utility to build a PRF symbol file from the
information contained in a MAP file created by your linker. [MS-DOS:
TC, MSC]

CUG259.10-MAKEPRF.EXE executable
By Bob Withers. => MAKEPRF.C. [MS-DOS]

CUG259.11-PRFRPT.C source
By Bob Withers. A utility to generate a profile report showing the
areas where an application program is spending its time. [MS-DOS: TC,
MSC]

CUG259.12-PRFRPT.EXE executable
By Bob Withers. => PRFRPT.C. [MS-DOS]

CUG259.13-PROFILE.DOC doc
By Bob Withers. Documentation for PRF. An application profile package.

CUG259.14-PROFILE.H header
By Bob Withers. Header file for profile.

CUG259.15-SCRIO.C source
By Bob Withers. The low level screen access routines. [MS-DOS: TC,
MSC]

CUG259.16-TIMER.C source
By Bob Withers. A general purpose program timer. [MS-DOS: TC, MSC]

CUG259.17-TIMER.EXE executable
By Bob Withers. => TIMER.C. [MS-DOS]

CUG259.18-WIN.C source
By Bob Withers. The high level windowing functions. Machine
independent. => WIN.H. [MS-DOS: TC, MSC]

CUG259.19-WIN.DOC doc
By Bob Withers. Documentation for C-WIN, a public-domain C windowing
system.

CUG259.20-WIN.H header
By Bob Withers. The header file for use by the application code as
well as the windowing library code.

CUG259.21-WINDEMO.C source
By Bob Withers. A short demo program that shows some of the windowing
functions in action. [MS-DOS: TC, MSC]

CUG259.22-WINDEMO.EXE executable
By Bob Withers. => WINDEMO.C. [MS-DOS]

==============================================================================
CUG260 -
-----------

ZMODEM CU AND TTY LIBRARY
By Francois Bergeon. [public] 1 disk. Francois Bergeon of Charleval,
France, contributed this adaptation of ZMODEM, an MS-DOS
implementation of the UNIX file transfer and terminal utility cu, and
a library of routines to manage a PC-clone's serial port. ZMODEM, an
elaborate communications package that supports several file transfer
protocols, was originally contributed by Chuck Forsberg. This version
(and the rest of this volume) compiles under MS-DOS, using MSC v4.0.
The cu utility is documented in a UNIX-style manual page. Functional
descriptions are included for each of the routines in the tty library.
ZMODEM is documented on an earlier release, CUG216.

CUG260.01-CU.C source
CU calls up a UNIX system, a terminal, or possibly a non-UNIX system.
It manages an interactive conversation with possible transfer of text
files. [MS-DOS: MSC4]

CUG260.02-CU.DOC doc
A UNIX-style manual for CV.

CUG260.03-CU.EXE executable
[MS-DOS]

CUG260.04-FILES doc
The contents of the volume.

CUG260.05-GZ
Receive file shell script.

CUG260.06-LTTY.LIB library
Serial port manager library (large model). [MS-DOS: MSC]

CUG260.07-RBSB.C source
By Chuck Forsberg, Francois Bergeon. C functions used by RZ.C & SZ.C:
setting terminal modes, CRC routines. [UNIX, MS-DOS]

CUG260.08-RZ.1 doc
RZ nroff documentation.

CUG260.09-RZ.C source
By Chuck Forsberg, Francois Bergeon. RZ uses error correcting protocol
to receive files over a serial port from a variety of programs running
under UNIX, PC-DOS,CP/M and others. [MS-DOS]

CUG260.10-RZ.DOC doc
A UNIX-style manual for RZ.

CUG260.11-RZ.EXE executable
By Chuck Forsberg, Francois Bergeon. [MS-DOS]

CUG260.12-STTY.LIB library
Serial port manager library (small model). [MS-DOS: MSC]

CUG260.13-SZ.1 doc
SZ nroff documentation.

CUG260.14-SZ.C source
By Chuck Forsberg, Francois Bergeon. SZ uses the ZMODEM, YMODEM, or
XMODEM error correcting protocol to send one or more files over a
serial port to a variety of programs running under PC-DOS, CP/M, UNIX,
VMS and others. [MS-DOS]

CUG260.15-SZ.DOC doc
A UNIX-style manual for SZ.

CUG260.16-SZ.EXE executable
[MS-DOS]

CUG260.17-TTY.DOC doc
Functional descriptions for TTY: General Serial Port Management
Library. => STTY.LIB, LTTY.LIB.

CUG260.18-TTY.H header

CUG260.19-ZM.C source
By Chuck Forsberg. ZMODEM protocol C sources.

CUG260.20-ZMODEM.DOC doc
By Chuck Forsberg. ZMODEM protocol documentation.

CUG260.21-ZMODEM.H header
By Chuck Forsberg. Header file. => SZ.C, RZ.C.

==============================================================================
CUG261 -
-----------

68K CROSS ASSEMBLER, MS-DOS
By Stuart Dole. [public] 1 disk. Stuart Dole has adapted Steve Passe's
68000 cross-assembler to compile with MSC v4.0 under MS-DOS and with
Whitesmith's RT-11 compiler on a PDP-11. Dole has also fixed several
bugs and portability problems. We have included Steve Passe's original
documentation on the disk.

CUG261.01-AS68.C source
By Stuart Dole, Steve Passe. The source of a 68000 assembler. The
directives and mnemonic set closely follow that of the Motorola
Residency Structured Assembler. Bugs are fixed and the program breaks
into overlays for small machines such as PDP-11. [PDP-11, MS-DOS:
MSC4]

CUG261.02-AS68.DOC doc
By Steve Passe. A 24-page users manual.

CUG261.03-AS68.EXE executable
By Stuart Dole, Steve Passe. [MS-DOS]

CUG261.04-AS68.FCH doc
AS68 function chart.

CUG261.05-AS68.H header
By Steve Passe. Definitions for AS68.

CUG261.06-AS68.MAK make
By Stuart Dole. make file for AS68. [MS-DOS: MSC4]

CUG261.07-ASERR.C source
By Stuart Dole, Steve Passe. Reports the error to all open error
channels. [MS-DOS: MSC4]

CUG261.08-ASETC.C source
By Stuart Dole, Steve Passe. Miscellaneous routines. Parse statement
for label and instruction, find operand field. [MS-DOS: MSC4]

CUG261.09-ASINIT.C source
By Stuart Dole, Steve Passe. initialization. overlay for PDP-11.
[PDP-11, MS-DOS: MSC4]

CUG261.10-ASMT.C source
By Stuart Dole, Steve Passe. mnemonic tables for AS68. [MS-DOS: MSC4]

CUG261.11-BC.C source
By Stuart Dole, Steve Passe. code building function of AS 68. split
into root, pass 1 and pass 2 for overlay on PDP-11. [PDP-11, MS-DOS:
MSC4]

CUG261.12-BC1.C source
By Stuart Dole, Steve Passe. code building function of AS68 (pass 7).
[MS-DOS: MSC4]

CUG261.13-BC2.C source
By Stuart Dole, Steve Passe. code building function of AS68 (pass 2).
[MS-DOS: MSC4]

CUG261.14-LIB68.C source
By Stuart Dole, Steve Passe. The library of misc. functions used by
AS68. [MS-DOS: MSC4]

CUG261.15-POP.C source
By Stuart Dole, Steve Passe. The operand field parser. [MS-DOS: MSC4]

CUG261.16-PROTOTYP.H header
By Stuart Dole. prototype external function declarations.

CUG261.17-PSDO.C source
By Stuart Dole, Steve Passe. The pseudo op code for AS68 (root).
[MS-DOS: MSC4]

CUG261.18-PSDO1.C source
By Stuart Dole, Steve Passe. The pseudo op code for AS68. [MS-DOS:
MSC4]

CUG261.19-PSDO2.C source
By Stuart Dole, Steve Passe. The pseudo op code for AS68. [MS-DOS:
MSC4]

CUG261.20-SYMTBL.C source
By Stuart Dole, Steve Passe. The symbol table code for AS68. [MS-DOS:
MSC4]

CUG261.21-TEST.BAT batch
A test batch file.

CUG261.22-TEST.SA source
By Stuart Dole. test file for AS68. Bubble sort.

==============================================================================
CUG262 -
-----------

RAMEY TOOLS
By Robert Ramey. [public] 1 disk. This volume contains the complete
source code for a source level debugger, an execution time profiler, a
general purpose symbol table function library, and a menuing system.
Each of these programs is accompanied by a tutorial article explaining
both the code and the design objectives. The symbol table functions
are similar to some published by Allen Holub in Dr. Dobbs Journal. The
library provides functions to maintain a hashed symbol table, such as
one might use when constructing an assembler or other translator. The
symbol table functions are used by the debugger. The debugger works
without any special compiler generated information. It requires only
that a "hook" be
Librar
inserted in the start-up code, and that the program be able to modify
code space. Thus it should be readily adaptable to many single-user
environments. All of the code is for the Q/C compiler running under
CP/M.

CUG262.01-CMENU.C source
Compiler for menu driven program. This reads a menu test file and
generates Z80 assembly code. => MENU.C, CMENUC.C, SLPTRM.MNU,
SLPTRM.EXM. [CP/M: Q/C]

CUG262.02-CMENU.FMT doc
Nroff style listing commands. => FMT.COM.

CUG262.03-CMENU.TXT doc
Documentation for the menu programs. => CMENU.C, CMENUC.C, MENU.C.

CUG262.04-CMENUC.C source
Compiler for menu driven programs. This reads a menu text file and
generates a C source code. => CMENU.C, MENU.C. [CP/M: Q/C]

CUG262.05-DEBUG.C source
Source level debugger. The debugger doesn't require a target program
to be recompiled. It has features: trace break points at any function
entry, display function arguments and global variables. [CP/M: Q/C]

CUG262.06-DEBUG.F3 doc
Figure of memory segments. => DEBUG.F3.

CUG262.07-DEBUG.FMT doc
Nroff style listing commands. => FMT.COM.

CUG262.08-DEBUG.TXT doc
Documentation for the source level debugger.

CUG262.09-FMT.COM executable
Text format program. [CP/M]

CUG262.10-LJSTUP data
Laser set up data. => FMT.COM.

CUG262.11-LJTBL data
Laser set up data. => FMT.COM.

CUG262.12-MENU.C source
Function which manages dialog according to a hierarchy of menus. The
address of the root menu must be passed as the only parameter. [CP/M:
Q/C]

CUG262.13-MENU.H header
Definitions for menu manager.

CUG262.14-PROFILE.C source
Execution time profiler for Z80 type machine. [CP/M: Q/C]

CUG262.15-PROFILE.FMT doc
Nroff style listing commands. => FMT.COM.

CUG262.16-PROFILE.TXT doc
Documentation for the execution time profiler.

CUG262.17-READ.ME doc
Brief summary of programs.

CUG262.18-SLPTR.C source
Sets up Hewlett Packard laser printer. => SLPTR.EXM. [CP/M:]

CUG262.19-SLPTR.EXM data
Example of the laser printer program in action. => SLPTRM.C.

CUG262.20-SLPTRM.C source
Menu data structures generated by CMENUC. => CMENU.C, SLPTRM.MNU.
[CP/M: Q/C]

CUG262.21-SLPTRM.MNU data
Data file that contains menu test. => SLPTRM.C.

CUG262.22-SYMDEF.H header
Definitions for symbol table manipulation package.

CUG262.23-SYMTBL.C source
General purpose symbol table function library. => SYMTBL.C.

CUG262.24-SYMTBL.FMT doc
Nroff style listing commands. => FMT.COM.

CUG262.25-SYMTBL.TXT doc
Documentation for a general purpose symbol table function library.

CUG262.26-WFC.C source
Word Frequency Analyzer. This demonstrates use of symbol table
library. => SYMTBL.C. [CP/M: Q/C]

==============================================================================
CUG263 -
-----------

c wndw and c ndx
By Roger Stringer. [share2] 2 disks. This windowing library provides
pull-down and pop-up menus and
color and cursor control within multi-layered windows. It includes
input and output functions and file access functions which can manage
ASCII, dBase III Plus and hashed random and relational files. Our
volume is the shareware release of this package. It requires Quick C
2.0, or Microsoft C 5.x, or Turbo C 2.0. The shareware diskette
includes documentation, 10 sample programs and a medium-model library
of 114 functions. The complete source code is available from the
author for a registration fee. The current version 2.02 includes the
c_ndx library that supports multifile and multi-index relational
database access to dBase files and B-tree indexes.

CUG263.01-COMPILE.MSC batch
By Roger Stringer. Compiles, links and runs chosen program from the
c_wndw or c_ndx libraries. [MS-DOS: MSC5, QUICKC]

CUG263.02-COMPILE.TBC batch
By Roger Stringer. Compiles, links and runs chosen program from the
c_wndw or c_ndx libraries. [MS-DOS: TC2.0]

CUG263.03-C_NDX.H header
By Roger Stringer. Definitions and global variables for c_ndx library.
=> MC_NDX.MSC, MC_NDX.TBC. [MS-DOS]

CUG263.04-C_WNDW.H header
By Roger Stringer. Definitions and global variables for c_wndw
library. => MC_WNDW.MSC, MC_WNDW.TBC. [MS-DOS]

CUG263.05-DATETEST.C source
By Roger Stringer. Demonstrates use of date facilities. System date is
read and can be subsequently modified through the keyboard by the
accept() function. Also shows the use of the set_keys() function to
activate the "Esc" key. [MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.06-DATETEST.MAK make
By Roger Stringer. Make file for DATETEST.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.07-DATETEST.PRJ project
By Roger Stringer. Project file for DATETEST.C. [MS-DOS: TC2.0]

CUG263.08-DBREAD.C source
By Roger Stringer. The program reads sequentially through an indexed
dBASE file and displays a field from the file. The data file is opened
with the fileopen() function, and the index file with the ndxopen()
function. The records are read with the ndxread() function, and the
field displayed with the dispdbf() function. [MS-DOS: MSC5, QUICKC2.0,
TC2.0]

CUG263.09-DBREAD.MAK make
By Roger Stringer. Make file for DBREAD.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.10-DBREAD.PRJ project
By Roger Stringer. Project file for DBREAD.C. [MS-DOS: TC2.0]

CUG263.11-DBUPDATE.C source
By Roger Stringer. The program opens an indexed dBASE file and allows
you to read forwards and backwards through it to view and modify the
records. A further option is to add new records to the file. [MS-DOS:
MSC5, QUICKC2.0, TC2.0]

CUG263.12-DBUPDATE.MAK make
By Roger Stringer. Make file for DBUPDATE.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.13-DBUPDATE.PRJ project
By Roger Stringer. Project file for DBUPDATE.C. [MS-DOS: TC2.0]

CUG263.14-HELLO.C source
By Roger Stringer. The classic understanding of a C language
environment is a small program to display the message "hello world" to
the screen. The HELLO.C program is this small program. It opens a
window on the screen and displays the "hello world" message. [MS-DOS:
MSC5, QUICKC2.0, TC2.0]

CUG263.15-HELLO.MAK make
By Roger Stringer. Make file for HELLO.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.16-HELLO.PRJ project
By Roger Stringer. Project file for HELLO.C. [MS-DOS: TC2.0]

CUG263.17-MANUAL doc
By Roger Stringer. Summary manual for the c_wndw and c_ndx libraries
in three parts: an alphabetical list of the functions in the
libraries, a list of the structs and enums defined in the libraries,
and a list of the configuration constants and variables. => MC
WNDW.MSC, MC WNDW.TBC, MC_NDX.MSC, MC_NDX.TBC, C-WNDW.H, C_NDX.H.
[MS-DOS]

CUG263.18-MC_NDX.MSC library
By Roger Stringer. Library of indexed file functions for dBASE type
hashed files and B-tree indexes for Quick C or Microsoft C. => MANUAL.
[MS-DOS: MSC5, QUICKC2.0]

CUG263.19-MC_NDX.TBC library
By Roger Stringer. Library of indexed file functions for dBASE type
hashed files and B-tree indexes for Turbo C. => MANUAL. [MS-DOS:
TC2.0]

CUG263.20-MC_WNDW.MSC library
By Roger Stringer. Windowing library functions for medium memory model
Quick C or Microsoft C. => MANUAL. [MS-DOS: MSC5, QUICKC2.0]

CUG263.21-MC_WNDW.TBC library
By Roger Stringer. Windowing library functions for medium memory model
Turbo C. => MANUAL. [MS-DOS: TC2.0]

CUG263.22-MENU.C source
By Roger Stringer. The program shows the use of the menu() function
with a simple menu in a floating window. It also shows the use of the
flt_wndw() function. [MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.23-MENU.MAK make
By Roger Stringer. Make file for MENU.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.24-MENU.PRJ project
By Roger Stringer. Project file for MENU.C. [MS-DOS: TC2.0]

CUG263.25-MESSAGE.C source
By Roger Stringer. The program shows the use of message and query
windows with the err_wndw() and qry_wndw() functions. It also shows
the use of the acptint() function to enter an integer value from the
keyboard. [MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.26-MESSAGE.MAK make
By Roger Stringer. Make file for MESSAGE.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.27-MESSAGE.PRJ project
By Roger Stringer. Project file for MESSAGE.C. [MS-DOS: TC2.0]

CUG263.28-MONY.C source
By Roger Stringer. The program shows the use of the mony functions.
The mony type is a variable with two implied decimal places that can
contain any value in the range 9,999,999.99- to 9,999,999.99. This
allows most monetary values (ex: prices, financial computations) to be
figured without the performance and rounding problems of doubles.
[MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.29-MONY.MAK make
By Roger Stringer. Make file for MONY.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.30-MONY.PRJ project
By Roger Stringer. Project file for MONY.C. [MS-DOS: TC2.0]

CUG263.31-QUICKC.BAT batch
By Roger Stringer. Installation batch file for Quick C or Microsoft C.
[MS-DOS: MSC5, QUICKC]

CUG263.32-READFILE.C source
By Roger Stringer. The program reads the file created by the
WRITFILE.C program. The file is read by record number. [MS-DOS: MSC5,
QUICKC2.0, TC2.0]

CUG263.33-READFILE.MAK make
By Roger Stringer. Make file for READFILE.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.34-READFILE.PRJ project
By Roger Stringer. Project file for READFILE.C. [MS-DOS: TC2.0]

CUG263.35-README doc
By Roger Stringer. Registration information, installation
instructions, hints and recommendations, and explanations of the 10
sample programs. The libraries require QuickC version 2.0 or
equivalent Microsoft C 5.x. The libraries do not work with Microsoft C
4.x or earlier versions. The sample programs will probably compile and
work with Quick C 1.0, but with linker errors. The libraries require
Turbo C 2.0. If you have 1.0 or 1.5, the sample programs will probably
work with linker errors, but 2.0 is strongly recommended. The sample
programs should be compiled under the medium memory model. [MS-DOS]

CUG263.36-TURBOC.BAT batch
By Roger Stringer. Installation batch file for Turbo C. [MS-DOS:
TC2.0]

CUG263.37-WINDOW.C source
By Roger Stringer. The program shows the creation and removal of
overlapping windows. If you have a color screen notice the automatic
change of colors between windows. The "c_wndw'' library makes and
removes windows quickly, and a half second delay is built into the
program between each window. [MS-DOS: MSC5, QUICKC2.0, TC2.0]

CUG263.38-WINDOW.MAK make
By Roger Stringer. Make file for WINDOW.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.39-WINDOW.PRJ project
By Roger Stringer. Project file for WINDOW.C. [MS-DOS: TC2.0]

CUG263.40-WRITFILE.C source
By Roger Stringer. The program shows the use of file access functions
to create a file with a record size of 61 bytes. You are prompted to
enter the records which are written to the end of the field. [MS-DOS:
MSC5, QUICKC2.0, TC2.0]

CUG263.41-WRITFILE.MAK make
By Roger Stringer. Make file for WRITFILE.C. [MS-DOS: MSC5, QUICKC2.0]

CUG263.42-WRITFILE.PRJ project
By Roger Stringer. Project file for WRITFILE.C. [MS-DOS: TC2.0]

==============================================================================
CUG264 -
-----------

NRO & OTHER PC TOOLS
[public] 1 disk. This disk contains contributions from Pat Villani and
David MacKenzie. Pat Villani of Woodhaven, NY has ported NRO
(originally for BDS C) to MS-DOS under Microsoft v4.0. NRO is a
nroff-like text formatter with credible macro definition facilities.
Villani claims he has attempted to code the adaptation "as portably as
possible," but hasn't tested it in any other environments. David
MacKenzie of Bethesda, MD has submitted a suite of filters and other
utilities for Aztec C under MS-DOS.
Included are cat, cp, du, fmt, Is, mv, rm, touch, tr, wc, and several
others. Each program is accompanied by a very brief manual page and
full source. In an update of the package, MacKenzie added a number of
tools, including chmod (changes a file attribute) and df (reports
freedisk space). Enhancements include the use of wildcards on the
command line for all programs except tr, a larger copy buffer for cp
and mv, and new flags for cp, mv, and rm, and more.

CUG264.01-AN
NRO macro file. => NRO.DOC.

CUG264.02-BYTEFREE.ASM source
By David MacKenzie. Returns the number of bytes free on drive. =>
DF.C. [MS-DOS: AZTEC]

CUG264.03-CAT.C source
By David MacKenzie. Contents of argument files are written to standard
output. => NRO.DOC. [MS-DOS: AZTEC]

CUG264.04-CAT.COM executable
By David MacKenzie. => CAT.C. [MS-DOS]

CUG264.05-CAT.DOC doc
By David MacKenzie. Description of CAT.

CUG264.06-CHMOD.C source
By David MacKenzie. Change file modes. a: archive, h: hidden, r: read
only, s: system. [MS-DOS: AZTEC]

CUG264.07-CHMOD.COM executable
[MS-DOS]

CUG264.08-CHMOD.DOC doc
By David MacKenzie. Description of CHMOD.

CUG264.09-CP.C source
By David MacKenzie. Copy files and directories. [MS-DOS: AZTEC]

CUG264.10-CP.COM executable
[MS-DOS]

CUG264.11-CP.DOC doc
By David MacKenzie. Description of CP. => CP.C.

CUG264.12-DF.C source
By David MacKenzie. Display bytes free on disk. => BYTEFREE.ASM.
[MS-DOS: AZTEC]

CUG264.13-DF.COM executable
[MS-DOS]

CUG264.14-DF.DOC doc
By David MacKenzie. Description of DF. => DF.C.

CUG264.15-DU.C source
By David MacKenzie. Summarize disk usage. [MS-DOS: AZTEC]

CUG264.16-DU.COM executable
[MS-DOS]

CUG264.17-DU.DOC doc
By David MacKenzie. Description of DU.

CUG264.18-FMT.C source
By David MacKenzie. Simple text formatter. It is useful for formatting
mail messages, and can be used to justify a paragraph from within vi
with the key sequence s!3fmt. [MS-DOS: AZTEC]

CUG264.19-FMT.COM executable
[MS-DOS]

CUG264.20-FMT.DOC doc
By David MacKenzie. Description of FMT. => FMT.C.

CUG264.21-GETDIR.ASM source
By David MacKenzie. Call MSDOS to search a file. => GLOBARGS.C.
[MS-DOS: AZTEC]

CUG264.22-GETDIR.H header
By David MacKenzie. Definitions helpful for use with getdir.asm (find
first and next match). => GETDIR.ASM. [MS-DOS: AZTEC]

CUG264.23-GLOBARGS.C source
By David MacKenzie. Link with getdir.asm to form a command line
argument wildcard expander. => GETDIR.ASM, GETDIR.H. [MS-DOS: AZTEC]

CUG264.24-LS.C source
By David MacKenzie. List contents of directory. => GETDIR.H. [MS-DOS:
AZTEC]

CUG264.25-LS.COM executable
[MS-DOS]

CUG264.26-LS.DOC doc
By David MacKenzie. Description of LS. => LS.C.

CUG264.27-MAKEFILE make
By David MacKenzie. make. cat. cp chmod, df, du, fmt, Is, mv, rm,
strings, touch, tr, vis, wc. [MS-DOS: AZTEC]

CUG264.28-MAN.DOC doc
By Pat Villani. Output file after processed by NRO. => MAN.NRO.

CUG264.29-MAN.NRO doc
By Pat Villani. Text file with NRO commands. => MAN.DOC.

CUG264.30-MV.C source
By David MacKenzie. Move files and directories -f:force,
-i:interactive, -v:verbose. [MS-DOS: AZTEC]

CUG264.31-MV.COM executable
[MS-DOS]

CUG264.32-MV.DOC doc
By David MacKenzie. Description of MV. => MV.C.

CUG264.33-NRO make
By Pat Villani. Makefile to create NRO executable image. => NRO.C.
[MS-DOS: MSC5, MSC4]

CUG264.34-NRO.C source
By Pat Villani, Stephen L. Browning. A text processor and formatter
based on the design provided in "Softwvare Tools" by Kernighan and
Plauger. It uses dot commands. => NRO.H. [MS-DOS: MSC5, MSC4]

CUG264.35-NRO.DOC doc
By Pat Villani, Stephen L. Browning. Documentation for NRO.C providing
a synposis and descriptions of the text processing dot commands. =>
NRO.H, AN. [MS-DOS: MSCS, MSC4]

CUG264.36-NRO.E,YE executable
[MS-DOS]

CUG264.37-NRO.H header
By Pat Villani, Stephen L. Browning. Definitions for NRO program.
[MS-DOS: MSC5, MSC4]

CUG264.38-NRO.NRO doc
NRO documentation with NRO commands.

CUG264.39-NROCMD.C source
By Pat Villani, Stephen L. Browning. Command processor for NRO. =>
NRO.H. [MS-DOS: MSC5, MSC4]

CUG264.40-NROCOM.C source
By Pat Villani, Stephen L. Browning. External common for NRO. [MS-DOS:
MSC5, MSC4]

CUG264.41-NRODEF.C source
By Pat Villani, Stephen L. Browning. External common for NRO. [MS-DOS:
MSC5, MSC4]

CUG264.42-NROTXT.C source
By Pat Villani, Stephen L. Browning. Text processing portion of NRO.
[MS-DOS: MSC5, MSC4]

CUG264.43-READ.ME doc
By Pat Villani. Brief users guide for NRO.

CUG264.44-READ ME doc
By David MacKenzie. Modification history for PC UNIX Tools.

CUG264.45-RM.C source
By David MacKenzie. Remove files and directories -f:force, -i:
interactive, -r: recursively, -v:verbose. [MS-DOS: AZTEC]

CUG264.46-RM.COM executable
[MS-DOS]

CUG264.47-RM.DOC doc
By David MacKenzie. Description of RM. => RM.C.

CUG264.48-SKELETON.DOC doc
Sample output after processed by NRO. => SKELETON.NRO.

CUG264.49-SKELETON.NRO doc
Sample text file with NRO commands. => SKELETON.DOC.

CUG264.50-STRINGS.C source
By David MacKenzie. Find printable strings in binary files. [MS-DOS:
AZTEC]

CUG264.51-STRINGS.COM executable
[MS-DOS]

CUG264.52-STRINGS.DOC doc
By David MacKenzie. Description of STRINGS.

CUG264.53-TOUCH.C source
By David MacKenzie. Set time of files to current time. [MS-DOS: AZTEC]

CUG264.54-TOUCH.COM executable
[MS-DOS]

CUG264.55-TOUCH.DOC doc
By David MacKenzie. Description of TOUCH. => TOUCH.C.

CUG264.56-TR.C source
By David MacKenzie. Transliterate characters. [MS-DOS: AZTEC]

CUG264.57-TR.COM executable
[MS-DOS]

CUG264.58-TR.DOC doc
By David MacKenzie. Description of TR.

CUG264.59-VIS.C source
By David MacKenzie. Visual display of files -e: show the end of lines
as '$', -t: show tabs as ' ^ 1'. [MS-DOS: AZTEC]

CUG264.60-VIS.COM executable
[MS-DOS]

CUG264.61-VIS.DOC doc
By David MacKenzie. Description of VIS.

CUG264.62-WC.C source
By David MacKenzie. Word count; -1: number of lines, -w: number of
words, -c: number of characters. [MS-DOS: AZTEC]

CUG264.63-WC.COM executable
[MS-DOS]

CUG264.64-WC.DOC doc
By David MacKenzie. Description of WC.

==============================================================================
CUG265 -
-----------

cpio Installation Kit [public] 2 disks. The kit includes two public
domain versions of the UNIX archive utility cpio, several sample "raw"
loaders, a test pattern disk and instructions for installation. This
kit will greatly facilitate the exchange of source code between
dissimilar systems. The files to be transferred are concatenated into
a single file called an archive. The resulting archive file is a
normal file to the native operating system, just as cpio is a normal
executable program. A blank disk is formatted using the native format
facilities. The archive file is "dumped" to the disk using a special
"raw" write facility. This facility bypasses the operating system and
writes the archive file on consecutive sectors of the disk, beginning
with the first writable sector. Because the operating system is
bypassed, there is no directory on the disk. The dump utility must
report how many sectors were required by the archive file. T.W.
Kalebaugh (KS) has created a loader and dump utility for AT&T 3B1
(UNIX PC, 7300 and Convergent Technologies S-50) so that 3B1 users can
read our disks and write disks that we can read. The updated disk
includes his new subroutines and makefiles. For more details see the
narrative description of this package in Section 2.

CUG265.01-BIORDSCT.C source
By Rainer Gerhards. Sector read routine for MS-DOS. [MS-DOS: MSC] Only
works IBM 360 kb format.

CUG265.02-BIOWRSCT.C source
By Rainer Gerhards. Sector write routine for MS-DOS. [MS-DOS: MSC]

CUG265.03-CCPIO.C source
By John Snaider. Public domain CPIO program. CPIO is a UNIX file
archive command. It is used for backup or data exchange using disk
media. [MS-DOS: TC ECO-C, MSC5, LC3, MSC4]

CUG265.04-CP3SCTRD.C source
By Tim Prince. Sector read routine for CP/M T.3.X. [CP/M3 x: ECO-C22]

CUG265.05-CP3SCTWR.C source
By Tim Prince. Sector write routine for CP/M V.3.X. [CP/M3 x: ECO-C22]

CUG265.06-CUGCPIO.C source
By Rainer Gerhards. Public domain CPIO program. CPIO does file archive
and file extraction. Low-level disk read/write utilities are used for
the specified system. => SECTRD.C, SECTWR.C. [STARSYS, UNIX MS-DOS:
TC, MSC, DLC] Only works IBM 360 kb format.

CUG265.07-CUGREAD.C source
By Rainer Gerhards. List utility of archive file. => CUGCPIO.C.

CUG265.08-ENVIRON.H header
By Rainer Gerhards. Header file for cpio program. => CUGCPIO.C.

CUG265.09-FILE.DOC doc
A brief description of files.

CUG265.10-FORMAT.DOC doc
By Rainer Gerhards. Documentation about exchange media.

CUG265.11-FORMDRAF.DOC doc
By Rainer Gerhards. Format draft.

CUG265.12-LETTER.DOC doc
By Rainer Gerhards.

CUG265.13-LETTER.TXT doc
By Rainer Gerhards.

CUG265.14-LOAD.C source
By Robert Ward. Loader for MSDOS customizes defines for drive
selection, sectors, blocks, characters, and sector map, to make high
level functions conform to the disk format. [MS-DOS: MSC]

CUG265.15-MAKEFILE make
By Rainer Gerhards. Makefile for CUGCPIO. => CUGCPIO.C. [MS-DOS: MSC]

CUG265.16-MAKEFILE.BIO make
By Rainer Gerhards. Makefile for BIOS version of CUGCPIO. =>
CUGCPIO.C. [MS-DOS: MSC]

CUG265.17-MAKEFILE.DOS make
By Rainer Gerhards. Makefile for DOS version of CUGCPIO. [MS-DOS: MSC]
Uses MASM.

CUG265.18-MAKEFILE.OS2 make
By Rainer Gerhards. Makefile for OS/2 version of CUGCPIO. =>
CUGCPIO.C. [OS/2: MSC]

CUG265.19-NUMBER.C source
Generates test input file for cpio.

CUG265.20-NUMBER.EXE executable

CUG265.21-NUMBER.OBJ object

CUG265.22-OS2RDSCT.C source
By Rainer Gerhards. Sector read routine for OS/2. => CUGCPIO.C. [OS/2:
MSC]

CUG265.23-OS2WRSCT.C source
By Rainer Gerhards. Sector write routine for OS/2. => CUGCPIO.C.
[OS/2]

CUG265.24-PORTABLE.DOC doc
By Kenji Hino. Portability note describing the compilation of CUGCPIO
by Gerhards and CPIO by Snaider.

CUG265.25-RDFD525.C source
By John E. Van Deusen 111. Loader for UNIX. [UNIX: UNIX Cl

CUG265.26-RDSCT.ASM source
By Rainer Gerhards. Sector read routine for MSDOS. => CUGCPIO.C. I
MASM Assembly source.

CUG265.27-RDSCT3B1.C source
By T. W. Kalebaugh. Sector read routine for AT&T 3Bl drive..

CUG265.28-SECTRD.C source
By Rainer Gerhards. High level sector loader.

CUG265.29-SECTWR.C source
By Rainer Gerhards. High level sector write utility.

CUG265.30-UNXRDSCT.C source
By Rainer Gerhards. Sector read routine for UNIX/XENIX. [UNIX/XENIX]

CUG265.31-UNXWRSCT.C source
By Rainer Gerhards. Sector write routine for UNIX/XENIX.

CUG265.32-WRSCT.ASM source
By Rainer Gerhards. Sector write routine for MSDOS. [MS-DOS: MASM]
Assembly source.

CUG265.33-WRSCT3B1.C source
By T. W. Kalebaugh. Sector write routine for AT&T 3B1 drive.

==============================================================================
CUG266 -
-----------

microPLOX
By Robert L. Patton, Jr.. [public] 1 disk. MicroPLOX is an
English-like, interpreted chart description language for Epson
compatible dot matrix printers. MicroPLOX allows any user to create a
variety of chart specifications, change and redraw each at any time.
MicroPLOX will produce line, dot, and bar charts in two fonts, draw
reference lines and handle numeric and date data (in yymmdd form). It
will allow many plots on one chart either overlaid on each other or in
separate areas. Originally for CP/M, this version has been converted
to compile under MS-DOS with Microsoft C v4.0 and v5.0 and with Mix
Power C. The current version 5.0 includes multi-color support for CGA,
EGA, and VGA monitors, and allows multiple data file use from one
command file.
For more details see the narrative description of this package in
Section 2.

CUG266.01-BIKE.DAT data
Bar Chart example values for PLOX. => BIKE.PIC.

CUG266.02-BIKE.PIC data
Bicycle mileage Bar Chart example statement for PLOX. => BIKE.DAT,
PLOX.C.

CUG266.03-BIKE88.DAT data
Bicycle miles ridden bar chart example values for PLOX, illustrating
two separate exes for multiple plots in one area. => BIKE88.PIC.

CUG266.04-BIKE88.PIC data
Bicycle mileage bar chart example statements illustrates plots to
separate Y axes (left and right), a word axis, and labeling of plot
points. => PLOX.C, BIKE88.DAT.

CUG266.05-CONLIB.C source
Plox keyword handling modules. => DATLIB.C, DRAWLIB.C, PXLIB.C,
WORDLIB.C, PLOX.C.

CUG266.06-DATLIB.C source
PLOX Data Handling Package, handles conversion of dates and
coordinates for file pointers. => PLOX.C, CONLIB.C.

CUG266.07-DRAWLIB.C source
Front end plotting utilities for PLOX. => PLOX.C, CONLIB.C, MATHLIB.C.

CUG266.08-GROWHIST.DAT data
PLOX data values example of many small, single plots in one picture.
=> GROWHIST.PIC.

CUG266.09-GROWHIST.PIC data
PLOX data statements example of many small, single plots in one
picture. => GROWHIST.DAT, PLOX.C.

CUG266.10-LINES.DAT data
Data for Micro PLOX line types test. PLOX data value sample of line
and point types. => LINES.PIC.

CUG266.11-LINES.PIC data
Display Micro PLOX line and point types. PLOX data statements. Sample
of line and point types. => LINES.DAT, PLOX.C.

CUG266.12-LPTR.C source
Line printer control routines for Epsch ESC* 5 (plotter mode). =>
PLOX.C.

CUG266.13-LPTR2.C source
Line printer control routines for Epson ESC K (60 x 72). => PLOX.C.

CUG266.14-MATHLIB.C source
General math functions library for PLOX. => PLOX.C, CONLIB.C.

CUG266.15-MILEFORM.PIC data
PLOX data statements example of a simple form. => PLOX.C.

CUG266.16-NEINVEST.DAT data
PLOX data value example of two line plots in one area with a legend.
=> NEINVEST.PIC.

CUG266.17-NEINVEST.PIC data
PLOX data valve example of two line plots in one area with a legend.
NEINVEST.DAT, PLOX.C.

CUG266.18-PLOTCGA.C source
A Quality-Deferred device driver for CGA graphics using the Epson
driver as a base, for quick preview image of PLOX charts with
unadjusted aspect ratio. => PLOTLIB.C PLOX.C. Uses MIX graphics calls.

CUG266.19-PLOTCGA.EXE executable
=> PLOTCGA.C.

CUG266.20-PLOTEGA.C source
A Quality-Deferred device driver for EGA graphics using the Epson
driver as a base, for quick preview image of PLOX charts with
unadjusted aspect ratio. => PLOTLIBE.C, PLOX.C. Uses MIX graphics
calls.

CUG266.21-PLOTEGA.EXE executable
=> PLOTEGA.C.

CUG266.22-PLOTEPS.C source
Reads a file of binary encoded plot commands, creates a memory image
of them and then sends the image to the printer. => LPTR.C, PLOTLIB.C,
PLOX.C. Requires Epson Esc $5 (plotter mode).

CUG266.23-PLOTEPS.EXE executable

CUG266.24-PLOTEPS2.C source
Reads a file on binary encoded plot commands, creates a memory image
of them and then sends the image to the printer. => LPTR2.C,
PLOTLIB.C, PLOX.C. Requires Esc K mode with 72 bits per inch vertical
and 60 bits per inch horizontal.

CUG266.25-PLOTEPS2.EXE executable

CUG266.26-PLOTHERC.C source
A Quality-Deferred device driver for Hercules graphics using the Epson
driver as a base, for quick preview image of PLOX charts with
unadjusted aspect ratio. => PLOTLIBH.C, PLOX.C.

CUG266.27-PLOTHERC.EXE executable
=> PLOTHERC.C.

CUG266.28-PLOTLIB.C source
PLOX library of basic plotting routines for dot-matrix printer. =>
PLOX.C.

CUG266.29-PLOTLIBC.C source
PLOX library of basic plotting routines for CGA graphics. =>
PLOTCGA.C, PLOX.C.

CUG266.30-PLOTLIBE.C source
PLOX library of basic plotting routines for EGA graphics. =>
PLOTEGA.C, PLOX.C.

CUG266.31-PLOTLIBH.C source
PLOX Library of basic plotting routines for Hercules graphics. =>
PLOTHERC.C, PLOX.C.

CUG266.32-PLOX.C source
MICRO PLOX. Reads a file of PLOX chart specification statements and
executes them as encountered to produce a binary file of plot
commands. => CONLIB.C, DATLIB.C, DRAWLIB.C, MATHLIB.C, PXLIB.C,
WORDLIB.C, PLOX.H, PLOX.MK, LPTR.C, LPTR2.C, PLOTEPS.C, PLOTEPS2.C,
PLOTLIB.C, PLOTLIBH.C, PLOTHERC.C, PLOTLIBE.C, PLOTEGA.C, PLOTLIBC.C,
PLOTCGA.C. [CP/M, UNIX, MS-DOS] Requires EPSON FX-80 compatible
printer.

CUG266.33-PLOX.DOC doc
MICRO PLOX. Tutorial on PLOX usage. => PLOX.REF, PLOX.C. Requires
EPSON FX-80 compatible printer.

CUG266.34-PLOX.EXE executable
=> PLOX.C.

CUG266.35-PLOX.H header
Micro PLOX standard header file, global constants and data type
definitions. => PLOX.C.

CUG266.36-PLOX.MK make
Make file for compiling micro PLOX. PLOX.C.

CUG266.37-PLOX.REF doc
PLOX Specification Outline. => PLOX.DOC, PLOX.C.

CUG266.38-PLOXHIST.DOC doc
The History and Rationale of micro PLOX. Description of original
purpose of PLOX, its evolution and flaws. => PLOX.C. Describes
desireable improvements which have not been implemented, application
is still limited to EPSON FX-80 compatible printers.

CUG266.39-PXLIB.C source
front end plot drawing routines for PLOX. => MATHLIB.C, PLOX.C.

CUG266.40-READ.ME doc
Introduction to PLOX and its available documentation. => READ.ME2,
PLOX.C.

CUG266.41-READ.ME2 doc
Documentation of PLOX enhancements and Quality-Deferred screen
graphics drivers. => READ.ME, PLOX.C.

CUG266.42-SCATTER.DAT data
PLOX data values example of scatter diagram. => SCATTER.PIC.

CUG266.43-SCATTER.PIC data
PLOX example of scatter diagram data statements. => SCATTER.DAT,
PLOX.C.

CUG266.44-STAR.DAT data
Data for a five pointed star with a 1 inch radius. PLOX example of
simple line drawing data values. => STAR.PIC.

CUG266.45-STAR.PIC data
Draws a five pointed star of 1 inch radius. PLOX example of simple
line drawing data statements. => STAR.DAT, PLOX.C.

CUG266.46-SUMMARY.DOC doc
Micro PLOX summary description. PLOX.C.

CUG266.47-UPDATE.TXT doc
Porting Microplox to XENIX. Source code segments and extensive
documentation of adjustments and difficulties involved in porting
Microplox to XENIX, this text is extracted from The C Users Journal
volume 7.4 and analyzes implementation methods used in PLOX. =>
PLOX.C.

CUG266.48-WORDAXIS.DAT data
PLOX example of data values used to build a word axis. =>
WORDAXIS.PIC.

CUG266.49-WORDAXIS.PIC data
PLOX example of data statements used to build a word axis. =>
WORDAXIS.DAT PLOX.C.

CUG266.50-WORDLIB.C source
Keyword-value Text Handling Routines. PLOX module for locating
keyword-value pairs in PLOX specification statements. => PLOX.C.

==============================================================================
CUG267 -
-----------

8085, 2650 & S6 Cross Assemblers
By William C. Colley, III. [public] 1 disk. This volume contains cross
assemblers for Intel 8080 and 8085, Signetics 2650, and SGS S6 micro
processors. The program is written in portable C. All assembler
features are supported except relocation, linkage, and macros. The
program has compiled successfully on two UNIX compilers, five MSDOS
compilers, and two CP/M compilers.

CUG267.01-A26.C source
2650 Cross-Assembler (Portable). Main program and line assembly
routines for the assembler. Assembles code for Signetics 2650
microprocessor. Written in Portable C. => A26.H, A26.DOC, A26EVAL.C
A26UTIL.C, TEST26.ASM, READ.ME4. [QNIX, PCDOS, HP-UX, CP/M-86,
CP/M-80, MS-DOS: AZTEC Cll, AZTEC C86, MSC, ECO-C, LC, QNIX C, C186] A
port to BDS C would be extremely difficult. A port to Toolworks C is
untried. All assembler features are supported except relocation,
linkage, and macros.

CUG267.02-A26.DOC doc
Simple header document for A26. => A26.H.

CUG267.03-A26.H header
This header file contains the global constants and data type
definitions for all modules of the A26 cross-assembler, as well as
compilation and linkage instructions. => A26.C.

CUG267.04-A26EVAL.C source
This file contains the A26 assembler's expression evaluator and
lexical analyzer. => A26.C.

CUG267.05-A26UTIL.C source
Contains utility packages for symbol table building and searching,
opcode and operator table searching, listing file output, hex file
output, and error flagging for the A26 cross-assembler. => A26.C.
MSDOS far pointer is NOT compatible with the int type, must use char
type. Fatal error occurs if memory cannot hold new symbol for symbol
table, if the disk fills up, or if a file opens improperly.

CUG267.06-A85.C source
8085 Cross-Assembler (Portable). This program lets you use your
computer to assemble code for the Intel 8080 and 8085 microprocessors.
The program is written in portable C rather than BDS C. Main program
and line assembly routines. => A85.H, A85.DOC, A85UTIL.C, A85EVAL.C,
TEST85.ASM, READ.ME4. [PCDOS, HP-UX CP/M-86, CP/M-80, UNIX, MS-DOS:
AZTEC CII, AZTEC C86, MSC, ECO-C, LC, QNIX C, C186] All assembler
features are supported except relocation, linkage, and macros. A port
to BPS would be extremely difficult. A port to Toolworks C is untried.

CUG267.07-A85.DOC doc
A simple Header document for A85. => A85.C.

CUG267.08-A85.H header
Header file containing global constants and data type definitions for
all modules of the cross-assembler A85. Also compilation and linkage
instructions. => A85.C.

CUG267.09-A85EVAL.C source
Contains the A85 assembler's expression evaluator and lexical
analyzer. => A85.C.

CUG267.10-A85UTIL.C source
Module containing utility packages for symbol table building and
searching, opcode and operator table searching, listing file output,
hex file output, and error flagging for the A85 cross-assembler.
A85.C. MSDOS far pointer is NOT compatible with the INT type, must use
CHAR type. Fatal error occurs if memory cannot hold new symbol for
symbol table, if disk fills up, or if a file opens improperly.

CUG267.11-AS6.C source
S6 Cross-Assembler (Portable). Assembles code for the SGS S6 family of
microprocessors. The Program is written in Portable C rather than BDS
C. => AS6.DOC, AS6.H, AS6EVAL.C, AS6UTIL.C, TESTS6.ASM, READ.ME4.
IQNIX, PCDOS, HP-UX, CP/M-86, CP/M-80, MS-DOS: AZTEC Cll, AZTEC C86,
MSC, ECO-C, LC, QNIX C, C186] All assembler features are supported
except relocation, linkage, and macros. A port to BDS C would be
extremely difficult. A port to Toolworks C is untried.

CUG267.12-AS6.DOC doc
Simple header documentation for AS6 cross-assembler. => AS6.C.

CUG267.13-AS6.H header
Header file containing the global constants and data type definitions
for all modules of the AS6 cross-assembler. Also compilation and
linkage instructions. => AS6.C.

CUG267.14-AS6EVAL.C source
AS6 assembler's expression evaluator and lexical analyzer. => AS6.C.

CUG267.15-AS6UTIL.C source
Module containing utility packages for symbol table building and
searching, opcode and operator table searching, listing file output,
key file output, and error flagging for the AS6 cross-assembler. =>
AS6.C. MSDOS far pointer is NOT compatible with the INT type, must use
CHAR type. Fatal error occurs if memory cannot hold new symbol for
symbol table, if disk fills up, or if a file opens improperly.

CUG267.16-READ.ME4 doc
Can't Stop Cross-Assembling (Portably). General introduction for the
8085, 2650, and S6 cross-assemblers. => AS6.C, A26.C, A85.C.

CUG267.17-TEST26.ASM source
2650 Cross-Assembler Test Source File.

CUG267.18-TEST85.ASM source
8085 Cross-Assembler Test Source File. => A85.C.

CUG267.19-TESTS6.ASM source
S6 Opcodes Numerical Order to Test S6 Cross-Asmblr. => AS6.C.

==============================================================================
CUG268 -
-----------

Unicorn Library for Microsoft C
By David A. Miller. [public] 2 disks. The Unicorn Library (v4.0),
contains over 200 functions written in C and assembly (source code is
not provided). The library includes various functions: windows,
graphics (points, lines, circles, ellipses, rotations, etc.), turtle
(penup, pendown, turnright, etc.), sound, pallette, mouse, joystick,
printer controls. Some functions are specific to the Tandy 1000. The
manual on the disk describes each function and gives a sample program
illustrating its use. CUG268 provides the library for Microsoft C
v4.0, CUG269 is for Turbo C.

CUG268.01-BORDER.H header
Defines several border types that may be used in building window
programs. => UCTURBO.LIB.

CUG268.02-DEMOIBM.C source
Demonstration of some of the features contained in the UC4 library. It
uses the 4-color medium resolution mode of the IBM PC and compatibles.
=> DEMOIBM.EXE, UCTURBO.LIB. [MS-DOS: TC]

CUG268.03-DEMOIBM.EXE executable
=> DEMOIBM.C.

CUG268.04-DEMOTDY.C source
Demonstrates features contained in the Unicorn Library. It uses the 1
6-color medium resolution mode of the Tandy 1000 computer. =>
DEMOTDY.EXE, UCTUR_TD.LIB. [MS-DOS: TC]

CUG268.05-DEMOTDY.EXE executable
=> DEMOTDY.C.

CUG268.06-DOSLIB.H header
Global constants. => UCTURBO.LIB.

CUG268.07-EQUIP.H header
This header defines a structure to hold equipment installed data. =>
UCTURBO.LIB.

CUG268.08-KEYDEF.H header
Defines internal key codes for special extended keys on IBM and clone
computers. => UCTURBO.LIB.

CUG268.09-LABEL.C source
Prints disk label set for Unicorn Library disks on standard mailing
label forms using the IBM graphics printer. => UCTURBO.LIB.

CUG268.10-LABEL.EXE executable
=> LABEL.C.

CUG268.11-LABEL.PRJ batch
Runs LABEL.C and UCTURBO.LIB. => LABEL.C, UCTURBO.LIB.

CUG268.12-MANUAL1.DOC doc
Unicorn Library Documentation 3.1. Contains registration information,
operating instructions, and function references with sample programs.
Part 1 of 3 for Unicorn Library 4.0. => UCTURBO.LIB, MANUAL2.DOC. [TC]

CUG268.13-MANUAL2.DOC doc
Unicorn Library Documentation 3.1. Continuation of MANUAL1.DOC, Part 2
of 3. => UCTURBO.LIB, MANUAL3.DOC.

CUG268.14-MANUAL3.DOC doc
Unicorn Library Documentation 3.1. Continuation of MANUAL2.DOC, Part 3
of 3. => UCTURBO.LIB.

CUG268.15-READ.ME doc
General description of the Unicorn Library package and its
requirements. => README.1ST, UCTURBO.LIB.

CUG268.16-README.1ST doc
Change of Author's address. => UCTURBO.LIB, READ.ME.

CUG268.17-REF.DOC doc
Quick Reference in function Prototype Format. => UCTURBO.LIB. [MS-DOS:
TC]

CUG268.18-TESTDX.C source
A test of the Unicorn #1 Library with a daisy wheel printer. =>
UCTURBO.LIB, TESTDX.EXE. [MS-DOS: TC]

CUG268.19-TESTDX.EXE executable
=> TESTDX.C.

CUG268.20-TESTEQP.C source
Reads and displays computer status information (equipment status in
decimal and hex, kilobytes of memory installed, model code number in
decimal and hex), using functions from the Unicorn #1 Library. =>
TESTEQP.EXE, UCTURBO.LIB.

CUG268.21-TESTEQP.EXE executable
=> TESTEQP.C.

CUG268.22-TESTGRPR.C source
Test program for IBM Graphics printer and Unicorn #1 Library. =>
TESTGRPR.EXE UCTURBO.LIB.

CUG268.23-TESTGRPR.EXE executable
=> TESTGRPR.C.

CUG268.24-TESTSND.C source
Sound Testing Program. => TESTSND.EXE, UCTURBO.LIB.

CUG268.25-TESTSND.EXE executable
=> TESTSND.C.

CUG268.26-UC.H header
Unicorn Library Header for Version 4.0. Global constants and data type
definitions. => UCTURBO.LIB.

CUG268.27-UCBIOS.H header
Defines BIOS interrupts and routines and disk routines. =>
UCTURBO.LIB.

CUG268.28-UCLIB4.TXT doc
Description of Unicorn Library, its purpose and adaptability. =>
UCTURBO.LIB UCTUR_TD.LIB.

CUG268.29-UCTURBO.LIB library
A library of over 200 graphics, sound, screen handling, window,
printer, joystick, and mouse functions for IBM PC. => UCLIB4.TXT.
[MS-DOS: TC] Source code available to those who register with author.

CUG268.30-UCTUR_TD.LIB library
A library of over 200 graphics, sound, screen handling, window,
printer, joystick, and mouse functions for Tandy 1000. => DEMOTDY.C,
UCTURBO.LIB. [MS-DOS: TC] Source code available to those who register
with author.

CUG268.31-UCVIDEO.H header
Supplies all definitions required to deal with the video state of the
machine. => UCTURBO.LIB.

CUG268.32-VERSION.DOC doc
Header information for the Unicorn Library 4.00. => UCTURBO.LIB.

CUG268.33-WINDOW.H header
Definitions required for all window functions and programs using
window functions. => UCTURBO.LIB.

CUG268.34-WTEST.C source
Test of Unicorn Library window functions. => UCTURBO.LIB, WTEST.EXE.
[MS-DOS: TC, MSC]

CUG268.35-WTEST.EXE executable
WTEST.C.

==============================================================================
CUG269 -
-----------

Unicorn Library for Turbo C
By David A. Miller. [public] 1 disk. See CUG268 for description.
CUG269 is for Turbo C. CUG268 provides the library for Microsoft C
v4.0.

CUG269.01-BORDER.H header
Defines several border types that may be used in building window
programs. => UNICORN.LIB.

CUG269.02-DEMOIBM.C source
A graphics demo program for IBM PC and compatibles with a CGA or
equivalent. This uses mode 4 (4-color medium resolution graphics). =>
UNICORN.LIB.

CUG269.03-DEMOIBM.EXE executable
=> DEMOIBM.C.

CUG269.04-DOSLIB.H header
doslib header. Global definitions. => UNICORN.LIB.

CUG269.05-EQUIP.H header
Defines a structure to hold equipment installed data. => UNICORN.LIB.

CUG269.06-KEYDEF.H header
Defines internal key codes for special extended keys on IBM and clone
computers. => UNICORN.LIB.

CUG269.07-MANUAL1.DOC doc
Unicorn Library Documentation 3.1. Contains registration information,
operating instructions, and function references with sample programs.
Part 1 of 3 for Unicorn Library 4.0. => UNICORN.LIB, MANUAL2.DOC.

CUG269.08-MANUAL2.DOC doc
Unicorn Library Documentation 3.1. Continuation of MANUAL3.DOC, Part 2
of 3. => UNICORN.LIB, MANUAL3.DOC.

CUG269.09-MANUAL3.DOC doc
Unicorn 1 Documentation 3.1. Continuation of MANUAL2.DOC, Part 3 of 3.
=> UNICORN.LIB.

CUG269.10-READ.ME doc
Unicorn Library Documentation 4.0. Contains registration information
and description of Demo-related files. UNICORN.LIB.

CUG269.11-TESTDX.C source
Test of Unicorn #1 Library with a daisy-wheel printer. => UNICORN.LIB.

CUG269.12-TESTDX.EXE executable
=> DEMOIBM.C.

CUG269.13-TESTEQP.C source
Displays information on equipment status in decimal and hex, kilobytes
of memory installed, the model code number in decimal and hex, using
Unicorn #1 Library functions. => UNICORN.LIB.

CUG269.14-TESTEQP.EXE executable
TESTEQP.C.

CUG269.15-TESTGRPR.C source
Test program to check the IBM graphics printer and the Unicorn #1
Library. => UNICORN.LIB.

CUG269.16-TESTGRPR.EXE executable
=> TESTGRPR.C.

CUG269.17-TESTSND.C source
Sound Testing Program!. => UNICORN.LIB.

CUG269.18-TESTSND.EXE executable
=> TESTSND.C.

CUG269.19-UC.H header
Global constants and data type definitions. => UNICORN.LIB.

CUG269.20-UCBIOS.H header
Defines BIOS interrupts, routines and disk routines. => UNICORN.LIB.

CUG269.21-UCLIB4.TXT doc
Description of Unicorn Library, its purpose and adaptability. =>
UNICORN.LIB, UCTANDY.LIB. Tandy demo programs (DEMOTDY.C, DEMOTDY.EXE)
are not on distribution disk for UCTANDY.LIB.

CUG269.22-UCTANDY.LIB library
A library of over 200 graphics, sound, screen handling, window,
printer, joystick and mouse functions for Tandy 1000. => UNICORN.LIB,
UCLIB4.TXT. [MS-DOS: MSC4] Source code is available only to users who
register with the author. Tandy Demo programs for Unicorn Library
(DEMOTDY.C, DEMOTDY.EXE) are no on distribution disk (see UCL1
B4.TXT).

CUG269.23-UCVIDEO.H header
Supplies all definitions required to deal with the video state of the
machine. => UNICORN.LIB.

CUG269.24-UNICORN.LIB library
A library of over 200 graphics, sound, screen handling, window,
printer, joystick and mouse functions for IBM PC and compatibles. =>
UCLIB4.TXT. [MS-DOS: MSC4] Source code is available only to users who
register with the author.

CUG269.25-UNICORN.LST doc
A list of functions, associated categories, and associated offset,
code and data size. UNICORN.LIB.

CUG269.26-WINDOW.H header
This header is to be used for all window functions and programs using
window functions. => UNICORN.LIB.

CUG269.27-WTEST.C source
Test of Unicorn Library Window functions. => UNICORN.LIB.

CUG269.28-WTEST.EXE executable
=> WTEST.C.

==============================================================================
CUG270 -
-----------

Miscellany X
[public] 1 disk. This volume is a collection of small programs
submitted by five programmers. Marc Bosser, NY has contributed four
video routines: cursoroff(), exwriteM(), fill(), and xy(). These are
implemented by using IBM video ROM BIOS calls.
Les Aldridge from NJ has submitted EST, a program that searches for
the largEST, smallEST, oldEST, or newEST files. This program is
specific to MS-DOS and exploits the Microdoft C v5.x run-time library.
Scott Holland from NJ has submitted a three dimensional tic-tac-toe
player. The human player enters moves as three digit numbers which
represent the level, row and column. For portability, the display is
generated using standard I/O routines. Code for several additional
strategy levels are supplied, allowing the human to play against
different machine strategies. Ralf E. Brendler has contributed
UNIX-like utilities: diff, delta, and apply. Although they were
developed under Microsoft OS/2 v1.0 and v1.1 using MSC v5.1, they use
no OS/2 specific calls and should be portable to any ANSI Standard C
compiler. Finally, ATOF.C contributed by Dan Schechter is a set of
functions including atof() and strod(). Schechter implemented these
functions for Aztec C v4.1, which has a bug in atof() (scheduled to be
fixed in the next release) and has no strod().

CUG270.01-APPLY.C source
By Ralf E. Brendler. Apply a delta script to a text file. A utility
which will apply a delta created using DELTA.EXE to a source file.
This effectively mimics the operation of UNIX ed's script editing. =>
DELTA.C APPLY.H, DIFF.DOC. [OS/2: MSC5] Uses only family API calls
therefore can be bound to run under MS-DOS 3.X as well as MS-OS/2v1.X.
Uses no OS/2 specific calls therefore should be portable to any ANSI
standard compiler.

CUG270.02-APPLY.EXE executable
By Ralf E. Brendler. => APPLY.C.

CUG270.03-APPLY.H header
By Ralf E. Brendler. Global Constants, Type Definitions, and Function
Declarations. => APPLY.C.

CUG270.04-ATOF.C source
By Dan Schechter. ATOF. A temporary set of functions atof() and
strtod() for Aztec CV4.1, which has a bug in atof() (scheduled to be
fixed in the next release) and has no strtod(). [MS-DOS: AZTEC C86]
Probably causes rounding errors.

CUG270.05-AUTOEXEC.BAT batch
Introductory batch file displaying README.TXT and running VID_DEMO.

CUG270.06-DELTA.C source
By Ralf E. Brendler. Delta file creation program. A variation of the
DIFF utility which generates files suitable for passing to the UNIX
editor ed to generate a new file based on an existing file and a delta
file. It can be used to effect a very primitive Source Code Control
System, or as a basis for developing a full-featured SCCS. => DIFF.C,
APPLY.C, DIFF.DOC. [OS/2: MSC5] Uses only family API calls therefore
can be bound to run under MS-DOS 3.X as well as MS-OS/2v1.X. Uses no
OS/2 specific calls therefore should be portable to any ANSI standard
compiler.

CUG270.07-DELTA.EXE executable
By Ralf E. Brendler. => DELTA.C.

CUG270.08-DIFF.C source
By Ralf E. Brendler. File differencing program. Roughly patterned
after the UNIX utility of the same name. It has UNIX-style output, and
uses the "recursive longest matching sequence" differencing algorithm.
=> DIFF.DOC, DIFF.H. [OS/2: MSC5] Uses only family API calls therefore
can be bound to run under MS-DOS 3.X as well as MS-OS/2v1.X. Uses no
OS/2 specific calls therefore should be portable to any ANSI standard
compiler.

CUG270.09-DIFF.DOC doc
By Ralf E. Brendler. File Difference Utilities. Purpose, development,
and reference documentation for utilities DIFF, DELTA, and APPLY. =>
DIFF.C, DELTA.C, APPLY.C.

CUG270.10-DIFF.EXE executable
By Ralf E. Brendler. => DIFF.C.

CUG270.11-DIFF.H header
By Ralf E. Brendler. Global constants, data type definitions, and
function prototypes. => DIFF.C.

CUG270.12-EST.C source
By Les Aldridge. Find largest, smallest, oldest, newest files. Lists a
largest, smallest, oldest, newest files from a given path
specification under MS-DOS. Illustrates use of _makepath,_splitpath,
_dos_findfirst and _dos_findnext. => EST.DOC, EST.MK. [MS-DOS: MSC5]
Uses library functions specific to Microsoft C5.0.

CUG270.13-EST.DOC doc
By Les Aldridge. EST: finding the ..est file(s) on your disk.
Background on development of EST functions, and their uses of
functions from the MSCF run-time library. => EST.C.

CUG270.14-EST.EXE executable
By Les Aldridge. => EST.C.

CUG270.15-EST.MK make
By Les Aldridge. => EST.C.

CUG270.16-README doc
By Dan Schechter. Letter to Robert.

CUG270.17-README.TXT doc
By Marc Bosser. Description of Submitted Materials. Brief summary of
VID_DEMO functions. => VID_DEMO.C.

CUG270.18-SUMMARY.TXT doc
By Ralf E. Brendler. Brief summary of UNIX-like functions, DIFF,
DELTA, and APPLY, and notes on adaptability. => DIFF.C, DELTA.C,
APPLY.C.

CUG270.19-T3.DOC doc
By Scott Holland. Three dimensional tic-tac-toe. Summary description
of T3 function modules, background, and adaptibility. => T3MAIN.C.

CUG270.20-T3COMP.C source
By Scott Holland. TTT3D computer move subroutine. => T3MAIN.C.

CUG270.21-T3CONV.C source
By Scott Holland. TTT3D move conversion subroutines. Two subroutines
which converts moves between an external 3-digit coordinate and an
internal representation. => T3MAIN.C.

CUG270.22-T3DISP.C source
By Scott Holland. TTT3D display subroutine. => T3MAIN.C.

CUG270.23-T3GLOBAL.H header
By Scott Holland. TTT3D Include file. Global type definitions and
explanations. => T3MAIN.C.

CUG270.24-T31NIT.C source
By Scott Holland. TTT3D initialization subroutine. Initializes
variables and turns on diagnostics. => T3MAIN.C.

CUG270.25-T31NTRO.C source
By Scott Holland. TTT3D Introduction Subroutine. Presents game rules
and entry syntax. => T3MAIN.C.

CUG270.26-T3MAIN.C source
By Scott Holland. TTT3D Main Program. Coordinates order of play and
display. T3.DOC, T3INIT.C, T3INTRO.C, T3PLAYER.C, T3COMP.C, T3DISP.C,
T3CONV.C, T3GLOBAL.H. [MS-DOS3: VANILLA, UNIX/5, MSC4]

CUG270.27-T3PLAYER.C source
By Scott Holland. TTT3D Player Move Subroutine. Gets the players move
and verifies that it is valid. => T3MAIN.C.

CUG270.28-VIDEO.H header
By Marc Bosser. Video Header File. Global definitions and
initialization. => VID_DEMO.C. [MS-DOS] Dependant on ROM BIOS.

CUG270.29-VID_DEMO.C source
By Marc Bosser. Video Demonstration. Demonstration of various video
routines, curseroff(), ewriteM(), fill(), and xy(). => VIDEO.H.
[MS-DOS: TC, MSC4] Dependent on ROM BIOS.

CUG270.30-VID_DEMO.EXE executable
By Marc Bosser. => VID_DEMO.C.

CUG270.31-VID_DEMO.OBJ object
By Marc Bosser. => VID_DEMO.C.

==============================================================================
CUG271 -
-----------

Steven's Library for Turbo C v1.5
By Steven E. Margison. [share2] 2 disks. This volume contains the
lastest version of Steven's Library, a shareware package. CUG271 is
for Turbo C v1.5 and CUG272 is for Datalight C. Each volume contains
the small model library (over 100 functions), some sample utilities,
and all documentation. The library includes functions for handling
communication ports, printer, CRC, video, time, date, sound, error
interrupt, keyboard, etc. The library source code plus the other four
memory model libraries are available from the author.

CUG271.01-AABORT.DOC doc
MBORT -- Terminate a program. Describes a function to abort the
program after sending the BELL character to stderr. => SMTCS.LIB.

CUG271.02-ARGVAL.DOC doc
convert an ASCII numerical string from an argument. Describes a
function to parse command line arguments containing numerical values
into an integer. => SMTCS.LIB. Numeric values cannot exceed four
characters without causing potential damage to the program by
overrunning the character storage area.

CUG271.03-ASYNC.DOC doc
readchar, ready_rev, ready_xmt, setport, writechar. Describes very low
level (direct port access) subroutines to enable 1/0 through COM1
through COM4. Only setport() uses BIOS int 14H. => SMTCS.LIB,
SMDEFS.H.

CUG271.04-BADEXT.DOC doc
Describes a function which reports invalid filename extension and
exits program. => SMTCS.LIB.

CUG271.05-BASENAME.DOC doc
Split a string into path and/or filename. Describes a function which
splits a string into path and/or filename. => SMTCS.LIB.

CUG271.06-BLPR.DOC doc
Describes two assembly language routines: blpr--write a character to
LPT? through BIOS 17H, and blprstat--get LPT? status through BIOS 17H.
=> SMTCS.LIB. Because of this dependency upon the ROM-BIOS Interrupt
17H, these routines may not work on all compatibles.

CUG271.07-CANT.DOC doc
report inability to open a file and exit. Describes function which
reports inability to open a file and exits program. => SMTCS.LIB.

CUG271.08-CENTER.DOC doc
Describes function which centers a string. => SMTCS.LIB. The string
MUST NOT BE longer than the size specified, since there is no error
checking for this condition and an unusable result will be returned.

CUG271.09-CHKASYNC.DOC doc
chkded, chkdsr, chkcts, chkring. Describes assembly language functions
which provide direct access to the serial communications chips. =>
SMTCS.LIB, SMDEFS.H.

CUG271.10-CLRFIELD.DOC doc
Describes functions which handle the problem of clearing a section of
a line on the screen without clearing to the end of the line. =>
SMTCS.LIB.

CUG271.11-CLS.DOC doc
Describes a function which clears the screen and homes the cursor. =>
SMTCS.LIB.

CUG271.12-CRC.DOC doc
CRC functions--CRC misc. functions. Describes functions used in CRC
calculations mainly for modem programs: crc_clear(), clear crc value;
crc update (crc, chr), update crc value; crc finish (crc), finish crc
calculation. => SMTCS.LIB. As supplied, the CCITT calculation
polynomial is used. The source can be easily changed to CRC 16 if
desired.

CUG271.13-CURSOR.DOC doc
Cursor Style--alter the cursor style. Describes function which allows
selection of several predefined cursor styles, or user-specified
cursor size. => SMTCS.LIB.

CUG271.14-DAYNUM.DOC doc
Describes a function which finds the number of a date within a year.
=> SMTCS.LIB. Years below 1980 are ignored.

CUG271.15-DISPBOX.DOC doc
dvid_box. Describes a function which displays a box on the screen. =>
SMTCS.LIB. Functions may fail if the target system is not a very close
compatible since direct memory writing is being used. No error check
is done on any value.

CUG271.16-DISPLAY.DOC doc
direct video functions. Describes functions which use direct video
access functions. => SMTCS.LIB. Functions may fail if the target
system is not a very close compatible since direct memory writing is
being used.

CUG271.17-DSTR_I.DOC doc
Describes a function which makes an ASCII decimal string into an
integer. => SMTCS.LIB.

CUG271.18-DUMP.C source
Hex File Dump Utility. Displays a file in hex and character
representation in color or monochrome, depending upon type of video
card installed. Displays 20 lines per screen and waits for keypress.
=> SMTCS.LIB. [MS-DOS: TC] As distributed, this program requires (for
compilation): "Steve's Turbo-C Library" version 1.30 or later.

CUG271.19-DUMP.EXE executable
=> DUMP.C.

CUG271.20-DVID.DOC doc
Direct Video Access Routines. Documentation for routines in DUMP.C and
SMTCS.LIB. => DUMP.C, SMTCS.LIB.

CUG271.21-D_CLS.DOC doc
Describes function which clears current screen. => SMTCS.LIB.

CUG271.22-D_POS.DOC doc
Describes function which positions the cursor on a video page. =>
SMTCS.LIB.

CUG271.23-D_SAY.DOC doc
Describes two functions: d_say--display a string at a specific
position, and d saypag--same, with page specification. => SMTCS.LIB.

CUG271.24-ENTERDAT.DOC doc
Describes two functions: enterdata--enter a string of data from
keyboard, and dvid_enterdata--same, use direct video access. =>
SMTCS.LIB.

CUG271.25-ENTERFN.DOC doc
Describes two functions: enterfn--enter a filename from keyboard, and
dvid_enterfin--same, use direct video access. => SMTCS.LIB.

CUG271.26-ERAOK.DOC doc
Describes a function which asks permission before overwriting an
existing file. => SMTCS.LIB.

CUG271.27-ERROR.DOC doc
Describes a function which reports a fatal error and exits program. =>
SMTCS.LIB.

CUG271.28-EXISTS.DOC doc
Describes a function which sees if a file exists. => SMTCS.LIB.

CUG271.29-EXIT2DOS.DOC doc
Describes a function which asks for permission to exit a program. =>
SMTCS.LIB.

CUG271.30-EXPARG.DOC doc
expand_arg. Describes a function which expands command line wildcard
filenames. => SMTCS.LIB.

CUG271.31-EXTTYP.DOC doc
Describes a function which checks a filename for a particular
extension. => SMTCS.LIB.

CUG271.32-FILLCH.DOC doc
Describes a function which fills a string with a character. =>
SMTCS.LIB.

CUG271.33-FLYER.TXT doc
Descriptions of SEM software, its availability and background. =>
SMTCS.LIB, ORDER.FRM.

CUG271.34-FOPENX.DOC doc
Describes three functions (fopenp, fopend, fopeng) which allow the
opening of a file in other than just the current directory. These
functions use file descriptor structures. => SMTCS.LIB, OPENX.DOC.
These functions cannot be used to create new files.

CUG271.35-GAMEPORT.DOC doc
Describes functions which manipulate the game port. => SMTCS.LIB.

CUG271.36-GETCODE.DOC doc
get_code_adr--get a function address. Describes a function used to get
the absolute segment and offset values for the address of a function
within a program. It is useful for installing interrupt handlers and
interfacing to assembly language modules. => SMTCS.LIB.

CUG271.37-GETDATA.DOC doc
get_data_adr--get a data item address. Describes a function used to
get the absolute segment and offset values for the address of a data
item within a program. It is useful for installing interrupt handlers
and interfacing to assembly language modules. => SMTCS.LIB.

CUG271.38-GETKEY.DOC doc
Describes an extended keyboard fetch. => SMTCS.LIB.

CUG271.39-GETPATH.DOC doc
Describes a function which retrieves the PATH variable and parses it.
=> SMTCS.LIB.

CUG271.40-GETPOS.DOC doc
Describes function which gets current cursor position. => SMTCS.LIB.
Values are in binary.

CUG271.41-GTOD.C source
Get time of day utility. Various date, time formatting functions. =>
SMTCS.LIB. [MS-DOS: TC] As distributed, this program requires (for
compilation): "Steve's Turbo-C Library' version 1.30 or later.

CUG271.42-GTOD.EXE source
=> GTOD.C.

CUG271.43-GTODFUNC.DOC doc
Describes two functions: gtodsub--get time of day to file pointer and,
gtodstr--get time of day to a string. => SMTCS.LIB.

CUG271.44-HSTR_I.DOC doc
Describes function which makes an ASCII hexadecimal string into an
integer. => SMTCS.LIB.

CUG271.45-IBMTYPE.DOC doc
Describes function which finds out the type of IBM computer in use. =>
SMTCS.LIB. Inconsistencies in the byte in ROM at F000:FFFEh reduce the
accuracy of this function.

CUG271.46-INPATH.C source
Inpath Utility. This is a program similar to many "filefind" programs,
except that it works like the UNIX "whereis" command. => SMTCS.LIB.
[MS-DOS: TC] As distributed this program requires (for compilation):
"Steve's Turbo-C Library" version 1.30 or later.

CUG271.47-INPATH.EXE executable
=> INPATH.C.

CUG271.48-ISCONS.DOC doc
Describe function which checks to see if file descriptor is the
console. => SMTCS.LIB.

CUG271.49-ISLEAP.DOC doc
Describe function which checks if year is leap year. => SMTCS.LIB.

CUG271.50-I_ISTR.DOC doc
Describes function which makes an integer from an ASCII decimal
string. => SMTCS.LIB.

CUG271.51-KEYBOARD.DOC doc
keyboard functions. Describes functions which manipulate the keyboard
status flags at 0000:417 and 0000:418. => SMTCS.LIB.

CUG271.52-KEYS.H header
Extra defines for keyboard operations. => SMTCS.LIB.

CUG271.53-LEXCMP.DOC doc
Describes function which compares two strings, case independent. =>
SMTCS.LIB.

CUG271.54-LISTALL data
List of files, used by PMAN.COM to generate manual to be printed to
PRN. => SMTCS.LIB, PMAN.COM.

CUG271.55-LOADSTR.DOC doc
Describes function which loads a string with padding. => SMTCS.LIB.

CUG271.56-MKBOX.DOC doc
Describes function which makes a box on the screen. => SMTCS.LIB.

CUG271.57-MKTONE.DOC doc
Describes function which makes a tone to the speaker. => SMTCS.LIB.

CUG271.58-MODS.131 doc
List of modifications made for version 1.31. => SMTCS.LIB.

CUG271.59-MONTHIS.DOC doc
Describes function which returns a string pointer to name of month. =>
SMTCS.LIB.

CUG271.60-NEWEXT.DOC doc
Describes a function which changes a filename extension. => SMTCS.LIB.

CUG271.61-OKISET.C source
Okidata Printer Setup Utility. => SMTCS.LIB. [MS-DOS: TC] As
distributed, this program requires (for compilation): "Steve's Turbo-C
Library", version 1.30 or later.

CUG271.62-OKISET.EXE executable
=> OKISET.C.

CUG271.63-OPENX.DOC doc
Describes three functions (openp, opend openg) which allow the opening
of a file in other than just the current library. => SMTCS.LIB,
FOPENX.DOC. These functions cannot be used to create new files.

CUG271.64-ORDER.FRM doc
Software Registration and Order Form. => SMTCS.LIB, FLYER.TXT.

CUG271.65-PMAN.COM executable
Utility program provided to print all files specified in LISTALL to
PRN: for binding into a manual. => SMTCS.LIB, LISTALL. [MS-DOS: TC]

CUG271.66-PRSERIES.DOC doc
Describes a series of routines which use the low level functions
blpr() and blprstat() to access the LPT? ROM-BIOS drivers directly. =>
SMTCS.LIB.

CUG271.67-README doc
Justification and description of distribution disk general contents
for"Steve's Library for Turbo-C' version 1.31. => SMTCS.LIB.

CUG271.68-RELINK.DOC doc
Instructions on how to use batch files and library response files to
remake libraries. => SMTCS.LIB. Batch files and librarian response
files are only supplied with full registration.

CUG271.69-REPCHAR.DOC doc
repchar--repeat a character n times to fd. Describes function which
repeats a character n times to fd. => SMTCS.LIB.

CUG271.70-RMWHITE.DOC doc
rmlead, rmtrail, rmallws. Describes functions for removing whitespace
from the specified string in place. => SMTCS.LIB.

CUG271.71-SCREEN.H header
Extra defines for screen handling operations. => SMTCS.LIB.

CUG271.72-SETASYNC.DOC doc
Serial comm. direct access assembly functions. Describes assembly
language functions which provide direct access to the serial
communications chips. => SMTCS.LIB.

CUG271.73-SMDEFS.H header
Extra defines for compiling programs by S. Margison. => SMTCS.LIB.

CUG271.74-SMGRAPH.H header
FUNCTION: smgraph.h (formerly graphics.h). Extra defines for IBM
Graphics Characters. => SMTCS.LIB.

CUG271.75-SMLIBTC.DOC doc
Information for "Steve's Library for Turbo C" version 1.30 regarding
documentation, installation, linking, real time interrupt handler,
buffering STDOUT, utilities, shareware, warranty and registration. =>
SMTCS.LIB.

CUG271.76-SMTC.ORD doc
Software Registration Form and Order. => SMTCS.LIB.

CUG271.77-SMTC.TOC doc
Steve's Turbo-C Library List of Functions. List of functions and
one-line descriptions. SMTCS.LIB.

CUG271.78-SMTCS.LIB library
Steve's Library for Turbo-C. Small memory model library of over 100
functions for Turbo-C (extensively documented - see PMAN.COM).
Includes functions for handling direct video access, communications
parts, printer, CRC, time, date, sound, error interrupt, keyboard,
etc. => DUMP.C, FLYER.TXT, GTOD.C, INPATH.C, OKISET.C, PMAN.COM,
SMLIBTC.DOC, SMTC.TOC, TESTEXP.C, TESTINTS.C, WC.C, KEYS.H, SCREEN.H,
SMDEFS.H, SMGRAPH.H, SOUND.H, TEXTCOMP.C. [MS-DOS: TC1.5] Compiled for
Turbo-C 1.5 only.

CUG271.79-SOUND.DOC doc
Soundon-turn on speaker; soundoff-turn off speaker. Describes very low
level functions to manipulate the speaker port control. => SMTCS.LIB.

CUG271.80-SOUND.H header
Defines for IBM speaker control. => SMTCS.LIB.

CUG271.81-STRIP.DOC doc
Strip a new line from a string. Describes function which strips a new
line from a string. => SMTCS.LIB.

CUG271.82-STUFF.DOC doc
Describes function which gets equipment report (high level). =>
SMTCS.LIB, _STUFF.DOC.

CUG271.83-TCSERIAL.NUM doc
Serial Number for Steve's Turbo-C Library Version 1.31. => SMTCS.LIB.

CUG271.84-TESTEXP.C source
FUNCTION: expand_args function demonstration. This fire will
demonstrate the use of the expand args() function. It does nothing
more than report all the expanded functions. => SMTCS.LIB. [MS-DOS:
TC]

CUG271.85-TESTINTS.C source
Test Program for Interrupt Handler Functions. This program
demonstrates the installable interrupt service routines contained in
the ticker functions. => SMTCS.LIB, TICKER.DOC. [MS-DOS: TC]

CUG271.86-TEXTCOMP.C source
Text Compare Utility. This short utility compares two text files and
shows any line differences. => SMTCS.LIB. [MS-DOS: TC] As distributed,
this program requires (for compilation): "Steve's Turbo-C Library"
version 1.30 or later.

CUG271.87-TEXTCOMP.EXE executable
=> TEXTCOMP.C.

CUG271.88-TICKER.DOC doc
Describes the timer interrupt service routine package. => SMTCS.LIB,
TESTINTS.C.

CUG271.89-UNTAB.DOC doc
Describes function which expands the horizontal tabs to spaces. =>
SMTCS.LIB.

CUG271.90-VIDCOLOR.DOC doc
vid_border-set color; vid_palette-set color palett. Describes
functions which manipulate the CGA card, or EGA card in CGA color
mode. => SMTCS.LIB.

CUG271.91-VIDPAGE.DOC doc
Describes a function which sets a video page as active page. =>
SMTCS.LIB. This function will have no effect on the monochrome card.

CUG271.92-VIDPIXEL.DOC doc
vid_wrpix-write to screen; vid_rdpix-read from scr. Describes two
functions which manipulate the CGA card, or EGA card in CGA graphics
mode. => SMTCS.LIB. These functions do not support the extra modes of
the EGA or PGA adapters.

CUG271.93-VMODE.DOC doc
Describes a function which sets video mode. => SMTCS.LIB, SCREEN.H.

CUG271.94-WC.C source
Word Count Utility. => SMTCS.LIB. MS-DOS: TCI As distributed, this
program requires (for compilation): "Steve's Turbo-C Library" version
1.31 or later.

CUG271.95-WC.EXE executable
=> WC.C.

CUG271.96-WEEKDAY.DOC doc
Describes function which determines the day of the week from the date.
=> SMTCS.LIB.

CUG271.97-WKDAYNM.DOC doc
Describes a function which returns a pointer to name of day string. =>
SMTCS.LIB.

CUG271.98- GETDI.DOC doc
Describes function which gets device information for a file handle. =>
SMTCS.LIB. File handle, NOT file descriptor is required.

CUG271.99- STUFF.DOC doc
stuff--get equipment report (low level). Describes function which gets
equipment report (low level). => SMTCS.LIB STUFF.DOC.

==============================================================================
CUG272 -
-----------

Steven's Library for Datalight C By Steven E. Margison. [share2] 1
disk. See CUG271.

CUG272.01-AABORT.DOC doc
Describes function which terminates program. => SMDLS.LIB.

CUG272.02-ARGVAL.DOC doc
Argval--convert an ASCII numerical string from an. Describes a
function primarily intended to parse command line arguments containing
numerical values into an integer. => SMDLS.LIB. Numeric values cannot
exceed four characters without causing potential damage to the program
by overrunning the character storage area.

CUG272.03-ASYNC.DOC doc
Readchar, ready_rev, ready_xmt, setport, writechar. Describes very low
level (direct port access) subroutines to enable I/O through COM1
through COM4. Only setport () uses BIOS int 14H. => SMDLS.LIB
SMDEFS.H.

CUG272.04-BADEXT.DOC doc
Describes a function which reports invalid filename extension and
exits program. => SMTCS.LIB.

CUG272.05-BASENAME.DOC doc
Basename--split a string into path and/or filename. Describes a
function which splits a string into path and/or filename. =>
SMDLS.LIB.

CUG272.06-BLPR.DOC doc
Describes two assembly language routines,: blpr--write a character to
LPT? through BIOS 17H, blpstat--get LPT? status through BIOS
17H. => SMDLS.LIB. Because of this dependency upon the RAM-BIOS
internpt 17H, these routines may not work on all compatibles.

CUG272.07-CANT.DOC doc
Describes function which reports inability to open a file and exits
program. => SMDLS.LIB.

CUG272.08-CENTER.DOC doc
Describes function which centers a string. => SMDLS.LIB. The string
MUST NOT BE longer than the size specified, since there is no error
checking for this condition and an unusable result will be returned.

CUG272.09-CHKASYNC.DOC doc
chkded, chkdsr, chkcts, chkring. Describes assembly language functions
which provide direct access to the serial communications chips. =>
SMDLS.LIB, SMDEFS.H.

CUG272.10-CLRFIELD.DOC doc
clrfield--clear a screen field through BIOSdisp. Synopsis, description
and example of Functions which handle the problem of clearing a
section of a line on the screen without clearing to the end of the
line. Describes function which reports inability to open a file and
exits program. => SMDLS.LIB.

CUG272.11-CLS.DOC doc
Describes function which clears the screen and homes the cursor. =>
SMDLS.LIB.

CUG272.12-COMEXIT.DOX doc
common exit. Describes a function which terminates a program. =>
SMDLS.LIB.

CUG272.13-CRC.DOC doc
crc functions--crc misc. functions. Synopsis, description and example
of functions used in crc calculations mainly for modem programs: crc
clear(), clear crc value; crc update (crc,chr), update crc value; crc
finish (crc), finish crc calculation. => SMDLS.LIB. As supplied, the
CCITT calculation polynomial is used. The source can be easily changed
to CRC16 if desired.

CUG272.14-CRITERR.DOC doc
Describes a critical error handler installer. 4 SMDLS.LIB.

CUG272.15-CTLBRK.DOC doc
Describes a control break ( ^ C) interrupt handle. => SMDLS.LIB.

CUG272.16-CURSOR.DOC doc
cursor style--alter the cursor style. Synopsis, description and
example of function which allows selection of several pre-defined
cursor styles, or user-specified cursor size. => SMDLS.LIB.

CUG272.17-DAYNUM.DOC doc
Describes a function which finds the number of a date with a year. =>
SMDLS.LIB. Years below 1980 are ignored.

CUG272.18-DISPBOX.DOC doc
Describes a function used to display a box on the screen. =>
SMDLS.LIB. Functions may fail if the target system is not a very close
compatible since direct memory writing is being used. No error
checking is done on any value.

CUG272.19-DISPLAY.DOC doc
direct video functions. Synopsis, description and example of functions
using the features of Datalight's display package functions. =>
SMDLS.LIB. Functions may fail if the target system is not a very close
compatible since direct memory writing is being used. No error
checking is done on any value.

CUG272.20-DLSERIAL.NUM doc
Serial number for Steve's Datalight C Library version 1.30. =>
SMDLS.LIB.

CUG272.21-DSTR_I.DOC doc
Describes function which makes an ASCII decimal string into an
integer.

CUG272.22-DUMP.C source
Hex File Dump Utility. Displays any file in hex and character
representation in color or monochrome depending upon type of video
card installed. Displays 20 lines per screen and waits for a keypress.
=> SMDLS.LIB. [MS-DOS: DLC] As distributed, this program requires (for
compilation): "Steve's Datalight Library" version 1.10 later.

CUG272.23-DUMP.COM executable
=> DUMP.C.

CUG272.24-DUP.DOC doc
Describes function which duplicates a fine handle. => SMDLS.LIB.

CUG272.25-D_CLS.DOC doc
Describes function which clears current screen. => SMDLS.LIB.

CUG272.26-D_POS.DOC doc
Describes function which positions the cursor on a video page. =>
SMDLS.LIB.

CUG272.27-D_SAY.DOC doc
Describes two functions: d say--display a string at a specific
position, d_saypag--same, with page specification. => SMDLS.LIB.

CUG272.28-ENTERDAT.DOC doc
Describes two functions: enterdata--enter a string of data from
keyboard; disp_enterdata--same, use direct video access. => SMDLS.LIB.

CUG272.29-ENTERFN.DOC doc
Describes two functions: enterfn--enter a filename from keyboard;
disp_enterfn--same, use direct video access. => SMDLS.LIB.

CUG272.30-ERAOK.DOC doc
Describes function which asks permission before overwriting an
existing file. => SMDLS.LIB.

CUG272.31-ERROR.DOC doc
Describes function which reports a fatal error and exits. =>
SMDLS.LIB.

CUG272.32-EXISTS.DOC doc
Describes a function which checks to see if a specified file exists.
=> SMDLS.LIB.

CUG272.33-EXIT2DOS.DOC doc
Describes a function which asks permission to exit program. =>
SMDLS.LIB.

CUG272.34-EXTTYP.DOC doc
Describes function which checks a filename for a particular extension.
=> SMDLS.LIB.

CUG272.35-FILLCH.DOC doc
Describes a function which fills a string with a chosen character. =>
SMDLS.LIB.

CUG272.36-FLYER.TXT doc
Descriptions of SEM software, its availability and background. =>
SMDLS.LIB, ORDER.FRM.

CUG272.37-FOPENX.DOC doc
fopenp, fopend, fopeng. Synposis, description and example of functions
which allow the opening of a file in other than just the current
directory. These functions use file descripter structures. =>
SMDLS.LIB, OPENX.DOC. These functions cannot be used to create new
files.

CUG272.38-GAMEPORT.DOC doc
describes functions which manipulate gameport. => SMDLS.LIB.

CUG272.39-GETCODE.DOC doc
Synopsis, description and example of a function used to get the
absolute segment and offset values for the address of a function
within a program. It is useful for installing interrupt handlers and
interfacing to assembly language modules. => SMDLS.LIB.

CUG272.40-GETDATA.DOC doc
get data adr--get a data item address. Synopsis, description and
example of a function used to get the absolute segment and offset
values for the address of a data item within a program. It is useful
for installing interrupt handlers and interfacing to assembly language
modules. => SMDLS.LIB.

CUG272.41-GETFT.DOC doc
Describes function which gets file date/time stamp. => SMDLS.LIB.

CUG272.42-GETKEY.DOC doc
Description of extended keyboard fetch. => SMDLS.LIB.

CUG272.43-GETPATH.DOC doc
Describes function which retrieves PATH variable and parses it.
Description of extended keyboard fetch. => SMDLS.LIB.

CUG272.44-GETPOS.DOC doc
Describes function which gets current cursor position. => SMDLS.LIB.
Values are in binary.

CUG272.45-GRAPHICS.H header
extra defines for IBM Graphics Characters. => SMDLS.LIB.

CUG272.46-GTOD.C source
Get Time of Day Utility. Various date, time formatting functions. =>
SMDLS.LIB. [MS-DOS: DLC] As distributed, this program requires (for
compilation): "Steve's Datalight Library' version 1.10 or later.

CUG272.47-GTOD.COM executable
=> GTOD.C.

CUG272.48-GTODFUNC.DOC doc
Describes two functions: gtodsub--get time of day to file pointer;
gtodstr--get time of day to a string. => SMDLS.LIB.

CUG272.49-HBIT.DOC doc
Describes function which checks keyboard (stdin) for character
available. => SMDLS.LIB.

CUG272.50-HSTR_I.DOC doc
Describes function which makes an ASCI hexadecimal string into an
integer. SMDLS.LIB.

CUG272.51-IBMTYPE.DOC doc
Describes function which determines type of computer in use. =>
SMDLS.LIB. Inconsistencies in the byte in ROM at F000:FFFEh reduce the
accuracy of this function.

CUG272.52-INPATH.C doc
Inpath Utility. This is a program similar to many "filefind" programs,
except that it works like UNIX "whereis" command. => SMDLS.LIB.
[MS-DOS: DLC] As distributed, this program requires (for compilation):
"Steve's Datalight Library" version 1.10 or later.

CUG272.53-INPATH.COM executable
=> INPATH.C.

CUG272.54-IOBNBF.C source
Input/Output?.

CUG272.55-ISCONS.DOC doc
Describes function which checks if file description is the console. =>
SMDLS.LIB.

CUG272.56-ISLEAP.DOC doc
Describes function which checks if year is a leap year. => SMDLS.LIB.

CUG272.57-I_DSTR.DOC doc
Describes function which makes an integer from a decimal ASCII string.
=> SMDLS.LIB.

CUG272.58-KEYBOARD.DOC doc
Keyboard functions. Synopsis, description and example of functions
which manipulate the keyboard status flags at 0000:417 and 0000:418.
=> SMDLS.LIB.

CUG272.59-KEYS.H header
extra defines for keyboard operations. => SMDLS.LIB

CUG272.60-LEXCMP.DOC doc
Describes function which performs comparison on two strings, case
independent. => SMDLS.LIB.

CUG272.61-LISTALL data
List of files, used by PMAN.COM to generate manual to be printed to
PRN:. SMDLS.LIB, PMAN.COM.

CUG272.62-LOADSTR.DOC doc
Describes function which loads a string with padding. => SMDLS.LIB.

CUG272.63-MKBOX.DOC doc
Describes function which makes a box on the screen. => SMDLS.LIB.

CUG272.64-MKTONE.DOC doc
Describes a function which makes a tone to the speaker. => SMDLS.LIB.

CUG272.65-MONTHIS.DOC doc
Describes a function which returns a string pointer to name of month.
=> SMDLS.LIB.

CUG272.66-NEWEXT.DOC doc
Describes function which changes a filename extension. => SMDLS.LIB.

CUG272.67-OKISET.C source
Okidata Printer Set up Utility. => SMDLS.LIB. [MS-DOS: DLC] As
distributed, this program requires (for compilation): "Steve's
Datalight Library" version 1.10 or later.

CUG272.68-OKISET.COM executable

CUG272.69-ONEXIT.DOC doc
Describes a function which installs a common exit routine. =>
SMDLS.LIB.

CUG272.70-OPENS.DOC doc
openp,opend,openg. Synopsis, description and example of functions
which allow the opening of a file in other than just the current
directory. => SMDLS.LIB, FOPENX.DOC. These files cannot be used to
create new files.

CUG272.71-ORDER.FRM doc
Software Registration and Order Form. => SMDLS.LIB, FLYER.TXT.

CUG272.72-PMAN.COM executable
utility program provided to print all files specified in LISTALL to
PRN: for binding into a manual. => SMDLS.LIB, LISTALL. [MS-DOS: DLC]

CUG272.73-PRSERIES.DOC doc
Synopsis, description and example for a series of routines which use
the low level functions blpr() and blprstat() to access the LPT?
ROM-BIOS drives directly. SMDLS.LIB.

CUG272.74-README doc
Notes on differences and preliminary printouts for "Steve's Library
for Datalight C" version 1.30. => SMDLS.LIB.

CUG272.75-RELINK.DOC doc
Instructions on how to use batch files and library response files to
remake libraries. => SMDLS.LIB. Batch files and librarian response
files are only supplied with full registration.

CUG272.76-REPCHAR.DOC doc
Describes function which repeats a character n times to fd. =>
SMDLS.LIB.

CUG272.77-RMWHITE.DOC doc
rmlead, rmtrail, rmallws. Synopsis, description and example of
functions for removing whitespace from the specified string in place.
=> SMDLS.LIB.

CUG272.78-SCREEN.H header
Extra defines for screen handling operations. => SMDLS.LIB.

CUG272.79-SETASYNC.DOC doc
setdtr--set state of data terminal ready flag-. Synopsis, description
and example of assembly language functions which provide direct access
to the serial communications chips. => SMDLS.LIB.

CUG272.80-SMDEFS.H header
Extra defines for compiling programs by S. Margison. => SMDLS.LIB.

CUG272.81-SMDL.DOC doc
Steve's Datalight Library List of Functions. List of functions and
one-line descriptions. => SMDLS.LIB.

CUG272.82-SMDL.ORD doc
Software Registration Form and Order. => SMDLS.LIB.

CUG272.83-SMDLS.LIB library
Steve's Library for Datalight C. Small memory model library of over
100 functions for handling communication ports, printer, CRC, video,
time, date, sound, error interrupt, keyboard, etc. in Datalight C
(Extensively documented--see PMAN.COM). => DUMP.C, FLYER.TXT,
GRAPHICS.H, GTOD.C, INPATH.C, IOBNBF.C, KEYS.H, OKISET.C, PMAN.COM,
SCREEN.H, SMDEFS.H, SMDL.TOC, SOUND.H, TC.C TESTINTS.C, WC.C. [MS-DOS:
DLC]

CUG272.84-SMLIBDL.DOC doc
Information for "Steve's Library for Datalight" regarding
documentation, installation linking, real time interrupt handler,
video functions, utilities, shareware, warranty and registration. =>
SMDLS.LIB.

CUG272.85-SOUND.DOC doc
soundon--turn on the speaker; soundoff--turn off. Synopsis and
description of very low level functions to manipulate the speaker port
control. => SMDLS.LIB.

CUG272.86-SOUND.H header
defines for IBM speaker control. => SMDLS.LIB.

CUG272.87-STRIP.DOC doc
describes a function which strips a newline from a string. =>
SMDLS.LIB.

CUG272.88-STUFF.DOC doc
Describes function which gets equipment report (high level). =>
SMDLS.LIB.

CUG272.89-TC.C source
Text Compare Utility. This short utility compares two text files and
shows any line differences. => SMDLS.LIB. [MS-DOS: DLC] As
distributed, this program requires (for compilation): "Steve's
Datalight Library' version 1.10 or later.

CUG272.90-TC.COM executable
=> TC.C.

CUG272.91-TESTINTS.C source
Test Program for Interrupt Handler Functions. This program
demonstrates the installable interrupt service routines contained in
the ticker functions. => SMDLS.LIB. [MS-DOS: DLC]

CUG272.92-TICKER.DOC doc
Describes timer interrupt service routine package. => SMDLS.LIB,
TESTINTS.C.

CUG272.93-VIDCOLOR.DOC doc
vid_border--set border color; vid_palette-set. Synopsis, description
and example of functions which manipulate the CGA card, or EGA card in
CGA color mode. =>SMDLS.LIB.

CUG272.94-VIDPAGE.DOC doc
describes function which sets a video page as active page. =>
SMDLS.LIB. This function will have no effect on the monochrome card.

CUG272.95-VIDPIXEL.DOC doc
vid_wrpix--write a pixel to the screen;vid_rdply a. Synopsis,
description and example of functions which manipulate the CGA card, or
EGA card in CGA graphics mode. => SMDLS.LIB. These functions do not
support the extra modes of the EGA or PGA adapters.

CUG272.96-VMODE.DOC doc
Describes function which sets video mode. => SMDLS.LIB, SCREEN.H.

CUG272.97-WC.C source
Word Count Utility. => SMDLS.LIB. [MS-DOS: DLC] As distributed, this
program requires (for compilation): "Steve's Datalight Library'
version 1.10 later.

CUG272.98-WC.COM executable
=> WC.C.

CUG272.99-WEEKDAY.DOC doc
Describes function which determines the day of the week from the date.
=> SMDLS.LIB.

CUG272.100-WKDAYNM.DOC doc
Describes a function which returns a pointer to name of day string. =>
SMDLS.LIB.

CUG272.101- GETDI.DOC doc
Describes function which gets device information for file handle. =>
SMDLS.LIB. file handle, NOT file descriptor is required.

CUG272.102- STUFF.DOC doc
Describes function which gets equipment report (low level). =>
SMDLS.LIB.

==============================================================================
CUG273 -
-----------

Turbo C Utilities
By James Derr. [share1] 1 disk. This collection of Turbo C Utilities
includes 75 functions for generating sound, drawing boxes,
manipulating windows, making shadows, controlling video I/O, etc. This
volume is a shareware distribution, including all source code as well
as the small model
library. Inline assembly code is used in some functions.

CUG273.01-BEEP.CC source
Sounds the speaker using specified pitch and number of ticks. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.02-BOX.CC source
Draws a specified box with center and border attributes specified. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.03-CALCTOT.CC source
Accepts a valid pathname and returns the total number of bytes
occupied by all files in the specified directory. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.04-CCOLOR.CC source
This routine will change the color attributes of a column of
characters. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.05-CHGTO.CC source
Change_to. Changes the current disk drive and directory with one cell.
=> TCUTILS.LIB. [MS-DOS: TC]

CUG273.06-CLR.CC source
Clear the screen using the attribute passed. => TCUTILS.LIB. [MS-DOS:
TC]

CUG273.07-CLRAREA.CC source
Clears a portion of the screen using the passed attribute. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.08-CLRBOX.CC source
Clears the area inside the box built by the BOX function to the
specified attribute. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.09-CLREOL.CC source
This will clear from the current cursor location the end of the line.
=> TCUTILS.LIB. [MS-DOS: TC]

CUG273.10-COMPALL.BAT batch
Batch file to compile all source code for Turbo C utilities. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.11-CURDN.CC source
Moves the cursor down one run. This will wrap the cursor to the top of
the screen if the cursor is on the last row. TCUTILS.LIB. [MS-DOS: TC]

CUG273.12-CURLF.CC source
Move the cursor one col to the left. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.13-CURNL.CC source
Moves the cursor to the beginning of the next row. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.14-CURRT.CC source
Moves the cursor one column to the right. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.15-CURUP.CC source
Move the cursor one row up. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.16-FILEXIST.CC source
Checks to see if a file exists. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.17-FINDFILE.CC source
Searches a disk for a specified file. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.18-FLUSHKEY.CC source
Flushes the keyboard buffer. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.19-GETAKEY.CC source
Waits until a character in a specified list is pressed. Sets a
variable to the upper case value of the key pressed. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.20-GETATTR.CC source
Gets the attribute at a specified row and column. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.21-GETCA.CC source
get_ca (char *ch, char *scan). Reads a keystroke. ch = character code
or zero if extended code, scan = extended code or scan code. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.22-GETCHARS.CC source
leng character screen placement. Reads n-length characters from the
screen at the location specified by row, col and will place the
characters (not the attr bytes) into the string pointed to by *string.
=> TCUTILS.LIB. [MS-DOS: TC]

CUG273.23-GETCUR.CC source
get_cur (int *row, int *col). Returns the current cursor location into
row, col. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.24-GETFIELD.CC source
Provides for formatted field input capability. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.25-GETFSIZE.CC source
Returns the filesize of a file. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.26-GETLDATE.CC source
get long date. Gets the current date. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.27-GETLINE.CC source
Reads a string from the screen starting at the current cursor position
with specified string length, display area length, and display
attribute. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.28-GETLINEX.CC source
Reads a string from the screen with specified starting location,
string length, display area length, destination string, and display
attribute. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.29-GETXA.CC source
Reads a keystroke. Returns int value of ASCII code or scan code +256
for extended key. => TCUTILS.LIB, TCUTILS.H. [MS-DOS: TC]

CUG273.30-HIDECUR.CC source
Turns the cursor off. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.31-INDEX.CC source
Returns a pointer to the first occurrence of c in a specified string,
or NULL for no occurence. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.32-LEFTSTR.CC source
Places a specified number of leftmost characters from one string into
another. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.33-LOCATE.CC source
Positions the cursor at a specified location. => TCUTILS.LIB. [MS-DOS:
TC]

CUG273.34-MAKEWIND.CC source
Makes a window of specified upper left and lower right coordinates,
window and border attributes, title, and footer. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.35-MELT.CC source
Clears the screen in one of various predefined styles and sets new
specified attributes. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.36-MIDSTR.CC source
Extracts a specified number of characters from a specified string at a
specified starting point and places them in another string.
TCUTILS.LIB. [MS-DOS: TC]

CUG273.37-PARSEFN.CC source
Parses and breaks apart a chosen filespec. => TCUTILS.LIB. [MS-DOS:
TC]

CUG273.38-PRINTER.CC source
Initializes the printer identified by Iptnum. => TCUTILS.LIB. [MS-DOS:
TC]

CUG273.39-PUTCA.CC source
Puts the specified character and attribute on the screen at the
current cursor location. TCUTILS.LIB. [MS-DOS: TC]

CUG273.40-PUTSA.CC source
put_sa (char *ch, int attr). This will put the character string
pointer to by *ch on the screen at the current cursor location using
attribute attr. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.41-RCOLOR.CC source
Changes the color attribute of a row of characters. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.42-RESTSCR.CA source
Restores an area of the current screen that was saved via save_scr. =>
TCUTILS.LIB. [MS-DOS: TC] Uses inline Assembly code.

CUG273.43-RIGHTSTR.CC source
Places a specified number of rightmost character from one string into
another. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.44-SAVESCR.CA source
Saves an area the current screen into a character array. =>
TCUTILS.LIB. [MS-DOS: TC] Uses inline Assembly code.

CUG273.45-SCROLLDN.CC source
Scrolls a defined window down x number of lines. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.46-SCROLLLF.CC source
Scrolls a defined window left x number of columns. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.47-SCROLLRT.CC source
Scrolls a defined window right x number of columns. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.48-SCROLLUP.CC source
Scrolls a defined window up x lines. TCUTILS.LIB. [MS-DOS: TC]

CUG273.49-SETMODE.CC source
This will set the video mode to the mode passed. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.50-SHADOW.CC source
Creates the illusion of shadow under a specified window. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.51-SHOWCUR.CC source
Makes the cursor visible. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.52-SOUNDX.CC source
Calculates the soundx code of a string. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.53-SREADA.CA source
Reads the attribute at a specified location and applies it to another.
=> TCUTILS.LIB. [MS-DOS: TC] Includes inline Assembly code.

CUG273.54-SREADC.CA source
Takes a character at a specified location and places it into a
specified area. => TCUTILS.LIB. [MS-DOS: TC] Includes inline Assembly
code.

CUG273.55-SREADCA.CA source
Reads the character and attribute at a specified location and places
them into a specified string. => TCUTILS.LIB. [MS-DOS: TC] Includes
inline Assembly code.

CUG273.56-SSTRLF.CC source
Shifts a string left x characters. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.57-SSTRRT.CC source
Shifts a string right x characters. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.58-STRIDEL.CC source
Deletes a sub string from a string, ignoring case. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.59-STRIP.CC source
Strip (char *str, char c). This will string all occurences of char c
out of string pointed to by *str. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.60-STRIPRNG.CC source
Strip range (char *str, char clo, char chi). This will strip all
occurances of the characters that fall between char clo and chi out of
the string pointed to by *str. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.61-STRXFORM.CC source
Transforms all occurances of a specified character within a string to
a chosen replacement character. => TCUTILS.LIB. [MS-DOS: TC]

CUG273.62-SWRITEA.CA source
Writes an attribute at a chosen location. => TCUTILS.LIB. [MS-DOS: TC]
Includes inline assembly code.

CUG273.63-SWRITEC.CA source
Does a direct video write of a character at a chosen location with a
chosen attribute. => TCUTILS.LIB. [MS-DOS: TC] Includes inline
assembly code.

CUG273.64-SWRITECA.CA source
Does a direct video write at a chosen location of the character *area.
=> TCUTILS.LIB. [MS-DOS: TC] Includes inline assembly code.

CUG273.65-TCMENU.CC source
Displays a menu bar at the top of the screen. => TCUTILS.LIB,
TCMENU.H. [MS-DOS: TC]

CUG273.66-TCMENU.H header
Two menu structure definitions requiring setup for TCMENU. =>
TCUTILS.LIB, TCMENU.CC.

CUG273.67-TCUTIL.DOC doc
Background information and brief descriptions of functions and disk
contents for Turbo C Utilities. => TCUTILS.LIB.

CUG273.68-TCUTIL.H header
Header file definitions required by TCUTIL routines. => TCUTILS.LIB.

CUG273.69-TCUTILS.LIB library
Turbo C Utilities. Small model library of 75 functions for generating
sound, drawing boxes, manipulating windows, making shadows,
controlling video 1/0, etc. => COMPALL.BAT, TCMENU.H, TCUTIL.DOC
TCUTIL.H, *.CA, *.CC. [MS-DOS: TC] Inline assembly code is used in
some functions.

CUG273.70-TESTNUM.CC source
test_numeric (char *str). Tests character string for numeric. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.71-TRIML.CC source
Trims all blanks from the left side of a string. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.72-TRIMR.CC source
Trims all blanks from the right side of a string. => TCUTILS.LIB.
[MS-DOS: TC]

CUG273.73-UPCASE.CC source
Converts a string to uppercase. TCUTILS.LIB. [MS-DOS: TC]

CUG273.74-VALIDATE.CC source
This function will validate a character field for valid values. =>
TCUTILS.LIB. [MS-DOS: TC]

CUG273.75-VIDEOTYP.CC source
Determines the video type of the display. TCUTILS.LIB. [MS-DOS: TC]

CUG273.76-WRITEF.CA source
Does a direct video write at a chosen location with specified
attributes. => TCUTILS.LIB. [MS-DOS: TC] Includes inline assembly
code.

CUG273.77-WRITEFC.CA source
Writes a character with chosen attribute. TCUTILS.LIB. [MS-DOS: TC]
Includes inline assembly code.

CUG273.78-WRITEFN.CA source
Writes a string of characters with count character control. =>
TCUTILS.LIB. [MS-DOS: TC] Includes inline assembly code.

CUG273.79-WRITETTY.CC source
write_tty (char _ch). This will put the character string pointer to by
*ch on the screen at the current cursor location using attribute attr.
=> TCUTILS.LIB. [MS-DOS: TC]

CUG273.80-XPRINTF.CC source
Provides for fast formatted output to video screen. => TCUTILS.LIB.
[MS-DOS: TC]

==============================================================================
CUG274 -
-----------

Arrays for C
By James P. Cruse. [share1] 1 disk. Arrays for C is a shareware
package that facilitates the handling of arrays in C. The package
includes a wide variety of routines: filling, adding, subtracting,
calling functions on each element, scaling by constants, etc. All are
implemented as code macros (#defines), and use a uniform naming
convention. The routines are very portable and have been tested with
several compilers including Microsoft C v5.0, Turbo C v1.5 and Aztec
v3.40b.
The disk contains source code, documentation, and sample programs. For
more details see the narrative description of this package in Section
2.

CUG274.01-ARRAY.ART doc
Article on Arrays for C. Introduction, overview, usage, and quick
summary of "Arrays for C" functions. Also describes example routines
and customization options provided. => ARRAY.H.

CUG274.02-ARRAY.DOC doc
Background, registration information, planned development, breakdown
and description of functions in Arrays for C. ARRAY.H.

CUG274.03-ARRAY.H header
Includes details on compiler dependent options, customization as well
as header defines for such. => A_INFO.H, A_BINOP.H, A_FILL.H,
A_UNOP.H, A_TESTAL.C, A_TESTF.C, A_TESTI.C. [MS-DOS: MSC5, TC1.5]

CUG274.04-ARRAY.SUM doc
Summary of Arrays for C. General description of array handling
package. => ARRAY.H.

CUG274.05-A_BINOP.H header
Declares all binary operations. => ARRAY.H.

CUG274.06-A_FILL. H header
Declares all the various fill operations. ARRAY.H.

CUG274.07-A_INFO. H header
Declares all information operations: sum, product, minimum, maximum,
and minimax. => ARRAY.H.

CUG274.08-A_TESTAL.C source
Tests all array functions. => ARRAY.H. [MS-DOS: MSC5, TC1.5]

CUG274.09-A_TESTF.C source
Tests using floating point operations. ARRAY.H. [MS-DOS: MSC5, TC1.5]

CUG274.10-A_TESTI.C source
Tests using integer operations. => ARRAY.H. [MS-DOS: MSC5, TC1.5]

CUG274.11-A_UNOP.H header
Declares all unary operations. => ARRAY.H.

==============================================================================
CUG275 -
-----------

Linear Cellular Automata 11
By Harold Mclntosh, Gerardo Cisneros. [public] 2 disks. This volume is
a sequel to CUG244 deBruijn, CUG245 Linear Cellular Automata, and
CUG246 Cycles. Harold V. McIntosh and Geraldo Cisneros of Puebla,
Mexico, continue to explore linear cellular automata building upon
ideas from the article "Abstract Mathematical Art" by Kenneth E. Perry
(December, '86 Byte). New features include general (not just
totalistic) rules, probabilities of groups of cells and graphical
presentation of deBruijn diagrams. The disk contains source code for
Wizard C, documentation, and executable code.

CUG275.01-LCA22.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (2,2) Linear Cellular Automaton.
Demonstrates two states second neighbors two on each side, five
altogether. LCAU.DOC. [MS-DOS]

CUG275.02-LCA23.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (2,3) Linear Cellular Automaton.
Demonstrates two states third neighbors three on each side, seven
altogether. => LCAU.DOC. [MS-DOS]

CUG275.03-LCA32.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (3,2) Linear Cellular Automaton.
Demonstrates three states second neighbors - two on each side, five
altogether. => LCAU.DOC. [MS-DOS]

CUG275.04-LCA33.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (3,3) Linear Cellular Automaton.
Demonstrates three states third neighbors three on each side, seven
altogether. => LCAU.DOC. [MS-DOS]

CUG275.05-LCA42.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (4,2) Linear Cellular Automaton.
Demonstrates four states second neighbors two on each side, five
altogether. => LCAU.DOC. [MS-DOS]

CUG275.06-LCA43.EXE executable
By Harold Mclntosh, Gerardo Cisneros. (4,3) Linear Cellular Automaton.
Demonstrates four states third neighbors three on each side, seven
altogether. => LCAU.DOC. [MS-DOS]

CUG275.07-LCAU.DOC doc
By Harold McIntosh. Describes this disk supplement to "LCA.C" which
was released in 1987. Describes extensive additions and
demonstrations, menu options. New features include general (not just
totalistic) rules to analyze, cell densities and block probabilities,
and graphical presentation of de Bruijn diagrams. => LCAXX.EXE,
LCAUXX.C, LCAUXX.EXE, PROBXX.C, RIJNXX.C. [MS-DOS]

CUG275.08-LCAU.TEX doc
By Harold McIntosh. Essentially same as LCAU.DOC but with additional
enumeration. Contains TEX formatting instructions. => LCAU.DOC.

CUG275.09-LCAU21.C source
By Harold Mclntosh, Gerardo Cisneros. (2,1 ) Linear Cellular
Automaton. Demonstrates two states first neighbors one on each side,
three altogether. => LCAU.DOC. [MS-DOS: WIZARDC]

CUG275.10-LCAU21.EXE executable
By Harold Mclntosh, Gerardo Cisneros. => LCAU21.C.

CUG275.11-LCAU22.C source
By Harold Mclntosh, Gerardo Cisneros. (2,2) Linear Cellular Automaton.
Demonstrates two states; second neighbors two on each side, five
altogether; with many memo/editing options. => LCAU.DOC. [MS-DOS:
WIZARDC]

CUG275.12-LCAU22.EXE executable
By Harold Mclntosh, Gerardo Cisneros. => LCAU22.C.

CUG275.13-LCAU31.C source
By Harold Mclntosh, Gerardo Cisneros. (3,1) Linear Cellular Automaton.
Demonstrates three states; first neighbors one on each side, three
altogether; with many memo/editing options. => LCAU.DOC. [MS-DOS:
WIZARDC]

CUG275.14-LCAU31.EXE executable
By Harold McIntosh, Gerardo Cisneros. => LCAU31.C.

CUG275.15-LCAU41.C source
By Harold McIntosh, Gerardo Cisneros. (4,1) Linear Cellular Automaton.
Demonstrates four states; first neighbors one on each side, three
altogether; with many menu/edit options. => LCAU.DOC. [MS-DOS:
WIZARDC]

CUG275.16-LCAU41.EXE executable
By Harold McIntosh, Gerardo Cisneros. => LCAU41.C.

CUG275.17-PROB21.C source
By Harold McIntosh, Gerardo Cisneros. Program for LCAU21 option t.
Calculates probabilities related to evolution. => LCAU.DOC, LCAU21.C.
[MS-DOS: WIZARDC]

CUG275.18-PROB22.C source
By Harold McIntosh, Gerardo Cisneros. Program for LCA22 option 6.
Calculates probabilities related to evolution. LCAU.DOC, LCA22.EXE.
[MS-DOS: WIZARDC]

CUG275.19-PROB31.C source
By Harold McIntosh, Gerardo Cisneros. Program for LCA31 option t.
Calculates probabilities related to evolution. => LCAU.DOC, LCAU31.C.
[MS-DOS: WIZARDC]

CUG275.20-PROB41.C source
By Harold McIntosh, Gerardo Cisneros. Program for LCAU41 option t.
Calculates probabilities related to evolution. => LCAU.DOC, LCAU41.C.
[MS-DOS: WIZARDC]

CUG275.21-READ.ME doc
By Harold McIntosh, Gerardo Cisneros. Cover page. => LCAU.DOC.

CUG275.22-RIJN21.C source
By Harold Mclntosh, Gerardo Cisneros. Program for LCAU21 option d.
displays de Bruijn diagrams -1st, 2nd & 3rd generation. => LCAU.DOC,
LCAU21.C. [MS-DOS: WIZARDC]

CUG275.23-RIJN22.C source
By Harold Mclntosh, Gerardo Cisneros. Program for LCAU22 option d.
displays de Bruijn diagrams -1st, 2nd & 3rd generation. => LCAU.DOC,
LCAU22.C. [MS-DOS: WIZARDC]

CUG275.24-RIJN31.C source
By Harold Mclntosh, Gerardo Cisneros. Program for LCA31 option d.
displays de Bruijn diagrams -1st, 2nd & 3rd generation. => LCAU.DOC,
LCAU31.C. [MS-DOS: WIZARDC]

CUG275.25-RIJN41.C source
By Harold Mclntosh, Gerardo Cisneros. Program for LCA41 option d.
displays de Bruijn diagrams- 1st, 2nd & 3rd generation. => LCAU.DOC,
LCAU41.C. [MS-DOS: WIZARDC]

==============================================================================
CUG276 -
-----------

Z80 and 6804 cross assemblers
By William C. Colley, III. [public] 1 disk. Will Colley can't stop
cross-assembling portably. He has now submitted cross-assemblers for
Zilog Z80 and Motorola 6804 processors. The new disk contains the
source code as well as very well-written manuals. The assemblers are
written in portable C and will compile under any full-featured C
compiler including Aztec C86, Aztec II, CI-C86, Ec0-C88, HP-UX,
Lattice C, Microsoft C, and QNIX C. Subset compilers such as Toolworks
C and BDS C pose a problem. For reference, here's a list of various
cross-assemblers Colley has contributed.
| CUG149      Motorola     6800, 6801 |             RCA          1802,
1805A |             Motorola     6805 Family | CUG219      Intel      
8048, 8049 |             Rockwell     6502 |             Rockwell    
65C02 | CUG242      Motorola     68HC11 Family |             Hitachi  
6301 Family |             Intel        8051 | CUG267      Intel       
8080, 8085 |             Signetics    2650 |             STM
Microelectronics S6 Family | CUG276      Zilog        Z-80 |          
Motorola     6804 Family.

CUG276.01-A16.C source
PIC1650 Cross-Assembler (Portable). Assembles code for the General
Instruments PIC1650 family microprocessors. => A16.H, A16EVAL.C,
A16UTIL.C, TEST16A.ASM. [QNIX, PCDOS, HP-UX, CP/M-86, CP/M-80, MS-DOS:
AZTEC Cll, AZTEC C86, MSC, ECO-C, LC, QNIX C, C186] All assembler
features are supported except relocation, linkage, and macros. A port
to 13PS C would be extremely difficult. A port to Toolworks C is
untried.

CUG276.02-A16.DOC doc
PIC1650 Cross-Assembler (Portable). Simple header documentation. =>
A16.C.

CUG276.03-A16.H header
PIC1650 Cross-Assembler (Portable). Contains global constants and data
type definitions for all modules of the cross-assembler. Also
compilation and linkage instructions. => A16.C.

CUG276.04-A16EVAL.C source
PIC1650 Cross-Assembler (Portable). Contains the assembler's
expression evaluator and lexical analyzer. => A16.C.

CUG276.05-A16UTIL.C source
PIC1650 Cross-Assembler (Portable). This module contains utility
packages for symbol table building and searching, opcode and operator
table searching, listing file output, hex file output, and error
flagging. => A16.C.

CUG276.06-A684.C source
6804 Cross-Assemble (Portable). Assembles code for the Motorola 6804
family microprocessors. => A684.H, A684UTIL.C, TEST684.ASM,
A684EVAL.C. [QNIX, PCDOS, HP-UX, CP/M-86, CP/M-80, MS-DOS: AZTEC Cll,
AZTEC C86, MSC, ECO-C, LC, QNIX C, CI86] All assembler features are
supported except relocation, linkage, and macros. Subset compilers
such as Toolworks C and BDS C will present substantial difficulties.

CUG276.07-A684.DOC doc
6804 Cross-Assembler (Portable). Header documentation. => A684.C.

CUG276.08-A684.H header
6804 Cross-Assembler (Portable). Contains global constants and data
type definitions for all modules of the cross-assembler. Also
compilation and linkage instructions. => A684.C.

CUG276.09-A684EVAL.C source
6804 Cross-Assembler (Portable). Contains the assembler's expression
evaluator and lexical analyzer. => A684.C.

CUG276.10-A684UTIL.C source
6804 Cross-Assembler (Portable). This module contains utility packages
for symbol table building and searching, opcode and operator table
searching, listing file output, hex file output, and error flagging.
=> A684.C.

CUG276.11-AZ80.C source
Z-80 Cross-Assembler (Portable). Assembles code for the Z-80 and
NSC800 families if microprocessors. => AZ80.H, AZ80EVAL.C, AZ80UTIL.C,
TESTZ80.ASM. [QNIX, PCDOS, HP-UX, CP/M-86, CP/M-80, MS-DOS: AZTEC Cll,
AZTEC C86, MSC, ECO-C, LC, QNIX C, CI86] All assembly features are
supported except relocation, linkage, and macros. A port to BDS C
would be extremely difficult. A port to Toolworks C is untried.

CUG276.12-AZ80.DOC doc
Z-80 Cross-Assembler (Portable). Simple header documentation. =>
AZ80.C.

CUG276.13-AZ80.H header
Z-80 Cross-Assembler (Portable). Contains global constants and data
type definitions for all modules of the cross-assembler. Also
compilation and linkage instructions. => AZ80.C.

CUG276.14-AZ80EVAL.C source
Z-80 Cross-Assembler (Portable). Contains the assembler's expression
evaluator and lexical analyzer. => AZ80.C.

CUG276.15-AZ80UTIL.C source
Z-80 Cross-Assembler (Portable). This module contains utility packages
for symbol table building and searching, opcode and operator table
searching, listing file output, hex file output, and error flagging.
=> AZ80.C.

CUG276.16-READ.ME5 doc
Can't Stop Cross-Assembling Portably. General introduction for the
6804, PIC1650, and Z-80 cross-assemblers. => AZ80.C, A684.C, A16.C.

CUG276.17-TEST16A.ASM source
This file contains the opcodes of the PIC16C52 CPU in numerical order
for testing the portable PIC1650 cross-assember. Part 1 of 3. => A16.C
TEST16B.ASM, TEST16C.ASM.

CUG276.18-TEST16B.ASM source
Continuation of TEST16A.ASM. Part 2 of 3. => A16.C, TEST16A.ASM,
TEST16C.ASM.

CUG276.19-TEST16C.ASM source
Continuation of TEST16A.ASM. Part 3 of 3. => A16.C, TEST16A.ASM,
TEST16B.ASM.

CUG276.20-TEST684.ASM source
Test file containing the MC68HC04's Opcodes in numerical order. =>
A684.C.

CUG276.21-TESTZ80.ASM source
Z-80 Opcodes in Alphabetical order. This file is used to test the Z-80
cross-assembler. => AZ80.C.

==============================================================================
CUG277 -
-----------

HP Plotter Library and Xmodem
[mixed] 1 disk. Ronald Florence (CT) has contributed a plotter program
and Xmodem program. The plotter program, hp (for Hewlett-Packard),
includes features to read and decode Tektronics format files and
Accu-Weather maps, as well as the ability to read HPGL files or files
of integer or floating point data. The program is written for
UNIX/XENIX systems, and includes checks for locks on the serial line,
code to lock and condition the serial line, and signal control. The
Xmodem program can be compiled as either a standalone
program to allow a UNIX/XENIX system to send and receive files using
the Xmodem protocol, or as a modification to the cu program for users
who have source code licenses. This volume also includes the HPGL-Clib
library, a shareware package (source code is included) submitted by
TerrAqueous Software. This Libras of C functions for the HPGL Plotter
includes support for the IO_tech MICRO488 Bus Controller. Source code
included.

CUG277.01-BIO doc
By Ronald Florence. Capsule biography of author.

CUG277.02-DEMO.C source
By TerrAqueous Software. Demo for HPGL-Clib. => HPGL.C, DEMO.OBJ,
DEMO.EXE.

CUG277.03-DEMO.EXE executable
By TerrAqueous Software. => DEMO.C.

CUG277.04-DEMO.OBJ object
By TerrAqueous Software. => DEMO.C.

CUG277.05-HP.C source
By Ronald Florence. Output driver for HP7470A plotter. Plotter
program, including features to read and decode tektronics format files
and Accu-weather maps, as well as to read HPGL files or files of
integer or floating point data points. => HP.MK. [UNIX/XENIX]

CUG277.06-HP.MK make
By Ronald Florence. Make file or compiling HP.C. => HP.C.

CUG277.07-HPGL.C source
By TerrAqueous Software. Hewlett-Packard Graphics Language C Library.
Sharewave package including support for the IO-tech MICRO488 Bus
Controller. => HPGL.H, DEMO.C, RSIH.COM. [UNIX/XENIX]

CUG277.08-HPGL.H header
By TerrAqueous Software. defines for HPGL-Clib. => HPGL.C.

CUG277.09-MAKEFILE make
By Ronald Florence. For compiling XMODEM. => XMODEM.C.

CUG277.10-README doc
By TerrAqueous Software. Brief explanations of HPGL package files.
HPGL.C.

CUG277.11-RSIH.COM executable
By TerrAqueous Software. A Resident Serial Input Handler for using
fgets on the COM1 port. => HPGL.C.

CUG277.12-TEK4.H header
By Ronald Florence. Global constants and type definitions to used with
TEKDECOD.C. => TEKDECOD.C.

CUG277.13-TEKDECOD.C source
By Ronald Florence. converts TEK 4014 picture files. => TEK.H, HP.C.
[UNIX/XENIX]

CUG277.14-XMODEM.C source
By Ronald Florence. Module written to be compiled with a modified
version of CU.C and/or with XR.C, providing XMODEM protocol
capabilities to XENIX[UNIX machines. => XMODEM.DOC, XR.C MAKEFILE.
[UNIX/XENIX]

CUG277.15-XMODEM.DOC doc
By Ronald Florence. XMODEM under XENIX[UNIX. Options, instructions and
descriptions of XMODEM operations. => XMODEM.C.

CUG277.16-XR.C source
By Ronald Florence. Remote XMODEM functions for XENIX[UNIX. =>
XMODEM.C.

==============================================================================
CUG278 -
-----------

CXL v5.1
By Mike Smedley. [share2] 3 disks. The CXL (C extended function
Library) is a shareware package. Our distribution consists of the
documentation, demo, header files, and the small model libraries for
Turbo C, Microsoft C/Quick C and Zortec C/C++. CXL provides over 260
functions including: multiple and overlapping windows; pop-up,
pull-down, and Lotus-style menus; multi-field and formatted data
entry; EGA 43 and VGA 50-line modes; DESQview compatibility, mouse
functions, EMS functions, keyboard handling, advanced string
manipulation, context sensitive help and error handling, date and time
formatting, equipment detection, pattern matching, data encryption,
printing functions, and sound functions.

CUG278.01-CXL.DOC doc
By Mike Smedley. The C Programmers Extended Function Library. Info for
CXL supplement to standard run-time library. => CXLMSS.LIB,
CXLTCS.LIB, CXLZTS.LIB, CXLDEF.H, CXLEMS.H, CXLKEY.H CXLMOU.H,
CXLPRN.H, CXKSTR.H CXLUID.H, CXLWIN.H, SFD.EXE, KEYCODE.COM,
MAKINDX.COM, CXLQREF.DOC, CXLDEMO.C. [MS-DOS: TC, MSC, QUICKC, ZORTECH
C/C++]

CUG278.02-CXLDEF.H header
By Mike Smedley. Miscellaneous function prototypes and definitions. =>
CXL.DOC.

CUG278.03-CXLDEMO.ASC doc
By Mike Smedley. CXLDEMO - ASCII source help file. This file contains
all the help text used in the CXL demonstration program. => CXL.DOC,
CXLDEMO.C.

CUG278.04-CXLDEMO.C source
By Mike Smedley. CXL Demonstration Program. => CXL.DOC, CXLDEMO.ASC,
CXLDEMO.ESE, CXLDEMO.HLP.

CUG278.05-CXLDEMO.EXE executable
By Mike Smedley. => CXLDEMO.C.

CUG278.06-CXLDEMO.HLP data
By Mike Smedley. CXLDEMO indexed help file. This file contains all the
help text used in the CXL demonstration program. CXLDEMO.C.

CUG278.07-CXLEMS.H header
By Mike Smedley. Contains prototypes of CXL's Expanded Memory
Specification (EMS) functions. => CXL.DOC.

CUG278.08-CXLKEY.H header
By Mike Smedley. Contains function prototypes and definitions for
keyboard functions. => CXL.DOC, CXLWIN.H.

CUG278.09-CXLMOU.H header
By Mike Smedley. Contains function prototypes and definitions for
Microsoft compatible mouse functions. => CXL.DOC.

CUG278.10-CXLMSS.LIB library
By Mike Smedley. Small MEMORY Model C extended function Library. =>
CXL.DOC. [MSC5, QUICKC]

CUG278.11-CXLPRN.H header
By Mike Smedley. Contains function prototypes and definitions for
printer functions. => CXL.DOC.

CUG278.12-CXLQREF.DOC doc
By Mike Smedley. CXL Quick Reference. Two-line synopsis/descriptions
of each function, grouped by respective header file. => CXL.DOC.

CUG278.13-CXLSTR.H header
By Mike Smedley. Contains function prototypes and definitions for
string manipulating functions. => CXL.DOC.

CUG278.14-CXLTCS.LIB library
By Mike Smedley. Small MEMORY Model C extended function Library. =>
CXL.DOC. [TC2.0]

CUG278.15-CXLVID.H header
By Mike Smedley. Contains function prototypes and definitions for
screen/video functions. => CXL.DOC.

CUG278.16-CXLWIN.H header
By Mike Smedley. Contains function prototypes and definitions for
windowing functions. => CXL.DOC.

CUG278.17-CXLZTS.LIB library
By Mike Smedley. Small memory Model C extended function Library. =>
CXL.DOC. [ ZORTECHC]

CUG278.18-HISTORY.DOC doc
By Mike Smedley. CXL Revision History. Extensive revision
documentation dating back to July 27, 1988 (Initial release of CXL).
=> CXL.DOC.

CUG278.19-KEYCODE.COM executable
By Mike Smedley. Utility that gets the keycode of a keypress. =>
CXL.DOC.

CUG278.20-MAKEINDX.COM executable
By Mike Smedley. Program used to create indexed help files. =>
CXL.DOC.

CUG278.21-READ.CXL doc
By Mike Smedley. Information on two distribution archive files,
including detailed breakdown of these archives, compilers used, &
systems from which current version of CXL can be downloaded. =>
CXL.DOC.

CUG278.22-READ.SFD doc
By Kamran Bayegan. Screen and Form Designer. Manual for SFD, including
switches, menu hierarchy & notes, and registration form. => SFD.EXE.

CUG278.23-REGISTER.DOC doc
By Mike Smedley. CXL Registration Form. => CXL.DOC.

CUG278.24-SFD.EXE executable
By Kamran Bayegan. Screen and Form Designer. Supplement to CXL to help
design compatible screens and forms. Generates C code and ENVironment
file. => CXL.DOC, READ.SFD.

CUG278.25-UPGRADE.DOC doc
By Mike Smedley. CXL Upgrade Form. => CXL.DOC

==============================================================================
CUG279 -
-----------

CROBOTS
By Tom Poindexter. [share2] 1 disk. CROBOTS ("see-robots") is a game
based on C language. Unlike arcade games, CROBOTS requires the user to
write all game strategy in C language beforehand. The C program
controls a robot whose mission is to seek out, track, and destroy
other robots, each running different programs. CROBOTS compiles the C
program into memory and displays the battle of the robots. Each robot
is equally equipped, and up to four robots may compete at once.
CROBOTS is best played among several people, each refining their own
robot program, then matching program against program. This volume is
distributed as shareware and works only under MSDOS. See the Narrative
Descriptions section of this directory for more detail. For more
details see the narrative description of this package in Section 2.

CUG279.01-COUNTER.R source
sample CROBOTS program. Strategy: scans in a counter-clockwise
direction, moves when hit. => CROBOTS.EXE. [MS-DOS: CROBOTS]

CUG279.02-CR-PRINT.BAT batch
Prints documentation on printer. => CROBOTS.EXE.

CUG279.03-CR-READ.ME doc
Introduction to CROBOTS and breakdown of shareware distribution
package. => CROBOTS.EXE.

CUG279.04-CROBOTS.DOC doc
=> CROBOTS.EXE.

CUG279.05-CROBOTS.EXE executable
CROBOTS ("see-robots") is a game based on computer programming. Unlike
arcade games, CROBOTS requires the user to write all game strategy in
C language beforehand. That program controls a robot whose mission is
to seek out, track, and destroy other robots, each running different
programs. Up to four may play. => CROBOTS.DOC, COUNTER.R, RABBIT.R,
ROOK.R, SNIPER.R. [MS-DOS: LC2]

CUG279.06-RABBIT.R source
sample CROBOTS program. Strategy: rabbit runs around the field,
randomly, and never fires; use as target. => CROBOTS.EXE. [MS-DOS:
CROBOTS]

CUG279.07-README.1ST doc
Author's address. => CROBOTS.EXE.

CUG279.08-ROOK.R source
sample CROBOTS program. Strategy: scans the battlefield like a rook,
i.e., only 0, 90, 180, 270. Move horizontally only, but looks
horizontally and vertically. => CROBOTS.EXE. [MS-DOS: CROBOTS]

CUG279.09-SNIPER.R source
sample CROBOTS program. Strategy: since a scan of the entire
battlefield can be done in 90 degrees from a corner, sniper can scan
the field quickly. => CROBOTS.EXE. [MS-DOS: CROBOTS]

==============================================================================
CUG280 -
-----------

Software Tools Source
By Toshiya Ohta, Hakuo Katayose. [public] 1 disk. Toshiya Ohta from
Tokyo, Japan has ported the BDS C version of Software Tools (CUG194 -
CUG196) to Lattice C v3.1. This package is based upon a book,
"Software Tools" written by Kernighan and Plauger and includes a
collection of utilities such as sort, search, archive, text
formatters, filters, macro processors, etc. This new version converts
from BDS to standard I/O routines, fixes some bugs and enhances the
error reporting system.

CUG280.01-ADDSET.C source
By Hakuo Katayose, Toshiya Ohta. Adds a character at a time to a
specified position of an array and increments the index. It also
checks that there's room enough to do so. => TOOLSLBN.LIB, TRANSLIT.C.
[MS-DOS: LC3.1J]

CUG280.02-ARCHIVE.C source
By Hakuo Katayose, Toshiya Ohta. ARCHIVE is a library maintainer whose
purpose is to collect sets of arbitrary files into one big file and to
maintain that file as an "archive". => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.03-ATOI.C source
By Hakuo Katayose, Toshiya Ohta. atoi.c of JUGPDS vol.17. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.04-CHANGE.C source
By Hakuo Katayose, Toshiya Ohta. Changes text. Converts target
substring into specified modification string. => TOOLSLBN.LIB.
[MS-DOS: LC3.1J]

CUG280.05-CINDEX.C source
By Hakuo Katayose, Toshiya Ohta. Finds character c in string str. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.06-CMPMAIN.BAT batch
By Toshiya Ohta. Main Function archive compile instructions for
Software Tools Source. => TOOLSLBN.LIB. [MS-DOS]

CUG280.07-CMPSUBS.BAT batch
By Toshiya Ohta. Sub Function Archive compile instructions for
Software Tools Source. => TOOLSLBN.LIB. [MS-DOS]

CUG280.08-COMPARE.C source
By Hakuo Katayose, Toshiya Ohta. Compares two files. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.09-COMPRESS.C source
By Toshiya Ohta. Compresses standard input text. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.10-CONCAT0.L source
By Toshiya Ohta. Concatenates named files onto standard input. =>
TOOLSLBN.LIB. [MS-DOS]

CUG280.11-CONCAT1.C source
By Toshiya Ohta. Concatenates named files onto standard input. =>
TOOLSLBN.LIB. [MS-DOS]

CUG280.12-COUNT.C source
By Toshiya Ohta. Counts characters, lines and words of a file. =>
TOOLSLBN.LIB. [MS-DOS]

CUG280.13-CPYMAINS.BAT batch
By Toshiya Ohta. Copies main archive functions to chosen destination.
=> TOOLSLBN.LIB. [MS-DOS]

CUG280.14-CPYSUBS.BAT batch
By Toshiya Ohta. Copies sub archive functions to chosen destination.
=> TOOLSLBN.LIB. [MS-DOS]

CUG280.15-CRYPT1.C source
By Toshiya Ohta. Encrypts/decrypts a textfile. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.16-CRYPTO.C source
By Toshiya Ohta. Encrypts/decrypts a textfile. => TOOLSLBN.LIB.
[MS-DOS] Encrypted file may contain EOF marks. CRYPT1 is recommended
as more reliable. CRYPT1 handles binary files and lacks the pipe and
I/O redirection facilities of CRYPTO.

CUG280.17-DELSUBO.BAT batch
By Toshiya Ohta. Deletes Sub Archive object files no longer needed
after library is compiled. => TOOLSLBN.LIB. [MS-DOS]

CUG280.18-DELSUBS.BAT batch
By Toshiya Ohta. Deletes Sub Archive object files no longer needed
after library is compiled. => TOOLSLBN.LIB. [MS-DOS]

CUG280.19-DETAB.C source
By Toshiya Ohta. Converts tabs to equivalent number of blanks. =>
TOOLSLBN.LIB. [MS-DOS]

CUG280.20-DODASH.C source
By Toshiya Ohta. Locates dash used as possible shorthand notation
between two range delimiters and expands that notation. =>
TOOLSLBN.LIB, TRANSLIT.C, FILSET.C. [MS-DOS]

CUG280.21-ENTAB.C source
By Toshiya Ohta. Replaces blanks by tabs and blanks. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.22-ERROR.C source
By Toshiya Ohta. Prints call-specified fatal error message and stops.
=> TOOLSLBN.LIB. [MS-DOS]

CUG280.23-ERRTOOL.DOC doc
By Toshiya Ohta. Error messages for Software Tools. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.24-ESC.C source
By Toshiya Ohta. Checks for an escape in command line and returns the
appropriate character and the proper index. => TOOLSLBN.LIB. [MS-DOS]

CUG280.25-EXPAND.C source
By Toshiya Ohta. Uncompresses standard input. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.26-FGETLIN.C source
By Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.27-FILES.LST doc
By Toshiya Ohta. Lists of files contained in archives for Software
Tools Source. => TOOLSLBN.LIB.

CUG280.28-FILSET.C source
By Toshiya Ohta. Builds a translation set, expanding short hand as
necessary, out of a TRANSLIT command line. => TOOLSLBN.LIB,
TRANSLIT.C. [MS-DOS]

CUG280.29-FIND1.C source
By Toshiya Ohta. Finds patterns in text. => TOOLSLBN.LIB. [MS-DOS]

CUG280.30-FINDO.C source
By Toshiya Ohta. Finds patterns in text. => TOOLSLBN.LIB. [MS-DOS]

CUG280.31-FORMAT.C source
By Toshiya Ohta. Text formatter. TOOLSLBN.LIB. [MS-DOS]

CUG280.32-FRQNCY.C source
By Hakuo Katayose, Toshiya Ohta. Produces a word frequency list for a
text, sorted into order of decreasing frequency. => TOOLSLBN.LIB.
[MS-DOS: LC3.1J]

CUG280.33-GETCCL.C source
By Hakuo Katayose, Toshiya Ohta. Encodes character classes for
TRANSLIT. => TOOLSLBN.LIB, TRANSLIT.C. [MS-DOS: LC3.1J]

CUG280.34-GETLIN.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS]

CUG280.35-GETPAT.C source
By Hakuo Katayose, Toshiya Ohta. Converts arguments into patterns. =>
TOOLSLBN.LIB, TRANSLIT.C. [MS-DOS: LC3.1J]

CUG280.36-GETWORD.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.37-GETWRD.C source
By Hakuo Katayose, Toshiya Ohta. Isolates the next word on the input
line, skipping any leading blanks and tabs and returns the word, it's
length, and an index to just past the end of the word. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.38-ITOA.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.39-ITOD.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.40-JUGPDS.FRM doc
Contribution Form for JUG-CP/M Public Domain.

CUG280.41-KWIC.C source
By Hakuo Katayose, Toshiya Ohta. Makes KeyWord In Context index. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.42-LNKMAIN.BAT batch
By Toshiya Ohta. Compiler linkage for main archive. => TOOLSLBN.LIB.
[MS-DOS]

CUG280.43-LOCATE.C source
By Hakuo Katayose, Toshiya Ohta. Looks for a specified character in a
chosen character class. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.44-MACRO.C source
By Hakuo Katayose, Toshiya Ohta. Expands macros with arguments. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.45-MAKPAT.C source
By Hakuo Katayose, Toshiya Ohta. Converts a patterned argument into
its encoded form in the array pat. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.46-MISC.C source
By Hakuo Katayose, Toshiya Ohta. Miscellaneous functions. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J] All functions do not use Lattice C
V3.1J.

CUG280.47-MSORT.C source
By Hakuo Katayose, Toshiya Ohta. Sorts ASCII text file in memory. Can
handle up to about 2000 lines or 30K bytes. => TOOLSLBN.LIB. [MS-DOS:
LC3.1J] Stack size must be specified upon invocation of this command.

CUG280.48-OVERSTRK.C source
By Hakuo Katayose, Toshiya Ohta. Converts backspaces into multiple
lines. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.49-QUICK.C source
By Hakuo Katayose, Toshiya Ohta. Quicksort for character lines. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.50-SORT.C source
By Hakuo Katayose, Toshiya Ohta. Sorts & merges text. => TOOLSLBN.LIB.
[MS-DOS: LC3.1J]

CUG280.51-STCLOS.C source
By Hakuo Katayose, Toshiya Ohta. Inserts closure entries in patterns.
=> TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.52-STRDCMP.C source
By Hakuo Katayose, Toshiya Ohta. TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.53-STRDFCMP.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.54-STRFCMP.C source
By Hakuo Katayose, Toshiya Ohta. TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.55-STRSAVE.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.56-SWAP.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.57-SWTOOLS.DOC doc
By Toshiya Ohta. Outlines what's included in this modification of
Software Tools for Lattice C, and includes page reference numbers to
the text "Software Tools" (Kernighan & Plauger), compilation and
linkage instructions, and notes on translating from Ratfor to Lattice
C. => TOOLSLBN.LIB.

CUG280.58-TEST.ANS doc
By Toshiya Ohta. Appropriate results for comparison against results of
TEST.M4 of MACRO.C. => TOOLSLBN.LIB, MACRO.C, TEST.M4.

CUG280.59-TOOLFUNC.H header
By Hakuo Katayose, Toshiya Ohta. Header files for Software Tools main
routine. => TOOLSLBN.LIB.

CUG280.60-TOOLLINK.BAT batch
By Toshiya Ohta. Linkage settings for Software Tools. => TOOLSLBN.LIB.

CUG280.61-TOOLS.H header
By Hakuo Katayose, Toshiya Ohta. stdio.h-Standard I/O Header for
Software Tools. Definitions for MS-DOS. => TOOLSLBN.LIB.

CUG280.62-TOOLSLBN.LIB library
By Hakuo Katayose, Toshiya Ohta. Contains the Software Tools library,
ported from BDS C. It converts from BDS C to standard l/O routines,
fixes some bugs and enhances the error reporting system. =>
TOOLSLBV.LIB. [MS-DOS: LC3.1J]

CUG280.63-TOOLSLBV.LIB library
By Hakuo Katayose, Toshiya Ohta. Same as TOOLSLBN.LIB, but the author
feels that 80/86 mode generates object code more efficiently (in terms
of memory and speed.). => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.64-TRANSLIT.C source
By Hakuo Katayose, Toshiya Ohta. Maps standard input characters and
transliterates them according to command arguments provided. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.65-TYPE.C source
By Hakuo Katayose, Toshiya Ohta. Determines whether a particular
character is a letter, a digit, or something else; it returns LETTER,
DIGIT or the character itself. => TOOLSLBN.LIB.

CUG280.66-UNIQUE.C source
By Hakuo Katayose, Toshiya Ohta. Strips adjacent duplicate lines. =>
TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.67-UNROT.C source
By Hakuo Katayose, Toshiya Ohta. Unrotates lines rotated by KWIC. =>
TOOLSLBN.LIB, KWIC.C. [MS-DOS: LC3.1J]

CUG280.68-XINDEX.C source
By Hakuo Katayose, Toshiya Ohta. Inverts condition returned by INDEX.
=> TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.69- COPY.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

CUG280.70-_ITOA.C source
By Hakuo Katayose, Toshiya Ohta. => TOOLSLBN.LIB. [MS-DOS: LC3.1J]

==============================================================================
CUG281 -
-----------

Unicorn Library v5.1
By David A. Miller. [share2] 2 disks. David A. Miller (WA) has
submitted a new Unicorn Library. The earlier Unicorn Library v4.0
(available on CUG268 and CUG269) is graphics oriented. Unlike the
earlier product, this shareware release is oriented toward
screen-layout and design, windows and data entry forms, and contains
over 300 functions. The disk includes header files, a reference guide,
demonstration programs, and a linkable small model library compiled
under Microsoft C v5.1.

CUG281.01-DEM MENU.C source
Demo program for menu functions, also spawns the window, data entry
and general library demo programs from a menu. => UCLIB.LIB,
DEM_MENU.MK. [MS-DOS: MSC5]

CUG281.02-DEM_MENU.EXE executable
=> DEM_MENU.C.

CUG281.03-DEM_MENU.MK make
=> DEM_MENU.C.

CUG281.04-LIB_DEMO.C source
Unicorn Library 5.00 Demo Program. => UCLIB.LIB, DEM_MENU.MK. [MS-DOS:
MSC5]

CUG281.05-LIB_DEMO.EXE executable
=> LIB_DEMO.C.

CUG281.06-LIB_DEMO.MK make
=> LIB_DEMO.C.

CUG281.07-MN_DEFS.H header
Menu type definitions. => UCLIB.LIB, MN GLOB.H, MN_XTRN.H.

CUG281.08-MN GLOB.H header
Menu function global variables. => UCLIB.LIB, MN DEFS.H.

CUG281.09-MN XTRN.H header
Menu function global external variables. UCLIB.LIB, MN DEFS.H.

CUG281.10-READ.ME doc
Unicorn Software. Outline of Unicorn Library's current update status
and anticipated development and availability. UCLIB.LIB.

CUG281.11-REF_GUID.TXT doc
Unicorn Library Reference Guide (UCLIB 5.00). List of overview
comments for each function. => UCLIB.LIB.

CUG281.12-REGISTER.DOC doc
Registration Information. => UCLIB.LIB.

CUG281.13-TDATA.C source
Test program for data entry functions. Demonstrates some of the data
entry functions contained in the Unicorn Library. => UCLIB.LIB,
TDATA.MK. [MS-DOS: MSC5]

CUG281.14-TDATA.EXE executable
=> TDATA.C.

CUG281.15-TDATA.MK make
=> TDATA.C.

CUG281.16-UCLIB.LIB library
Unicorn Library v 5.1 contains over 300 functions oriented toward
screen-layout and design, windows and data entry forms. Includes video
control functions, keyboard functions, data entry functions, character
control functions, windowing functions, menu functions, timer
functions, printer control functions, mathematical functions
(including geometric functions and metric-english conversions. This is
the linkable small model library. => DEM_MENU.C, LIB_DEMO.C, TDATA.C,
WINDOW.C, MN_DEFS.H UC_DEFS.H, WN_DEFS.H, UCLIB.MK. [MS-DOS: MSC5]

CUG281.17-UCLIB.MK make
=> UCLIB.LIB.

CUG281.18-UC_CHK.EXE executable

CUG281.19-UC_DEFS.H header
Provides the defines required for Unicorn functions. => UCLIB.LIB,
UC_GLOB.H, UC_KEY.H, UC_PROTO.H, UC_XTRN.H.

CUG281.20-UC_GLOB.H header
Globals for Unicorn Library. => UCLIB.LIB, UC DEFS.H.

CUG281.21-UC_KEY.H header
Defines internal key codes for special extended keys on IBM and clone
computers. => UCLIB.LIB, UC DEFS.H.

CUG281.22-UC_PROTO.H header
Function prototypes for UCLIB.LIB. => UCLIB.LIB, UC_DEFS.H.

CUG281.23-UC_XTRN.H header
Contains external definitions required for UCLIB.LIB. => UCLIB.LIB, UC
DEFS.H.

CUG281.24-VERSION.TXT doc
Version information for this disk's UCLIB.LIB. => UCLIB.LIB.

CUG281.25-WINDOW.C source
Demo program for UCLIB.LIB version 5.10 window functions. =>
UCLIB.LIB, WINDOW.MK. [MS-DOS: MSC5]

CUG281.26-WINDOW.EXE executable
=> WINDOW.C.

CUG281.27-WINDOW.MK make
=> WINDOW.C.

CUG281.28-WN_DEFS.H header
Definitions for the Unicorn Window Systems, U.2.0. => UCLIB.LIB WN
GLOB.H, WN PROTO.H, WN XTRN H

CUG281.29-WN GLOB.H header
Globals for Unicorn Windows version 3.0. => UCLIB.LIB, WN DEFS.H.

CUG281.30-WN_PROTO.H header
Function prototypes for the Unicorn Software window system version
2.0. UCLIB.LIB, WN_DEFS.H.

CUG281.31-WN XTRN.H header
External header for Unicorn Windows 3.0. => UCLIB.LIB, WN_DEFS.H.

==============================================================================
CUG282 -
-----------

Quip and Graphics [public] 1 disk. This volume contains a modified
QUIP (fortune cookie program) and some graphics programs for the
Hercules graphics card. David Bryant (MA) has reworked the QUIP
program from CUG182, fixing a number of problems, including partially
implemented features (no seeding of the random number generator),
incompatibilities with MS-DOS, and non-portable file structures. The
resulting version will compile under both MS-DOS and UNIX. The source
code and an executable image (compiled under Quick C) are included on
the disk. Dan Schecter (ND) has contributed three programs: WALCLOCK,
HOD and GEARS. WALCLOCK produces an analog clock face in Hercules
graphics. HOD implements the Hodgepodge machine as decribed in
Scientific American, also using Hercules graphics. GEARS is a bicycle
gear chart calculator in the form of a mini-spreadsheet. All programs
include source code and excecutable code compiled under Aztec C.

CUG282.01-GEARS.C source
By Dan Schechter. Bicycle gear chart calculator. Calculates gears in
gear inches, shows percentage change between adjacent chain rings and
between adjacent freewheels, and amount of chain slack. Works like a
mini-spreadsheet, recalculating entire chart each time an entry is
altered. => GEARS.EXE, GEARS.DOC. [MS-DOS: AZTEC] Uses Aztec
scr-functions.

CUG282.02-GEARS.DOC doc
By Dan Schechter. Operating instructions. => GEARS.C.

CUG282.03-GEARS.EXE executable
By Dan Schechter. => GEARS.C.

CUG282.04-HOD.C source
By Dan Schechter. Hodgepodge. Makes waves. => HOD.DOC. [MS-DOS: AZTEC]
Requires Hercules monochrome graphics. Hard disk recommended.

CUG282.05-HOD.DOC doc
By Dan Schechter. Operating instructions. => HOD.C.

CUG282.06-HOD.EXE executable
By Dan Schechter.

CUG282.07-INDEX doc
By Dan Schechter. Header IDs and brief descriptions for executable
files respective to GEARS, HOD and WALCLOCK. => GEARS.C, HOD.C,
WALCLOCK.C.

CUG282.08-QUIP.C source
By David Bryant. Part of a fortune cookie system, this program
displays the actual fortune. An optional command line paramenter
determines the number of quips displayed. => QUIP.H, QUIPUPDT.C,
QUIPADD.C, QUIP.DAT, QUIP.KEY. [UNIX, MS-DOS: QUICKC]

CUG282.09-QUIP.DAT data
By David Bryant. Fortune text data. => QUIP.C.

CUG282.10-QUIP.DOC doc
By David Bryant. Operating instructions. => QUIP.C.

CUG282.11-QUIP.EXE executable
By David Bryant. => GEARS.C.

CUG282.12-QUIP.H header
By David Bryant. Defines the files for use by the QUIP programs. =>
QUIP.C.

CUG282.13-QUIP.KEY data
By David Bryant. Indexes the start of each quip in QUIP.DAT. =>
QUIP.C, QUIP.DAT.

CUG282.14-QUIPADD.C source
By David Bryant. This program appends new quips to the end of the quip
file QUIP.DAT and updates the index file QUIP.KEY. => QUIP.C. [UNIX,
MS-DOS: QUICKC]

CUG282.15-QUIPADD.EXE executable
By David Bryant. => QUIPADD.C.

CUG282.16-QUIPUPDT.C source
By David Bryant. This program takes the quip file QUIP.DAT and creates
a new index file QUIP.KEY from it. => QUIP.C. [UNIX, MS-DOS: QUICKC]

CUG282.17-QUIPUPDT.EXE executable
By David Bryant. => QUIPUPDT.C.

CUG282.18-README doc
By Dan Schechter. Explains that INDEX is the table of contents for Dan
Schechter's submissions.

CUG282.19-SUBMIT.TXT doc
By David Bryant. Letter explaining modifications in QUIP programs
submitted. => QUIP.C.

CUG282.20-WALCLOCK.C source
By Dan Schechter. WALL CLOCK. Presents an animated analog clock face
with sweep second hand and audible ticking. Includes 12-hour or
24-hour format and options to local time (Australian, Chinese and
Reagan) intended for amusement. => WALCLOCK.DAT, WALCLOCK.EXE.
[MS-DOS: AZTEC] Requires Hercules monochrome graphics.

CUG282.21-WALCLOCK.DAT data
By Dan Schechter. Look-up table for WALCLOCK. => WALCLOCK.C.

CUG282.22-WALCLOCK.EXE executable
By Dan Schechter. => WALCLOCK.C.

==============================================================================
CUG283 -
-----------

FAFNIR
By David C. Oshel. [public] 3 disks. David C. Oshel (IA), the author
of CUG239 & CUG240 (P.C. Gammon) has contributed Fafnir, a
general-purpose, table-driven forms engine. Fafnir includes support
for about a dozen pre-defined field types, including dollar, date, and
variable-width text. A Library of screen management functions support
one and two page screen forms. An accompanying screen editor (for
PC-clones) facilitates screen design. An elaborate set of macro
definitions simplify table specification. Source is included for an
IBM PC screen driver which writes directly to screen RAM.
Demonstration programs exhibit most of the possible tricks and graces.
For more details see the narrative description of this package in
Section 2.

CUG283.01-BURLAP make

CUG283.02-BURLAP.C source
This is a mailing list maintenance program featuring Faircom's c-tree
(TM) ISAM file management for speed & convenience. => BURLAP,
BURLAP.EXE, BURLAP.H, MACROS.C, PRINTER.C, SELECT.C. [MS-DOS2: MSC5]

CUG283.03-BURLAP.CFG data
Screen colors and snow flag save/restore file. => BURLAP.C.

CUG283.04-BURLAP.DT data
Default c-tree (TM) ISAM data, binary file. => BURLAP.C.

CUG283.05-BURLAP.EXE executable
=> BURLAP.C.

CUG283.06-BURLAP.H header
Global data and function prototypes for BURLAP. => BURLAP.C.

CUG283.07-BURLAP.IX data
Default c-tree (TM) ISAM index, binary file. => BURLAP.C.

CUG283.08-BURLAP.P data
Default c-tree (TM) ISAM parameters, text file. => BURLAP.C.

CUG283.09-BURLAP.S data
default screen image file. => BURLAP.C.

CUG283.10-CIAO.H header
Declarations for all global data & functions for screen and keyboard
1/0, utilities, Macros. => FAFNIR.C, VIDINIT.H.

CUG283.11-CLAIROL.H header
Module lets users decide screen colors. CIAO.H, KEYS.H.

CUG283.12-COUNTIES.C source
Scrollbar menu returns IOWA D.O.T. county codes from list. =>
FAFNIR.C. [MS-DOS2: MSC5, MASM5]

CUG283.13-CRC.DOC doc
Description of CRC background, function, capabilities, commands, &
algorithm notes. CRC.EXE.

CUG283.14-CRC.EXE executable
CRC for MSDOS & concurrent PC-DOS. This is a disk file CRC checking
and generating utility originally written for CP/M-80, CP/M-86,
MP/M-86 and Concurrent PC-DOS, now available for MSDOS. CRC will run
on systems with as little as 25K of RAM. It may be used to verify the
integrity of PC-Blue or SIG/M public domain distribution disks. =>
CRC.EXE, CRCKLIST.CRC. [MS-DOS2] MSDOS 2.0 or higher required for
operation.

CUG283.15-CRCKLIST.CRC data
Used as look-up table, listing the CRC's of serial files, for
integrity checks. => CRC.EXE.

CUG283.16-CRYPT.C source
Hogg's Code encryption, decryption.

CUG283.17-CVIDEO.C source
Low-level screen I/O. => VIDEO.H.

CUG283.18-DEMO.C source
Demonstrates some of the Fafnir library's forms editing routines. =>
FAFNIR.H, CIAO.H.

CUG283.19-DEMO41.EXE executable
Demonstrates Fafnir forms I/O, large model. => FAFNIR4L.LIB.

CUG283.20-DEMO4S.EXE executable
Demonstrates Fafnir forms I/O, small model. => FAFNIR4S.LIB.

CUG283.21-DLRCVT.C source
Converts dollar long int to dollar formatted string. => CIAO.H.

CUG283.22-ES.C source
Displays/edits program screens, saves as compilable C source text. =>
CIAO.H, KEYS.H, FAFNIR.C, BURLAP.C, ES.DOC, ES.EXE.

CUG283.23-ES.DOC doc
Brief introduction ES.EXE. => ES.EXE.

CUG283.24-ES.EXE executable
Screen file editor, small model. [MS-DOS2]

CUG283.25-FAF1.S data
Screen file for DEMO.C - demo, page 1 of 2. => DEMO.C.

CUG283.26-FAF2.S data
Screen file for DEMO.C - demo, page 2 of 2. => DEMO.C.

CUG283.27-FAFNIR make
Makes script for compiling Fafnir libraries & programs. => FAFNIR.C.

CUG283.28-FAFNIR.C source
A general-purpose, table-driven forms engine for data entry, with
unlimited data types, but standard field types are predefined as
Macros: i.e. Text, Dollar, Date, Phone, SSN, Display, Virtual, etc.
Source code for Elysian Fields and page editors. => CIAO.H, KEYS.H,
FAFNIR.H, CLAIROL.C, COUNTIES.C, CRYPT.C, CVIDEO.C, DEMO.C, DLRCUT.C,
ES.C, FAFNIR, FSTATS.C, GOTOXY.C, JULIAN.C, KEYDEFS.C, KEYIN.C,
KEYS.ASM, LVIDEO.ASM, JULDAY.C. [MS-DOS2: MSC5, MASM5]

CUG283.29-FAFNIR.DOC doc
Description, history, improvements, & bugs remaining. => FAFNIR.C.

CUG283.30-FAFNIR.H header
Magic macros for Forms Nivana, plus globals, etc. => FAFNIR.C.

CUG283.31-FAFNIR4L.LIB library
Large model forms engine library, containing all object code for
Fafnir files listed on distribution package. => FAFNIR.C,
FAFNIR4L.XRF, DEMO4L.EXE, JDEMO4L.EXE.

CUG283.32-FAFNIR4L.XRF doc
Cross-reference listing of functions and associated source files for
FAFNIR4L.LIB. => FAFNIR4L.LIB, FAFNIR.C.

CUG283.33-FAFNIR4S.LIB library
Small model forms engine library, containing all object code for
Fafnir files listed on distribution package. => FAFNIR.C,
FAFNIR4S.LIB, DEMO4S.EXE, JDEMO4S.EXE.

CUG283.34-FAFNIR4S.XRF doc
Cross-reference listing of functions and associated source files for
FAFNIR4S.LIB. => FAFNIR4S.LIB, FAFNIR.C.

CUG283.35-FSTATS.C source
Routine finds MS-DOS file size. => FAFNIR.C.

CUG283.36-GOTOXY.C source
These are functions that directly affect the machine curser, and
CIAO's soft curser screen write location. => FAFNIR.C, VIDINIT.H.

CUG283.37-JDEMO4L.EXE executable
Demonstrates MSJ direct video routines, large model. => FAFNIR4L.LIB,
FAFNIR.C.

CUG283.38-JDEMO4S.EXE executable
Demonstrate direct video routines, small model. => FAFNIR4S.LIB,
FAFNIR.C.

CUG283.39-JULDAY.C source
Converts a Julian day number to mm, dd, yyyy, & v.v. => FAFNIR.C.

CUG283.40-JULIAN.C source
Julian Day Number routine. Astronomical version, returns double float,
not long. FAFNIR.C.

CUG283.41-KEYDEFS.C source
Displays a popout window with the ten Fn keys drawn down the middle.
The function names are listed in 21 character fields to left and
right. Sample arrays of menu strings are shown below, all 10 must be
defined even if the string is null. => FAFNIR.C, CIAO.H, KEYS.H.

CUG283.42-KEYIN.C source
Waits for a keypress, blanks screen after 8 minutes of inactivity. =>
FAFNIR.C, CIAO.H.

CUG283.43-KEYS.ASM source
ROM-BIOS keyboard services for small-model C programs. Assembler keyin
routine for ES.EXE screen editor (small). => ES.C.

CUG283.44-KEYS.H header
Defines IBM PC extended key codes. => FAFNIR.C, CIAO.H. These
definitions require keyin O from the CIAO library, or another of my
own functions.

CUG283.45-LVIDEO.ASM source
This program handles direct writes to the IBM PC video screen buffer
located in RAM. => FAFNIR.C, FAFNIR4L.LIB.

CUG283.46-MACROS.C source
Macro definitions. => BURLAP.C.

CUG283.47-MAKEIT.BAT batch
Make file for FAFNIR4x.LlB. => FAFNIR4L.LIB, FAFNIR4S.LIB, FAFNIR.C.
Requires installed MSC5.0 (and utils) and MASM 5.0 to start.

CUG283.48-MSJDEMO.C source
Demo from MicroSoft Systems Journal, Nov. 88 (modified). => FAFNIR.C,
VIDEO.H.

CUG283.49-OLDEDITS.C source
Obsolete line editing functions. => FAFNIR.C, CIAO.H, KEYS.H.

CUG283.50-PRINTER.C source
Printer control routines. => BURLAP.C.

CUG283.51-README.DOC doc
Description of package, starting it up, its requirements and
assumptions, files produced after compilation, and files submitted on
the distribution disk. => FAFNIR.C.

CUG283.52-README2.DOC doc
Description of BURLAP, distributed files, created files, data files,
file structure, background, operations, and non-disclosure notes. =>
BURLAP.C.

CUG283.53-SAVESCRN.C source
Saves all aspects of the current window and cursor environment, not
screen contents. Returns the value of the save/restored synchronized
flag. => FAFNIR.C, VIDINIT.H.

CUG283.54-SCROLL.C source
Direct video, scrolls region up or down one line. => FAFNIR.C,
VIDINIT.H.

CUG283.55-SELECT.C source
This exhibits the relationships between a form and the actual storage
location(s) of the data collected into the form. => BURLAP.C,
FAFNIR.C.

CUG283.56-SOUND.C source
Standard sound effects and IBM PC tone generation primitives. =>
FAFNIR.C, CIAO.H.

CUG283.57-SVIDEO.ASM source
This program handles direct writes to the IBM PC video screen buffer
located in RAM. => FAFNIR.C, FAFNIR4S.LIB. Small model stack bias.
Requires MASM 5.0 or MASM 5.1 per documentation.

CUG283.58-SWAPSCRN.C source
Swaps visible with hidden screen buffer. FAFNIR.C, VIDINIT.H.

CUG283.59-TM.C source
Time and date routines, cf-time () and cf-date (), corresponding to C
Food Smorgasboard functions with same arguments. => FAFNIR.C.

CUG283.60-TYPEAFIL.C source
Reads a text file and displays it with optional word wrap in a window
box. PgUp reviewing included. => FAFNIR.C, CIAO.H, KEYS.H.

CUG283.61-USSTATES.C source
Scrollbar menu returns Z-letter U.S. State abbrv. from list. =>
FAFNIR.C.

CUG283.62-VERSION.INF doc
Explanations of modifications which resulted in Burlap v 2.1 and
Burlap v 2.3. => BURLAP.C.

CUG283.63-VIDEO.H header
Global data and C function prototypes for LVIDEO and CVIDEO routines.
Also macro assembler functions and documentation regarding FAFNIR
library's current aspects and the direction of its development.
FAFNIR.C.

CUG283.64-VIDINIT.C source
This is the part of CIAO that contains initialization and
deinitialization, plus all global and external data. There are no
references to functions other that the C library and the MST low-level
I/O functions in here. => FAFNIR.C, VIDINIT.H.

CUG283.65-VIDINIT.H header
=> FAFNIR.C, VIDEO.H.

CUG283.66-WBOX.C source
Draws a box and establishes a window inside it. => FAFNIR.C,
VIDINIT.H.

CUG283.67-WINDOW.C source
Window dimension routines. => FAFNIR.C, VIDINIT.H.

CUG283.68-WINK.C source
Window character out, obeys backspace and new line inside window
routine. => FAFNIR.C, VIDINIT.H.

CUG283.69-WPRINTF.C source
printf formatted string into window, honors all the wputs attribute
escape commands. => FAFNIR.C, CIAO.H.

CUG283.70-WPUTS.C source
Puts string inside a window, uses wink, interprets video attribute
escape codes. => FAFNIR.C, VIDINIT.H.

==============================================================================
CUG284 -
-----------

Portable 8080 System (JUG070)
By M. Sekiguchi. [public] 1 disk. M. Sekiguchi, Tokyo, has submitted
an 8080 interpreter in C. This interpreter (with a user-supplied
object image of CP/M-80) will execute CP/M-80 on non-8080 systems. The
interpreter could also be used as a simulator by programmers
developing firmware for an embedded 8080 of 8085 processor. The disk
includes the 8080 machine code interpreter, written in portable C, and
several other utilities. CP/M is not included on the disk, by some
tools for porting CP/M to the simulated environment are provided,
including a C version of the BIOS routines required by CP/M. (The
provided BIOS is for an NEC running MS-DOS and would require
adaptation to work in other environments.) The disk also contains some
stand-alone programs including Palo Alto Tiny BASIC. The stand-alone
programs can be executed under the portable 8080 system without CP/M.
Sekiguchi has tested the program on several machines including an
MS-DOS PC-clone and UNIX workstation. The program was developed under
Turbo C v1.5j (a Japanese variant).

CUG284.01-BASIC.ASM source
Palo Alto Tiny BASIC. CP/M assembly code for a stand-alone BASIC
ported to 18080. Intended for demonstration, emphasizing the speed and
memory size of an actual 8080 processor. => BASIC.DOC, BASIC.HEX,
18080.EXE. [CP/M-80: TC1.5] You cannot save a file including BASIC
code. The only available memory is 3 K bytes.

CUG284.02-BASIC.DOC doc
Synopsis & description of Palo Alto Tiny BASIC. => BASIC.ASM,
BASIC.HEX.

CUG284.03-BASIC.HEX executable
=> BASIC.DOC, BASIC.ASM.

CUG284.04-BIOS.C source
CP/M BIOS simulator. This module logically consists of 5 parts:
physical dish I/O, direct I/O port simulation, normal (simulated) disk
I/O, character I/O, and common initialization routines. => 18080.EXE.
[MS-DOS: TC1.5] Physical disk support routine calls NEC disk BIOS and
cannot run on other hardware.

CUG284.05-BIOS.H header
BIOS configuration (must match with CP/M).

CUG284.06-BIOS20.ASM source
fake bios for Portable CP/M system. => 18080.EXE, BIOS20.HEX. [MS-DOS:
TC1.5]

CUG284.07-BIOS20.HEX executable
assembled 20KB BIOS. => BIOS20.ASM.

CUG284.08-CATALOG.070 doc
Disk volume catalog of contents.

CUG284.09-COMPILE.H header
defines for compiler and/or CPU dependent conditions. Offers choices
for MSCv3 (8086), Turbo C 1.5 (8086), Lattice Cv2 (8086), Digital
Research C (68000), AT&T's 3B2 with UNIX system V. => 18080.EXE. Not
all options have been tested.

CUG284.10-CONFIG.H header
System Configuration. Defines some constants to configure the system.
Modifications can be made for work space, file names, and/or operation
mode options. => 18080.EXE.

CUG284.11-COPYALL.ASM source
Stand alone utility to copy virtual CP/M disks. Can copy between
virtual and physical disks. => 18080.EXE, COPYALL.DOC, COPYALL.HEX.
[MS-DOS: TC1.5] This program does not use SECTRAN function and is
intended for standard CP/M format (8"1 s) only. No error checking is
performed during execution and program cannot be terminated until it
finishes.

CUG284.12-COPYALL.DOC doc
Virtual disk copy utility manual page. => COPYALL.ASM, COPYALL.HEX.

CUG284.13-COPYALL.HEX executable
COPYALL.ASM, COPYALL.DOC.

CUG284.14-CPM.DOC doc
Porting of CP/M for the portable 8080 system. Explains porting
procedures centered on copying the real CP/M to the simulated
environment. => 18080.EXE.

CUG284.15-CPMFILE.C source
Virtual disk access utility. => 18080.EXE, CPMFILE.EXE, CPMFILE.DOC.
[MS-DOS: TC1.5] Numerous bugs (see CPMFILE.DOC).

CUG284.16-CPMFILE.DOC doc
Virtual disk access utility manual pages. => CPMFILE.C, CPMFILE.EXE.
Numerous bugs listed.

CUG284.17-CPMFILE.EXE executable
=> CPMFILE.C, CPMFILE.DOC.

CUG284.18-CRC.EXE executable
Checksum program (ver 6.71). => CRCKLIST.070.

CUG284.19-CRCKLIST.070 data
CRC values of files on this disk. => CRC.EXE.

CUG284.20-DEFS.H header
Commom definitions. => 18080.EXE.

CUG284.21-GETSYS.ASM source
Stand-alone utility to extract CP/M operating system from a standard
CP/M master floppy disk. => GETSYS.DOC, GETSYS.HEX. [MS-DOS: TC1.5] No
error checking during execution. Utility for standard CP/M format
(8"1s) only. Other bugs (see GETSYS.DOC).

CUG284.22-GETSYS.DOC doc
Manual page for utility to extract CP/M system. => GETSYS.ASM,
GETSYS.HEX. Bugs listed.

CUG284.23-GETSYS.H EX executable
=> GETSYS.ASM, GETSYS.DOC.

CUG284.24-HALT.ASM source
A CP/M program to stop 18080 source. => HALT.COM. [MS-DOS: TC1.5]

CUG284.25-HALT.COM executable
=> HALT.ASM.

CUG284.26-18080.DOC doc
Manual pages for 8080 simulator. => 18080.EXE, 18080.PRJ.

CUG284.27-18080.EXE executable
Intel 8080 simulator. Includes machine code interpreter. Designed to
run a CP/M-80 system under NCH-8080 micros. Tested on MS-DOS PC and
UNIX. Written in Potable C. => 18080.DOC, 18080.PRJ, BASIC.ASM,
BIOS.C, BIOS20.ASM, COMPILE.H, CONFIG.H, COPYALL.ASM, CPMFILE.C,
DEFS.H, GETSYS.ASM, MAIN.C, MAKEFILE.MAK, MKHEX.C, MONITOR.C,
NEWDSK.C, TRACE.C, HALT.ASM, MACHINE.C. [MS-DOS: TC1.5]

CUG284.28-18080.PRJ make
Project file of 8080 for Turbo C. 18080.EXE.

CUG284.29-JUGPDS.FRM doc
Contribution form for JUG-CP/M Public Domain Library.

CUG284.30-MACHINE.C source
An 8080 machine instruction interpreter. => 18080.EXE. [MS-DOS: TC1.5]

CUG284.31-MAIN.C source
Main program for virtual CP/M simulator. 18080.EXE. [MS-DOS: TC1.5]

CUG284.32-MAKEFILE.MAK make
Make file for. portable 8080 engine and virtual CP/M-80 system. =>
18080.EXE.

CUG284.33-MKHEX.C source
Utility to create CP/M boot image file (CPMxx.HEX--xx stands for
system size.). 18080.EXE, MKHEX.DOC, MKHEX.EXE. [MS-DOS: TC1.5] No
error checking is performed.

CUG284.34-MKHEX.DOC doc
Manual pages for CP/M boot image file creation utility. => MKHEX.EXE,
MKHEX.C.

CUG284.35-MKHEX.EXE executable
=> MKHEX.C, MKHEX.DOC.

CUG284.36-MON.H header
Configuration constants for MONITOR.C virtual environment manager. =>
MONITOR.C.

CUG284.37-MONITOR.C source
Virtual Environment Manager. => 18080.EXE, MON.H. [MS-DOS: TC1.5]

CUG284.38-NEWDSK.C source
Creates and initializes a virtual disk file for 18080. => 18080.EXE,
NEWDSK.DOC, NEWDSK.EXE. [MS-DOS: TC1.5]

CUG284.39-NEWDSK.DOC doc
Manual page for virtual disk initialization utility. => NEWDSK.C,
NEWDSK.EXE.

CUG284.40-NEWDSK.EXE executable
=> NEWDSK.C, NEWDSK.DOC.

CUG284.41-PORTING.DOC doc
Porting Portable 8080 System to Other Systems. Includes information on
the nature of compilers, Low level Input/Output (BIOS), and command
line interface and boot file. => 18080.EXE.

CUG284.42-PROG.DOC doc
Generic information about the 18080 program. => 18080.EXE.

CUG284.43-READ-ME.070 object
Introduction to the 18080 package. => 18080.EXE.

CUG284.44-STAND.DOC object
Instructions for creating a stand-alone program. (a program you can
execute without CP/M in 18080.). => 18080.EXE.

CUG284.45-TRACE.C source
8080 instruction tracer. => 18080.EXE. [MS-DOS: TC1.5]

CUG284.46-UTIL.C source
General utility routines for monitor. => 18080.EXE, MONITOR.C.
[MS-DOS: TC1.5]

CUG284.47-WARNING.CUG doc
=> 18080.EXE. Documentation file extensions were changed from .SJD to
.DOC when translated to English.

CUG284.48-WARNING.DOC doc
=> 18080.EXE. Notes on BIOS.C and physical disk access routines. These
areas require some modification to be ported from NEC PC-9801 series.

==============================================================================
CUG285 -
-----------

BISON for MS-DOS
By Daniel R. Haney. [public] 3 disks. Daniel R. Haney (MA) has ported
Bison, a yacc-like parser generator, to the MS-DOS environment. Bison
was originally developed by Robert Corbett and Richard Stallman as a
part of the Free Software Foundation's GNU.
Haney added prototypes for ANSI conformance and adapted the code that
depends on MS-DOS filename conventions. Bison compiles under Microsoft
C v5.1 and Turbo C v1.5. The original UNIX code remains in the source
(commented out). Thus with little modification our distribution can
still compile under UNIX/XENIX. The disk contains the complete Bison
source code including a Makefile, an extensive set of tutorials and an
example program (HOC3 - High Order Calculator from "Unix Programming
Environments by Kernighan and Pike). The current update added the OS/2
versions of executable files, and incorporated additional changes and
enhancements. For more details see the narrative description of this
package in Section 2.

CUG285.01-ALLOCATE.C source
By Daniel R. Haney, Robert Corbett. Allocate and clear storage for
BISON. ALLOCATE.H, DOSBISON.EXE.

CUG285.02-ALLOCATE.H header
By Daniel R. Haney. => ALLOCATE.C.

CUG285.03-BISON.1
By Daniel R. Haney, Robert Corbett. Bison manual in nroff format. =>
DOSBISON.EXE, BISON.MAN, CHANGES, README, REFERENC, BISON.CLD,
BISON.TEX, BISONINF.0, BISONINF.1, BISONINF.2, BISONINF.3.

CUG285.04-BISON.H header
By Daniel R. Haney. Bison's main header. => DOSBISON.EXE.

CUG285.05-BISON.LNK link
By Daniel R. Haney, Robert Corbett. Link file. => DOSBISON.EXE.

CUG285.06-BISON.MAK make
By Roberto Artigas Jr.. => OS2BISON.EXE. [OS/2]

CUG285.07-BISON.MAN doc
UNIX programmer's Bison manual. => DOSBISON.EXE, BISON.1.

CUG285.08-BISON.TEX doc
By Richard Stallman, Charles Donnelly. Bison reference manual.
DOSBISON.EXE, BISON.1.

CUG285.09-BISONINF.0 doc
Contains copyright information and Tab Tables (indirect) for nodes. =>
DOSBISON.EXE, BISON.MAN, BISONINF.1.

CUG285.10-BISONINF.1 doc
=> BISONINF.0.

CUG285.11-BISONINF.2 doc
=> BISONINF.1.

CUG285.12-BISONINF.3 doc
BISONINF.2.

CUG285.13-CHANGES doc
Jan. 1989, port of Gnu Bison to MS-DOS. => BISON.1, DOSBISON.EXE.

CUG285.14-CLOSURE.C source
By Daniel R. Haney, Robert Corbett. Three subroutines for Bison:
closure(items,n); initialize_closure(n); and finalize_closure (). =>
DOSBISON.EXE, CLOSURE.H, LR0.C.

CUG285.15-CLOSURE.H header
By Daniel R. Haney. => CLOSURE.C.

CUG285.16-CONFLICT.C
By Daniel R. Haney. Find and resolve or report look-ahead conflicts
for Bison. => CONFLICT.H, DOSBISON.EXE.

CUG285.17-CONFLICT.H header
By Daniel R. Haney. => CONFLICT.C.

CUG285.18-COPYING doc
By Richard Stallman. Bison General Public License. Copyright notice by
Free Software Foundation. => BISON.1, DOSBISON.EXE.

CUG285.19-DERIVES.C source
By Robert Corbett. Match rules with nonterminals for Bison. =>
DOSBISON.EXE, DERIVES.H.

CUG285.20-DERIVES.H header
By Daniel R. Haney. => DERIVES.C.

CUG285.21-DOSBISON.EXE executable
By Daniel R. Haney, Robert Corbett. Bison is a general purpose parser
generator which converts a grammar description into a C program to
parse that grammar. It is upward compatible with Bell Laboratories
YACC. => DERIVES.C, OS2BISON.EXE HAIRY.PRS, SIMPLE.PRS, MAKEFILE,
BISON.LNK, ALLOCATE.C, CLOSURE.C, CONFLICT.C, FILES.C, GETARGS.C,
GETOPT.C, LALR.C, LEX.C, MAIN.C, NULLABLE.C, OUTPUT.C, GRAM.C, LR0.C.
[MS-DOS: MSC, TC1.5]

CUG285.22-FILELIST doc
By Daniel R. Haney, Robert Corbett. Bison distribution file list.

CUG285.23-FILES.C source
By Robert Corbett. Open and close files for Bison. => FILES.H,
DOSBISON.EXE.

CUG285.24-FILES.H header
By Daniel R. Haney. => FILES.C.

CUG285.25-GETARGS.C source
By Robert Corbett. Parse command line arguments for Bison. =>
GETARGS.H DOSBISON.EXE.

CUG285.26-GETARGS.H header
By Daniel R. Haney. => GETARGS.C.

CUG285.27-GETOPT.C source
By Daniel R. Haney, Robert Corbett. This version of getopt appears to
the caller like standard UNIX getopt but it behaves differently, since
it allows the user to intersperse the options with the other
arguments. => GETOPT.H, DOSBISON.EXE.

CUG285.28-GETOPT.H header
By Daniel R. Haney. => GETOPT.C.

CUG285.29-GRAM.C source
By Roberto Artigas Jr.. Allocate input grammar variables. => GRAM.H
DOSBISON.EXE.

CUG285.30-GRAM.H header
By Daniel R. Haney. Data definitions for internal representation of
Bison's input. => GRAM.C.

CUG285.31-HAIRY.PRS source
By Daniel R. Haney, Robert Corbett. Parce Handler. Template for
reentrant parser. => DOSBISON.EXE.

CUG285.32-HOC.IN
By Daniel R. Haney, Robert Corbett. Sample input file for higher order
calculator. => HOC3.Y.

CUG285.33-HOC3.H header
By Daniel R. Haney, Robert Corbett. => HOC3.Y.

CUG285.34-HOC3.Y source
By Daniel R. Haney, Robert Corbett. Higher order calculator. =>
DOSBISON.EXE. HOC3.H, HOCDECL.H, HOC.IN, HOCDEMO.BAT, INIT.C, MATH.C,
SYMBOL.C.

CUG285.35-HOCDECL.H header
By Daniel R. Haney, Robert Corbett. Definitions for the HOC3.Y
calculator. HOC3.Y.

CUG285.36-HOCDEMO.BAT batch
By Daniel R. Haney, Robert Corbett. Demonstration of the Higher Order
Calculator. => HOC3.Y.

CUG285.37-HOCFILES.DOC doc
By Daniel R. Haney. Brief description of HOC3 related files. =>
HOC3.Y.

CUG285.38-HOC_IS.DOC doc
By Daniel R. Haney, Robert Corbett. Very brief description of what
HOC3 does. => HOC3.DOC.

CUG285.39-INIT.C source
By Daniel R. Haney, Robert Corbett. Support functions for the Higher
Order Calculator. => HOC3.Y.

CUG285.40-LALR.C header
By Robert Corbett. Compute look-ahead criteria for Bison. => LALR.H,
DOSBISON.EXE.

CUG285.41-LALR.H header
By Daniel R. Haney, Robert Corbett. => LALR.C.

CUG285.42-LEX.C source
By Robert Corbett. Token reader for Bison's input parser. => LEX.H,
DOSBISON.1.

CUG285.43-LEX.H header
By Daniel R. Haney, Robert Corbett. Token type definitions for Bison's
input reader. => LEX.C.

CUG285.44-LR0.C source
By Robert Corbett. Generate the nondeterministic finite state machine
for Bison. => DOSBISON.1, LR0.H.

CUG285.45-LR0.H header
By Daniel R. Haney, Robert Corbett. => LR0.C.

CUG285.46-MACHINE.H header
By Robert Corbett, Richard Stallman. Define machine dependencies for
Bison. => DOSBISON.EXE.

CUG285.47-MAIN.C source
By Robert Corbett. Top level entry point of Bison. => DOSBISON.EXE.

CUG285.48-MAKEFILE make
By Daniel R. Haney, Robert Corbett. Object code dependencies file for
MS-DOS. DOSBISON.EXE. [MSC5]

CUG285.49-MAKEFILE.HOC make
By Daniel R. Haney, Robert Corbett. => HOC3.Y.

CUG285.50-MAKEFILE.MS make
By Daniel R. Haney, Robert Corbett. Microsoft C v 5.1 macros
definitions.-HOC3.Y.

CUG285.51-MATH.C source
By Daniel R. Haney, Robert Corbett. Support functions for the Higher
Order Calculator. => HOC3.Y.

CUG285.52-NEW.H header
By Robert Corbett. Storage allocation interface for Bison. =>
DOSBISON.EXE.

CUG285.53-NULLABLE.C source
By Robert Corbett. Part of the Bison parser generator. => NULLABLE.H,
DOSBISON.EXE.

CUG285.54-NULLABLE.H header
By Daniel R. Haney. => NULLABLE.C.

CUG285.55-OS2BISON.EXE executable
By Daniel R. Haney, Robert Corbett. Bison generates a table driven
parser written in C code from a grammar specification. It is upward
compatible with Bell Laboratories YACC. => DISBISON.EXE, HAIRY.PRS
SIMPLE.PRS, BISON.MAK, BISON.LNK, ALLOCATE.C, CLOSURE.C, CONFLICT.C,
DERIVES.C, FILES.C, GETARGS.C, GETOPT.C, GRAM.C, CALR.C, LEX.C, LR0.C,
MAIN.C, NULLABLE.C, OUTPUT.C. [OS/2]

CUG285.56-OUTPUT.C source
By Robert Corbett. Output the generated parsing program for Bison. =>
DOSBISON.EXE, OUTPUT.H.

CUG285.57-OUTPUT.H header
By Daniel R. Haney. => OUTPUT.C.

CUG285.58-PRINT.C source
By Robert Corbett. Print information on generated parser for Bison.
DOSBISON.EXE, PRINT.H.

CUG285.59-PRINT.H header
By Daniel R. Haney. => PRINT.C.

CUG285.60-READER.C source
By Daniel R. Haney, Robert Corbett. Read the input specification. =>
DOSBISON.EXE, READER.H.

CUG285.61-READER.H header
By Daniel R. Haney. => READER.C.

CUG285.62-README doc
By Daniel R. Haney, Robert Corbett. Information on installing Bison.
=> REFERENC, BISON.CLD.

CUG285.63-REFERENC doc
By Paul Rubin. Discusses differences between Bison and YACC. =>
README.

CUG285.64-SIMPLE.PRS source
By Robert Corbett, Richard Stallman. Template for a simple,
non-reentrant parser. This is the parser code that is written into
each Bison parser when the %semantic_parser declaration is not
specified in the grammar. => HAIRY.PRS, DOSBISON.EXE. There must be
only one dollar sign in this file.

CUG285.65-STATE.H header
By Robert Corbett. Type definitions for nondeterministic finite state
machine for Bison. => DOSBISON.EXE.

CUG285.66-SYMBOL.C source
By Daniel R. Haney, Robert Corbett. Support functions for the Higher
Order Calculator. => HOC3.Y.

CUG285.67-SYMTAB.C source
By Robert Corbett. Symbol table manager for Bison. => SYMTAB.H,
DOSBISON.EXE.

CUG285.68-SYMTAB.H header
By Robert Corbett. Definitions for SYMTAB.C and callers. => SYMTAB.C.

CUG285.69-TYPES.H header
By Robert Corbett. Define data type for representing Bison's grammar
input as it is parsed. => DOSBISON.EXE.

CUG285.70-UNIXMAKE.MAK make
By Robert Corbett. Original UNIX makefile. => DOSBISON.EXE.

CUG285.71-USAGE.DOC doc
By Daniel R. Haney, Robert Corbett. Brief description of what Bison is
and what is required in order to use it. => DOSBISON.EXE.

CUG285.72-VMSGTARG.C source
By Daniel R. Haney, Robert Corbett. VMS version of getargs(): uses DCL
command parsing (argc and argv are ignored). => DOSBISON.EXE,
VMSHLP.MAR.

CUG285.73-VMSHLP.MAR
By Gabor Karsai. Macro help routines for the Bison/VMS program. =>
DOSBISON.EXE, VMSGTARG.C.

CUG285.74-WARSHALL.C source
By Robert Corbett. Generate transitive closure of a matrix. =>
DOSBISON.EXE, WARSHALL.H.

CUG285.75-WARSHALL.H header
By Daniel R. Harrison. => WARSHALL.C.

==============================================================================
CUG286 -
-----------

GRAD FOR MSC
By Conrad Kwok. [share1] 2 disks. This is a new version (1.2) of the
GRAD library. Unlike the earlier release (CUG237 and CUG238), this
version includes the complete source. Because this change
significantly alters the size of the distribution, we are releasing
the update as new volumes instead of updating the original volumes.
CUG286 includes the source code for Microsoft C v4.0, v5.0 and v5.1
and CUG287 includes the source code for Turbo C v1.0. The GRAD
graphics library is a collection of functions for drawing dots, lines,
circles, ellipsis, arcs and also for filling regions, displaying
characters, printing, etc. Several useful sample programs such as a
sideways print utility, a graphics and text merge utility,, and a
graphics command interpreter are provided. GRAD includes support for
CGA (640 X 200) and HGA (720 X 348) graphics modes and can be
configured to support other graphics adapters. GRAD supports Epson
FX-80, Okidata ML192 or compatibles and
laser printers using the Jlaser card. The major differences between
the GRAD library and other graphics libraries are its superior
character display function and versatile printing function. With the
GRAD library, less than 200 lines of commented code are required to
write a sideways printing program with user definable size, font type,
spacing, and top and bottom margins.

CUG286.01-AMCSC10.FON data
Caps and small caps font. => GRADLIB.LIB.

CUG286.02-AMR14.FON data
Roman font. => GRADLIB.LIB.

CUG286.03-AMR7.FON data
Roman font. => GRADLIB.LIB.

CUG286.04-AMR7D.FON data
Roman Sideways font. => GRADLIB.LIB.

CUG286.05-AMSL8.FON data
Slant font. => GRADLIB.LIB.

CUG286.06-AMTT8.FON data
TeleType font. => GRADLIB.LIB.

CUG286.07-ARC2.C source
Draws an arc (part of a circle). => GRADLIB.LIB, ARCPOINT.C,
ARCSUPP.C.

CUG286.08-ARCPOINT.C source
Gives two endpoints of ARC2 or EARC2. => GRADLIB.LIB.

CUG286.09-ARCSUPP.C source
Two supplemental routines for ARC2 and EARC2. => GRADLIB.LIB.

CUG286.10-BLKCLIP.C source
Blockclip is a routine which clips a block against the window. =>
GRADLIB.LIB.

CUG286.11-BLKCOPY.C source
Copy a data block between two frames. => GRADLIB.LIB.

CUG286.12-BLKLDSV.C source
Blockload - load a block from the disk BlockSave - save a block to the
disk. GRADLIB.LIB.

CUG286.13-CALCADDR.ASM source
Calculates the word address of a point in bytes. => GRADLIB.LIB.
Assembly code.

CUG286.14-CCALCADD.OBJ object
GRADLIB.LIB, CALCADDR.ASM.

CUG286.15-CHARDISP.ASM source
Contains character display related functions: _wrtc -- move the pixel
pattern from buffer to the current frame _copyfont -- copy the pixel
data to buffer for manipulation _ctextL -- clip the left side of the
pixel data _ctextR -- clip the right side of the pixel data. =>
GRADLIB.LIB. Assembly code.

CUG286.16-CIRC.ASM source
Draws a logical circle. => GRADLIB.LIB, CIRCLE.C. Assembly code.

CUG286.17-CIRCLE.C source
Contains two external usable routines to draw circle and arc Circle --
draws a logical circle which will look like a circle only on a screen
with square pixels. Arc1 -- Draw n/8 of a circle. n can be 0 to 8. =>
GRADLIB.LIB.

CUG286.18-CLINE.C source
Line (x1, y1, x2, y2) - draw a line from (x1, y1) to (x2, y2)
inclusively. => GRADLIB.LIB.

CUG286.19-COLOR.MAK make
Makefile for FTABLE.OBJ, CALCADDR.OBJ, PLOTTYPE.OBJ (parts of CGA
driver). => GRADLIB.LIB.

CUG286.20-COORD.C source
Contains functions for setting origins and window coordinates. =>
GRADLIB.LIB.

CUG286.21-DISPFONT.OBJ source
Display font program object file. GRADLIB.LIB.

CUG286.22-DOSREAD.ASM source
DOSREAD of GDS. Contains_dosread, _dosopen,_dosseek, and dosclose. =>
GRADLIB.LIB. Assembly code.

CUG286.23-DRAW.C source
Interprets a string of commands for drawing. => GRADLIB.LIB.

CUG286.24-EARC2.C source
Draws an arc (part of an ellipse). => GRADLIB.LIB, ARCPOINT.C,
ARCSUPP.C.

CUG286.25-ELLIPSE.C source
Three external usable routines to draw ellipse and arc. :>
GRADLIB.LIB.

CUG286.26-ENVIRON.C source
Two functions: EnvSave -- saves the environment EnvRsto -- restores
the environment. => GRADLIB.LIB.

CUG286.27-EQUIV.C source
=> GRADLIB.LIB.

CUG286.28-ERR.C source
Example of using the user error handling features. => GRADLIB.LIB.

CUG286.29-EXECFUNC.ASM source
Source file for compiling with executable functions. => GRADLIB.LIB.

CUG286.30-EXECFUNC.OBJ object
=> GRADLIB.LIB, EXECFUNC.ASM.

CUG286.31-EXETIME.C source
Source file for timing GRAD function. => GRADLIB.LIB.

CUG286.32-EXETIME.MAK make
Makefile for compiling TIME.C.=> GRADLIB.LIB.

CUG286.33-FCIRCLE.C source
FillCircle -- draw a solid circle FillEllipse -draw a solid ellipse.
=> GRADLIB.LIB.

CUG286.34-FILE11MS.TXT doc
Names, lengths and one-line descriptions of some files. =>
GRADLIB.LIB.

CUG286.35-FILEFON.TXT doc
Names, lengths and descriptions of some font files. => GRADLIB.LIB.

CUG286.36-FILL.C source
Solid Fill -- entirely fill a region Pattern fill -fill the area by
the pattern specified. =>GRADLIB.LIB.

CUG286.37-FONT.C source
Loadfont -- loads a font file from the disk Removefont -- removes a
font from memory. => GRADLIB.LIB.

CUG286.38-FRAME.C source
Create frame -- creates a new frame Remv frame -- removes a frame from
GRAD and releases the memory. => GRADLIB.LIB.

CUG286.39-FTABLE.C source
=> GRADLIB.LIB.

CUG286.40-FTABLE.OBJ object
=> GRADLIB.LIB, FTABLE.C.

CUG286.41-GDS.H header
=> GRADLIB.LIB.

CUG286.42-GDSLIB.MAK make
=> GRADLIB.LIB.

CUG286.43-GDSLIB.NAM batch
=> GRADLIB.LIB.

CUG286.44-GLOBAL.C source
Initializes global variables. => GRADLIB.LIB.

CUG286.45-GRADARC.H header
Header file for ARC1 and EARC1. => GRADLIB.LIB.

CUG286.46-GRADEGS.GCM source
Command file example for interp and mprint. => GRADLIB.LIB.

CUG286.47-GRADENV.H header
Header file for using EnvSave and EnvRsto. => GRADLIB.LIB, ENVIRON.C.

CUG286.48-GRADEPSN.C source
Printer controls for the Epson FX-80. => GRADLIB.LIB.

CUG286.49-GRADERR.C source
Error handling routine. => GRADLIB.LIB.

CUG286.50-GRADFILE.DOC doc
Brief description of GRAD archives. => GRADLIB.LIB.

CUG286.51-GRADIO.H header
Header file for WriteStr, ReadStr, and WriteC.

CUG286.52-GRADLIB.LIB library
GRAD is a graphics library containing functions for drawing dots,
lines, circles, ellipsis, and arcs and functions for region filling,
window management, character display, and printing. [MS-DOS: MSC5,
MSC4]

CUG286.53-GRADOKI.C source
Printer controls for Okidata ML192. => GRADLIB.LIB.

CUG286.54-GRADPROG.DOC doc
GRAD programmer's reference manual. => GRADLIB.LIB.

CUG286.55-GRADUSER.DOC doc
GRAD Graphics Library User's Manual Version 1.1 for IMB PC/XT/AT or
compatibles. => GRADLIB.LIB.

CUG286.56-GRADVAR.H header
GRAD global variables. => GRADLIB.LIB.

CUG286.57-HCALCADD.OBJ object
=> GRADLIB.LIB, CALCADDR.ASM.

CUG286.58-HLCOPY.ASM source
Contains Level 1 horizontal line, vertical line drawing, and dot
plotting routines. => GRADLIB.LIB. Assembly code.

CUG286.59-HLNLMT.ASM source
=> GRADLIB.LIB. Assembly code.

CUG286.60-INIT.C source
Source for GRAD initialization and cleanup functions. => GRADLIB.LIB.

CUG286.61-INSTALL.DOC doc
Installation procedure and instructions on using GRAD. => GRADLIB.LIB.

CUG286.62-INTERP.C source
This program is used to interpret GRAD functions in restricted C
syntax of function calls. The method used is recursive descent. =>
GRADLIB.LIB.

CUG286.63-INTERP.MAK make
Makefile for compiling INTERP.EXE from INTERP.C and EXECFUNC.ASM. =>
GRADLIB.LIB, INTERP.C, EXECFUNC.ASM.

CUG286.64-JLASER.DOC doc
Instructions for using a laser printer with a JLASER card. =>
GRADLIB.LIB.

CUG286.65-LINE.ASM source
Level 1 line drawing function. => GRADLIB.LIB. Assembly code.

CUG286.66-MISC.ASM source
Miscellaneous GDS functions. => GRADLIB.LIB. Assembly code.

CUG286.67-MPRINT.C source
Sample program. => GRADLIB.LIB.

CUG286.68-MPRINT.MAK make
=> GRADLIB.LIB, MPRINT.C, EXECFUNC.ASM.

CUG286.69-MPRT.GCM data
One of the example files for MPRINT. => GRADLIB.LIB, MPRINT.C.

CUG286.70-MPRT.TXT doc
Another one of the example files for MPRINT. => GRADLIB.LIB, MPRINT.C.

CUG286.71-NEXTXY.C source
Gives next (x,y) location for ReadStr or WriteStr. => GRADLIB.LIB,
MPRINT.C.

CUG286.72-OE7.FON data
Old English font. => GRADLIB.LIB.

CUG286.73-OKI.MAK make
Makefile for compiling GRADOKI.C with PRTGC.ASM. => GRADLIB.LIB.

CUG286.74-PFRAME.C source
Printing functions. => GRADLIB.LIB.

CUG286.75-PFRAME.OBJ object
=> GRADLIB.LIB, PFRAME.C.

CUG286.76-PLOTTYPE.ASM source
This file contains the lowest level routine in writing and accessing
the frame memory, and other related routines. => GRADLIB.LIB
PLOTTYPE.OBJ. Assembly code.

CUG286.77-PLOTTYPE.OBJ object
=> GRADLIB.LIB, PLOTTYPE.ASM.

CUG286.78-PRT.ASM source
Low level functions for printing, including: prt -- convert an 8
integer array for printing pbflush -- flush everything in buffer to
printer rmvO - remove trailing zeros. => GRADLIB.LIB. Assembly code.

CUG286.79-PRTCNTL.C source
Printer controls. => GRADLIB.LIB.

CUG286.80-PRTCNTL.OBJ object
=> GRADLIB.LIB, PRTCNTL.C.

CUG286.81-PRTFONT.C source
=> GRADLIB.LIB.

CUG286.82-PRTFONT.H header
=> GRADLIB.LIB, PRTFONT.C.

CUG286.83-PRTGC.ASM source
prtc -- append a character to the buffer. GRADLIB.LIB. Assembly code.

CUG286.84-PRTGC.OBJ object
=> GRADLIB.LIB, PRTGC.ASM.

CUG286.85-README.1ST doc
System requirements and reference for execution of GRAD. =>
GRADLIB.LIB.

CUG286.86-README.DOC doc
Introduction to GRAD: capabilities with guides to additional
documentation. => GRADLIB.LIB.

CUG286.87-READSTR.C source
Read a line from standard input. => GRADLIB.LIB.

CUG286.88-RECT.C source
Draws a rectangle. => GRADLIB.LIB.

CUG286.89-ROTATE.C source
This is a program to rotate the characters in a font file by 90
degrees in anti-clockwise direction. => GRADLIB.LIB.

CUG286.90-S16X16.FON data
Font file (16 x 16). => GRADLIB.LIB.

CUG286.91-S5X6.FON data
Font file (5 x 6). => GRADLIB.LIB.

CUG286.92-S6X8.FON data
Font file (6 x 8). => GRADLIB.LIB.

CUG286.93-S6X8D.FON data
Font (6 x 8 sideways) file. => GRADLIB.LIB.

CUG286.94-S8X8.FON data
Font file (8 x 8). => GRADLIB.LIB.

CUG286.95-S9X14.FON data
Font file (9 x 14). => GRADLIB.LIB.

CUG286.96-SELECT.C source
Selectfont -- select the current font number. Select frame -- select
the current frame. => GRADLIB.LIB.

CUG286.97-SINVAL.C source
=> GRADLIB.LIB.

CUG286.98-SIZE.C source
Selects font size. => GRADLIB.LIB.

CUG286.99-SPECIAL1.C source
Example of using SPACING FUNC. => GRADLIB.LIB.

CUG286.100-SWPRT.C source
Sideways printing program. => GRADLIB.LIB.

CUG286.101-TANVAL.C source
Tan value for degree 0, 0.5, 1.5, ... 43.5, 44.5, 45. => GRADLIB.LIB.

CUG286.102-TEST.DOC doc
Directions for using example files and sample programs to test
installation. => GRADLIB.LIB.

CUG286.103-TEX2GRAD.C source
Program to convert a TEX pixel file (1002 PXL file) to a GRAD font
file. GRADLIB.LIB.

CUG286.104-TIME.MAK make
=> GRADLIB.LIB.

CUG286.105-VHLINE.C source
Dot (x,y) -- write a single dot to a frame HorzLine (x,y,length,width)
-- draw a horizontal line VertLine (x,y,length,width) -draw a vertical
line. => GRADLIB.LIB.

CUG286.106-VHLN.ASM source
Level 1 horizontal line, vertical line drawing and dotplotting
routines. => GRADLIB.LIB. Assembly code.

CUG286.107-WARNING.CUG doc
Naming conventions for duplicate filenames.

CUG286.108-WRITE.C source
Two public routines: writec--write a single character to the current
frame using currently selected font writeStr--write a character string
to the current frame using currently selected font. => GRADLIB.LIB.

CUG286.109-XHLINE.C source
Creates a horizontal line extended at both ends. => GRADLIB.LIB.

==============================================================================
CUG287 -
-----------

GRAD for Turbo C
By Conrad Kwok. [share1] 3 disks. See CUG286

CUG287.01-AMCSC10.FON data
Caps and small caps font. => GRADLIB.LIB.

CUG287.02-AMR14.FON data
Roman font. => GRADLIB.LIB.

CUG287.03-AMR7.FON data
Roman font. => GRADLIB.LIB.

CUG287.04-AMR7D.FON data
Roman sideways font. => GRADLIB.LIB.

CUG287.05-AMSL8.FON data
Slant font. => GRADLIB.LIB.

CUG287.06-AMTT8.FON data
TeleType font. => GRADLIB.LIB.

CUG287.07-ARC2.C source
Draws an arc (part of a circle). => GRADLIB.LIB, ARCPOINT.C,
ARCSUPP.C.

CUG287.08-ARCPOINT.C source
Gives two endpoints of ARC2 or EARC2. => GRADLIB.LIB.

CUG287.09-ARCSUPP.C source
Two supplemental routines for ARC2 and EARC2. => GRADLIB.LIB.

CUG287.10-BLKCLIP.C source
Blockclip is a routine which clips a block against the window. =>
GRADLIB.LIB.

CUG287.11-BLKCOPY.C source
Copy a data block between two frames. => GRADLIB.LIB.

CUG287.12-BLKLDSV.C source
Blockload - load a block from the disk Blocksave - save a block to the
disk. => GRADLIB.LIB.

CUG287.13-CALCADDR.ASM source
Calculates the word address of a point in bytes. => GRADLIB.LIB.
Assembly code.

CUG287.14-CCALCADD.OBJ object
=> GRADLIB.LIB, CALCADDR.ASM.

CUG287.15-CFTABLE.OBJ object
=> GRADLIB.LIB. This file was extracted from archives, originally
\COLOR.ARC\FTABLE.OBJ.

CUG287.16-CHARDISP.ASM source
Contains character display related functions: _wrtc--move the pixel
pattern from buffer to the current frame _copyfont--copy the pixel
data to buffer for manipulation _ctextL--clip the left side of the
pixel data _ctextR--clip the right side of the pixel data. =>
GRADLIB.LIB.

CUG287.17-CIRC.ASM source
Draws a logical circle. => GRADLIB.LIB, CIRCLE.C. Assembly code.

CUG287.18-CIRCLE.C source
Contains two external usable routines to draw circle and arc
circle--draws a logical circle which will look like a circle only on a
screen with square pixels Arc1--Draw n/8 of a circle. n can be 0 to 8.
=> GRADLIB.LIB.

CUG287.19-CLINE.C source
Line (x1, y1, x2, y2) draw a line from (x1, y1) to (x2, y2)
inclusively. => GRADLIB.LIB.

CUG287.20-COLOR.MAK make
Makefile for FTABLE.OBJ. CALCADDR.OBJ, PLOTTYPE.OBJ (parts of CGA
driver). => GRADLIB.LIB.

CUG287.21-COORD.C source
Contains functions for setting origins and window coordinates. =>
GRADLIB.LIB.

CUG287.22-DISPFONT.OBJ object
Display font program object file. => GRADLIB.LIB.

CUG287.23-DOSREAD.ASM source
DOSREAD of GDS. Contains _dosread, _dosopen, _dosseek, and _dosclose.
=> GRADLIB.LIB. Assembly code.

CUG287.24-DRAW.C source
Interprets a string of commands for drawing. => GRADLIB.LIB.

CUG287.25-EARC2.C source
Draws an arc (part of an ellipse). => GRADLIB.LIB, ARCPOINT.C,
ARCSUPP.C.

CUG287.26-ELLIPSE.C source
Three external usable routines to draw ellipse and arc. =>
GRADLIB.LIB.

CUG287.27-ENVIRON.C source
Two functions: EnvSave -- saves the environment; envRsto -- restores
the environment. => GRADLIB.LIB.

CUG287.28-ERR.C source
Example of using the user error handling features. => GRADLIB.LIB.

CUG287.29-EXECFUNC.ASM source
Source file for compiling with executable functions. => GRADLIB.LIB.
Assembly code.

CUG287.30-EXECFUNC.OBJ object
=> GRADLIB.LIB, EXECFUNC.ASM.

CUG287.31-EXETIME.C source
Source file for timing GRAD function. => GRADLIB.LIB.

CUG287.32-EXETIME.MAK make
Makefile for compiling TIME.C. => GRADLIB.LIB.

CUG287.33-FCIRCLE.C source
FillCircle -- draw a solid circle FillEllipse -draw a solid ellipse.
=> GRADLIB.LIB.

CUG287.34-FILE11MS.TXT doc
Names, lengths and one-line descriptions of some files. =>
GRADLIB.LIB.

CUG287.35-FILEFON.TXT doc
Names, lengths and descriptions of some font files. => GRADLIB.LIB.

CUG287.36-FILL.C source
Solid Fill -- entirely fill a region Pattern fill -fill the area by
the pattern specified. => GRADLIB.LIB.

CUG287.37-FONT.C source
Loadfont -- loads a font file from the disk Removefont -- removes a
font from memory. => GRADLIB.LIB.

CUG287.38-FRAME.C source
CreateFrame -- creates a new frame RemvFrame -- removes a frame from
GRAD and releases the memory. => GRADLIB.LIB.

CUG287.39-FTABLE.C source
=> GRADLIB.LIB.

CUG287.40-GDS.H header
=> GRADLIB.LIB.

CUG287.41-GDSLIB.MAK make
=> GRADLIB.LIB.

CUG287.42-GDSLIB.NAM batch
=> GRADLIB.LIB.

CUG287.43-GLOBAL.C source
Initializes global variables. => GRADLIB.LIB.

CUG287.44-GRADARC.H header
Header file for ARC1 and EARC1. => GRADLIB.LIB.

CUG287.45-GRADEGS.GCM source
Command file example for interp and mprint. => GRADLIB.LIB.

CUG287.46-GRADENV.H header
Header file for using EnvSave and EnvRsto. => GRADLIB.LIB, ENVIRON.C.

CUG287.47-GRADEPSN.C source
Printer controls for the EPSON FX-80. => GRADLIB.LIB.

CUG287.48-GRADERR.C source
Error handling routine. => GRADLIB.LIB.

CUG287.49-GRADFILE.DOC doc
Brief description of GRAD archives. => GRADLIB.LIB.

CUG287.50-GRADIO.H header
Header file for WriteStr, ReadStr and writec.

CUG287.51-GRADLIB.LIB library
GRAD is a graphics library containing functions for drawing dots,
lines, circles, ellipses and arcs and functions for region filling,
window management, character display, and printing. [MS-DOS: TC1.0]

CUG287.52-GRADOKI.C source
Printer controls for Okidata ML192. => GRADLIB.LIB.

CUG287.53-GRADPROG.DOC doc
GRAD programmer's reference manual. => GRADLIB.LIB.

CUG287.54-GRADUSER.DOC doc
GRAD Graphics Library User's Manual Version 1.1 for IBM PC/XT/AT or
compatibles. => GRADLIB.LIB.

CUG287.55-GRADVAR.H header
GRAD global variables. => GRADLIB.LIB.

CUG287.56-HCALCADD.OBJ object
=> GRADLIB.LIB, CALCADDR.ASM.

CUG287.57-HFTABLE.OBJ object
=> GRADLIB.LIB.

CUG287.58-HLCOPY.ASM source
Contains Level 1 horizontal line, vertical line drawing, and dot
plotting routines. => GRADLIB.LIB. Assembly code.

CUG287.59-HLNLMT.ASM source
=> GRADLIB.LIB. Assembly code.

CUG287.60-INIT.C source
Source for GRAD initialization and cleanup functions. => GRADLIB.LIB.

CUG287.61-INSTALL.DOC doc
Installation procedure and instructions on using GRAD. => GRADLIB.LIB.

CUG287.62-INTERP.C source
This program is used to interpret GRAD functions in restricted C
syntax of function calls. The method used is recursive descent. =>
GRADLIB.LIB.

CUG287.63-INTERP.MAK make
Makefile for compiling INTERP.EXE from INTERP.C and EXECFUNC.ASM. =>
GRADLIB.LIB, INTERP.C, EXECFUNC.ASM.

CUG287.64-JLASER.DOC doc
Instructions for using a laser printer with a JLASER card. =>
GRADLIB.LIB.

CUG287.65-LINE.ASM source
Level 1 line drawing function. => GRADLIB.LIB. Assembly code.

CUG287.66-MISC.ASM source
Miscellaneous GDS functions. => GRADLIB.LIB. Assembly code.

CUG287.67-MPRINT.C source
Sample program. => GRADLIB.LIB.

CUG287.68-MPRINT.MAK make
=> GRADLIB.LIB.

CUG287.69-MPRT.GCM data
One of the example files for MPRINT. => GRADLIB.LIB, MPRINT.C.

CUG287.70-MPRT.TXT doc
Another one of the example files for MPRINT. => GRADLIB.LIB, MPRINT.C.

CUG287.71-NEXTXY.C source
Gives next (x,y) location for ReadStr or WriteStr. => GRADLIB.LIB.

CUG287.72-OE7.FON data
Old English Font. => GRADLIB.LIB.

CUG287.73-OKI.MAK make
Makefile for compiling GRADOKI.C with PRTGC.ASM. => GRADLIB.LIB.

CUG287.74-PFRAME.C source
Printing functions. => GRADLIB.LIB.

CUG287.75-PFRAME.OBJ object
=> GRADLIB.LIB, PFRAME.C.

CUG287.76-PLOTTYPE.ASM source
This file contains the lowest level routine in writing and accessing
the frame memory, and other related routines. => GRADLIB.LIB
PLOTTYPE.OBJ. Assembly code.

CUG287.77-PLOTTYPE.OBJ object
=> GRADLIB.LIB, PLOTTYPE.ASM.

CUG287.78-PRT.ASM source
Low level functions for printing, including: prt -- convert an 8
integer array for printing, pbflush -- flush everything in buffer to
printer, rmvO -- remove trailing zeroes. => GRADLIB.LIB.

CUG287.79-PRTCNTL.C source
Printer Controls. => GRADLIB.LIB.

CUG287.80-PRTCNTL.OBJ object
=> GRADLIB.LIB, PRTCNTL.C.

CUG287.81-PRTFONT.C source
=> GRADLIB.LIB.

CUG287.82-PRTFONT.H header
=> GRADLIB.LIB, PRTFONT.C.

CUG287.83-PRTGC.ASM source
prtc -- append a character to the buffer. => GRADLIB.LIB. Assembly
code.

CUG287.84-PRTGC.OBJ object
=> GRADLIB.LIB, PRTGC.ASM.

CUG287.85-README.1ST doc
System requirements and reference for execution of GRAD. =>
GRADLIB.LIB.

CUG287.86-README.DOC doc
Introduction to GRAD: capabilities with guides to additional
documentation. => GRADLIB.LIB.

CUG287.87-READSTR.C source
Read a line from standard input. => GRADLIB.LIB.

CUG287.88-RECT.C source
Draws a rectangle. => GRADLIB.LIB.

CUG287.89-ROTATE.C source
This is a program to rotate the characters in a font file by 90
degrees in anti-clockwise direction. => GRADLIB.LIB.

CUG287.90-S16X16.FON data
Font File (16 x 16). => GRADLIB.LIB.

CUG287.91-S5X6.FON data
Font file (5 x 6). => GRADLIB.LIB.

CUG287.92-S6X8.FON data
Font file (6 x 8). => GRADLIB.LIB.

CUG287.93-S6X8D.FON data -
Font (6 x 8 sideways) file. => GRADLIB.LIB.

CUG287.94-S8X8.FON data
Font File (8x8). => GRADLIB.LIB.

CUG287.95-S9X14.FON data
Font File (9x14). => GRADLIB.LIB.

CUG287.96-SELECT.C source
Selectfont -- select the current font number Selectframe -- select the
current frame. => GRADLIB.LIB.

CUG287.97-SINVAL.C source
=> GRADLIB.LIB.

CUG287.98-SIZE.C source
Selects font size. => GRADLIB.LIB.

CUG287.99-SPECIAL1.C source
Example of using SPACING_FUNC. => GRADLIB.LIB.

CUG287.100-STACK.ASM source
Level 1 horizontal line, vertical line, drawing, and dot plotting
routines. => GRADLIB.LIB. Assembly code.

CUG287.101-SWPRT.C source
Sideways printing program. => GRADLIB.LIB.

CUG287.102-TANVAL.C source
Tan value for degree 0, 0.5, 1.5, ... 43.5, 44.5, 45. => GRADLIB.LIB.

CUG287.103-TC-INST.DOC doc
Installation, procedure and instructions on using GRAD. =>
GRADLIB.LIB, INSTALL.DOC.

CUG287.104-TC-USER.UPD doc
Supplement to the GRAD User's Manual (written for MSC) explaining
differences in Turbo C operations. => GRADLIB.LIB. [MSC]

CUG287.105-TEST.DOC doc
Directions for using example files and sample programs to test
installation. => GRADLIB.LIB.

CUG287.106-TEX2GRAD.C source
Program to convert a TEX pixel file (1002 PXL file) to a GRAD font
file. => GRADLIB .LIB.

CUG287.107-VHLINE.C source
Dot (x,y) -- write a single dot to a frame HorzLine (x,y,length,width)
-- draw a horizontal line VertLine (x,y,length, width) -draw a
vertical line. => GRADLIB.LIB.

CUG287.108-VHLN.ASM source
Level 1 horizontal line, vertical line drawing and dot plotting
routines. => GRADLIB.LIB. Assembly code.

CUG287.109-WARNING.CUG doc
Naming conventions for duplicate filenames.

CUG287.110-WRITE.C source
Two public routines: writec -- write a single character to the current
frame using currently selected font WriteStr -- write a character
string to the current frame using currently selected font. =>
GRADLIB.LIB.

CUG287.111-XHLINE.C source
Creates a horizontal line extended at both ends. => GRADLIB.LIB.

==============================================================================
CUG288 -
-----------

Traveling Salesman, SD and Master Environment Access
[public] 1 disk. This volume contains contributions from Kevin E.
Knauss (MD), Brain Faquhar (Tokyo, JAPAN) and Scott Robert Ladd.
Knauss has contributed a set of programs which illustrate how simple
heuristics can produce acceptable solutions to the traveling salesman
problem. Faquhar has contributed SD, a replacement for the MS-DOS CD
command. SD allows logical names, movement across disk drives, and
easy switching between last and current directories. The program
requires Microsoft C v5.1 or Quick C. Scott Robert Ladd has
contributed a set of functions to access and modify a global master
environment. These functions are described in an article that appeared
in The C User's Journal, vol. 7.5. The source code will work with most
MS-DOS C compilers. It has been tested with Microsoft C v5.1, Quick c
v2.0, Turbo C v2.0, and Zortech C v1.07.

CUG288.01-10CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of ten cities.
=> TSP.C, 10CITY.MTX.

CUG288.02-10CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 10CITY.IN data.
=> TSP.C, 10CITY.IN.

CUG288.03-20CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 20 cities.
=> TSP.C, 20CITY.MTX.

CUG288.04-20CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 20CITY.IN data.
=> TSP.C, 20CITY.IN.

CUG288.05-25CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 25 cities.
=> TSP.C, 25CITY.MTX.

CUG288.06-25CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 25CITY.IN data.
=> TSP.C, 25CITY.IN.

CUG288.07-20PT.C source
By Kevin E. Knauss. TwoOpt. 2-Opt Tour Improvement Algorithm. =>
TSP.C.

CUG288.08-33CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 33 cities.
=> TSP.C, 33CITY.MTX.

CUG288.09-33CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 33CITY.IN data.
=> TSP.C, 33CITY.IN.

CUG288.10-30PT.C source
By Kevin E. Knauss. ThreeOpt. 3-Opt Tour Improvement Algorithm. =>
TSP.C.

CUG288.11-42CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 42 cities.
=> TSP.C, 42CITY.MTX.

CUG288.12-42CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 42CITY.IN data.
=> TSP.C, 42CITY.IN.

CUG288.13-48CITY.IN data
By Kevin E. Knauss. Input for travel costs between each of 48 cities.
=> TSP.C, 48CITY.MTX.

CUG288.14-48CITY.MTX doc
By Kevin E. Knauss. Matrix. Tabular representation of 48CITY.IN data.
=> TSP.C, 48CITY.IN.

CUG288.15-ARTICLE.TSP doc
By Kevin E. Knauss. A Poor Man's Solution to the Traveling Salesman.
Statement of problem. Background of difficulties and applications
related to it. Terminology and approach used toward it.
Implementation, observations and conclusion. => TSP.C.

CUG288.16-BLDMTX.C source
By Kevin E. Knauss. Build Matrix (main), Input Matrix, Output Matrix.
Prompts user for data to build distance matrix. => TSP.C.

CUG288.17-BOOLEAN.H header
By Kevin E. Knauss. Boolean type header file. => TSP.C.

CUG288.18-CONTENTS.DOC doc
By Kevin E. Knauss, Scott Robert Ladd, Brian Fuguhar. List of authors
and their contributions to this volume.

CUG288.19-FIGURE1.TSP doc
By Kevin E. Knauss. Tour Improvement Techniques. Graphic illustration
of a) point proximity, b) chain proximity, c) chain proximity and
orientation, and d) chain orientation in place. => TSP.C.

CUG288.20-FIGURE2.TSP doc
By Kevin E. Knauss. 10, 20, and 25 City Results. Tabulation of tour
length, time, amount of improvement, and percentage from optimum for
each Tour Improvement Technique under each city model. => TSP.C,
FIGURE3.TSP.

CUG288.21-FIGURE3.TSP doc
By Kevin E. Knauss. 33, 42, and 48 City Results. => TSP.C,
FIGURE2.TSP.

CUG288.22-FN.C source
By Kevin E. Knauss. Far Neighbor, High Arc. Farthest Neighbor Tour
Building Algorithm. => TSP.C.

CUG288.23-HYBRID.C source
By Kevin E. Knauss. Point Proximity/2-Opt Hybrid tour improvement
algorithm. => TSP.C.

CUG288.24-KNAUSS.TXT doc
By Kevin E. Knauss. A Poor Man's Solution to the Traveling Salesman.
Text of ARTICLE.TSP. => TSP.C, ARTICLE.TSP.

CUG288.25-MSTR_ENV.C source
By Scott Robert Ladd. Master Environment Access. Facilitates access to
the Master Environment for information and modification. =>
MSTR_ENV.TXT. [MS-DOS2, MS-DOS3: MSC5, QUICKC2.0, TC2.0, ZORTECHC]

CUG288.26-MSTR_ENV.TXT doc
By Scott Robert Ladd. Accessing the Master Environment in MS-DOS.
Describes rationale and function of Master Environment Access. => MSTR
ENV.C.

CUG288.27-NN.C source
By Kevin E. Knauss. Near Neighbor, Cheap Arc. Nearest Neighbor Tour
Building Algorithm. => TSP.C.

CUG288.28-NODELIST.H header
By Kevin E. Knauss. Node pointer type declaration header file. =>
TSP.C.

CUG288.29-POPT.C source
By Kevin E. Knauss. Point Opt. Point Proximity Tour Improvement
Algorithm. => TSP.C.

CUG288.30-PRTMTX.C source
By Kevin E. Knauss. Print Matrix (main). Prints distance matrix in
readable format. TSP.C.

CUG288.31-REFERENC.TSP doc
By Kevin E. Knauss. Research Bibliography. => TSP.C.

CUG288.32-RESULTS.TAB doc
By Kevin E. Knauss. Tabulation of tour length, time, amount of
improvement and percentage from optimum for each Tour Improvement
Technique under each city model. => TSP.C.

CUG288.33-RESUME.TSP doc
By Kevin E. Knauss. Brief professional biography. => TSP.C.

CUG288.34-SD.C source
By Brian Fuguhar. Enhanced ChDir Command. SD (Set Directory) is
upwardly compatible with CD all options of CD are implemented. SD
allows drive specification and changes logged drive, supplies help,
toggles between current & last directory, allows use of logical names,
and can implement a program at the specified destination. [MS-DOS:
MSC5, QUICKC]

CUG288.35-TIME.C source
By Kevin E. Knauss. Get Time, Elapsed Time. Samples clock counter to
find elapsed time. => TSP.C. Function Get Time is MIX.C Compiler
Dependent.

CUG288.36-TSP.C source
By Kevin E. Knauss. TSP (main), ArcCost, Terminate, Print Circuit,.
Traveling Salesman Problem Driver. => NN.C, POPT.C HYBRID.L, FN.C,
BOOLEAN.H, NODELIST.H, TSP.H, BLDMTX.C, PRTMTX.C, TIME.C, 30PT.C,
20PT.C. [MS-DOS: MIXC]

CUG288.37-TSP.H header
By Kevin E. Knauss. => TSP.C.

==============================================================================
CUG289 -
-----------

Othello
By Gary Culp, Jonathan Ward. [public] 1 disk. Gary Culp and Jonathan
Ward, TX, have submitted the complete source code for their Othello
Game. Although the program was compiled under Microsoft C v5.1, it
should be reasonably easy to port since it uses only library routines
described in The C Programming Language, Second Edition (K&R 2nd).

CUG289.01-BDTTY.C source
By Jonathan Ward. Contains the board display routines for TTY type
terminals. => OTHELLO.C.

CUG289.02-BD_EVAL.C source
By Gary Culp. Calculates a score for a board. => OTHELLO.C.

CUG289.03-BLDFA.C source
By Jonathan Ward, Gary Culp. Separate utility which builds table in
FATABL.C.=> OTHELLO.C.

CUG289.04-BLDFA.EXE executable
By Jonathan Ward, Gary Culp. => BLDFA.C.

CUG289.05-BUILDLVL.C source
By Gary Culp. Build the tree of moves down to a given level. =>
OTHELLO.C.

CUG289.06-DUMPTREE.C source
By Jonathan Ward, Gary Culp. Dump entire move tree (for debugging). =>
OTHELLO.C.

CUG289.07-FATABL.C source
By Jonathan Ward. Contains the fa-bits index table for the array of
full-axis bits. => OTHELLO.C.

CUG289.08-GETMOV.C source
By Jonathan Ward, Gary Culp. Functions that read the player's move,
verify it and display the new screen. => OTHELLO.C.

CUG289.09-HEADER.C source
Comment header template for source-code programs. => OTHELLO.C.

CUG289.10-L.BAT batch
By Jonathan Ward. Executes linkage. => OTHELLO.C.

CUG289.11-MINIMAX.C source
By Jonathan Ward. Tree searching minimax algorithms. => OTHELLO.C.

CUG289.12-MOVEIT.C source
By Jonathan Ward, Gary Culp. Verifies a move, updates and displays the
board. OTHELLO.C.

CUG289.13-MOVE_GEN.C source
By Gary Culp. Move generator. Finds a move and builds a list of
affected pieces. => OTHELLO.C.

CUG289.14-OTHDBM.C source
By Jonathan Ward. Database Management routines. => OTHELLO.C.

CUG289.15-OTHELLO.C source
By Jonathan Ward. Main C function: Initializes all sections of the
program, determines order of play, sets up initial board
configuration, displays board and begins play, determines depth of
"look ahead" play. => BDTTY.C, BD_EVAL.C, BUILDLVL.C, BLDFA.C,
DUMPTREE.C, FATABL.C, GETMOV.C, L.BAT, MINIMAX.C, MOVE_GEN.C,
OTHOBM.C, OTHELLO.H, OTHELLO.LNK, OTHELLO.MAK, PIECE_CT.C, PROTECT.C,
TESTDISP.C, MOVEIT.C, TESTDBM.C. [MS-DOS: MSC5]

CUG289.16-OTHELLO.EXE executable
By Jonathan Ward. => OTHELLO.C.

CUG289.17-OTHELLO.H header
By Jonathan Ward, Gary Culp. Global function prototypes, external
variable declarations, and manifest constant definitions for the
Othello program. => OTHELLO.C.

CUG289.18-OTHELLO.LNK link
By Jonathan Ward, Gary Culp. OTHELLO.C.

CUG289.19-OTHELLO.MAK make
By Jonathan Ward, Gary Culp. => OTHELLO.C.

CUG289.20-PIECE_CT.C source
By Gary Culp. Count e number of pieces of a given type or types. Check
each player's ability to move. => OTHELLO.C.

CUG289.21-PROTECT.C source
By Gary Culp. Algorithm for determining which pieces in a given board
configuration are permanent. (Contains extensive documentation.). =>
OTHELLO.C.

CUG289.22-README.DOC doc
By Jonathan Ward, Gary Culp. List of files and descriptions, known
bugs, tentative enhancements. => OTHELLO.C.

CUG289.23-TESTDBM.C source
By Jonathan Ward, Gary Culp. Dummy caller for testing database
manager. => OTHELLO.C.

CUG289.24-TESTDISP.C source
By Jonathan Ward, Gary Culp. Dummy caller for testing display
routines. => OTHELLO.C.

==============================================================================
CUG290 -
-----------

FLEX
By Daniel R. Haney. [public] 2 disks. Daniel R. Haney (MA) has ported
FLEX, a fast lexical analyzer generator, to MS-DOS. FLEX is a rewrite
of lex intended to correct some of that tool's deficiencies. In
particular, flex generates lexical anaylzers much faster, and the
analyzers use smaller tables and run faster. FLEX was developed by
Vern Paxson. Haney adapted the code to conform to MS-DOS file naming
conventions and added prototype declarations for Microsoft v5.1. The
disk contains a complete set of source code documentation, makefile,
and a word count program as an example. Haney's implementation of Flex
can be compiled under MS-DOS and UNIX. Adam Blum has supplied a fix
for a union field bug for compilation under large model. Robert
Artigas has added an OS/2 executable. For more details see the
narrative description of this package in Section 2.

CUG290.01-CCL.C source
By Vern Paxson, Daniel R. Haney. Routines for character classes. =>
MAIN.C, CCL.H.

CUG290.02-CCL.H header
By Daniel R. Haney. Prototypes, flex project. => MAIN.C.

CUG290.03-CHANGES doc
By Daniel R. Haney. Differences between DOS, UNIX, and beta-test
releases. => MAIN.C.

CUG290.04-DFA.C source
By Vern Paxson, Daniel R. Haney, Adam Blum. DFA construction routines.
=> MAIN.C, DFA.H.

CUG290.05-DFA.H header
By Daniel R. Haney. => MAIN.C.

CUG290.06-DOSFLEX.EXE executable
By Daniel R. Haney. Fast Lexical analyzer generator. => MAIN.C.
[MS-DOS: MSC5]

CUG290.07-ECS.C source
By Vern Paxson, Daniel R. Haney. Equivalence class routines. =>
MAIN.C, ECS.H.

CUG290.08-ECS.H header
By Daniel R. Haney. => MAIN.C.

CUG290.09-EXTERNS.DEF header
By Daniel R. Haney. Collected external function declarations, for
reference. => MAIN.C.

CUG290.10-FASTSKEL.C source
By Daniel R. Haney. A lexical scanner generated by FLEX. => MAIN.C,
FASTSKEL.H.

CUG290.11-FASTSKEL.H header
By Daniel R. Haney. Macro definitions for fast/full-table C/FTL
programs generated by FLEX. => MAIN.C.

CUG290.12-FLEX.LNK link
By Daniel R. Haney. => MAIN.C.

CUG290.13-FLEX.MAK make
By Daniel R. Haney. => MAIN.C. [ OS/2 1.2 EE, IBM C/2]

CUG290.14-FLEX.MAN doc
By Vern Paxson, Daniel R. Haney. UNIX Programmer's Manual.
Preformatted vanilla ascii manual. => MAIN.C.

CUG290.15-FLEX.MAP doc
By Vern Paxson, Daniel R. Haney. Map of flex. => MAIN.C.

CUG290.16-FLEXDEF.H header
By Vern Paxson, Daniel R. Haney, Kevin Gong, Roberto Artigas Jr., Adam
Blum. Definitions for FLEX. => MAIN.C.

CUG290.17-HAIRY.PRS source
By Vern Paxson, Daniel R. Haney. MAIN.C.

CUG290.18-MAIN.C source
By Vern Paxson, Kevin Gong, Roberto Artigas Jr., Jef Poskanzer. Main
source program for the Fast LEXical analyzer generator. =>
DOSFLEX.EXE, CCL.C, DFA.C, ECS.C, FASTSKEL.C, MISC.C, NFA.C, PARSE.C,
SIMPL.PRS, HAIRY.PRS, PARSE.Y, FLEXDEF.H, MAIN.H, SCAN.C, SCAN.L,
WCNT.L, FLEX.LNK, FLEX.MAK, OS2FLEX.EXE. [OS/2, MS-DOS: MSC5]

CUG290.19-MAIN.H header
By Daniel R. Haney. => MAIN.C.

CUG290.20-MAKEFILE.UNX doc
By Vern Paxson. UNIX makefile, for documentation. => MAIN.C.

CUG290.21-MISC.C source
By Vern Paxson, Daniel R. Haney. Miscellaneous FLEX routines. =>
MAIN.C MISC.H.

CUG290.22-MISC.H header
By Daniel R. Haney. => MAIN.C.

CUG290.23-NFA.C source
By Vern Paxson, Daniel R. Haney. NFA construction routines. => MAIN.C,
NFA.H.

CUG290.24-NFA.H header
By Daniel R. Haney. => MAIN.C.

CUG290.25-OS2FLEX.EXE executable
By Daniel R. Haney. Fast LEXical analyzer generater. => MAIN.C. IOS/21

CUG290.26-PARSE.C source
By Roberto Artigas Jr.. A Bison parser, made from PARSE.Y. => MAIN.C,
PARSE.H.

CUG290.27-PARSE.H header
By Roberto Artigas Jr.. => MAIN.C.

CUG290.28-PARSE.Y source
By Roberto Artigas Jr.. Parser for FLEX input. => MAIN.C.

CUG290.29-README doc
By Vern Paxson. Notes on the initial FLEX distribution. => MAIN.C.

CUG290.30-README.2 doc
By Daniel R. Haney. Amendment to README, for DOS version distribution,
concerning file naming conventions. => MAIN.C.

CUG290.31-SCAN.C source
By Roberto Artigas Jr.. A lexical scanner generated by FLEX. =>
MAIN.C.

CUG290.32-SCAN.L source
By Roberto Artigas Jr.. Scanner for FLEX input. => MAIN.C.

CUG290.33-SEARCH.CMD batch
By Daniel R. Haney. Batch file using egrep. => MAIN.C.

CUG290.34-SKELCOM.H header
By Vern Paxson. Common macro definitions for VFTL programs generated
by FLEX. => MAIN.C.

CUG290.35-SKELETON.C source
By Daniel R. Haney. A lexical scanner generated by FLEX. => MAIN.C,
SKELETON.H.

CUG290.36-SYM.C source
By Vern Paxson, Daniel R. Haney. Symbol table routines. => MAIN.C,
SYM.H.

CUG290.37-SYM.H header
By Daniel R. Haney. => MAIN.C.

CUG290.38-TBLCMP.C source
By Vern Paxson, Daniel R. Haney. Table compression routines. =>
MAIN.C, TBLCMP.H.

CUG290.39-TBLCMP.H header
By Daniel R. Haney. => MAIN.C.

CUG290.40-TIMINGS doc
By Vern Paxson. A brief note comparing timings for FLEX vs LEX. =>
MAIN.C.

CUG290.41-WCNT.L source
By Daniel R. Haney. Example word count program. => MAIN.C.

CUG290.42-YYLEX.C source
By Vern Paxson, Daniel R. Haney. Scanner front-end for FLEX. Scans for
a regular expression token.

==============================================================================
CUG291 -
-----------

JJb for Quick C and Turbo C Programmers
By John James Broderick. [share2] disk. JJB 1.2 is a shareware screen
functions library for Quick C and Turbo C. This library enables you to
program in a high-level environment while maintaining complete low
level control over your display and keyboard. For example, you can
easily set up pull-down menus without writing hundreds of lines of
code. The library also provides an interface for data entry. The disk
contains the object module for Quick C and Turbo C, documentation,
demo, and five example programs. The library includes functions for
character control, keyboard control, array manipulations, video
control, windowing, pull down menu customizing, and help functions.
For more details see the narrative description of this package in
Section 2.

CUG291.01-JJB-FORM.DOC doc
Registration form. => JJB.EXE.

CUG291.02-JJB-READ.DOC doc
Main documentation. => JJB.EXE.

CUG291.03-JJB.EXE executable
Introductory Demo. JJB 1.2 is a screen functions library for
programming in a high-level environment while maintaining low-level
control over keyboard and display. It also provides an interface for
data entry. => JJBPRINT.BAT, JJBQC-FI.BAT JJBQC-LI.BAT, JJBQCS1.BAT,
JJBREMOV.BAT, JJBTC-FI.BAT, JJBTC-LI.BAT, JJBSHOW1.BAT, JJBKBD.H,
JJBSET.H. [MS-DOS: TC, QUICKC]

CUG291.04-JJBFILES.DOC doc
List of all JJB files. => JJB.EXE.

CUG291.05-JJBINSTL.DOC doc
How to install JJB for Quick C and Turbo C. => JJB.EXE.

CUG291.06-JJBKBD.H header
Keyboard definitions and explanation of the importance of the get_ch()
function to JJB. => JJB.EXE.

CUG291.07-JJBPRINT.BAT batch
Prints JJB files with important documentation. => JJB.EXE,
JJB-FORM.DOC, JJB-READ.DOC, JJBFILES.DOC, JJBINSTL.DOC.

CUG291.08-JJBQC-FI.BAT batch
Final installation. => JJBQC-LI.BAT JJBQC.OBJ, JJBQCOOL.OBJ,
JJBQCINP.OBJ, JJB.EXE. [ QUICKC]

CUG291.09-JJBQC-LI.BAT batch
Learning installation. => JJB.EXE, JJBQC-FI.BAT. [ QUICKC]

CUG291.10-JJBQC.OBJ object
Main object file for Quick C JJB input and enter functions. =>
JJB.EXE. [ QUICKC]

CUG291.11-JJBQCDOL.OBJ object
For input dollar functions. => JJB.EXE. [ QUICKC]

CUG291.12-JJBQCINP.OBJ object
For input and enter functions. => JJB.EXE. [ QUICKC]

CUG291.13-JJBQCS1.BAT batch
Loads JJBSHOW1 with JJB.QLB. => JJBQCS2.BAT. [ QUICKC]

CUG291.14-JJBQCS2.BAT batch
Loads JJBSHOW2 with JJB.QLB. => JJBQCS3.BAT. [ QUICKC]

CUG291.15-JJBQCS3.BAT batch
Loads JJBSHOW3 with JJB.QLB. => JJBQCS4.BAT. [ QUICKC]

CUG291.16-JJBQCS4.BAT batch
Loads JJBSHOW4 with JJB.QLB. => JJBQCS5.BAT. [ QUICKC]

CUG291.17-JJBQCS5.BAT batch
Loads JJBSHOW5 with JJB.QLB. => JJB.EXE. [ QUICKC]

CUG291.18-JJBREMOV.BAT batch
Reverse installation, removes files. => JJB.EXE.

CUG291.19-JJBSET.H header
GET and SET definitions. => JJB.EXE.

CUG291.20-JJBSHOW1.C source
Sample program. => JJBSHOW2.C.

CUG291.21-JJBSHOW2.C source
Sample program. => JJBSHOW3.C.

CUG291.22-JJBSHOW3.C source
Sample program. => JJBSHOW4.C.

CUG291.23-JJBSHOW4.C source
Sample program. => JJBSHOW5.C.

CUG291.24-JJBSHOW5.C source
Sample program. => JJB.EXE, JJBSHOW5.EXE.

CUG291.25-JJBSHOW5.EXE executable
=> JJBSHOW5.C.

CUG291.26-JJBTC-FI.BAT batch
Final Installation. => JJB.EXE, JJBTC-LI.BAT, JJBTC.OBJ, JJBTCDOL.OBJ,
JJBTCINP.OBJ. [ TC]

CUG291.27-JJBTC-LI.BAT batch
Learning Installation. => JJB.EXE, JJBTC-FI.BAT. [ TC]

CUG291.28-JJBTC.OBJ batch
Main object file for Turbo C JJB input and enter functions. =>
JJB.EXE. [ TC]

CUG291.29-JJBTCDOL.OBJ object
For input dollar functions. => JJB.EXE. [ TC]

CUG291.30-JJBTCINP.OBJ object
For input and enter functions. => JJB.EXE. [ TC]

==============================================================================
CUG292 -
-----------

ASxxxx C Cross Assemblers
By Alan R. Baldwin. [public] 4 disks. This package is a collection of
cross assemblers written in C for the 6800 (6802/6808), 6801 (hd6303),
6804, 6805, 6809, 6811, 8085 (8080), and z80 (hd64180)
microprocessors. Each assembler has a device specific section which
includes: . device description, byte order, and file extension
information, . a table of assembler general directives, special
directives, assembler mnemonics and associated operation mnemonics,
addressing modes, and special directives. The assemblers provide the
following features: alphabetized, formatted symbol table listings;
relocatable object modules; global symbols for linking object modules;
conditional assembly directives; reusable local symbols; include-file
processing. The companion relocation linker AS-LINK is able to: bind
multiple object modules into a single memory image; resolve
inter-module references; process absolute, relative, concatenated and
overlay attributes in data and program sections; perform byte and word
program-counter relative (pc or pcr) addressing calculations; define
absolute symbol values at link time; define absolute area base address
values at link time; produce Intel Hex
or Motorola S output files; and produce a map of the linked memory
image. The assemblers and linker have been tested using DECUS C under
TSX+ and RT-11, and with Turbo C v1.5 under MS-DOS. Complete source
code and documentation for the assemblers and linker are included with
the distribution. Additionally, test code for each assembler and
several microprocessor monitors (ASSIST05 for the 6805, MONDEB and
ASSIST09 for the 6809, and BUFFALO 2.5 for the 6811) are included as
working examples. The current version 1.5 includes updates to move
byte index, directpage mode, and byte PC relative address checking
from the assembler to the linker. This update allows byte index
offsets with external references resolved at link time, direct page
variables externally defined with addresses resolved at link time, and
branches may reference external labels or labels in other areas. The
assemblers can generate a listing file that flags the data that will
be relocated by the linker. The REL file format now has an additional
directive for paging information and has additional flags for pageO,
page, and unsigned byte formats. For more details see the narrative
description of this package in Section 2.

CUG292.01-6800.H header
For 6800 (6802/6808) assembler, machine-specific definitions. =>
AS6800.EXE.

CUG292.02-6801.H header
For 6801 (hd6303) assembler, machine-specific definitions. =>
AS6801.EXE.

CUG292.03-6804.H header
For 6804 assembler, machine-specific definitions. => AS6804.EXE.

CUG292.04-6805.H header
For 6805 assembler, machine-specific definitions. => AS6805.EXE.

CUG292.05-6809.H header
For 6809 assembler, machine-specific definitions. => AS6809.EXE.

CUG292.06-6811.H header
For 6811 assembler, machine-specific definitions. => AS6811.EXE.

CUG292.07-8085.H header
For 8085 (8080) assembler, machine-specific definitions. =>
AS8085.EXE.

CUG292.08-85 EXT.C source
Device description, byte order, and file extension info. =>
AS8085.EXE.

CUG292.09-85MCH.C source
Process machine ops for device mnemonics, addressing modes, and
special directives. => AS8085.EXE.

CUG292.10-85PST.C source
Table of assembler general directives, special directives, assembler
mnemonics and associated operation codes. => AS8085.EXE.

CUG292.11-ABSTRA.DOC doc
Abstract: brief explanation of volume 292's components.

CUG292.12-AS6800.BLD make
=> AS6800.EXE. [RT-11: DECUS C]

CUG292.13-AS6800.EXE executable
6800 (6802/6808) assembler. => ASMAIN.C, 6800.H, AS6800.BLD,
AS6800.LNK, AS6800.PRJ, MOOADR.C, MOOEXT.C, MOOMCH.C, MOOPST.C,
T6800.ASM.

CUG292.14-AS6800.LNK link
RT-11 linkage info for compilation. => AS6800.EXE. [RT-11: DECUS C]

CUG292.15-AS6800.PRJ make
Compiler instructions. => AS6800.EXE. [MS-DOS: TC]

CUG292.16-AS6801.BLD make
Native command file for compiling assembler. => AS6801.EXE. [RT-11:
DECUS C]

CUG292.17-AS6801.EXE executable
6801/6803 (hd 6303) assembler. => ASMAIN.C, 6801.H, AS6801.BLD,
AS6801.LNK, AS6801.PRJ, M01ADR.C, M01EXT.C, M01MCH.C, M01PST.C,
T6801.ASM.

CUG292.18-AS6801.LNK link
Linkage info for compilation. => AS6801.EXE. [RT-11: DECUS C]

CUG292.19-AS6801.PRJ make
Compiler instructions. => AS6801.EXE. [MS-DOS: TC]

CUG292.20-AS6804.BLD make
Native command file for compiling assembler. => AS6804.EXE. [RT-11:
DECUS C]

CUG292.21-AS6804.EXE executable
6804 assembler. => ASMAIN.C, 6804.H, AS6804.BLD, AS6804.LNK,
AS6804.PRJ, M04ADR.C, M04EXT.C, M04MCH.C, M04PST.C, T6804S.ASM.

CUG292.22-AS6804.LNK link
Linkage info for compilation. => AS6804.EXE. [RT-11: DECUS C]

CUG292.23-AS6804.PRJ make
Compiler instructions. => AS6804.EXE. [MS-DOS: TC]

CUG292.24-AS6805.BLD make
Native command file for compiling assembler. => AS6805.EXE. [RT-11:
DECUS C]

CUG292.25-AS6805.EXE executable
6805 assembler. => ASMAIN.C, 6805.H, AS6805.BLD, AS6805.LNK,
AS6805.PRJ, M05ADR.C, M05EXT.C, M05PST.C, T6805S.ASM, M05MCH.C.

CUG292.26-AS6805.LNK link
Linkage info for compilation. => AS6805.EXE. [RT-11: DECUS C]

CUG292.27-AS6805.PRJ make
Compiler instructions. => AS6805.EXE. [MS-DOS: TC]

CUG292.28-AS6809.BLD make
Native command file for compiling assembler. => AS6809.EXE. [RT-11:
DECUS C]

CUG292.29-AS6809.EXE executable
6809 assembler. => ASMAIN.C, 6809.H, AS6809.BLD, AS6809.LNK,
AS6809.PRJ, M09ADR.C, M09EXT.C, M09MCH.C, M09PST.C, T6809.ASM.

CUG292.30-AS6809.LNK link
Linkage info for compilation. => AS6809.EXE. [RT-11: DECUS C]

CUG292.31-AS6809.PRJ make
Compiler instructions. => AS6809.EXE. [MS-DOS: TC]

CUG292.32-AS6811.BLD make
Native command file for compiling assembler. => AS6811.EXE. [RT-11:
DECUS C]

CUG292.33-AS6811.EXE executable
6811 assembler. => ASMAIN.C, 6811.H, AS6811.BLD, AS6811.LNK,
AS6811.PRJ, M11ADR.C, M11EXT.C, M11MCH.C, M11PST.C, T6811.ASM.

CUG292.34-AS6811.LNK link
Linkage info for compilation. => AS6811.EXE. [RT-11: DECUS C]

CUG292.35-AS6811.PRJ make
Compiler instructions. => AS6811.EXE. [MS-DOS: TC]

CUG292.36-AS8085.BLD make
Native command file for compiling assembler. => AS8085.EXE. [RT-11:
DECUS C]

CUG292.37-AS8085.EXE executable
8085 (8080) assembler. => ASMAIN.C, 8085.H, 85EXT.C, 85MCH.C, 85PST.C,
AS8085.BLD, AS8085.LNK, AS8085.PRJ, T8085.ASM.

CUG292.38-AS8085.LNK link
Linkage info for compilation. => AS8085.EXE. [RT-11: DECUS C]

CUG292.39-AS8085.PRJ make
Compiler instructions. => AS8085.EXE. [MS-DOS: TC]

CUG292.40-ASDATA.C source
Device-independent source for all assemblers. => ASMAIN.C.

CUG292.41-ASEXPR.C source
Expression evaluator. Device-independent for all assemblers. =>
ASMAIN.C.

CUG292.42-ASLEX.C source
Lexical analyzer. Device-independent for all assemblers. => ASMAIN.C.

CUG292.43-ASLINK.BLD make
Native command file for compiling linker. => ASLINK.EXE. [RT-11: DECUS
C]

CUG292.44-ASLINK.EXE executable
Relocating linker. => LKMAIN.C, ASLINK.BLD, ASLINK.H, ASLINK.LNK,
ASLINK.PRJ.

CUG292.45-ASLINK.H header
For the relocating linker. => ASLINK.EXE.

CUG292.46-ASLINK.LNK link
Linkage info for compilation. => ASLINK.EXE. [RT-11: DECUS C]

CUG292.47-ASLINK.PRJ make
Compiler instructions. => ASLINK.EXE. [MS-DOS: TC]

CUG292.48-ASLIST.C source
Copy a block of source and code to the listing file. => ASMAIN.C.

CUG292.49-ASM.H header
Definitions for all machine-independent functions for all assemblers.

CUG292.50-ASMAIN.C source
Main device-independent source common to all assemblers in this
volume. It coordinates file input/output, symbol table generation,
program/data areas, expression analysis, and assembler directive
processing. => ASDATA.C, ASEXPR.C, ASLEX.C, ASLTST.C, ASM.H, ASOUT.C,
ASSUBR.C, ASSYM.C, AS6800.EXE, AS6801.EXE, AS6804.EXE, AS6805.EXE,
AS6809.EXE, AS6811.EXE, AS8085.EXE, ASZ80.EXE, LKMAIN.C. [TSX+, RT-11,
MS-DOS: TC, DECUS C]

CUG292.51-ASMLNK.DOC doc
Manual, discussing the ASXXXX assemblers in this volume, source
program format, symbols and expressions, general assembler directives,
assembler directives, assembler invocation, error-handling, the
listing file, symbol table file, and object file. Also discusses
ASLINK, and building ASLINK and assemblers. => ASMAIN.C.

CUG292.52-ASMTST.ASM source
Machine Independent Assember Test. Tests directives for memory
allocation; boundaries; strings; expression evaluation; IF, ELSE, and
ENDIF; local symbols; offset calculations; area definitions; assembler
output file; symbol table; and area table. => ASMAIN.C.

CUG292.53-ASOUT.C source
Various machine-independent output functions. => ASMAIN.C.

CUG292.54-ASSUBR.C source
Machine-independent error handler. => ASMAIN.C.

CUG292.55-ASSYM.C source
Device-independent code for all assemblers. Links symbol lists to
hashtables, sets up area lists and dca. => ASMAIN.C.

CUG292.56-AST05.ASM source
Monitor for the MC146805EZ Evaluation Board. => ASMAIN.C.

CUG292.57-ASTO9.ASM source
MC6809 Monitor. => ASMAIN.C.

CUG292.58-ASZ80.BLD make
Native command file for compiling assembler. => ASZ80.EXE. [RT-11:
DECUS C]

CUG292.59-ASZ80.EXE executable
Z80 (hd64180) assembler. => ASMAIN.C, Z80.H, ASZ80.BLD, ASZ80.LNK,
ASZ80.PRJ, Z80ADR.C, Z80EXT.C, Z80MCH.C, Z80PST.C, TZ80.ASM.

CUG292.60-ASZ80.LNK link
Linkage info for compilation. => ASZ80.EXE. [RT-11: DECUS C]

CUG292.61-ASZ80.PRJ make
Compiler instructions. => ASZ80.EXE. [MS-DOS: TC]

CUG292.62-BUF25.ASM source
Buffalo 2.5. Monitor for 6811. => ASMAIN.C.

CUG292.63-LKAREA.C source
Create an area only. => LKMAIN.C.

CUG292.64-LKDATA.C source
=> LKMAIN.C.

CUG292.65-LKEVAL.C source
Evaluate input term. => LKMAIN.C.

CUG292.66-LKHEAD.C source
Create a new header entry. => LKMAIN.C.

CUG292.67-LKIHX.C source
Produce Intel Hex Output file.

CUG292.68-LKLEX.C source
Linker's lexical analyzer. => LKMAIN.C.

CUG292.69-LKLIST.C source
Increment the count of lines on the page. If the page overflows put
out a page skip and linker header. => LKMAIN.C.

CUG292.70-LKMAIN.C source
Main linker module. => ASMAIN.C. [TSX+, RT-11, MS-DOS: TC, DECUS C]

CUG292.71-LKRLOC.C source
Process relocation operations and call designated output routine. =>
LKMAIN.C.

CUG292.72-LKS19.C source
Produce Motorola S19 output file. => LKMAIN.C.

CUG292.73-LKSYM.C source
Sets up the symbol hashtable. => LKMAIN.C.

CUG292.74-MOOADR.C source
Process addressing modes. => AS6800.EXE.

CUG292.75-MOOEXT.C source
Device description, byte order, and file extension information. =>
AS6800.EXE.

CUG292.76-MOOMCH.C source
Process device mnemonics and special directives. => AS6800.EXE.

CUG292.77-MOOPST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. AS6800.EXE.

CUG292.78-M01ADR.C source
Process addressing modes. => AS6801.EXE.

CUG292.79-M01EXT.C source
Device description, byte order, and file extension info. =>
AS6801.EXE.

CUG292.80-M01MCH.C source
Process device mnemonics and special directives. => AS6801.EXE.

CUG292.81-M01PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6801.EXE.

CUG292.82-M04ADR.C source
Process addressing modes. => AS6804.EXE.

CUG292.83-M04EXT.C source
Device description, byte order, and file extension info. =>
AS6804.EXE.

CUG292.84-M04MCH.C source
Process device mnemonics and special directives. => AS6804.C.

CUG292.85-M04PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6804.EXE.

CUG292.86-M05ADR.C source
Process addressing modes. => AS6805.EXE.

CUG292.87-M05EXT.C source
Device description, byte order, and file extension info. =>
AS6805.EXE.

CUG292.88-M05MCH.C source
Process device mnemonics and special directives. => AS6805.EXE.

CUG292.89-MOSPST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6805.EXE.

CUG292.90-M09ADR.C source
Process addressing modes. => AS6809.EXE.

CUG292.91-M09EXT.C source
Device description, byte order, and file extension info. =>
AS6809.EXE.

CUG292.92-M09MCH.C source
Process device mnemonics and special directives. => AS6809.EXE.

CUG292.93-M09PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6809.EXE.

CUG292.94-M11ADR.C source
Process addressing modes. => AS6811.EXE.

CUG292.95-M11EXT.C source
Device description, byte order, and file extension info. =>
AS6811.EXE.

CUG292.96-M11MCH.C source
Process device mnemonics and special directives. => AS6811.EXE.

CUG292.97-M11PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => AS6811.EXE.

CUG292.98-MOND09.ASM source
MONDEB09. 6809 monitor/debugger. => AS6809.EXE.

CUG292.99-README.ASM doc
Typical console input and output routines to write, assemble, and link
with MOND09 or AST09. => MOND09.ASM.

CUG292.100-T6800.ASM source
6800 assembler test. => AS6800.EXE, T6800E.ASM, T6800S.ASM.

CUG292.101-T6800E.ASM source
6800 Assembler Error Check. => T6800.ASM.

CUG292.102-T6800S ASM source
6800 sequential test. => T6800.ASM.

CUG292.103-T6801.ASM source
6801 Assembler test. => AS6801.EXE, T6801E.ASM, T6801S.ASM.

CUG292.104-T6801E.ASM source
6801 Assembler Error check. => T6801.ASM.

CUG292.105-T6801S.ASM source
6801 sequential test. => T6801.ASM.

CUG292.106-T6804S.ASM source
6804 sequential test. => AS6804.EXE.

CUG292.107-T6805S.ASM source
6805 sequential test. => AS6805.EXE.

CUG292.108-T6809.ASM source
6809 Assembler test. => AS6809.EXE, T6809E.ASM.

CUG292.109-T6809E.ASM source
6809 Error Tests. => T6809.ASM.

CUG292.110-T6811.ASM source
6811 assembler test. => AS6811.EXE, T6811E.ASM, T6811 S.ASM.

CUG292.111-T6811E.ASM source
6811 assembler error check. => T6811.ASM.

CUG292.112-T6811S.ASM source
6811 sequential test. => T6811.ASM.

CUG292.113-T8085.ASM source
Test of 8085/8080 assembler, all instructions. => AS8085.EXE.

CUG292.114-TZ80.ASM source
Test of Z80/HD64180 assembler. => ASZ80.EXE.

CUG292.115-WARNING.CUG doc
Copyrights for Motorola, Inc. restated. => AST05.ASM, BUF25.ASM.

CUG292.116-XXXPST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => ASMAIN.C.

CUG292.117-Z80.H header
Machine specific definitions for Z80 assembler. => ASZ80.EXE.

CUG292.118-Z80ADR.C source
Process addressing modes. => ASZ80.EXE.

CUG292.119-Z80EXT.C source
Device description, byte order, and file extension info. => ASZ80.EXE.

CUG292.120-Z80MCH.C source
Process device mnemonics and special directives. => ASZ80.EXE.

CUG292.121-Z80PST.C source
Table of assembler general directives, special device directives, and
assembler mnemonics with associated operation codes. => ASZ80.EXE.

==============================================================================
CUG293 -
-----------

3D Medical Imaging, source
By Daniel Geist, Michael Vannier. [public] 2 disks. This set of
programs implements three-dimensional surface reconstruction from
serial slice images, such as CT scans. For more explanation, see the
article in C Users Journal v. 7.6, August, 1989. The code was
developed under Microsoft v5.0, but with a few changes (such as file
handling calls and huge array declarations), it can be adapted to
other compilers. The program generates an output file that contains a
set of 8-bit grayscale images. You must supply your own program to
convert the images to your frame buffer format (The disk contains a
conversion program for an AT&T Targa24 frame buffer board). CUG293
includes all C source code, documentation, and one scan slice file.
CUG294 includes seven CT scan slice files. All the CT scan slices were
produced by a Siemens Somatom 2 CT scanner.

CUG293.01-3-D.BAT batch
By Daniel Geist, Michael Vannier. Batch file to create 3-D
reconstruction of CT images. [MS-DOS]

CUG293.02-3-D.DOC doc
By Daniel Geist, Michael Vannier. 3-D Reconstruction User manual. =>
CUG294.

CUG293.03-ANG.C source
By Daniel Geist, Michael Vannier. This module creates rotated views of
the image around the z-axis. [MS-DOS: MSC5]

CUG293.04-ANGl.C source
By Daniel Geist, Michael Vannier, Ake Wallin. A modified version of
ANG. => ANG.C. [MS-DOS: MSC5]

CUG293.05-ANG2.C source
By Daniel Geist, Michael Vannier. Creates rotated views of the image.
[MS-DOS: MSC5]

CUG293.06-ANGPP.C source
By Daniel Geist, Michael Vannier. This module creates rotated views of
the image around the z-axis. [MS-DOS: MSC5]

CUG293.07-CTBILD.001 data
CT slice.

CUG293.08-CTTGA.C source
By Daniel Geist, Michael Vannier. Converts a 256 x 256 CT file into a
256 x 256 TARGA-TIPS B/W file. [MS-DOS: MSC5]

CUG293.09-CTTGA.EXE executable
By Daniel Geist, Michael Vannier. => CTTGA.C. [MS-DOS: MSC5]

CUG293.10-CUT.C source
By Daniel Geist, Michael Vannier. creates right lateral (x) views.
[MS-DOS: MSC5]

CUG293.11-DBO.OUT data
3-D surface images 256 x 256 with 8 bits per pixel.

CUG293.12-DEB.C source
By Daniel Geist, Michael Vannier. [MS-DOS: MSC5]

CUG293.13-DEP.C source
By Daniel Geist, Michael Vannier. Distance shading program.[MS-DOS:
MSC5]

CUG293.14-DEP2.C source
By Daniel Geist, Michael Vannier. Distance shading program. [MS-DOS:
MSC5]

CUG293.15-DEPPP.C source
By Daniel Geist, Michael Vannier. Distance shading program. [MS-DOS:
MSC5]

CUG293.16-DRE.OUT data
3-D surface images 256 x 256 with 8 bits per pixel.

CUG293.17-DRL.OUT data
3-D surface images 256 x 256 with 8 bits per pixel.

CUG293.18-DUMP.C source
By Daniel Geist, Michael Vannier. Utility program to inspect a binary
file. [MS-DOS: MSC5]

CUG293.19-DUMP1.C source
By Daniel Geist, Michael Vannier. Utility program to inspect a binary
file. [MS-DOS: MSC5]

CUG293.20-DUMP1.EXE executable
[MS-DOS]

CUG293.21-DUMPPP.C source
By Daniel Geist, Michael Vannier. Utility program to inspect a binary
file. [MS-DOS: MSC5]

CUG293.22-FLIPD.C source
By Daniel Geist, Michael Vannier. Flip an image file around the
diagonal axis. [MS-DOS: MSC5]

CUG293.23-FLIPDPP.C source
By Daniel Geist, Michael Vannier. Flip an image around the diagonal
axis. [MS-DOS: MSC5]

CUG293.24-FLIPH.C source
By Daniel Geist, Michael Vannier. Flip an image around the horizontal
axis. [MS-DOS: MSC5]

CUG293.25-FLIPHPP.C source
By Daniel Geist, Michael Vannier. Flip an image around the horizontal
axis. [MS-DOS: MSC5]

CUG293.26-FLIPV.C source
By Daniel Geist, Michael Vannier. Flip an image around the vertical
axis. [MS-DOS: MSC5]

CUG293.27-FLIPVPP.C source
By Daniel Geist, Michael Vannier. Flip an image around the vertical
axis. [MS-DOS: MSC5]

CUG293.28-GIB.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.29-GOR.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.30-GRA.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.31-GRAD.C source
By Daniel Geist, Michael Vannier. This module creates six main axis
views from CT files.[MS-DOS: MSC5]

CUG293.32-GRAD1.C source
By Daniel Geist, Michael Vannier, Ake Wallin. A modified version of
GRAD. [MS-DOS: MSC5]

CUG293.33-GRADPP.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.34-GRINT.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.35-GX.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.36-GY.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.37-HEADER.C doc
By Daniel Geist, Michael Vannier. Brief 3-D Reconstruction
description.

CUG293.38-INTERP.C source
By Daniel Geist, Michael Vannier. 3-D Reconstruction Program. [MS-DOS:
MSC5]

CUG293.39-MK.BAT batch
A batch file for the compilation. [MS-DOS: MSC5]

CUG293.40-PC-3D.TXT doc
By Daniel Geist, Michael Vannier. Documentation of 3-D medical
imaging. The technique of the distant and gradient shading is
explained. => CUG294.

CUG293.41-PICCONV.BAT batch
By Daniel Geist, Michael Vannier. A batch file for displaying the
image. => GRAD.C. [MS-DOS]

CUG293.42-PICTGA.C source
By Daniel Geist, Michael Vannier. Converts a 256* n B/W picture file
into a 256 x 256 TARGA-TIPS B/W or RGB file. [MS-DOS: MSC5]

CUG293.43-PICTGA.EXE executable
=> PICTGA.C. [MS-DOS]

CUG293.44-PT.BAT batch
Executes PICTGA.

CUG293.45-README doc
By Daniel Geist, Michael Vannier. Description of sample data files.

CUG293.46-README1 doc
By Daniel Geist, Michael Vannier, Ake Wallin. Description of the
modified version of programs.

CUG293.47-README2 doc
By Daniel Geist, Michael Vannier. A brief document in the disk.

CUG293.48-RUNANG.BAT batch
A batch file for displaying angled images.

CUG293.49-RUNGRAD.BAT batch
A batch file for creating images from CT files. => GRAD.C.

CUG293.50-SMOOTH.C source
By Daniel Geist, Michael Vannier. 3-D reconstruction program. [MS-DOS:
MSC5]

CUG293.51-SMOOTH2.C source
By Daniel Geist, Michael Vannier. 3-D reconstruction program. [MS-DOS:
MSC5]

CUG293.52-T1.C source
By Daniel Geist, Michael Vannier. Sets the specified video mode.
[MS-DOS: MSC5]

CUG293.53-T2.C source
By Daniel Geist, Michael Vannier. Writes forwards and backwards.
[MS-DOS: MSC5]

CUG293.54-T3.C source
Calculates angle. [MS-DOS: MSC5]

CUG293.55-TGACT.C source
By Daniel Geist, Michael Vannier, Ake Wallin. Converts a TARGA-TIPS
RGB file into a 256 x 256 CT file. [MS-DOS: MSC5]

CUG293.56-TOFG100.C source
By Daniel Geist, Michael Vannier. Sample ITEX program. [MS-DOS: MSC5]

CUG293.57-TOTARGA.C source
By Daniel Geist, Michael Vannier. Sample program to convert image
files from the reconstruction package to AT&T Targa board format.
[MS-DOS: MSC5]

==============================================================================
CUG294 -
-----------

3D Medical Imaging, sample Images
By Daniel Geist, Michael Vannier. I public] 4 disks. See CUG293.

CUG294.01-CTBILD.001 data
Sample CT scan files from a Siemens Somatom 2 CT scanner. It has a
header block of 512 bytes, followed by 256 image lines. Each image
line has 256 elements (pixels). Each pixel consists of 16 bits. Of
these, only the low order 11 bits contain gray scale.

CUG294.02-CTBILD.002 data

CUG294.03-CTBILD.003 data

CUG294.04-CTBILD.004 data

CUG294.05-CTBILD.005 data

CUG294.06-CTBILD.006 data

CUG294.07-CTBILD.007 data

CUG294.08-DBO.OUT data
By Daniel Geist, Michael Vannier. 3-D surface image obtained from CT
scans using GRAD. => README. [MS-DOS]

CUG294.09-DRE.OUT data
3-D surface images 256 x 256 with 8 bits per pixel.

CUG294.10-DRL.OUT data
By Daniel Geist, Michael Vannier. 3-D surface image detained from CT
scans using GRAD. 256 x 256 with 8 bits per pixel.

CUG294.11-READ ME doc
By Daniel Geist, Michael Vannier. Explains contents of this data
volume, intended for use with Volume #293. => README.CT, CUG293.

CUG294.12-README.CT doc
By Daniel Geist, Michael Vannier. Explains CT scan slice data files,
extends offer for more to users with proper facilities. => README.

==============================================================================
CUG295 -
-----------

blkio Library volume withdrawn for massive update see CUG358
By Lyle Frost. [public] 1 disk. The blkio library library is a
buffered input/output library for C similar to the stdio library but
designed for use with structured fields. The LRU (least recently used)
replacement algorithm is used for buffering. The disk includes all the
source code and a utility program that extract documentation embedded
in the source code. The blkio library is a component of cbase, a
commercial C database library. THIS VOLUME HAS BEEN UPDATED
SUBSTANTIALLY AND RELEASED AS CUG358.

==============================================================================
CUG296 -
-----------

C to C++ Migrator
By Charles D. Havener. [public] 1 disk. This C to C++ Migrator program
accepts old style C code as input and generates the new ANSI (or C++)
style function prototypes. In the process, the program generates two
output files: ed.out and proto.out. ed.out is used by the sed stream
editor to edit the original source file. proto.out is used as a header
file including extern function declarations. Therefore, the user must
have a sed (MKS sed for MS-DOS users). The disk contains the source
code for the migrator including complete lex and yacc grammers, the
executable code for MS-DOS, and Havener's article describing the
package from C User's Journal v. 7.8, October, 1989. Recompiling the
migrator program under MS-DOS requires lex and yacc for MS-DOS (FLEX
and BISON are available from the CUG library). For more details see
the narrative description of this package in Section 2.

CUG296.01-CTOCPP.BAT batch
Batch command file to convert .c to .cpp files, calls CTOCPP1.BAT to
handle files individually. => CTOCXX.C.

CUG296.02-CTOCPPl.BAT batch
Processes a single file for CTOCPP.BAT, invokes MSC compiler with /E
option and calls CTOCXX.EXE. => CTOCXX.C.

CUG296.03-CTOCXX make
For the CTOCXX translator. => CTOCXX.C.

CUG296.04-CTOCXX.C source
C to C++ Migrator. Takes the preprocessed source file from
CTOCPP1.BAT, and outputs PROTO.OUT and ED.OUT for editing the original
source file and placing prototypes in header files. => CTOCPP.BAT,
CTOCPP1.BAT, CTOCXX, CTOCXX.H, CTOCXX.L, FLEX.SKE, FLEXCOM.H,
FLEXDEF.H, FLEXSDEF.H, GRAM.Y, LITTLE.Y, SUBS.C, SYMTAB.C. [PCDOS]

CUG296.05-CTOCXX.EXE executable
=> CTOCXX.C.

CUG296.06-CTOCXX.H header
Symbol Table Definitions and boolean definitions for C to C++
conversion tool. => CTOCXX.C.

CUG296.07-CTOCXX.L data
Input file for FLEX. => CTOCXX.C, FLEX.SKE.

CUG296.08-ED.OUT data
Output file from CTOCXX.EXE, used by SED stream editor to edit the
original source code. => CTOCXX.C.

CUG296.09-FLEX.SKE source
A lexical scanner generated by flex. => CTOCXX.C.

CUG296.10-FLEXCOM.H header
Common macro definitions for VFTL programs generated by FLEX. =>
FLEX.SKE.

CUG296.11-FLEXDEF.H header
Definitions for FLEX. => FLEX.SKE.

CUG296.12-FLEXSDEF.H header
Macro definitions for compressed table C/FTL programs generated by
flex. => FLEX.SKE.

CUG296.13-GRAM.Y data
C Grammar, input file for YACC. => CTOCXX.C.

CUG296.14-HAVENER.TXT doc
Rapid Prototyping as a Design Method. Introduction, goals and
philosophy, and phase by phase coverage of the rapid prototyping
process involved in constructing the migrator tool. => CTOCXX.C.

CUG296.15-LITTLE.Y data
A short version of the C Grammar, it includes mainly the productions
that had semantic action code attached for the migrator prototype. =>
CTOCXX.C.

CUG296.16-PROTO.OUT data
Output file from CTOCXX.EXE, used in header files as required. =>
CTOCXX.C.

CUG296.17-README doc
Brief description of files intended for distribution, their usage and
relationships. => CTOCXX.C.

CUG296.18-SAMPL.C data
Sample input, exhibits various function declaration styles. =>
CTOCXX.C.

CUG296.19-SAMPL.CPP data
Output file, exhibits various function declaration styles converted to
C++ from SAMPL.C. => CTOCXX.C.

CUG296.20-SAMPL.SED data
Edited version of SAMPLE.C. => CTOCXX.C.

CUG296.21-SUBS.C source
Miscellaneous functions used by the C to C++ program. => CTOCXX.C.

CUG296.22-SYMTAB.C source
This module contains functions to init the symbol table and hash,
store, find or test a symbol. => CTOCXX.C.

CUG296.23-YTAB.H header
Created by YACC. => CTOCXX.C.

==============================================================================
CUG297 -
-----------

Small Prolog
By Henri de Feraudy. [public] 1 disk. This Prolog interpreter follows
a Cambridge syntax (LISP-like syntax) with advantages for
meta-programming and small code. The Small Prolog includes most
standard built-ins (predicates) based on Clocksin and Mellish's
descriptions in Programming in Prolog, although it can be extended by
creating more user defined built-ins. The disk includes C source
files, make files, documentation, and many Prolog example files that
demonstrate Prolog features for C programmers who may be unfamiliar
with Prolog. The source code is very portable and will compile under
Turbo C v1.5 and Mark William Let's C v4 on PC clones, Mark William C
v3.0 and Megamax Laser C on Atari ST and Sun C compiler on Sun-3.
Feraudy has updated his original Small Prolog. The update includes
some minor bug fixes, a speed improvement, and better handling of type
predicates. It provides more comments in C source code and an improved
makefile. For more details see the narrative description of this
package in Section 2.

CUG297.01-EXAMPL1.SPR data
Example file, also contains Prolog background documentation and minor
brief instructions for running example. => PRMAIN.C.

CUG297.02-EXAMPL10.SPR data
Briefly, how to use the special predicate findall. => PRMAIN.C.

CUG297.03-EXAMPL11.SPR data
How to use enum and recursive-loop. => PRMAIN.C.

CUG297.04-EXAMPL12.SPR data
Simple declarative program. => PRMAIN.C.

CUG297.05-EXAMPL13.SPR data
Simple parsing of simple sentences. PRMAIN.C.

CUG297.06-EXAMPL14.SPR data
A graph searching program.

CUG297.07-EXAMPL2.SPR data
Sophisticated queries and their programming. => PRMAIN.C.

CUG297.08-EXAMPL3.SPR data
Exploring combinations of relations and rules. => PRMAIN.C.

CUG297.09-EXAMPL4.SPR data
Exploring input/output builtins. PRMAIN.C.

CUG297.10-EXAMPL5.SPR data
Using recursion. => PRMAIN.C.

CUG297.11-EXAMPL6.SPR data
About multiple rules. => PRMAIN.C.

CUG297.12-EXAMPL7.SPR data
Using builtin control structure cut. => PRMAIN.C.

CUG297.13-EXAMPL8.SPR data
handling. => PRMAIN.C.

CUG297.14-EXAMPL9.SPR data
Exploring the assert primitive. => PRMAIN.C.

CUG297.15-FRMANUAL.TXT doc
Guide de Reference Peur L'U Hlisateur de Small. Out of date French
translation of PRMANUAL.TXT. => PRMAIN.C.

CUG297.16-HELP.SPR data
Information on predicates. => PRMAIN.C.

CUG297.17-MAKE.SPR data
Unfinished Make utility, requiring builtin definition, meant as an
educational application of Prolog. => PRMAIN.C.

CUG297.18-MAKEFILE make
For Small Prolog. => PRMAIN.C. [SUN-UNIX: SUN C]

CUG297.19-MAKEFILE.TBC make
For Small Prolog on PC. => PRMAIN.C. [MS-DOS: TC]

CUG297.20-PP.C source
Simple Pretty-printer for lisp-like expressions. => PRMAIN.C.

CUG297.21-PRALLOC.C source
Allocates structures. => PRMAIN.C.

CUG297.22-PRASSERT.C source
Implementation of assertz, asserta and clause handling. => PRMAIN.C.

CUG297.23-PRATARI.C source
Atari specific code. => PRMAIN.C. [ ATARI: MWC3]

CUG297.24-PRATARI.MAK make
For Small Prolog. => PRMAIN.C. [ATARI: MWC3]

CUG297.25-PRBLTIN.C source
Builtin predicate definitions, functions, routines. => PRMAIN.C.

CUG297.26-PRBLTIN.H header
Include file for PRBLTIN.C. => PRMAIN.C.

CUG297.27-PRCNSULT.C source
Loads a file of clauses. => PRMAIN.C.

CUG297.28-PRDEBUG.C source
Functions for possible source-level debugging. => PRMAIN.C.

CUG297.29-PRERROR.C source
Error message functions. => PRMAIN.C.

CUG297.30-PRHASH.C source
Builds symbol table. => PRMAIN.C.

CUG297.31-PRIBMPC.C source
PC & PC clone-dependent code. => PRMAIN.C. [MS-DOS: TC, MWC4]

CUG297.32-PRLEX.H header
Used by PRPARSE.C and PRSCAN.C. => PRMAIN.C.

CUG297.33-PRLUSH.C source
Lush resolution algorithm. => PRMAIN.C.

CUG297.34-PRLUSH.H header
Include file for PRLUSH.C. => PRMAIN.C.

CUG297.35-PRMAIN.C source
Small Prolog. Interactive Prolog interpreter with lisp-like syntax. =>
PR**, HELP.SPR, MAKEFILE, MAKEFILE.TBC, PP.C, SPROLOG. *, TURBO.LNK,
VERIF.SPR, XREAD.SPR, ZORTECH.MAK. [SUN-OS, TOS, MS-DOS2: TC1.5, MWC3,
MWC4, MEGAMAX LASER C, GCC] Better to compile this with compact model
on the PC.

CUG297.36-PRMANUAL.TXT doc
Small Prolog user guide and reference. => PRMAIN.C.

CUG297.37-PROLOG.H header
Configuration switches. => PRMAIN.C.

CUG297.38-PRPARSE.C source
Recursive descent parser for lisp-like syntax. => PRMAIN.C, PRSCAN.C.

CUG297.39-PRPRINT.C source
Print functions. => PRMAIN.C.

CUG297.40-PRSCAN.C source
Lexical analysis. :> PRMAIN.C, PRLEX.H.

CUG297.41-PRSUN.C source
Machine specific code for SUN 3. => PRMAIN.C. [UNIX]

CUG297.42-PRTYPES.H header
Basic data structures of Small Prolog. => PRMAIN.C.

CUG297.43-PRUNIFY.C source
Recursive unification algorithm, dereferencing. => PRMAIN.C.

CUG297.44-README doc
Descriptions of volume 297's components. => PRMAIN.C.

CUG297.45-SPROLOG.EXE executable
=> PRMAIN.C. [MS-DOS2: TC1.5]

CUG297.46-SPROIOG.INF doc
Information on various zone sizes. => PRMAIN.C.

CUG297.47-SPROLOG.INI data
Initialization file loaded at Startup. => PRMAIN.C.

CUG297.48-SPROLOG.PRJ object
Project file for Small Prolog. => PRMAIN.C. [MS-DOS: TC]

CUG297.49-TURBOC.LNK link
Linkage info for compilation of small Prolog. => PRMAIN.C. [MS-DOS:
TC]

CUG297.50-VERIF.SPR data
Used for debugging, detects forgotten arguments. => PRMAIN.C.

CUG297.51-XREAD.SPR data
Reads a list & retains variable names, bug finding predicate. =>
PRMAIN.C.

CUG297.52-ZORTECH.MAK make
For Small Prolog. => PRMAIN.C. [MS-DOS ZORTECHC]

==============================================================================
CUG298 -
-----------

PC Curses
By Jeffrey S. Dean. [share] 1 disk. This shareware release of PC
curses, version 8, is a C window functions library designed to
provided compatibility with the UNIX curses package. By fully
utilizing the PC features, this package is coded much simpler that the
UNIX version. For example, there is no need for cursor motion and
screen output optimization on the PC. Currently, there are two major
versions of curses database under UNIX; one is termcap, the other
terminfo. PC curses derives primarily from termcap, with some features
of the terminfo version. Additional routines (not in the original
curses package) are provided for the PC user. The distribution disk
includes a couple of demo programs, Small and Large model library for
Microsoft C v5.0 and Turbo C v1.5 compilers, and documentation that
describes all the functions in the library.

CUG298.01-!README doc
Descriptions of components available for distribution. =>
MSCURSES.LIB, TSCURSES.LIB.

CUG298.02-CURSES.DOC doc
Manual for the package. => MSCURSES.LIB TSCURSES.LIB.

CUG298.03-CURSES.H header
Include file for PC Curses. => MSCURSES.LIB, TSCURSES.LIB.

CUG298.04-DEMO.C source
Simple demonstration program. => MSCURSES.LIB, TSCURSES.LIB DEMO.DAT,
DEMO.EXE, DEMO.HLP.

CUG298.05-DEMO.DAT data
=> DEMO.C.

CUG298.06-DEMO.EXE executable
=> DEMO.C.

CUG298.07-DEMO.HLP data
Help file. => DEMO.C.

CUG298.08-HELLO.C source
Simple curses program. => MSCURSES.LIB, TSCURSES.LIB.

CUG298.09-MOVEBOX.C source
Demo - uses cursor keys to move box around screen. => MSCURSES.LIB,
TSCURSES.LIB, MOVEBOX.EXE, MOVEBOX.HLP.

CUG298.10-MOVEBOX.EXE executable
=> MOVEBOX.C.

CUG298.11-MOVEBOX.HLP data
help file. => MOVEBOX.C.

CUG298.12-MSCURSES.LIB library
PC Curses. Small model, C window functions designed to provide
compatibility with the UNIX curses package. => MOVEBOX.C, UNIX.H,
TSCURSES.LIB, MSDCURSE.LIB, CURSES.H, DEMO.C, HELLO.C.[PCDOS, MS-DOS:
MSC5]

CUG298.13-MSDCURSE.LIB library
Small model with debugging (tracing) code. => MSCURSES.LIB.

CUG298.14-TSCURSES.LIB library
PC Curses. Small model, C window functions designed to provide
compatibility with the UNIX curses package. => MSCURSES.LIB,
TSDCURSE.LIB, CURSES.H, DEMO.C, HELLO.C, MOVEBOX.C, UNIX.H. [PCDOS,
MS-DOS: TC1.5]

CUG298.15-TSDCURSE.LIB library
PC Curses. Small model with debugging (tracing) code. =>
TSCURSES.LIB.[PCDOS, MS-DOS: TC1.5]

CUG298.16-UNIX.H header
Definitions for running PC Curses on UNIX. => TSCURSES.LIB,
MSCURSES.LIB.

==============================================================================
CUG299 -
-----------

MEL and BP
[public] 1 disk. This volume contains two programs, MEL - Universal
Metalanguage Data Processor submitted by George Crews (TN), and BP -
Back Propagations for neural networks by Ronald Michaels (TN). Mel
provides an I/O interface between a program and the user. It can take
input data written in "pseudo-English" and translate it into program
variables. It can also translate a program's variables into
pseudo-English. (See the article in the C Users Journal vol 8.2,
February, 1990.) MEL was originally designed for use with engineering
analysis programs. It was written in ANSI C and was developed using
Microsoft C v5.1. The disk includes MEL source code, a test example
program, sample input and output files, documentation, and the article
and listings from vol. 8.2 of the CUJ. Since MEL provides only a
processor engine, you need to define your own input and output data
format rule (called a dictionary) for your application program in
mel.h. For more details on MEL, see the narrative description of this
package in Section 2. BP is a simple implementation of the back
propagation algorithm as an example of a neural network. The
implementation is based upn the article in Nature, "Learning
representations by back propogation errors" by Rummelhart, Hinton and
Williams. BP employs an adaptive algorithm that converges as a result
of learning. BP was developed on an AT clone with a math compressor
using Zortech C v1.07. The disk also includes the Hercules graphics
version of BP.

CUG299.01-BP.C source
By Ronald Michaels. Back Propagation Delta Rule Learning Program. Main
file for back propagation algorithm as an example of a neural network.
=> BP.EXE, BP1.DAT, ERROR.C, PLOT.C, PLOT.H, RANDOM.L, XOR.DAT,
README.BP, BP2.DAT, BP_H.EXE. [MS-DOS: ECO-C4, ZORTECHC]

CUG299.02-BP.EXE executable
By Ronald Michaels. Basic program without graphics. => BP.C.

CUG299.03-BP1.DAT data
By Ronald Michaels. training patterns. => BP.C.

CUG299.04-BP2.DAT data
By Ronald Michaels. program parameters. => BP.C.

CUG299.05-BP_H.EXE executable
By Ronald Michaels. Program with Hercules Graphics. => BP.C.

CUG299.06-CONVER.C source
By George Crews. Calculates and returns the conversion factor required
for going from units represented by an input string of characters to
units represented by an output string of characters. => MEL.C.

CUG299.07-CREWS1.EX doc
By George Crews. Example of MEL input for a Hydraulic Analysis
Program. => MEL.C CREWS2.EX, CREWS3.EX, CREWS4.EX CREWS5.EX.

CUG299.08-CREWS2.EX doc
By George Crews. Example of obtaining data from a MEL descriptor. =>
CREWS1.EX.

CUG299.09-CREWS3.EX doc
By George Crews. Example of outputting a MEL descriptor. => CREWS1.EX.

CUG299.10-CREWS4.EX doc
By George Crews. Example of output generated by a Hydraulic Analysis
program using MEL (from the input data given in Example 1). =>
CREWS1.EX.

CUG299.11-CREWS5.EX doc
By George Crews. Public interface between MEL and any application
program using it. => CREWS1.EX.

CUG299.12-ERROR.C source
By Ronald Michaels. handles error messages for BP.C. => BP.C, ERROR.H.

CUG299.13-ERROR. H header
By Ronald Michaels. => ERROR.C.

CUG299.14-INPUT data
By George Crews. Example input for MEL TEST. => MEL_TEST.C.

CUG299.15-MEL.ART doc
By George Crews. MEL article in CUJ. => MEL.DOC.

CUG299.16-MEL.C source
By George Crews. MEtaLanguage input/output processor for engineering
analysis programs. => CONVER.C CREWS1.EX, MEL.H, MEL.DOC MEL_TEST.C.
[MS-DOS: MSC5]

CUG299.17-MEL.DOC doc
By George Crews. Introduction list of MEL features, steps for using
MEL for program I/O. => MEL.C.

CUG299.18-MEL.H header
By George Crews. Defines the input and output interfaces (called
"dictionaries") between MEL and the engineering analysis program it is
being used for. Contains example dictionaries. => MEL.C.

CUG299.19-MEL.OBJ object
By George Crews. => MEL.C.

CUG299.20-MEL_TEST.C source
By George Crews. Example code for MEL. It may be customized for use as
a driver. MEL.C, INPUT, OUTPUT, MEL_TEXT.EXE.

CUG299.21-MEL_TEST.EXE executable
By George Crews. => MEL_TEST.C.

CUG299.22-MEL_TEST.OBJ object
By George Crews. => MEL_TEST.C.

CUG299.23-OUTPUT data
By George Crews. Example output for MEL_TEST. => MEL_TEST.C.

CUG299.24-PARITY3.DAT data
By Ronald Michaels. Training pattern set to illustrate a more
difficult version of the XOR problem. => XOR.DAT.

CUG299.25-PARITY4.DAT data
By Ronald Michaels. Training pattern set to illustrate an even more
difficult version of the XOR problem. => XOR.DAT.

CUG299.26-PLOT.C source
By Ronald Michaels. Functions to plot error graph for bp learning. =>
BP.C.

CUG299.27-PLOT.H header
By Ronald Michaels. For plot functions. => BP.C.

CUG299.28-RANDOM.C source
By Ronald Michaels. implementation of a pseudo random number
generator. => BP.C, RANDOM.H, TEST.C.

CUG299.29-RANDOM.H header
By Ronald Michaels. => RANDOM.C.

CUG299.30-README.BP doc
By Ronald Michaels. Description of BP distribution components, program
purpose, how it works, compiling, running, and sources of related
reading. => BP.C.

CUG299.31-README.MEL doc
By George Crews. Brief description of MEL distribution components. =>
MEL.C.

CUG299.32-TEST.C source
By Ronald Michaels. Test driver for RANDOM.C to test the random number
generator for correctness if program is ported to non-80x86
environment. => RANDOM.C.

CUG299.33-XOR.DAT data
By Ronald Michaels. Training pattern set to illustrate the exclusive
OR problem used to prove the limitations of the single-level
perception. => PARITY.3, PARITY.4, BP.C.
