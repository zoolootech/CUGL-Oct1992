
BURLAP.EXE - Version 2, 12/4/88, by David C. Oshel
---------------------------------------------------

BURLAP is a *fast* mailing list maintenance program.  Speed and convenience
of operation is due largely to Faircom's c-tree(TM) ISAM file management,
but I will accept a few kudos for grace notes of my own.  In general terms,
I developed BURLAP's user interface for my own convenience, since I use
this program personally to maintain a good-sized mailing list for a 
professional journal, and since I do not like programs that hinder
efficiency in a dull, repetitive task.  BURLAP is ironically named -- the
program in action is smooth as silk.


Discussion:

     (a) Distributed files

          * BURLAP.EXE  -  mailing list manager
          * BURLAP.S    -  default screen image file

     (b) Files created by BURLAP.EXE

          * BURLAP.P    -  default c-tree(tm) ISAM parameters, text file
          * BURLAP.DT   -  default c-tree(tm) ISAM data, binary file
          * BURLAP.IX   -  default c-tree(tm) ISAM index, binary file

          * BURLAP.ASC  -  Export/Import comma-delimited ASCII file
          * $.          -  Result file when writing an address label
          * BURLAP.CFG  -  Screen colors and snow flag save/restore file

     (c) Optional user file, created by using a text editor

          * BURLAP.M    -  default record selection macro

     (d) Advanced topic

          * Once created, the BURLAP.* files may all be renamed, and
            the parameter file edited to refer to the renamed .DT and
            .IX files.  Do not alter anything in a .P file except for
            the path names of the data and index files.

          * Alternate .P, .S, and .M pathnames may be specified on the
            command line, as discussed.  Order is not significant.

Usage:  C>burlap {screenfilepath}.s {parameterfilepath}.p {macrofilepath}.m

Examples: C>burlap john.s john.p john.m
          C>burlap myfile.s c:\app2\myfile.p


Optional command line arguments:

BURLAP v. 2.0 takes up to three optional command line arguments, which
are path names to up to three special files in any order.  

 .S  * The screen file must be a 4000 byte screen dump created 
       with ES.EXE, with .S suffix.  THIS FILE MUST BE PRESENT.
       If not overridden by a command line argument, BURLAP will
       expect to find BURLAP.S in the current subdirectory.

 .P  * The parameter file must end in .P, and will be created 
       if necessary and if possible.  

 .M  * The macro file must end in .M, and contains a 256-byte 
       image of BURLAP's default record selection macro.
       
The macro file is loaded, if present, on startup and when you call
the labels routine.  The default macro file may be any length, but
only the first 256 bytes and first four lines are significant.  The
macro file is created with a text editor.

If no arguments are given on the command line, BURLAP defaults to NO
default macro, and to the BURLAP.S screen and BURLAP.P parameter file.
BURLAP will create BURLAP.DT and BURLAP.IX concurrently with BURLAP.P,
in the current subdirectory, if these files are not already present.

Note that BURLAP.P gives the PATH names to .DT and .IX files; these
names can be edited to refer to any subdirectory on your hard disk.


File structure:

BURLAP data files contain 12 variable-length text fields.  The first 8 of
these fields are organized as the fields of a standard 5-line business
mailing label.  The next 4 fields are not defined in BURLAP, but may
be used for any purpose, such as to contain key words for selecting
mailing labels to be printed.

The BURLAP.S screen image names the 4 undefined fields as Salutation,
Home and Work phone numbers, and a comment field.  By editing BURLAP.S,
using ES.EXE, these four fields can be renamed and co-opted to any other
purpose.  The underlying variable-length text data type is not changed.


Miscellaneous topics:

Be sure not to run EXEPACK on BURLAP, or you will make the printer
patch area illegible to disk zap utilities.  The patch area, viewed
under Norton Utilities or PC-Tools, etc., is clearly marked with
suitable neon signs.  Look for "Printer patch area".

BURLAP is configured for the Panasonic KX-P1091 printer.  Labels are
printed on standard 3-1/2" by 1" gummed labels.  Lines longer than 30
pica characters will be condensed, first to the elite font, then to
the 17 cpi compressed-mode font.  Lines which print within 30
characters use the Panasonic's Near Letter Quality pica font.  I
*think* these are the same codes used by the Epson LQ-1500 printer.

BURLAP's mode of operation is painfully obvious and needs no
introduction beyond the on-screen helps, except as noted:

BURLAP does have one "user surly" feature:  It selects records using
Polish notation; i.e., the syntax is like Lisp, or the Brief editor's
macro language.  This is a tradeoff.  The BURLAP macro interpreter is
reasonably fast, in action, and is MUCH easier to code than a more
"natural" user interface.  Who knows?  People have used Hewlett
Packard calculators for years for the exact same reason.  Maybe it'll
catch on.  The macros ARE powerful, and properly phrased can select
records on very complex criteria, even making numerical comparisons
when these are more appropriate than the lexical.  Press F10 for
complete exegesis; there are only four rules of formation.

I call this a "toy" program, because its main purpose was to allow me
to explore FairCom's c-tree(TM).  However, I use it "on the side" to
maintain the mailing list of a professional journal, so it is hardly
a trivial exercise.  I find that BURLAP does the job faster and more
conveniently than similar applications I have developed in R:Base and
dBase, courtesy of c-tree(TM) ISAM file management.  In my opinion,
BURLAP's record selection macros are more convenient and more
expressive than what is possible in most professional "procedural"
languages.

BURLAP maintains variable-length records.  Older files which have 
become somewhat fragmented can be packed by Exporting the data to an
ASCII file, deleting the ISAM files, then Importing the ASCII file.
These options are all on the utility menu.

My apologies to whomever owns the ROLODEX(tm) trade name.  ROLODEX(tm)
is, of course, a desktop accessory whose name is protected by law,
and not a generic term for any and all similar products.  In any case,
BURLAP.EXE is only an intangible electronic wiff, not made of
plastic, and it comes free.  Can a computer program actually compete
with a tangible, hard-as-Bakelite, roll-top, durable good?

For these reasons, however, what I called ROLODEX during development
is actually called "My Mailing Labels Program", and is distributed
under the inoffensive, noncompetitive, nom de fromage BURLAP.

If you want the source code, send me $15 or $14.99 or so, to cover
the expense of materials and gratuitous aggravation on a dizzy bay,
and I'll ship it off to you -- WITHOUT, of course, including
FairCom's libraries!  If you want THOSE, and what real C programmer
doesn't, spend the modest fraction of a kilobuck it'll cost you; it's
worth it.

Do not remove the notice that FairCom wrote and owns the non-royalty
part of my program.  Just because I'm crazy enough to give away a
tool it took me six months to develop doesn't mean they are.

Please note that my non-disclosure license with Faircom for the use of
c-tree(TM) in my own programs does not preclude my giving away my own
efforts.  No Faircom source code is included, and BURLAP does not include
any portion of c-tree(TM) which would require a royalty payment (such as 
support for the Novell network).  Users of BURLAP may consider that they
have a non-exclusive license to use BURLAP and all its features, but they
should NOT conclude that Faircom's ISAM file management routines are thereby 
placed in the public domain.  I am happy to give Faircom credit for a
very nice programmer's program, and even happier to share its benefits with
you in this one small way.


