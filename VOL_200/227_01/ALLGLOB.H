/*
 * a l l g l o b a l . h
 * ---------------------
 * This header file may be used if the program decides to use only
 * the world coordinates for addressing. The function call which
 * must be done to the conversion system is done implicitly by the macros
 * generated by this header file.
 *
 * Because the actual conversion task may be done by macros too, no
 * side-effekts on parameters please!
 *
 * Note that the coordinate table for polyline must be converted manual!
 *
 * Realease history
 * ----------------
 * Jun20. 1987     First version created.
 *
 * Written by        Rainer Gerhards
 *                   Petronellastr. 6
 *                   D-5112 Baesweiler
 *                   West Germany
 *                   Phone (49) 2401 - 1601
 */
#define box(x1, y1, x2, y2, color)\
        box(convxco(x1), convyco(y1), convxco(x2), convyco(y2), color)

#define circle(x, y, r, c, a)\
        circle(convxco(x), convyco(y), r, c, a)

#define ellipsis(x, y, rx, ry, as, ae, c)\
        ellipsis(convxco(x), convyco(y), rx, ry, as, ae, c)

#define fillbox(x1, y1, x2, y2, c)\
        fillbox(convxco(x1), convyco(y1), convxco(x2), convyco(y2), c)

#define getpixel(x, y)\
        getpixel(convxco(x), convyco(y))

#define line(x1,y1,x2,y2,c) line(convxco(x1),convyco(y1),convxco(x2),convyco(y2),c)

#define paint(x, y, pc, bc)\
        paint(convxco(x), convyco(y), pc, bc)

#define putmsg(x, y, fc, bc, m, f, s)\
        putmsg(convxco(x), convyco(y), fc, bc, m, f, s)

#define setpixel(x, y, c)\
        setpixel(convxco(x), convyco(y), c)
