


     UUUUNNNNDDDDOOOOSSSS((((1111))))              XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))              UUUUNNNNDDDDOOOOSSSS((((1111))))



     NNNNAAAAMMMMEEEE
          undos,tounix,todos,tocpm,tomac,unmac,unparity - Change ASCII
          file format for target operating system

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          uuuunnnnddddoooossss [ ----ssss ] file ...
          ttttoooouuuunnnniiiixxxx [ ----ssss ] file ...
          ttttooooddddoooossss [ ----ssss ] file ...
          ttttooooccccppppmmmm [ ----ssss ] file ...
          uuuunnnnmmmmaaaacccc [ ----ssss ] file ...
          ttttoooommmmaaaacccc [ ----ssss ] file ...
          uuuunnnnppppaaaarrrriiiittttyyyy file ...

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          UUUUnnnnddddoooossss and ttttoooouuuunnnniiiixxxx convert DOS or CP/M format source files to
          Unix format by deleting carriage returns preceding linefeeds
          and eliminating characters starting with CPMEOF (^Z).

          TTTTooooddddoooossss converts Unix format source files to DOS format by
          adding a carriage return (if not already present) before
          each linefeed, and eliminates characters starting with
          CPMEOF (^Z).  TTTTooooccccppppmmmm additionally appends CPMEOF (^Z)
          characters to the resulting file to make the file length a
          multiple of the 128 byte CP/M record length.

          Any combination of uuuunnnnddddoooossss,,,, ttttooooddddoooossss,,,, or ttttooooccccppppmmmm (without flags)
          may be applied to a proper ASCII file without destroying
          information.  Lone carriage returns used to force
          overprinting are not translated to CR/LF pairs.

          UUUUnnnnmmmmaaaacccc converts files with lines terminated only by carriage
          return to Unix format.  UUUUnnnnmmmmaaaacccc should only be used to
          translate files whose lines are terminated by lone carriage
          returns.

          TTTToooommmmaaaacccc converts Unix format files to Macintosh format (lines
          terminated by carriage return only).

          The optional flag ----ssss Strips the parity bit on all characters
          and discards all resulting characters with values less than
          7.

          UUUUnnnnppppaaaarrrriiiittttyyyy merely strips the parity bit from the files.

          The access and modification times of the modified files are
          set to those of the original files.

     DDDDIIIIAAAAGGGGNNNNOOOOSSSSTTTTIIIICCCCSSSS
          Refuses to translate files in which "binary" characters
          (less than 7 or greater than 127) are seen before CPMEOF.
          Refuses to translate files with ultra long lines.  Refuses
          to translate special files.



     Page 1                                           (printed 1/9/87)






     UUUUNNNNDDDDOOOOSSSS((((1111))))              XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))              UUUUNNNNDDDDOOOOSSSS((((1111))))



     NNNNOOOOTTTTEEEESSSS
          Should be executed with the current directory in the same
          filesystem as the target files for minimum disk i/o.

     BBBBUUUUGGGGSSSS
          Does not detect short files without linefeeds.  UUUUnnnnmmmmaaaacccc and
          ttttoooommmmaaaacccc cannot handle files with CR-only overprinting.  (ASCII
          allows either LF or CR/LF to delimit lines, but not CR.)

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          lar(1), yam(1), sq(1), usq(1), rb(omen), sb(omen)












































     Page 2                                           (printed 1/9/87)






     RRRRZZZZ((((1111))))                 XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                 RRRRZZZZ((((1111))))



     NNNNAAAAMMMMEEEE
          rb, rz - XMODEM, YMODEM, ZMODEM (Batch) file receive

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          rrrrzzzz [- ++++1111aaaabbbbppppqqqqttttuuuuvvvv]
          rrrrbbbb [- ++++1111aaaabbbbqqqqttttuuuuvvvv]
          rrrrzzzz [- 1111aaaabbbbccccqqqqttttuuuuvvvv] _f_i_l_e
          ggggzzzz _f_i_l_e ...
          [----][vvvv]rrrrzzzzCCCCOOOOMMMMMMMMAAAANNNNDDDD

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          This program uses error correcting protocol to receive files
          over a serial port from a variety of programs running under
          PC-DOS, CP/M, Unix, and other operating systems.

          The first form of _r_z (Receive ZMODEM) receives files with
          the ZMODEM batch protocol.  If the sending program does not
          support ZMODEM, _r_z steps down to YMODEM protocol after 50
          seconds.  This delay can be eliminated by calling the
          program as _r_b .

          When receiving with XMODEM or YMODEM, _R_z accepts either
          standard 128 byte sectors or 1024 byte sectors (YAM ----kkkk
          option).  The user should determine when the longer block
          length actually improves throughput without causing
          problems.

          If extended file information (file length, etc.) is
          received, the file length controls the number of bytes
          written to the output dataset (YMODEM only), and the modify
          time and file mode (iff non zero) are set accordingly.

          If no extended file information is received, slashes in the
          pathname are changed to underscore, and any trailing period
          in the pathname is eliminated.  This conversion is useful
          for files received from CP/M systems.  With YMODEM, each
          file name is converted to lower case unless it contains one
          or more lower case letters.


          The second form of _r_z receives a single _f_i_l_e with XMODEM
          protocol.  The user must supply the file name to both
          sending and receiving programs.

          _G_z is a shell script which calls _s_z to command a Pro-YAM or
          compatible program to transmit the specified files.
          Pathnames used with _g_z must be escaped if they have special
          significance to the Unix shell.
          EXAMPLE: gz "-1 C:*.c D:*.h"


          The third form of _r_z is invoked as rrrrzzzzCCCCOOOOMMMMMMMMAAAANNNNDDDD (with an



     Page 1                                           (printed 1/9/87)






     RRRRZZZZ((((1111))))                 XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                 RRRRZZZZ((((1111))))



          optional leading - as generated by login(1)).  For each
          received file, rz will pipe the file to ``COMMAND filename''
          where filename is the name of the transmitted file with the
          file contents as standard input.

          Each file transfer is acknowledged when COMMAND exits with 0
          status.  A non zero exit status terminates transfers.

          A typical use for this form is _r_z_r_m_a_i_l which calls rmail(1)
          to post mail to the user specified by the transmitted file
          name.  For example, sending the file "caf" from a PC-DOS
          system to _r_z_r_m_a_i_l on a Unix system would result in the
          contents of the DOS file "caf" being mailed to user "caf".

          On some Unix systems, the login directory must contain a
          link to COMMAND as login sets SHELL=rsh which disallows
          absolute pathnames.  If invoked with a leading ``v'', _r_z
          will report progress to /tmp/rzlog.  The following entry
          works for Unix 3.0:
                     rzrmail::5:1::/bin:/usr/local/rzrmail
          If the SHELL environment variable includes _r_s_h or _r_k_s_h
          (restricted shell), rz will not accept absolute pathnames or
          references to a parent directory, will not modify an
          existing file, and removes any files received in error.

          If rrrrzzzz is invoked with stdout and stderr to different
          datasets, Verbose is set to 2, causing frame by frame
          progress reports to stderr.  This may be disabled with the qqqq
          option.


          The meanings of the available options are:

          1111    Use file descriptor 1 for ioctls and reads (Unix only).
               By default, file descriptor 0 is used.  This option
               allows _r_z to be used with the _c_u ~$ command.  If the
               calling program has spawned a separate process to read
               characters from the modem, that process must be
               disabled for _r_z to operate properly.
          aaaa    Convert files to Unix conventions by stripping carriage
               returns and all characters beginning with the first
               Control Z (CP/M end of file).
          bbbb    Binary (tell it like it is) file transfer override.
          cccc    Request 16 bit CRC.  XMODEM file transfers default to 8
               bit checksum.  YMODEM and ZMODEM normally use 16 bit
               CRC.
          DDDD    Output file data to /dev/null; for testing.
          pppp    (ZMODEM) Protect: skip file if destination file exists.
          qqqq    Quiet suppresses verbosity.
          tttt ttttiiiimmmm
               Change timeout to _t_i_m tenths of seconds.
          vvvv    Verbose causes a list of file names to be appended to



     Page 2                                           (printed 1/9/87)






     RRRRZZZZ((((1111))))                 XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                 RRRRZZZZ((((1111))))



               /tmp/rzlog .  More v's generate more output.

     EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
          (Pro-YAM command)
          <_A_L_T-_2>
          Pro-YAM Command: _s_z *._h *._c
          (This automatically invokes _r_z on the connected system.)

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          ZMODEM.DOC, YMODEM.DOC, IMP(CP/M), cu(1), Professional-YAM
          manual, sz(omen), usq(omen), undos(omen)

          Compile time options required for various operating systems
          are described in the source file.

     NNNNOOOOTTTTEEEESSSS
          The Unix "ulimit" parameter must be set high enough to
          permit large file transfers.

          The TTY input buffering on some systems may not allow long
          blocks or streaming input, especially at high baud rates.
          The Pro-YAM zzzzmmmmooooddddeeeemmmm llll numeric parameter may be set to a value
          between 64 and 1024 to limit the burst length ("zmodem
          pl100").

     BBBBUUUUGGGGSSSS
          Pathnames are restricted to 127 characters.  In XMODEM
          single file mode, the pathname given on the command line is
          still processed as described above.  The ASCII option's
          CR/LF to NL translation merely deletes CR's; undos(omen)
          performs a more intelligent translation.

     VVVVMMMMSSSS VVVVEEEERRRRSSSSIIIIOOOONNNN
          Some of the #includes with file names enclosed with angle
          brackets <> may need to have the angle brackets changed to
          "", or vice versa.

          The VMS version does not set binary mode according to the
          incoming file type.  Non binary file processing consists of
          stripping all characters beginning with CPMEOF (^Z).

          The VMS version does not set the file time.

          At high speeds, VMS sometimes loses incoming characters,
          resulting in retries and degradation of throughput.

          The mysterious VMS C Standard I/O Package and RMS may
          interact to modify file contents unexpectedly.

          The VMS version does not support invocation as rrrrzzzzCCCCOOOOMMMMMMMMAAAANNNNDDDD ....
          ZMODEM has not yet been implemented on the VMS version.




     Page 3                                           (printed 1/9/87)






     RRRRZZZZ((((1111))))                 XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                 RRRRZZZZ((((1111))))



     ZZZZMMMMOOOODDDDEEEEMMMM CCCCAAAAPPPPAAAABBBBIIIILLLLIIIITTTTIIIIEEEESSSS
          _R_z supports incoming ZMODEM binary (-b), ASCII (-a), protect
          (-p), and append (-+) requests, and ZMODEM command
          execution.

     FFFFIIIILLLLEEEESSSS
          rz.c, rbsb.c, zm.c, zmodem.h source files.

          /tmp/rzlog stores debugging output generated with -vv
          option.













































     Page 4                                           (printed 1/9/87)






     SSSSZZZZ((((1111))))                 XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                 SSSSZZZZ((((1111))))



     NNNNAAAAMMMMEEEE
          sz - XMODEM, YMODEM, ZMODEM Batch file Send

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          sz [-++++1111aaaabbbbddddeeeeffffkkkkLLLLllllNNNNnnnnppppqqqqTTTTttttuuuuvvvvyyyy] _f_i_l_e ...
          sz -X [-1111kkkkqqqqttttuuuuvvvv] _f_i_l_e
          sz [-1111qqqqttttvvvv] ----cccc CCCCOOOOMMMMMMMMAAAANNNNDDDD
          sz [-1111qqqqttttvvvv] ----iiii CCCCOOOOMMMMMMMMAAAANNNNDDDD

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          SSSSzzzz uses the ZMODEM, YMODEM or XMODEM error correcting
          protocol to send one or more files over a serial port to a
          variety of programs running under PC-DOS, CP/M, Unix, VMS,
          and other operating systems.


          The first form of sssszzzz sends one or more files with ZMODEM or
          YMODEM batch protocol.  Normally, only the file name part of
          the pathname is transmitted.  On Unix systems, additional
          information about the file is transmitted.  If the receiving
          program uses this information, the transmitted file length
          controls the exact number of bytes written to the output
          dataset, and the modify time and file mode are set
          accordingly.

          Output from another program may be piped to sssszzzz for
          transmission by specifying the ----1111 option and denoting
          standard input by "-":
                                 ps -ef | sz -
          The program output is transmitted with the filename sPID.sz
          where PID is the process ID of the sssszzzz program.  If the
          environment variable OOOONNNNAAAAMMMMEEEE is set, that is used instead.  In
          this case, the Unix command:
                           ONAME=con ps -ef|sz -ay -
          will send a "file" to the PC-DOS console display.  The ----yyyy
          option instructs the receiver to open the file for writing
          unconditionally.  The ----aaaa option causes the receiver to
          convert Unix newlines to PC-DOS carriage returns and
          linefeeds.

          Unix sssszzzz supports YYYYMMMMOOOODDDDEEEEMMMM----gggg with "cbreak" tty mode, XON/XOFF
          flow control, and the interrupt character set to CAN.
          YYYYMMMMOOOODDDDEEEEMMMM----gggg (Professional-YAM gggg option) increases throughput
          over error free channels (direct connection, X.PC, etc.) by
          not acknowledging each transmitted sector.


          The second form of sssszzzz uses the ----XXXX flag to send a single _f_i_l_e
          with XXXXMMMMOOOODDDDEEEEMMMM or XXXXMMMMOOOODDDDEEEEMMMM----1111kkkk protocol.  The user must supply the
          file name to both sending and receiving programs.

          Iff sssszzzz is invoked with $SHELL set and iff that variable



     Page 1                                           (printed 1/9/87)






     SSSSZZZZ((((1111))))                 XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                 SSSSZZZZ((((1111))))



          contains the string _r_s_h or _r_k_s_h (restricted shell), sz
          operates in restricted mode.  Restricted mode restricts
          pathnames to the current directory and PUBDIR (usually
          /usr/spool/uucppublic) and/or subdirectories thereof.


          The third form sends a single COMMAND to the receiver for
          execution.  SSSSzzzz exits with the COMMAND return value.  If
          COMMAND includes spaces or characters special to the shell,
          it must be quoted.

          The fourth form sends a single COMMAND to the receiver for
          execution.  SSSSzzzz exits as soon as the receiver has correctly
          received the command, before it is executed.


          If sz is invoked with stdout and stderr to different
          datasets, Verbose is set to 2, causing frame by frame
          progress reports to stderr.  This may be disabled with the qqqq
          option.

          The meanings of the available options are:

          ++++    Instruct the receiver to append transmitted data to an
               existing file (ZMODEM only).
          1111    Use file descriptor 1 for ioctls and reads (Unix only).
               By default, file descriptor 0 is used.  This option
               allows sssszzzz to be used with the _c_u ~$ command.  If the
               calling program has spawned a separate process to read
               characters from the modem, that process must be
               disabled for _r_z to operate properly.
          aaaa    Convert NL characters in the transmitted file to CR/LF.
               This is done by the sender for XMODEM and YMODEM, by
               the receiver for ZMODEM.
          bbbb    (ZMODEM) Binary override: transfer file without any
               translation.
          cccc CCCCOOOOMMMMMMMMAAAANNNNDDDD
               Send COMMAND to the receiver for execution, return with
               COMMAND's exit status.
          dddd    Change all instances of "." to "/" in the transmitted
               pathname.  Thus, C.omenB0000 (which is unacceptable to
               MSDOS or CP/M) is transmitted as C/omenB0000.  If the
               resultant filename has more than 8 characters in the
               stem, a "." is inserted to allow a total of eleven.
          EEEE    Escape only Ctrl-X control characters; normally XON,
               XOFF, CR-@-CR, and Ctrl-X are escaped.
          eeee    Escape all control characters; normally XON, XOFF, CR-
               @-CR, and Ctrl-X are escaped.
          ffff    Send Full pathname.  Normally directory prefixes are
               stripped from the transmitted filename.
          iiii CCCCOOOOMMMMMMMMAAAANNNNDDDD
               Send COMMAND to the receiver for execution, return



     Page 2                                           (printed 1/9/87)






     SSSSZZZZ((((1111))))                 XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                 SSSSZZZZ((((1111))))



               Immediately upon the receiving program's successful
               recption of the command.
          kkkk    (XMODEM/YMODEM) Send files using 1024 byte blocks
               rather than the default 128 byte blocks.  1024 byte
               packets speed file transfers at high bit rates.
               (ZMODEM streams the data for the best possible
               throughput.)
          LLLL NNNN  Use ZMODEM sub-packets of length N.  A larger N (32 <=
               N <= 1024) gives slightly higher throughput, a smaller
               N speeds error recovery.  The default is 128 below 300
               baud, 256 above 300 baud, or 1024 above 2400 baud.
          llll NNNN  Wait for the receiver to acknowledge correct data every
               NNNN (32 <= N <= 1024) characters.  This may be used to
               avoid network overrun when XOFF flow control is
               lacking.
          nnnn    (ZMODEM) Send each file if destination file does not
               exist.  Overwrite destination file if source file is
               newer or longer than the destination file.
          NNNN    (ZMODEM) Send each file if destination file does not
               exist.  Overwrite destination file if source file has
               different length or date.
          pppp    (ZMODEM) Protect existing destination files by skipping
               transfer if the destination file exists.
          qqqq    Quiet suppresses verbosity.
          rrrr    Resume interrupted file transfer.  If the source file
               is longer than the destination file, the transfer
               commences at the offset in the source file that equals
               the length of the destination file.
          tttt ttttiiiimmmm
               Change timeout to _t_i_m tenths of seconds.
          uuuu    Unlink the file after successful transmission.
          vvvv    Verbose causes a list of file names to be appended to
               /tmp/szlog .  More v's generate more output.
          XXXX    Send a single file with XXXXMMMMOOOODDDDEEEEMMMM or XXXXMMMMOOOODDDDEEEEMMMM----1111kkkk protocol.
          yyyy    Instruct a ZMODEM receiving program to overwrite any
               existing file with the same name.

     EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
          ZZZZMMMMOOOODDDDEEEEMMMM FFFFiiiilllleeee TTTTrrrraaaannnnssssffffeeeerrrr
          $$$$ sssszzzz ----aaaa ****....cccc
          This single command transfers all .c files in the current
          Unix directory with conversion (----aaaa) to end of line
          conventions appropriate to the receiving environment.  With
          ZMODEM AutoDownload enabled, Professional-YAM automatically
          recieves the files after performing a security challenge.

          ZZZZMMMMOOOODDDDEEEEMMMM CCCCoooommmmmmmmaaaannnndddd DDDDoooowwwwnnnnllllooooaaaadddd
           cpszall:all
              sz -c "c:;cd /yam/dist"
              sz -ya $(YD)/*.me
              sz -yqb y*.exe
              sz -c "cd /yam"



     Page 3                                           (printed 1/9/87)






     SSSSZZZZ((((1111))))                 XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                 SSSSZZZZ((((1111))))



              sz -i "!insms"
          This Makefile fragment uses sssszzzz to issue commands to
          Professional-YAM to change current disk and directory.
          Next, sssszzzz transfers the ._m_e files from the $YD directory,
          commanding the receiver to overwrite the old files and to
          convert from Unix end of line conventions to PC-DOS
          conventions.  The third line transfers some ._e_x_e files.  The
          fourth and fifth lines command Pro-YAM to change directory
          and execute a PC-DOS batch file _i_n_s_m_s . Since the batch file
          takes considerable time, the ----iiii form is used to allow sssszzzz to
          exit immediately.

          XXXXMMMMOOOODDDDEEEEMMMM FFFFiiiilllleeee TTTTrrrraaaannnnssssffffeeeerrrr
          $ sssszzzz ----XXXXaaaa ffffoooooooo....cccc
          EEEESSSSCCCC
          rrrrxxxx ffffoooooooo....cccc
          The above three commands transfer a single file from Unix to
          a PC and Crosstalk XVI 3.6, translating Unix newlines to DOS
          CR/LF.


     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          rz(omen), ZMODEM.DOC, YMODEM.DOC, Professional-YAM manual,
          IMP(CP/M), cu(1), sq(omen), todos(omen), tocpm(omen),
          tomac(omen), yam(omen)

          Compile time options required for various operating systems
          are described in the source file.

     VVVVMMMMSSSS VVVVEEEERRRRSSSSIIIIOOOONNNN
          The VMS version does not transmit the file date.  The VMS
          version calculates the file length by reading the file and
          counting the bytes.

          The VMS version does not support YMODEM-g or ZMODEM.

          When VMS is lightly loaded, the response time may be too
          quick for MODEM7 unless the MODEM7 qqqq modifier is used.

          The VMS C standard i/o package and RMS sometimes interact to
          modify file contents unexpectedly.

     FFFFIIIILLLLEEEESSSS
          sz.c, rbsb.c, zm.c, zmodem.h source files

          /tmp/szlog stores debugging output (sz -vv)

     TTTTEEEESSSSTTTTIIIINNNNGGGG FFFFEEEEAAAATTTTUUUURRRREEEE
          The command "sz -T file" exercises the AAAAttttttttnnnn sequence error
          recovery by commanding errors with unterminated packets.
          The receiving program should complain five times about
          binary data packets being too long.  Each time sssszzzz is



     Page 4                                           (printed 1/9/87)






     SSSSZZZZ((((1111))))                 XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                 SSSSZZZZ((((1111))))



          interrupted, it should send a ZDATA header followed by
          another defective packet.  If the receiver does not detect
          five long data packets, the AAAAttttttttnnnn sequence is not
          interrupting the sender, and the MMMMyyyyaaaattttttttnnnn string in sssszzzz....cccc must
          be modified.

          After 5 packets, sssszzzz stops the "transfer" and prints the
          total number of characters "sent" (Tcount).  The difference
          between Tcount and 5120 represents the number of characters
          stored in various buffers when the Attn sequence is
          generated.

     BBBBUUUUGGGGSSSS
          XMODEM transfers add up to 127 garbage bytes per file (1023
          bytes with XMODEM-k).  Most YMODEM programs use the file
          length transmitted at the beginning of the transfer to prune
          the file to the correct length; this may cause problems with
          source files that grow during the course of the transfer.
          This problem does not pertain to ZMODEM transfers, which
          preserve the exact file length unconditionally.

          Most ZMODEM options are merely passed to the receiving
          program; some do not implement all these options.

          Circular buffering and a ZMODEM sliding window should be
          used when input is from pipes instead of acknowledging
          frames each 1024 bytes.  If no files can be opened, sssszzzz sends
          a ZMODEM command to echo a suitable complaint; perhaps it
          should check for the presence of at least one accessible
          file before getting hot and bothered.  The test mode leaves
          a zero length file on the receiving system.

          Some high speed modems have a firmware bug that drops
          characters when the direction of high speed transmissson is
          reversed.  The environment variable ZNULLS may be used to
          specify the number of nulls to send before a ZDATA frame.
          Values of 101 for a 4.77 mHz PC and 124 for an AT are
          typical.

















     Page 5                                           (printed 1/9/87)






     DDDDSSSSZZZZ((((1111))))                XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                DDDDSSSSZZZZ((((1111))))



     NNNNAAAAMMMMEEEE
          dsz - YMODEM, ZMODEM file transfer subprogram

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ddddsssszzzz [ppppoooorrrrtttt NNNN] [ssssppppeeeeeeeedddd SSSS] [dddd] [rrrreeeessssttttrrrriiiicccctttt] _c_o_m_m_a_n_d

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          Dsz uses the YMODEM or ZMODEM error correcting batch
          protocol to transfer files over a serial port with a variety
          of programs.  Dsz is designed to be called from a
          communications program or bulletin board to perform file
          transfers.

          Dsz uses its own modem I/O.  The original interrupt vector
          and UART interrupt configuration are restored on normal
          exit.  Dsz expects its standard output to point to the
          console or a logging file, not a modem port.

          The available commands are:

          ppppoooorrrrtttt NNNN
               select port N (n = 1,2,3 or 4) Default is port 1 (COM1)
               or read from the DDDDSSSSZZZZPPPPOOOORRRRTTTT dos environment variable.
          ssssppppeeeeeeeedddd SSSS
               Set specified speed, default is current speed.
          dddd    Disables carrier dropout monitoring, for modems that do
               not properly drive the "Data Carrier Detect" input on
               the PC.
          LLLLAAAARRRRGGGG Convert ARG to lowercase, then parse arg.
          rrrreeeessssttttrrrriiiicccctttt
               Restrict pathnames to current disk and directory tree.
          sssszzzz   [-Vabnpr+y] [PREFIX=p | ONAME=n] afn ...
          ssssbbbb   [-Vk] [PREFIX=p | ONAME=n] afn ...
          rrrrzzzz   [-Vabnpr+y]
          rrrrzzzz   [-Vabnpr+y] file1 file2 ...  (filename override)
          rrrrbbbb   [-Vab+y]
          rrrrbbbb   [-Vab+y] file1 file2 ...  (filename override)
          ----VVVV   Dsiplay debugging information.  More V's give more
               detailed information.

     EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
          dsz sz -r b:zcom*.arc c:foo.bar

          dsz port 2 speed 19200 restrict rz

          dsz rz -y newprog.arc

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          Consult the Professional-YAM manual or ZCOMMDOC.ARC chapter
          "Options for File Transfers" for option meanings.

     NNNNOOOOTTTTEEEESSSS



     PPPPaaaaggggeeee 1111                                           ((((pppprrrriiiinnnntttteeeedddd 1111////9999////88887777))))






     DDDDSSSSZZZZ((((1111))))                XXXXEEEENNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((OOOOMMMMEEEENNNN))))                DDDDSSSSZZZZ((((1111))))



          Dsz sets the UART shift register to 8 bits no parity; the
          original parity setting is lost.

          Dsz may be freely used and copied, but not modified or sold
          without the written permission of Omen Technology Inc.


















































     Page 2                                           (printed 1/9/87)



