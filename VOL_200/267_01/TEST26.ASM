		TITL	"2650 Cross-Assembler Test Source File"
		EJE	60
;
; The 2650 opcodes in opcode numerical order:
;
BYTE	EQU		012H
MASK	EQU		034H
PORT	EQU		056H
ADDRESS	EQU		01234H

R0	EQU		0
R1	EQU		1
R2	EQU		2
R3	EQU		3

ZERO	EQU		00B
PLUS	EQU		01B
MINUS	EQU		10B
ANY	EQU		11B

; 000H - 00FH.

	LODZ		R0		; This opcode will change to 060H.
	LODZ		R1
	LODZ		R2
	LODZ		R3
	LODI,R0		BYTE
	LODI,R1		BYTE
	LODI,R2		BYTE
	LODI,R3		BYTE
	LODR,R0		$
	LODR,R1		*$
	LODR,R2		($)
	LODR,R3		*($)
	LODA,R0		ADDRESS
	LODA,R1		*ADDRESS
	LODA,R2		(ADDRESS)
	LODA,R3		*(ADDRESS)

; 010H - 01FH.

					; 010H is undefined.
					; 011H is undefined.
	SPSU
	SPSL
	RETC,ZERO
	RETC,PLUS
	RETC,MINUS
	RETC,ANY
	BCTR,ZERO	$
	BCTR,PLUS	*$
	BCTR,MINUS	($)
	BCTR,ANY	*($)
	BCTA,ZERO	ADDRESS
	BCTA,PLUS	*ADDRESS
	BCTA,MINUS	(ADDRESS)
	BCTA,ANY	*(ADDRESS)

; 020H - 02FH.

	EORZ		R0
	EORZ		R1
	EORZ		R2
	EORZ		R3
	EORI,R0		BYTE
	EORI,R1		BYTE
	EORI,R2		BYTE
	EORI,R3		BYTE
	EORR,R0		$
	EORR,R1		*$
	EORR,R2		($)
	EORR,R3		*($)
	EORA,R0		ADDRESS,R1
	EORA,R1		*ADDRESS
	EORA,R2		(ADDRESS)
	EORA,R3		*(ADDRESS)

; 030H - 03FH.

	REDC,R0
	REDC,R1
	REDC,R2
	REDC,R3
	RETE,ZERO
	RETE,PLUS
	RETE,MINUS
	RETE,ANY
	BSTR,ZERO	$
	BSTR,PLUS	*$
	BSTR,MINUS	($)
	BSTR,ANY	*($)
	BSTA,ZERO	ADDRESS
	BSTA,PLUS	*ADDRESS
	BSTA,MINUS	(ADDRESS)
	BSTA,ANY	*(ADDRESS)

; 040H - 04FH.

	HALT
	ANDZ		R1
	ANDZ		R2
	ANDZ		R3
	ANDI,R0		BYTE
	ANDI,R1		BYTE
	ANDI,R2		BYTE
	ANDI,R3		BYTE
	ANDR,R0		$
	ANDR,R1		*$
	ANDR,R2		($)
	ANDR,R3		*($)
	ANDA,R0		*ADDRESS,R1
	ANDA,R1		*ADDRESS
	ANDA,R2		(ADDRESS)
	ANDA,R3		*(ADDRESS)

; 050H - 05FH.

	RRR,R0
	RRR,R1
	RRR,R2
	RRR,R3
	REDE,R0		PORT
	REDE,R1		PORT
	REDE,R2		PORT
	REDE,R3		PORT
	BRNR,R0		$
	BRNR,R1		*$
	BRNR,R2		($)
	BRNR,R3		*($)
	BRNA,R0		ADDRESS
	BRNA,R1		*ADDRESS
	BRNA,R2		(ADDRESS)
	BRNA,R3		*(ADDRESS)

; 060H - 06FH.

	IORZ		R0
	IORZ		R1
	IORZ		R2
	IORZ		R3
	IORI,R0		BYTE
	IORI,R1		BYTE
	IORI,R2		BYTE
	IORI,R3		BYTE
	IORR,R0		$
	IORR,R1		*$
	IORR,R2		($)
	IORR,R3		*($)
	IORA,R0		ADDRESS,R1,+
	IORA,R1		*ADDRESS
	IORA,R2		(ADDRESS)
	IORA,R3		*(ADDRESS)

; 070H - 07FH.

	REDD,R0
	REDD,R1
	REDD,R2
	REDD,R3
	CPSU		MASK
	CPSL		MASK
	PPSU		MASK
	PPSL		MASK
	BSNR,R0		$
	BSNR,R1		*$
	BSNR,R2		($)
	BSNR,R3		*($)
	BSNA,R0		ADDRESS
	BSNA,R1		*ADDRESS
	BSNA,R2		(ADDRESS)
	BSNA,R3		*(ADDRESS)

; 080H - 08FH.

	ADDZ		R0
	ADDZ		R1
	ADDZ		R2
	ADDZ		R3
	ADDI,R0		BYTE
	ADDI,R1		BYTE
	ADDI,R2		BYTE
	ADDI,R3		BYTE
	ADDR,R0		$
	ADDR,R1		*$
	ADDR,R2		($)
	ADDR,R3		*($)
	ADDA,R0		*ADDRESS,R1,+
	ADDA,R1		*ADDRESS
	ADDA,R2		(ADDRESS)
	ADDA,R3		*(ADDRESS)

; 090H - 09FH.

					; 090H is undefined.
					; 091H is undefined.
	LPSU
	LPSL
	DAR,R0
	DAR,R1
	DAR,R2
	DAR,R3
	BCFR,ZERO	$
	BCFR,PLUS	*$
	BCFR,MINUS	($)
	ZBRR		0004H
	BCFA,ZERO	ADDRESS
	BCFA,PLUS	*ADDRESS
	BCFA,MINUS	(ADDRESS)
	BXA		ADDRESS,R3

; 0A0H - 0AFH.

	SUBZ		R0
	SUBZ		R1
	SUBZ		R2
	SUBZ		R3
	SUBI,R0		BYTE
	SUBI,R1		BYTE
	SUBI,R2		BYTE
	SUBI,R3		BYTE
	SUBR,R0		$
	SUBR,R1		*$
	SUBR,R2		($)
	SUBR,R3		*($)
	SUBA,R0		ADDRESS,R1,-
	SUBA,R1		*ADDRESS
	SUBA,R2		(ADDRESS)
	SUBA,R3		*(ADDRESS)

; 0B0H - 0BFH.

	WRTC,R0
	WRTC,R1
	WRTC,R2
	WRTC,R3
	TPSU		MASK
	TPSL		MASK
					; 0B6H is undefined.
					; 0B7H is undefined.
	BSFR,ZERO	$
	BSFR,PLUS	*$
	BSFR,MINUS	($)
	ZBSR		*1FFCH
	BSFA,ZERO	ADDRESS
	BSFA,PLUS	*ADDRESS
	BSFA,MINUS	(ADDRESS)
	BSXA		*ADDRESS,R3

; 0C0H - 0CFH.

	NOP
	STRZ		R1
	STRZ		R2
	STRZ		R3
					; 0C4H is undefined.
					; 0C5H is undefined.
					; 0C6H is undefined.
					; 0C7H is undefined.
	STRR,R0		$
	STRR,R1		*$
	STRR,R2		($)
	STRR,R3		*($)
	STRA,R0		*ADDRESS,R1,-
	STRA,R1		*ADDRESS
	STRA,R2		(ADDRESS)
	STRA,R3		*(ADDRESS)

; 0D0H - 0DFH.

	RRL,R0
	RRL,R1
	RRL,R2
	RRL,R3
	WRTE,R0		PORT
	WRTE,R1		PORT
	WRTE,R2		PORT
	WRTE,R3		PORT
	BIRR,R0		$
	BIRR,R1		*$
	BIRR,R2		($)
	BIRR,R3		*($)
	BIRA,R0		ADDRESS
	BIRA,R1		*ADDRESS
	BIRA,R2		(ADDRESS)
	BIRA,R3		*(ADDRESS)

; 0E0H - 0EFH.

	COMZ		R0
	COMZ		R1
	COMZ		R2
	COMZ		R3
	COMI,R0		BYTE
	COMI,R1		BYTE
	COMI,R2		BYTE
	COMI,R3		BYTE
	COMR,R0		$
	COMR,R1		*$
	COMR,R2		($)
	COMR,R3		*($)
	COMA,R0		ADDRESS
	COMA,R1		*ADDRESS
	COMA,R2		(ADDRESS)
	COMA,R3		*(ADDRESS)

; 0F0H - 0FFH.

	WRTD,R0
	WRTD,R1
	WRTD,R2
	WRTD,R3
	TMI,R0		MASK
	TMI,R1		MASK
	TMI,R2		MASK
	TMI,R3		MASK
	BDRR,R0		$
	BDRR,R1		*$
	BDRR,R2		($)
	BDRR,R3		*($)
	BDRA,R0		ADDRESS
	BDRA,R1		*ADDRESS
	BDRA,R2		(ADDRESS)
	BDRA,R3		*(ADDRESS)

;
; Let's test the rest of the pseudo-ops while we're at it:
;
VARIABLE	SET	-1

		IF	VARIABLE
		DATA	-1, , +1
		ELSE
		DATA	+1, , -1
		ENDI

VARIABLE	SET	VARIABLE EQ 0

		IF	VARIABLE
		ACON	, 7FFFH
		ELSE
		ACON	7FFFH, 0
		ENDI

		RES	10H

		DATA	"EXPLOSION", 0DH, 0AH, 0

		END

	WRTE,R1		PORT
	WRTE,R2		POR