Gentlemen,

Please find enclosed the following articles with programs
for your magazine.

.bf
A General Purpose Symbol Table Function Library

This describes symbol table functions that I use in many of my
programs.  I am aware that Allen Holub published a similar
article in this February Dr. Dobbs Journel.  I have included it
here because the debugger program uses these routines.  If you
are interested in the debugger article but not this one we
might alter the debugger program to use Holub's almost identical
functions.

.bf
Add a Source Debugger to Your C Compiler

This describes a source level debugger which can be used with many
compilers that don't make special provisions for source level
debugging.  It is useful tool in itself and illustrates how a
debugger functions.  It uses the symbol table functions from article 1.

.bf
Add an Execution Time Profiler to you System

This describes the implementation of an execution time profiler
on a Z-80 type machine.  It is written almost entirely in C.
Although it is pretty machine dependent it illustrates how
this type of tool can be implemented on other machines.  It is
also an extremely useful tool in its own right.

.bf
Help for Those Really Long Dumb Menu Programs

This describes a table driven approach to generating programs that
use menu type dialogues.  This reduces programming time for these
types of jobs.  A laser printer setup program is used
as an example.


I have included a diskette with all the files used in creating
these articles.  The diskette is in Osborne DSDD format.
The text was formated using the fmt.com program from the small
tools package:

.nf
	fmt <a:debug.fmt [-t] [>lst:]
	fmt <a:symtbl.fmt [-t] [>lst:]
	fmt <a:profile.fmt [-t] [>lst:]
	fmt <a:cmenu.fmt [-t] [>lst:]
.fi

Use >lst: to send to the printer and use -t to display on the
terminal.

Sincerely,



Robert Ramey


.nf
	fmt <a:debug.fmt [-t] [>lst:]
	fmt <a:symtbl.fmt [-t] [>lst:]
	fmt <a:profile.fmt [-t] [>lst:]
	fm