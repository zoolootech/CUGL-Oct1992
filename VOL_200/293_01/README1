3-D Medical Imaging

The original programs for 3-D Medical Imaging by Vannier and Geist
were modified to improve the user interface and documentation by
Ake Wallin during his visit to St. Louis in Dr. Vannier's laboratory
during April 1988. 

These extensions to the original source programs supplement the
original programs, and both sets of c-language sources may be
used together.  Several utilities have been added to accomodate
display devices, such as the AT&T Targa-24 frame buffer.

The modified source programs are distributed in the public
domain from:

	Michael W. Vannier
	Mallinckrodt Institute of Radiology
	Washington University School of Medicine
	510 South Kingshighway Blvd.
	St. Louis, Mo. 63110  USA
  
The programs are available in Europe from Ake Wallin at
   
(Institute for Biomechanics, University of Bern, Murtenstrasse 35, 
CH-3012 Bern, Switzerland)


In order to use the paint program (AT&T Targa-TIPS) to modify CT-images two
programs were written:

CTTGA.C
-------

/*
 * Converts a 256*256 ct file into a 256*256 TARGA-TIPS B/W file.
 *
 * Usage: cttga infile outfile [-l] [-u] [-h] [-s]
 *        -l    : lower threshold (default =  0)
 *        -u    : upper threshold (default =  255)
 *        -h    : number of header blocks (512 bytes) (default = 1)
 *        -s    : output statistics
 */

TGACT.C
-------

/*
 * Converts a TARGA-TIPS RGB file into a 256*256 ct file
 * only the upper left part of the RGB file is used
 * the RGB file should be saved from TIPS using the window option
 *
 * Usage: tgact infile outfile headerfile [-l] [-u] [-h]
 *        -l    : lower output density (default = 0)
 *        -u    : upper output density (default = 255)
 *        -h    : number of header blocks (512 bytes) (default = 1)
 */


The programs by Danny Geist and Mike Vannier to produce 3-D images from CT slices
using an IBM-PC were modified and extended.

GRAD1.C
------

   -Command line input
   -Threshold of gradient for differencing
   -Views to choose: BO (bottom), TO (top), RL (right lateral),
    LL (left lateral), RE (rear), FR (front), NO (none, just leave distance)
   -Clipping planes: RL (right lateral), LL (lateral left), RE (rear),
    FR (front)
   -Scan of data in "correct" order, assuming:
    object:
    low z - feet, high z - head
    low x - right, high x - left
    low y - back, high y - front
    image:
    low x - left, high x - right
    low y - down, high y - up
		    front
    view BO : right      left
		    back
		    front
    view TO : left       right
		    back
		    head
    view RL : back      front
		    feet
		    head
    view LL : front     back
		    feet
		    head
    view RE : left      right
		    feet
		    head
    view FR : right     left
		    feet

Usage: grad1 [filename] [-f] [-l] [-z] [-t] [-d] [-n(dig)] [-g]
			  [-h] [-v(bo|to|rl|ll|re|fr)] [-c(rl|ll|re|fr)]
			  [-i(x(r|l)|y(u|d))] [-o(x(r|l)|y(f|b)|z(h|f))]


ANG1.C
-----

 -Command line input
 -Threshold on gradient shading, background not used for gradient.
 -Combination of gradient and distance is possible.
 -Distance or gradient image turned off
 -Straight views (0, 90, 180 etc) possible. (0 = ydis2.dat, 90 = xdis1.dat
  180 = ydis1.dat, 270 = xdis2.dat)
 -Incremental views possible
 -Views always head up

Usage: ang1 [-a] [-r] [-g] [-n(dig)] [-h] [-d]
   -a  : angle (no default)
   -r  : number of output images (default: 1)
   -g  : threshold for gradient (default: 3.0)
   -n  : not making distance (d) or gradient (g) image
   -h  : filling holes
   -d  : weight for distance combined with the gradient


A utility programm to convert the images output from GRAD and ANG
to TARGA TIPS format was created:

PICTGA.C
--------

/*
 * Converts a 256*n B/W picture file into a 256*256 TARGA-TIPS B/W or RGB file.
 *
 * Usage: pictga infile outfile [-c]
 *        -c   : color image RGB (blue background)
 */


A utility program to inspect a binary file was created:

DUMP1.C
------

/*
 * Dumps a number of bytes from a specified offset from a file.
 * The bytes are output in hex and ascii.
 *
 * Usage: dump1 file [-o] [-n] [-d | -h] [-w | -b]
 *        -o    : offset (default 0)
 *        -n    : number (default 256)
 *        -d -h : decimal/hexadecimal (default h)
 *        -w -b : word/byte (default b)
 *
 */



Three test programs were produced for demonstration purposes.
Please refer to the source listings for more information...

T1.C
T2.C
T3.C




  
  
