HEADERS.ECO      VERS:- 01.00  DATE:- 09/26/86  TIME:- 09:39:00 PM

Short descriptions of C programs and related files.

Written for ECO C compiler, version 3.40, by

John A. Rupley
30 Calle Belleza
Tucson, AZ  85716
(602) 325-4533

/***************************************************************************/



LDHFITR.C   
LDHFITR.COM 

VERSION OF XXXXFITn, for:

nonlinear least squares fit by simplex minimizaton (Nelder-Mead algorithm).

analysis of lactate dehydrogenase initial rate kinetic data:
	two substrate -- two product mechanism,
	with inhibition by first product,
	and with reactant and product abortive complexes;

see LDHFITR documentation for description of rate law.

compile with:
	simpmain, simplib1, simplib0
	floating point functions

the precision of the floating point functions must be high, ie 14 or more
	decimal digits; eight digit precision is not enough for the 
	matrix operations.

contents of the xxxxfitn module  =  
declarations and routines for simplex fitting special to function to be fit:

	function for calculation of dependent variable and
		weighted sum of residuals squared		= func()

	print of <data> records					= fdatprint()
								= fpointprint()

	other special displays					= fspecial()

	all external declarations, except for <data>, which is 
		defined as dummy storage in SIMPLIB1 
		or its modification





LDHFITR.DAT 

test data file = input to LDHFITR.COM.
	Usage:  ldhfitr  ldhfitr.dat  results_file





LDHFITR.DOC 

descriptioî oæ computeò reductioî oæ datá froí kinetiã 
	measurementó foò thå enzymå lactatå dehydrogenaså 
information on how to run program LDHFIT




LINEFITR.C   
LINEFITR.COM 

VERSION OF XXXXFITn, for:

nonlinear least squares fit by simplex minimizaton (Nelder-Mead algorithm).

written to test operation of fitting program:
	by fit of the linear function:     y  =  a  +  b * x
	to data that can be reduced by hand.





LINEFITR.DAT 

test data file = input to LINEFITR.COM.
	Usage:  linefitr  linefitr.dat  results_file





LOGONR.C   

logon routine, for ZCPR2 system:
	load SYSIO.IO at iobuf;
	load NAMES.DIR at ndbase;
	display ruler line and prompts for operator logon information;
	fill time and date arrays from Hayes clock;
	display time, date, message, etc on crt;
	timestmp logon information given by the operator;
        append it to the LOG file.





PERCOLXR.C   
PERCOLXR.COM 

Simulation of percolation on a two-dimensional square lattice, 
Option to block one or more regions of the lattice to prevent sites 
being filled (approximately circular blocked region = 1,3,5,3,1).
The algorithm is not efficient (300 seconds/1000 site 2-d sheet).

A percolative process is characterized by a percolation transition, a phase
change at which long-range connectivity (e.g., a gel phase; conduction 
across the sample; etc) suddenly appears.  Connectivity is defined by the
extent of a cluster of filled sites adjacent (ie, connected) in the lattice.
Long-range connectivity is equivalent to a cluster of infinite extent.

The percolation model applies to stochastic processes taking place 
in a spatially disordered system.  
Examples: 
	gelation; 
	flow in a porous medium; 
	dilute magnets; 
	conductivity of conductor-insulator composite materials.

For a discussion of percolation, see R. Zallen, "The Physics of Amorphous
Solids", John Wiley, New York, 1983.

This program finds the fractional occupancy of the model lattice at the 
percolation transition.  Lattice sites are filled randomly.  When each filled
site is added to the lattice, connectivity is tested along one dimension
of the lattice (ie, between one pair of arbitrarily chosen sides of the 
lattice).  The point of the percolation transition is the point at which
connectivity between sides first appears.

Because of the stochastic character of percolation, a simulation consists
of the averaging of NRPT determinations of the percolation transition.

The program is set for looping over the simulation, with change in
control parameters at each loop.





SIMPFITR.DAT 

template file for input to XXXXFITn simplex fitting programs.

comments describe functions of control parameters.





SIMPFITR.DOC 

documentation for C routines for simplex fitting and
	quadratic approximation of least squares surface.





SIMPLEXR.DOC 

notes on the simplex method of function minimization, by use of 
	the Nelder-Mead algorithm.





SIMPLIB0.C   

functions for simplex fitting:
	simplex fitting routine			= simpfit()
	quadratic fit for standard deviations	= simpdev()
	supporting functions





SIMPLIB1.C   

routines for input of data and control values for simplex minimization:
	definition of the aggregate <data>, with a 
		dummy structure declaration
	usage message displayed on command line error 		= use_mess()
	opening of files for input and optional output		= file()
	input of variables and data				= read_data()

the routines are (largely) independent of the function and data to be fit
	(coded in XXXXFITn), and they (generally) need not be altered when 
	XXXXFITn is modified.





SIMPMAIN.C   

main program controlling input, output & simplex fitting 	= main()





SIMPOUTR.DOC 

descriptioî oæ outpuô froí thå simpleø fittinç programó 





SUMGRADR.C   
SUMGRADR.COM 

sum each student's grades, with weighting according to point value of report, 
	exam, etc.  
drop any grade entered as negative.  
calculate average = sum grades / sum possible points.
output sorted by name, and by average.





SUMGRADR.DAT 

test data file = input to SUMGRADR.COM.
	Usage:  sumgradr  sumgradr.dat  results_file





SYS1CALR.MAC 

call to address given as the parameter, such as a system address
outside the C program.

Usage:			.
			.
		(C program code)
			.
		sys1call(address to call)	eg, address = TINIT for
			.					SYSIO load
		(more C program code)
			.

