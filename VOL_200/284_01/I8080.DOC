NAME
	I8080.EXE	8080 Simulator

SYNOPSIS
	i8080 [-f] [-m] [-b boot] [-t tr] [-A file ... -H file]

DESCRIPTION	
	Rules when specifying options:

	. You can specify options in any order.
	. Don't use the same option twice.
	. The program is case-sensitive.
	. Space is required between an option character and its parameter.

	Description of options:

	f - When "POP PSW" is executed, the program checks inconsistency
	    between flags. Default is no checking. When the program detects
	    the inconsistency, it warns the user.

	m - When the program is terminated abnormally, the contents of the 
	    memory is dumped. Without this option, no memory is dumped.
	    If I8080 encounters an undefined instruction, the program 
	    will be terminated.
	    With this option, memory is dumped into a file, "CORE.HEX"
	    which will be examined later.

	b - With this option, the boot file name will be "boot". The default
	    is "CPM20.HEX".  When I8080 starts running, it reads the boot file 
	    in memory and starts executing a program from the address 0.
	    In normal case, I8080 performs IPL of CP/M, but you can specify
	    a stand alone program to execute.

	t - This options sets the trace-level. Default trace level is 0.
	    Currently, the available trace level is from 0 to 7.

	    level                |  0  1  2  3  4  5  6  7 
	    ----------------------------------------------------------------
	    Display Instruction  |  N  Y  N  Y  N  Y  N  Y
	    Display Registers    |  N  N  Y  Y  N  N  Y  Y
	    Dispaly #calls       |  N  N  N  N  Y  Y  Y  Y

	    When "Display Instruction" is set "Y", I8080 displays
	    an excecuted instruction at every step. A displayed instruction
	    is disassembled.

	    When "Display Register" is set "Y", I8080 displays the contents
	    of registers before an instruction is excecuted.

	    When "Display #calls" is set "Y", I8080 counts the number of times
	    each instruction is called. At the termination of the program,
	    it displays the profile of the program.

	A - This specifies a virtual disk file in the virtual disk drive A.
	    The disk drive can be B,C,D,E,F,G, or H. 
	    The default filename for the drive A is "CPMSYS.DSK". 
	    There is no default filename for the drive B-H.
	    When you specify "." for filename, a physical drive is assigned.

	When you enter an invalid option, it is simply ignored.


	I8080 executes CP/M-80. Without -b option, I8080 reads and executes
	"CPMnn.HEX" (nn is two digit number. Default is 20.). This file
	contains CCP and BDOS from the standard CP/M, BIOS for I8080, and 
	a short IPL code.

	After I8080 executes CP/M, it works like a real CP/M.
	In this system, 8 disk drives can be accessed. These disk drives 
	differ from physical disk drives. To distinguish them, we
	call them virtual disk drives.

	In the virtual disk drive, a virtual disk can be mounted.
	A virtual disk is a file that is created under the host operating
	system and includes the contents of a real CP/M floppy disk.
	Users can treat this file as if it is a floppy disk.

	You must use a program "newdsk" before executing I8080.

	Under MSDOS, CP/M devices correspond to MSDOS devices as shown below.
	No I/O byte is supported.

	CON: standard input and output (File-handle 0 and 1.)
	RDR: auxiliary standard input (Input from file-handle 3.)
	PUN: auxiliary standard ouput (Output to file-handle 3.)
	LST: standard printer ouput (File-handle 4.)

	I8080 handles only ASCII characters (No Japanese characters).

	To terminate CP/M, HLT instruction should be executed.
	Alternatively, CP/M can be terminated by executing HALT.COM
	in a virtual disk, "CPMSYS.DSK". 

Description of stand-alone programs:

	We call a 8080 program a stand-alone program when the program
	is executed with the -b option of I8080, instead of using CP/M.

	Stand-alone programs directly use BIOS of I8080 so 
	in some cases the description above doesn't make any sense.
	Please refer to the documentation of each stand-alone program.

	You can create a stand-alone program using an 8080 assembler.
	Note that you need to use BIOS in I8080 when the program
	utilizes I/O routines. For details, please refer to "how to
	create a stand-alone program".

EXAMPLES

	This example executes CP/M. "CPMSYS.DSK" is mounted as a virtual
	disk drive.

	i8080


	Although this example executes CP/M, the specified virtual disks are
	mounted to the virtual dis« dri~e A and B. Flags are checked
	and a warning message will be es is
	specified in the command line, all filenames are concatenated in the 
	order.
	A pathname can be specified with this option.

u	This option specifies a CP/M user number. The parameter should be
	from 0 to 31, decimal number. The default user number is 0.
	
	In a virtual disk, it is assumed that all CP/M files are in the
	user number specified with this option. Thus, when reading a file,
	displaying a filename, or erasing a file, only files that are in the 
	specified user number will be processed. When writing a file, the file
	is created in the specified user number.

d	This option specifies a virtual disk. Although the default has
	an appropriate name, please try to specify on every time. Any MSDOS 
	pathname can be specified for the parameter. The virtual disk must exist
	beforehand even if writing a file to the disk.

Filenames

	A CP/M filename consists of a
	primary name (The length is less than or equal to 8 characters.),
	a period, and secondary name (The length is less than or8080 are
	displayed in a strange format.

	The profile of a program uses a long integer to count numbers.
	The overflow will occur if I8080 is executed too long.

	Only one physical disk drive is available.

	
	


