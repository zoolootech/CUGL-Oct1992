HEADERS.BDS      VERS:- 01.00  DATE:- 09/26/86  TIME:- 09:36:37 PM

Short descriptions of C programs and related files.

Written for BDS C compiler, version 1.50a, by

John A. Rupley
30 Calle Belleza
Tucson, AZ  85716
(602) 325-4533

/***************************************************************************/


BATCHR.C   
BATCHR.COM 

Submit utility BATCH from Van Nuys Toolkit, by Eugene H. Mallory.

Minor modifications: 
	converted to standard C tokens;
	extended menu to include all BAT, ZEX, AND SUB files in all 
		user areas of current drive and of drive A:, 
		if no valid file given on command line;
	error exit if no files found.





CBPREPR.C   
CBPREPR.COM 

Filter to prepare C code for indentation by control level:
	add and delete white space to produce consistent text;
	introduce newlines to produce one statment per line;
	left justify all lines.

DIO redirection.

To indent according to control level, output from CBPREP
must be filtered by CB, the formatting program written 
by W.C. Colley and R. Hollinbeck.

CBPREP uses the routines getch() and comment() of CB.





CBPREPR.BAT 

Submit file for filtering C code through cbprepr then cbr.

Usage:  batchr  cbprepr  input_file  output_file





CBPRETST.C   

Some meaningless code, for use in testing CBPREPR and CBR:

Usage:  cbprepr  <cbpretst.c  +|  cbr  +output_file.c
		or
	batchr  cbprepr[.bat]  cbpretst  output_file





CBR.C   
CBR.COM 

Filter to format C code, from CUG distribution disk.
Indents according to control level.

Minor modifications:
	adapted for BDS C v1.50a;
	adapted for use as filter under DIO;
	Corrected: 
		exit test; 
		read of strings of *'s.

Best to filter input file first through CBPREP, to produce 
consistent spacing of text and one statment per line.

CR.C    
CR.COM 

Opens fname.c, extracts lines with key "%", constructs and runs submit file.
Simplifies compilation and linking in C program development.

From Van Nuys Toolkit, by Eugene H. Mallory.
No changes except converted to standard C tokens.


DIOR.C   
DIO.CRL 
DIO.H   

IO redirection library and header from BDS C and Van Nuys Toolkit, 
by Eugene H. Mallory.

Minor modification: 
	avoid CR-CR pair before LF by patch in putchar() and by adding
		declaration of _putc_last in DIO.H;

STDLIB3R.C   
DEFF.CRL 
DEFF2.CRL 

STDLIB3R has file-handling functions that allow use of du: in addition 
to u/d: drive/user prefix.
The functions have been added to DEFF.CRL
They replace functions of same name in DEFF2.CRL, which must be 
patched (DEFF2.CRL: open -> xpen, etc).

Functions:
	open(), creat(), unlink(), rename(), execv(), exec(), du_ud().

In DEFF2.CRL:
	patched header for routines (open...exec -> xpen...xxec);
      	patched body of routines open and unlink;
	edfile or similar program used to make changes.

Execl is not patched and does not take du: form.

An alternate route, consuming less memory:
	revise "setfcu" routine of ccc.asm,
	then recompile: 
		   ccc.asm....c.ccc
		   bds.lib
		   deff2*.csm...deff2.crl

UNVANR.C   
UNVANR.COM 

Filter to convert Van Nuys Toolkit format back to standard C tokens.

DIO redirection.

Adapted from Van Nuys Toolkit program CASE, by Eugene H. Mallory.





WILDEXPR.C   
WILDEXP.CRL 

Modification of Van Nuys Toolkit - BDS C distribution version of WILDEXP:
	use of <du:>, by conversion to <u/d:> form;
	expansion of <d?:> and <?/d:>;
	all output given uu/d: prefix, even files in current drive/user area;
	restructuring of much of the code.

Size of code:			hex bytes
	this version:		CC1 		wildcard nos & du: (d?:, ?/d:)
	Van Nuys:		C8E		user numbers (u/d: form only)
	BDS C v1.50a:		A8E		no user numbers (d: form only)
(Inclusion of wildcard user numbers costs a little but not much.)
(The size of the du_ud() function is not included in the value cited for the
	memory requirement for this version)

The number of !names allowed is 40 (= 2 !d?: + 8 !du:).

NOTE:
There must be a <du:> --> <u/d:> conversion function = du_ud().
If the conversion is required only for WILDCARD, then it is sufficient
	to compile and link the du_ud function given at the end of this file.
A more general approach is to modify DEFF.CRL and DEFF2.CRL, 
	by adding the functions of STDLIB3R to DEFF.CRL, and 
	by patching the functions of DEFF2.CRL, as described in STDLIB3R.
If this is done, then all file opening, creation etc operations accept the
	<du:> form.





XCR.C   
XCR.COM 

Cross-reference utility, from cug distribution disk:

Minor modification:
	added check on characters of output per line (char_count),
		to obtain correct pagination.


